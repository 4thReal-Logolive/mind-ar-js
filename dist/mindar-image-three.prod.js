/*! For license information please see mindar-image-three.prod.js.LICENSE.txt */
(()=>{var e,t,n={113:function(e){e.exports=function(e){var t={};function n(s){if(t[s])return t[s].exports;var r=t[s]={i:s,l:!1,exports:{}};return e[s].call(r.exports,r,r.exports,n),r.l=!0,r.exports}return n.m=e,n.c=t,n.d=function(e,t,s){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:s})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var s=Object.create(null);if(n.r(s),Object.defineProperty(s,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var r in e)n.d(s,r,function(t){return e[t]}.bind(null,r));return s},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"encode",(function(){return $})),n.d(t,"decode",(function(){return U})),n.d(t,"decodeAsync",(function(){return K})),n.d(t,"decodeArrayStream",(function(){return X})),n.d(t,"decodeStream",(function(){return Y})),n.d(t,"Decoder",(function(){return B})),n.d(t,"Encoder",(function(){return T})),n.d(t,"ExtensionCodec",(function(){return I})),n.d(t,"ExtData",(function(){return d})),n.d(t,"EXT_TIMESTAMP",(function(){return g})),n.d(t,"encodeDateToTimeSpec",(function(){return b})),n.d(t,"encodeTimeSpecToTimestamp",(function(){return y})),n.d(t,"decodeTimestampToTimeSpec",(function(){return w})),n.d(t,"encodeTimestampExtension",(function(){return x})),n.d(t,"decodeTimestampExtension",(function(){return v}));var s=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var s,r,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(s=a.next()).done;)i.push(s.value)}catch(e){r={error:e}}finally{try{s&&!s.done&&(n=a.return)&&n.call(a)}finally{if(r)throw r.error}}return i},r=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(s(arguments[t]));return e},a="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function i(e){for(var t=e.length,n=0,s=0;s<t;){var r=e.charCodeAt(s++);if(0!=(4294967168&r))if(0==(4294965248&r))n+=2;else{if(r>=55296&&r<=56319&&s<t){var a=e.charCodeAt(s);56320==(64512&a)&&(++s,r=((1023&r)<<10)+(1023&a)+65536)}n+=0==(4294901760&r)?3:4}else n++}return n}var o=a?new TextEncoder:void 0,l="undefined"!=typeof process?200:0,u=(null==o?void 0:o.encodeInto)?function(e,t,n){o.encodeInto(e,t.subarray(n))}:function(e,t,n){t.set(o.encode(e),n)};function c(e,t,n){for(var s=t,a=s+n,i=[],o="";s<a;){var l=e[s++];if(0==(128&l))i.push(l);else if(192==(224&l)){var u=63&e[s++];i.push((31&l)<<6|u)}else if(224==(240&l)){u=63&e[s++];var c=63&e[s++];i.push((31&l)<<12|u<<6|c)}else if(240==(248&l)){var h=(7&l)<<18|(u=63&e[s++])<<12|(c=63&e[s++])<<6|63&e[s++];h>65535&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|1023&h),i.push(h)}else i.push(l);i.length>=4096&&(o+=String.fromCharCode.apply(String,r(i)),i.length=0)}return i.length>0&&(o+=String.fromCharCode.apply(String,r(i))),o}var h=a?new TextDecoder:null,p="undefined"!=typeof process?200:0,d=function(e,t){this.type=e,this.data=t};function f(e,t,n){var s=Math.floor(n/4294967296),r=n;e.setUint32(t,s),e.setUint32(t+4,r)}function m(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var g=-1;function y(e){var t,n=e.sec,s=e.nsec;if(n>=0&&s>=0&&n<=17179869183){if(0===s&&n<=4294967295){var r=new Uint8Array(4);return(t=new DataView(r.buffer)).setUint32(0,n),r}var a=n/4294967296,i=4294967295&n;return r=new Uint8Array(8),(t=new DataView(r.buffer)).setUint32(0,s<<2|3&a),t.setUint32(4,i),r}return r=new Uint8Array(12),(t=new DataView(r.buffer)).setUint32(0,s),f(t,4,n),r}function b(e){var t=e.getTime(),n=Math.floor(t/1e3),s=1e6*(t-1e3*n),r=Math.floor(s/1e9);return{sec:n+r,nsec:s-1e9*r}}function x(e){return e instanceof Date?y(b(e)):null}function w(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var n=t.getUint32(0);return{sec:4294967296*(3&n)+t.getUint32(4),nsec:n>>>2};case 12:return{sec:m(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function v(e){var t=w(e);return new Date(1e3*t.sec+t.nsec/1e6)}var k={type:g,encode:x,decode:v},I=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return e.prototype.register=function(e){var t=e.type,n=e.encode,s=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=s;else{var r=1+t;this.builtInEncoders[r]=n,this.builtInDecoders[r]=s}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(s=this.builtInEncoders[n])&&null!=(r=s(e,t)))return new d(-1-n,r);for(n=0;n<this.encoders.length;n++){var s,r;if(null!=(s=this.encoders[n])&&null!=(r=s(e,t)))return new d(n,r)}return e instanceof d?e:null},e.prototype.decode=function(e,t,n){var s=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return s?s(e,t,n):new d(t,e)},e.defaultCodec=new e,e}();function N(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var S=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],s=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&s>=e.length&&(e=void 0),{value:e&&e[s++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},T=function(){function e(e,t,n,s,r,a,i){void 0===e&&(e=I.defaultCodec),void 0===n&&(n=100),void 0===s&&(s=2048),void 0===r&&(r=!1),void 0===a&&(a=!1),void 0===i&&(i=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=s,this.sortKeys=r,this.forceFloat32=a,this.ignoreUndefined=i,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.encode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),s=new DataView(t);n.set(this.bytes),this.view=s,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(a&&t>l){var n=i(e);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),u(e,this.bytes,this.pos),this.pos+=n}else n=i(e),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(e,t,n){for(var s=e.length,r=n,a=0;a<s;){var i=e.charCodeAt(a++);if(0!=(4294967168&i)){if(0==(4294965248&i))t[r++]=i>>6&31|192;else{if(i>=55296&&i<=56319&&a<s){var o=e.charCodeAt(a);56320==(64512&o)&&(++a,i=((1023&i)<<10)+(1023&o)+65536)}0==(4294901760&i)?(t[r++]=i>>12&15|224,t[r++]=i>>6&63|128):(t[r++]=i>>18&7|240,t[r++]=i>>12&63|128,t[r++]=i>>6&63|128)}t[r++]=63&i|128}else t[r++]=i}}(e,this.bytes,this.pos),this.pos+=n},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var n=N(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n,s,r=e.length;if(r<16)this.writeU8(144+r);else if(r<65536)this.writeU8(220),this.writeU16(r);else{if(!(r<4294967296))throw new Error("Too large array: "+r);this.writeU8(221),this.writeU32(r)}try{for(var a=S(e),i=a.next();!i.done;i=a.next()){var o=i.value;this.encode(o,t+1)}}catch(e){n={error:e}}finally{try{i&&!i.done&&(s=a.return)&&s.call(a)}finally{if(n)throw n.error}}},e.prototype.countWithoutUndefined=function(e,t){var n,s,r=0;try{for(var a=S(t),i=a.next();!i.done;i=a.next())void 0!==e[i.value]&&r++}catch(e){n={error:e}}finally{try{i&&!i.done&&(s=a.return)&&s.call(a)}finally{if(n)throw n.error}}return r},e.prototype.encodeMap=function(e,t){var n,s,r=Object.keys(e);this.sortKeys&&r.sort();var a=this.ignoreUndefined?this.countWithoutUndefined(e,r):r.length;if(a<16)this.writeU8(128+a);else if(a<65536)this.writeU8(222),this.writeU16(a);else{if(!(a<4294967296))throw new Error("Too large map object: "+a);this.writeU8(223),this.writeU32(a)}try{for(var i=S(r),o=i.next();!o.done;o=i.next()){var l=o.value,u=e[l];this.ignoreUndefined&&void 0===u||(this.encodeString(l),this.encode(u,t+1))}}catch(e){n={error:e}}finally{try{o&&!o.done&&(s=i.return)&&s.call(i)}finally{if(n)throw n.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,n){var s=n/4294967296,r=n;e.setUint32(t,s),e.setUint32(t+4,r)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,e),this.pos+=8},e}(),C={};function $(e,t){void 0===t&&(t=C);var n=new T(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined);return n.encode(e,1),n.getUint8Array()}function E(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var A=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,n){var s=this.caches[n-1],r=s.length;e:for(var a=0;a<r;a++){for(var i=s[a],o=i.bytes,l=0;l<n;l++)if(o[l]!==e[t+l])continue e;return i.value}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],s={bytes:e,value:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=s:n.push(s)},e.prototype.decode=function(e,t,n){var s=this.get(e,t,n);if(null!=s)return s;var r=c(e,t,n),a=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(a,r),r},e}(),R=function(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},F=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},s("next"),s("throw"),s("return"),t[Symbol.asyncIterator]=function(){return this},t);function s(n){t[n]=e[n]&&function(t){return new Promise((function(s,r){!function(e,t,n,s){Promise.resolve(s).then((function(t){e({value:t,done:n})}),t)}(s,r,(t=e[n](t)).done,t.value)}))}}},D=function(e){return this instanceof D?(this.v=e,this):new D(e)},_=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,r=n.apply(e,t||[]),a=[];return s={},i("next"),i("throw"),i("return"),s[Symbol.asyncIterator]=function(){return this},s;function i(e){r[e]&&(s[e]=function(t){return new Promise((function(n,s){a.push([e,t,n,s])>1||o(e,t)}))})}function o(e,t){try{(n=r[e](t)).value instanceof D?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function l(e){o("next",e)}function u(e){o("throw",e)}function c(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}},O=new DataView(new ArrayBuffer(0)),M=new Uint8Array(O.buffer),L=function(){try{O.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),z=new L("Insufficient data"),P=new A,B=function(){function e(e,t,n,s,r,a,i,o){void 0===e&&(e=I.defaultCodec),void 0===n&&(n=4294967295),void 0===s&&(s=4294967295),void 0===r&&(r=4294967295),void 0===a&&(a=4294967295),void 0===i&&(i=4294967295),void 0===o&&(o=P),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=s,this.maxArrayLength=r,this.maxMapLength=a,this.maxExtLength=i,this.cachedKeyDecoder=o,this.totalPos=0,this.pos=0,this.view=O,this.bytes=M,this.headByte=-1,this.stack=[]}return e.prototype.setBuffer=function(e){this.bytes=N(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=N(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),n=N(e),s=new Uint8Array(t.length+n.length);s.set(t),s.set(n,t.length),this.setBuffer(s)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,n=this.pos;return new RangeError("Extra "+(t.byteLength-n)+" byte(s) found at buffer["+e+"]")},e.prototype.decodeSingleSync=function(){var e=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeSingleAsync=function(e){var t,n,s,r;return function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var a,i,o,l,u,c,h,p;return R(this,(function(d){switch(d.label){case 0:a=!1,d.label=1;case 1:d.trys.push([1,6,7,12]),t=F(e),d.label=2;case 2:return[4,t.next()];case 3:if((n=d.sent()).done)return[3,5];if(o=n.value,a)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o);try{i=this.decodeSync(),a=!0}catch(e){if(!(e instanceof L))throw e}this.totalPos+=this.pos,d.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return l=d.sent(),s={error:l},[3,12];case 7:return d.trys.push([7,,10,11]),n&&!n.done&&(r=t.return)?[4,r.call(t)]:[3,9];case 8:d.sent(),d.label=9;case 9:return[3,11];case 10:if(s)throw s.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,i]}throw c=(u=this).headByte,h=u.pos,p=u.totalPos,new RangeError("Insufficient data in parcing "+E(c)+" at "+p+" ("+h+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return _(this,arguments,(function(){var n,s,r,a,i,o,l,u,c;return R(this,(function(h){switch(h.label){case 0:n=t,s=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),r=F(e),h.label=2;case 2:return[4,D(r.next())];case 3:if((a=h.sent()).done)return[3,12];if(i=a.value,t&&0===s)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(i),n&&(s=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,D(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--s?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof L))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return l=h.sent(),u={error:l},[3,19];case 14:return h.trys.push([14,,17,18]),a&&!a.done&&(c=r.return)?[4,D(c.call(r))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(u)throw u.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.decodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(s=e-128)){this.pushMapState(s),this.complete();continue e}t={}}else if(e<160){if(0!=(s=e-144)){this.pushArrayState(s),this.complete();continue e}t=[]}else{var n=e-160;t=this.decodeUtf8String(n,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)n=this.lookU8(),t=this.decodeUtf8String(n,1);else if(218===e)n=this.lookU16(),t=this.decodeUtf8String(n,2);else if(219===e)n=this.lookU32(),t=this.decodeUtf8String(n,4);else if(220===e){if(0!==(s=this.readU16())){this.pushArrayState(s),this.complete();continue e}t=[]}else if(221===e){if(0!==(s=this.readU32())){this.pushArrayState(s),this.complete();continue e}t=[]}else if(222===e){if(0!==(s=this.readU16())){this.pushMapState(s),this.complete();continue e}t={}}else if(223===e){if(0!==(s=this.readU32())){this.pushMapState(s),this.complete();continue e}t={}}else if(196===e){var s=this.lookU8();t=this.decodeBinary(s,1)}else if(197===e)s=this.lookU16(),t=this.decodeBinary(s,2);else if(198===e)s=this.lookU32(),t=this.decodeBinary(s,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)s=this.lookU8(),t=this.decodeExtension(s,1);else if(200===e)s=this.lookU16(),t=this.decodeExtension(s,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+E(e));s=this.lookU32(),t=this.decodeExtension(s,4)}this.complete();for(var r=this.stack;r.length>0;){var a=r[r.length-1];if(0===a.type){if(a.array[a.position]=t,a.position++,a.position!==a.size)continue e;r.pop(),t=a.array}else{if(1===a.type){if(void 0,"string"!=(i=typeof t)&&"number"!==i)throw new Error("The type of key must be string or number but "+typeof t);a.key=t,a.type=2;continue e}if(a.map[a.key]=t,a.readCount++,a.readCount!==a.size){a.key=null,a.type=1;continue e}r.pop(),t=a.map}}return t}var i},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+E(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var n;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw z;var s,r=this.pos+t;return s=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(e))?this.cachedKeyDecoder.decode(this.bytes,r,e):a&&e>p?function(e,t,n){var s=e.subarray(t,t+n);return h.decode(s)}(this.bytes,r,e):c(this.bytes,r,e),this.pos+=t+e,s},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw z;var n=this.pos+t,s=this.bytes.subarray(n,n+e);return this.pos+=t+e,s},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+t),s=this.decodeBinary(e,t+1);return this.extensionCodec.decode(s,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,n=(e=this.view,t=this.pos,4294967296*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,n},e.prototype.readI64=function(){var e=m(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),W={};function U(e,t){void 0===t&&(t=W);var n=new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength);return n.setBuffer(e),n.decodeSingleSync()}var V=function(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},G=function(e){return this instanceof G?(this.v=e,this):new G(e)},H=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var s,r=n.apply(e,t||[]),a=[];return s={},i("next"),i("throw"),i("return"),s[Symbol.asyncIterator]=function(){return this},s;function i(e){r[e]&&(s[e]=function(t){return new Promise((function(n,s){a.push([e,t,n,s])>1||o(e,t)}))})}function o(e,t){try{(n=r[e](t)).value instanceof G?Promise.resolve(n.value.v).then(l,u):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function l(e){o("next",e)}function u(e){o("throw",e)}function c(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}};function j(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function q(e){return null!=e[Symbol.asyncIterator]?e:function(e){return H(this,arguments,(function(){var t,n,s,r;return V(this,(function(a){switch(a.label){case 0:t=e.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,G(t.read())];case 3:return n=a.sent(),s=n.done,r=n.value,s?[4,G(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return j(r),[4,G(r)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function K(e,t){return void 0===t&&(t=W),function(e,t,n,s){return new(n||(n=Promise))((function(r,a){function i(e){try{l(s.next(e))}catch(e){a(e)}}function o(e){try{l(s.throw(e))}catch(e){a(e)}}function l(e){var t;e.done?r(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}l((s=s.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var n;return function(e,t){var n,s,r,a,i={label:0,sent:function(){if(1&r[0])throw r[1];return r[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,s&&(r=2&a[0]?s.return:a[0]?s.throw||((r=s.return)&&r.call(s),0):s.next)&&!(r=r.call(s,a[1])).done)return r;switch(s=0,r&&(a=[2&a[0],r.value]),a[0]){case 0:case 1:r=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,s=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((r=(r=i.trys).length>0&&r[r.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!r||a[1]>r[0]&&a[1]<r[3])){i.label=a[1];break}if(6===a[0]&&i.label<r[1]){i.label=r[1],r=a;break}if(r&&i.label<r[2]){i.label=r[2],i.ops.push(a);break}r[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],s=0}finally{n=r=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}(this,(function(s){return n=q(e),[2,new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeSingleAsync(n)]}))}))}function X(e,t){void 0===t&&(t=W);var n=q(e);return new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(n)}function Y(e,t){void 0===t&&(t=W);var n=q(e);return new B(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(n)}}])},485:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var s=n(645),r=n.n(s)()((function(e){return e[1]}));r.push([e.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0);z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const a=r},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,s){"string"==typeof e&&(e=[[null,e,""]]);var r={};if(s)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(r[i]=!0)}for(var o=0;o<e.length;o++){var l=[].concat(e[o]);s&&r[l[0]]||(n&&(l[2]?l[2]="".concat(n," and ").concat(l[2]):l[2]=n),t.push(l))}},t}},676:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});const s='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},894:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});const s='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},810:(e,t,n)=>{"use strict";n.d(t,{Z:()=>s});const s='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function s(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=s;var r={},a={};function i(e,t){var n,s,i;return t?(i=0<=(e>>>=0)&&e<256)&&(s=a[e])?s:(n=l(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(s=r[e])?s:(n=l(e,e<0?-1:0,!1),i&&(r[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return I;if(e+1>=f)return v}return e<0?o(-e,t).neg():l(e%p|0,e/p|0,t)}function l(e,t,s){return new n(e,t,s)}n.fromInt=i,n.fromNumber=o,n.fromBits=l;var u=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var s;if((s=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===s)return c(e.substring(1),t,n).neg();for(var r=o(u(n,8)),a=g,i=0;i<e.length;i+=8){var l=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+l),n);if(l<8){var p=o(u(n,l));a=a.mul(p).add(o(h))}else a=(a=a.mul(r)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):l(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=l(-1,2147483647,!1);n.MAX_VALUE=v;var k=l(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var I=l(0,-2147483648,!1);n.MIN_VALUE=I;var N=n.prototype;N.toInt=function(){return this.unsigned?this.low>>>0:this.low},N.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},N.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(I)){var t=o(e),n=this.div(t),s=n.mul(t).sub(this);return n.toString(e)+s.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var r=o(u(e,6),this.unsigned),a=this,i="";;){var l=a.div(r),c=(a.sub(l.mul(r)).toInt()>>>0).toString(e);if((a=l).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},N.getHighBits=function(){return this.high},N.getHighBitsUnsigned=function(){return this.high>>>0},N.getLowBits=function(){return this.low},N.getLowBitsUnsigned=function(){return this.low>>>0},N.getNumBitsAbs=function(){if(this.isNegative())return this.eq(I)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},N.isZero=function(){return 0===this.high&&0===this.low},N.eqz=N.isZero,N.isNegative=function(){return!this.unsigned&&this.high<0},N.isPositive=function(){return this.unsigned||this.high>=0},N.isOdd=function(){return 1==(1&this.low)},N.isEven=function(){return 0==(1&this.low)},N.equals=function(e){return s(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},N.eq=N.equals,N.notEquals=function(e){return!this.eq(e)},N.neq=N.notEquals,N.ne=N.notEquals,N.lessThan=function(e){return this.comp(e)<0},N.lt=N.lessThan,N.lessThanOrEqual=function(e){return this.comp(e)<=0},N.lte=N.lessThanOrEqual,N.le=N.lessThanOrEqual,N.greaterThan=function(e){return this.comp(e)>0},N.gt=N.greaterThan,N.greaterThanOrEqual=function(e){return this.comp(e)>=0},N.gte=N.greaterThanOrEqual,N.ge=N.greaterThanOrEqual,N.compare=function(e){if(s(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},N.comp=N.compare,N.negate=function(){return!this.unsigned&&this.eq(I)?I:this.not().add(b)},N.neg=N.negate,N.add=function(e){s(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,r=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,u=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=r+u)>>>16,c+=(p+=n+o)>>>16,c+=t+i,l((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},N.subtract=function(e){return s(e)||(e=h(e)),this.add(e.neg())},N.sub=N.subtract,N.multiply=function(e){if(this.isZero())return g;if(s(e)||(e=h(e)),t)return l(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(I))return e.isOdd()?I:g;if(e.eq(I))return this.isOdd()?I:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,r=65535&this.high,a=this.low>>>16,i=65535&this.low,u=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=r*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+r*p+a*c+i*u,l((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},N.mul=N.multiply,N.divide=function(e){if(s(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,r,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?l((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(I))return e.eq(b)||e.eq(w)?I:e.eq(I)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(r=this.sub(e.mul(n)),a=n.add(r.div(e)));if(e.eq(I))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(r=this;r.gte(e);){n=Math.max(1,Math.floor(r.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:u(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(r);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),r=r.sub(d)}return a},N.div=N.divide,N.modulo=function(e){return s(e)||(e=h(e)),t?l((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},N.mod=N.modulo,N.rem=N.modulo,N.not=function(){return l(~this.low,~this.high,this.unsigned)},N.and=function(e){return s(e)||(e=h(e)),l(this.low&e.low,this.high&e.high,this.unsigned)},N.or=function(e){return s(e)||(e=h(e)),l(this.low|e.low,this.high|e.high,this.unsigned)},N.xor=function(e){return s(e)||(e=h(e)),l(this.low^e.low,this.high^e.high,this.unsigned)},N.shiftLeft=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):l(0,this.low<<e-32,this.unsigned)},N.shl=N.shiftLeft,N.shiftRight=function(e){return s(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?l(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):l(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},N.shr=N.shiftRight,N.shiftRightUnsigned=function(e){if(s(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?l(this.low>>>e|t<<32-e,t>>>e,this.unsigned):l(32===e?t:t>>>e-32,0,this.unsigned)},N.shru=N.shiftRightUnsigned,N.shr_u=N.shiftRightUnsigned,N.toSigned=function(){return this.unsigned?l(this.low,this.high,!1):this},N.toUnsigned=function(){return this.unsigned?this:l(this.low,this.high,!0)},N.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},N.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},N.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,s){return s?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},377:(e,t,n)=>{var s=n(832),r=n(652),a=n(801),i=n(30),o=n(618),l=n(49),u=n(971);u.alea=s,u.xor128=r,u.xorwow=a,u.xorshift7=i,u.xor4096=o,u.tychei=l,e.exports=u},832:function(e,t,n){var s;!function(e,r,a){function i(e){var t,n=this,s=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var s=.02519603282416938*(t+=e.charCodeAt(n));s-=t=s>>>0,t=(s*=t)>>>0,t+=4294967296*(s-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=s(" "),n.s1=s(" "),n.s2=s(" "),n.s0-=s(e),n.s0<0&&(n.s0+=1),n.s1-=s(e),n.s1<0&&(n.s1+=1),n.s2-=s(e),n.s2<0&&(n.s2+=1),s=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function l(e,t){var n=new i(e),s=t&&t.state,r=n.next;return r.int32=function(){return 4294967296*n.next()|0},r.double=function(){return r()+11102230246251565e-32*(2097152*r()|0)},r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.alea=l}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,s=t.d,r=t.a;return e=e<<25^e>>>7^n,n=n-s|0,s=s<<24^s>>>8^r,r=r-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-s|0,t.d=s<<16^n>>>16^r,t.a=r-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var s=0;s<n.length+20;s++)t.b^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.tychei=l}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor128=l}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.w,r=t.X,a=t.i;return t.w=s=s+1640531527|0,n=r[a+34&127],e=r[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=r[a]=n^e,t.i=a,n+(s^s>>>16)|0},function(e,t){var n,s,r,a,i,o=[],l=128;for(t===(0|t)?(s=t,t=null):(t+="\0",s=0,l=Math.max(l,t.length)),r=0,a=-32;a<l;++a)t&&(s^=t.charCodeAt((a+32)%t.length)),0===a&&(i=s),s^=s<<10,s^=s>>>15,s^=s<<4,s^=s>>>13,a>=0&&(i=i+1640531527|0,r=0==(n=o[127&a]^=s+i)?r+1:0);for(r>=128&&(o[127&(t&&t.length||0)]=-1),r=127,a=512;a>0;--a)s=o[r+34&127],n=o[r=r+1&127],s^=s<<13,n^=n<<17,s^=s>>>15,n^=n>>>12,o[r]=s^n;e.w=i,e.X=o,e.i=r}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.X&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xor4096=l}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this;t.next=function(){var e,n,s=t.x,r=t.i;return e=s[r],n=(e^=e>>>7)^e<<24,n^=(e=s[r+1&7])^e>>>10,n^=(e=s[r+3&7])^e>>>3,n^=(e=s[r+4&7])^e<<7,e=s[r+7&7],n^=(e^=e<<13)^e<<9,s[r]=n,t.i=r+1&7,n},function(e,t){var n,s=[];if(t===(0|t))s[0]=t;else for(t=""+t,n=0;n<t.length;++n)s[7&n]=s[7&n]<<15^t.charCodeAt(n)+s[n+1&7]<<13;for(;s.length<8;)s.push(0);for(n=0;n<8&&0===s[n];++n);for(8==n?s[7]=-1:s[n],e.x=s,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function l(e,t){null==e&&(e=+new Date);var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&(s.x&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorshift7=l}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var s;!function(e,r,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var s=0;s<n.length+64;s++)t.x^=0|n.charCodeAt(s),s==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function l(e,t){var n=new i(e),s=t&&t.state,r=function(){return(n.next()>>>0)/4294967296};return r.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},r.int32=n.next,r.quick=r,s&&("object"==typeof s&&o(s,n),r.state=function(){return o(n,{})}),r}r&&r.exports?r.exports=l:n.amdD&&n.amdO?void 0===(s=function(){return l}.call(t,n,t,r))||(r.exports=s):this.xorwow=l}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var s;!function(r,a){var i,o=this,l=256,u=a.pow(l,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var s=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(r)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(l):(e=new Uint8Array(l),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(r)]}}():e,3),s),d=new f(s),x=function(){for(var e=d.g(6),t=u,n=0;e<c;)e=(e+n)*l,t*=l,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),r),(t.pass||n||function(e,t,n,s){return s&&(s.S&&m(s,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,s=this,r=0,a=s.i=s.j=0,i=s.S=[];for(n||(e=[n++]);r<l;)i[r]=r++;for(r=0;r<l;r++)i[r]=i[a=p&a+e[r%n]+(t=i[r])],i[a]=t;(s.g=function(e){for(var t,n=0,r=s.i,a=s.j,i=s.S;e--;)t=i[r=p&r+1],n=n*l+i[p&(i[r]=i[a=p&a+t])+(i[a]=t)];return s.i=r,s.j=a,n})(l)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,s=[],r=typeof e;if(t&&"object"==r)for(n in e)try{s.push(g(e[n],t-1))}catch(e){}return s.length?s:"string"==r?e:e+"\0"}function y(e,t){for(var n,s=e+"",r=0;r<s.length;)t[p&r]=p&(n^=19*t[p&r])+s.charCodeAt(r++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),r),e.exports){e.exports=d;try{i=n(906)}catch(e){}}else void 0===(s=function(){return d}.call(t,n,t,e))||(e.exports=s)}([],Math)},412:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var s=n(379),r=n.n(s),a=n(485);r()(a.Z,{insert:"head",singleton:!1});const i=a.Z.locals||{}},379:(e,t,n)=>{"use strict";var s,r=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function i(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function o(e,t){for(var n={},s=[],r=0;r<e.length;r++){var o=e[r],l=t.base?o[0]+t.base:o[0],u=n[l]||0,c="".concat(l," ").concat(u);n[l]=u+1;var h=i(c),p={css:o[1],media:o[2],sourceMap:o[3]};-1!==h?(a[h].references++,a[h].updater(p)):a.push({identifier:c,updater:m(p,t),references:1}),s.push(c)}return s}function l(e){var t=document.createElement("style"),s=e.attributes||{};if(void 0===s.nonce){var a=n.nc;a&&(s.nonce=a)}if(Object.keys(s).forEach((function(e){t.setAttribute(e,s[e])})),"function"==typeof e.insert)e.insert(t);else{var i=r(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var u,c=(u=[],function(e,t){return u[e]=t,u.filter(Boolean).join("\n")});function h(e,t,n,s){var r=n?"":s.media?"@media ".concat(s.media," {").concat(s.css,"}"):s.css;if(e.styleSheet)e.styleSheet.cssText=c(t,r);else{var a=document.createTextNode(r),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function p(e,t,n){var s=n.css,r=n.media,a=n.sourceMap;if(r?e.setAttribute("media",r):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(s+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=s;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(s))}}var d=null,f=0;function m(e,t){var n,s,r;if(t.singleton){var a=f++;n=d||(d=l(t)),s=h.bind(null,n,a,!1),r=h.bind(null,n,a,!0)}else n=l(t),s=p.bind(null,n,t),r=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return s(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;s(e=t)}else r()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===s&&(s=Boolean(window&&document&&document.all&&!window.atob)),s));var n=o(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var s=0;s<n.length;s++){var r=i(n[s]);a[r].references--}for(var l=o(e,t),u=0;u<n.length;u++){var c=i(n[u]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}n=l}}}},439:(e,t,n)=>{n(412);const s=n(894).Z,r=n(676).Z,a=n(810).Z;e.exports={UI:class{constructor({uiLoading:e,uiScanning:t,uiError:n}){"yes"===e?this.loadingModal=this._loadHTML(s):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML(r):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML(a):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}},906:()=>{},993:()=>{},352:()=>{},589:()=>{},758:()=>{}},s={};function r(e){if(s[e])return s[e].exports;var t=s[e]={id:e,loaded:!1,exports:{}};return n[e].call(t.exports,t,t.exports,r),t.loaded=!0,t.exports}r.m=n,r.amdD=function(){throw new Error("define cannot be used indirect")},r.amdO={},r.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return r.d(t,{a:t}),t},t=Object.getPrototypeOf?e=>Object.getPrototypeOf(e):e=>e.__proto__,r.t=function(n,s){if(1&s&&(n=this(n)),8&s)return n;if("object"==typeof n&&n){if(4&s&&n.__esModule)return n;if(16&s&&"function"==typeof n.then)return n}var a=Object.create(null);r.r(a);var i={};e=e||[null,t({}),t([]),t(t)];for(var o=2&s&&n;"object"==typeof o&&!~e.indexOf(o);o=t(o))Object.getOwnPropertyNames(o).forEach((e=>i[e]=()=>n[e]));return i.default=()=>n,r.d(a,i),a},r.d=(e,t)=>{for(var n in t)r.o(t,n)&&!r.o(e,n)&&Object.defineProperty(e,n,{enumerable:!0,get:t[n]})},r.u=e=>e+".prod.js",r.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),r.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),r.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},r.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;r.g.importScripts&&(e=r.g.location+"");var t=r.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var n=t.getElementsByTagName("script");n.length&&(e=n[n.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),r.p=e})(),r.b=document.baseURI||self.location.href,(()=>{"use strict";var e={};r.r(e),r.d(e,{arraysEqual:()=>ce,assert:()=>re,assertNonNegativeIntegerDimensions:()=>Be,assertNonNull:()=>ie,assertShapesMatch:()=>ae,bytesFromStringArray:()=>Ce,bytesPerElement:()=>Te,checkConversionForErrors:()=>ke,clamp:()=>J,computeStrides:()=>_e,createScalarValue:()=>Ar,createShuffledIndices:()=>fe,decodeString:()=>Or,distSquared:()=>se,encodeString:()=>_r,fetch:()=>Dr,fingerPrint64:()=>Er,flatten:()=>oe,getArrayFromDType:()=>ve,getTypedArrayFromDType:()=>we,hasEncodingLoss:()=>Ne,hexToLong:()=>br,indexToLoc:()=>Ue,inferDtype:()=>Re,inferFromImplicitShape:()=>ye,isBoolean:()=>Ee,isFunction:()=>Fe,isInt:()=>he,isNumber:()=>Ae,isPromise:()=>Ve,isScalarShape:()=>ue,isString:()=>$e,isTypedArray:()=>Se,isValidDtype:()=>Ie,locToIndex:()=>We,makeOnesTypedArray:()=>Le,makeZerosNestedTypedArray:()=>Pe,makeZerosTypedArray:()=>ze,nearestDivisor:()=>De,nearestLargerEven:()=>Q,now:()=>Fr,parseAxisParam:()=>be,randUniform:()=>ne,repeatedTry:()=>ge,rightPad:()=>me,shuffle:()=>Y,shuffleCombo:()=>Z,sizeFromShape:()=>le,sizeToSquarishShape:()=>de,squeezeShape:()=>xe,sum:()=>te,swap:()=>ee,tanh:()=>pe,toNestedArray:()=>Me,toTypedArray:()=>Rr});var t={};r.r(t),r.d(t,{assertTypesMatch:()=>ia,getTensorsInContainer:()=>la,isTensorInList:()=>oa,makeTypesMatch:()=>aa});var n={};r.r(n),r.d(n,{isBrowser:()=>xa,isMobile:()=>ba,mockIsMobile:()=>ya});var s={};r.r(s),r.d(s,{browserFiles:()=>Fi,browserHTTPRequest:()=>Wi,concatenateArrayBuffers:()=>La,copyModel:()=>vi,decodeWeights:()=>Da,encodeWeights:()=>Fa,fromMemory:()=>Gi,getLoadHandlers:()=>qa,getModelArtifactsForJSON:()=>Ba,getModelArtifactsInfoForJSON:()=>Wa,getSaveHandlers:()=>ja,http:()=>Bi,isHTTPScheme:()=>zi,listModels:()=>xi,loadWeights:()=>Oi,moveModel:()=>ki,registerLoadRouter:()=>Ha,registerSaveRouter:()=>Ga,removeModel:()=>wi,weightsLoaderFactory:()=>Mi,withSaveHandler:()=>Hi});var a={};r.r(a),r.d(a,{confusionMatrix:()=>Xi});var i={};r.r(i),r.d(i,{assertAndGetBroadcastShape:()=>Ji,getBroadcastDims:()=>Yi,getReductionAxes:()=>Zi});var o={};r.r(o),r.d(o,{fromPixels:()=>ro,fromPixelsAsync:()=>no,toPixels:()=>so});var l={};r.r(l),r.d(l,{prepareAndValidate:()=>ao});var u={};r.r(u),r.d(u,{calculateShapes:()=>lo,validateInput:()=>oo,validateUpdateShape:()=>io});var c={};r.r(c),r.d(c,{assertParamsValid:()=>uo,computeFlatOffset:()=>Io,computeOutShape:()=>ho,getNormalizedAxes:()=>go,isSliceContinous:()=>ko,maskToAxes:()=>co,parseSliceParams:()=>No,sliceInfo:()=>So,startForAxis:()=>wo,startIndicesWithElidedDims:()=>yo,stopForAxis:()=>vo,stopIndicesWithElidedDims:()=>bo,stridesForAxis:()=>xo,stridesWithElidedDims:()=>po});var h={};r.r(h),r.d(h,{Serializable:()=>Co,SerializationMap:()=>$o,registerClass:()=>Eo});var p={};r.r(p),r.d(p,{TEST_EPSILON_FLOAT16:()=>Ao,encodeStrings:()=>Bo,expectArrayBuffersEqual:()=>Po,expectArraysClose:()=>Ro,expectArraysEqual:()=>Oo,expectNumbersClose:()=>Mo,expectPromiseToFail:()=>_o,expectValuesInRange:()=>zo,testEpsilon:()=>Fo});var d={};r.r(d),r.d(d,{conv2d:()=>$p,depthwiseConv2d:()=>Rp,matMul:()=>Fp});var f={};r.r(f),r.d(f,{collectGatherOpShapeInfo:()=>Af,computeOutShape:()=>Ef,segOpComputeOptimalWindowSize:()=>$f});var m={};r.r(m),r.d(m,{ERF_A1:()=>Kd,ERF_A2:()=>Xd,ERF_A3:()=>Yd,ERF_A4:()=>Zd,ERF_A5:()=>Jd,ERF_P:()=>qd,PARALLELIZE_THRESHOLD:()=>Ld,SELU_SCALE:()=>jd,SELU_SCALEALPHA:()=>Hd,applyActivation:()=>Tp,assertAndGetBroadcastShape:()=>Ji,assertAxesAreInnerMostDims:()=>Ac,assertParamsConsistent:()=>Od,assignToTypedArray:()=>rf,axesAreInnerMostDims:()=>Tc,calculateShapes:()=>lo,checkEinsumDimSizes:()=>hf,checkPadOnDimRoundingMode:()=>uu,combineLocations:()=>Cc,complexWithEvenIndex:()=>tf,complexWithOddIndex:()=>nf,computeConv2DInfo:()=>Ql,computeConv3DInfo:()=>eu,computeDefaultPad:()=>tu,computeDilation2DInfo:()=>Yl,computeOptimalWindowSize:()=>zd,computeOutAndReduceShapes:()=>$c,computeOutShape:()=>Md,computePool2DInfo:()=>Zl,computePool3DInfo:()=>Jl,convertConv2DDataFormat:()=>lu,decodeEinsumEquation:()=>uf,eitherStridesOrDilationsAreOne:()=>ou,expandShapeToKeepDim:()=>Ec,exponent:()=>of,exponents:()=>af,fromStringArrayToUint8:()=>Ff,fromUint8ToStringArray:()=>Rf,getAxesPermutation:()=>Rc,getBroadcastDims:()=>Yi,getComplexWithIndex:()=>sf,getEinsumComputePath:()=>pf,getEinsumPermutation:()=>cf,getFusedBiasGradient:()=>Sp,getFusedDyActivation:()=>Np,getImageCenter:()=>Pd,getInnerMostAxes:()=>Dc,getPermuted:()=>Wd,getReductionAxes:()=>Zi,getReshaped:()=>Bd,getReshapedPermuted:()=>Ud,getSliceBeginCoords:()=>Vd,getSliceSize:()=>Gd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>gf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>yf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>bf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>vf,getSparseReshapeInputOutputMismatchErrorMessage:()=>If,getSparseReshapeInputOutputMultipleErrorMessage:()=>kf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>xf,getSparseReshapeNegativeOutputDimErrorMessage:()=>wf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Cf,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>Nf,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Sf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Tf,getUndoAxesPermutation:()=>Fc,isIdentityPermutation:()=>df,log:()=>rr,mergeRealAndImagArrays:()=>Qd,prepareAndValidate:()=>ao,prepareSplitSize:()=>mf,segment_util:()=>f,shouldFuse:()=>Cp,slice_util:()=>c,splitRealAndImagArrays:()=>ef,tupleValuesAreOne:()=>iu,upcastType:()=>sa,validateInput:()=>oo,validateUpdateShape:()=>io,warn:()=>sr});var g={};r.r(g),r.d(g,{nonMaxSuppressionV3Impl:()=>Hp,nonMaxSuppressionV4Impl:()=>jp,nonMaxSuppressionV5Impl:()=>qp,whereImpl:()=>cp});var y={};r.r(y),r.d(y,{maxNorm:()=>Ag,minMaxNorm:()=>Dg,nonNeg:()=>Fg,unitNorm:()=>Rg});var b={};r.r(b),r.d(b,{constant:()=>Py,glorotNormal:()=>jy,glorotUniform:()=>Hy,heNormal:()=>qy,heUniform:()=>Ky,identity:()=>Vy,leCunNormal:()=>Xy,leCunUniform:()=>Yy,ones:()=>zy,orthogonal:()=>Zy,randomNormal:()=>Wy,randomUniform:()=>By,truncatedNormal:()=>Uy,varianceScaling:()=>Gy,zeros:()=>Ly});var x={};r.r(x),r.d(x,{Layer:()=>mb,RNN:()=>Lw,RNNCell:()=>zw,activation:()=>rk,add:()=>dk,alphaDropout:()=>sI,average:()=>fk,averagePooling1d:()=>Ik,averagePooling2d:()=>Tk,averagePooling3d:()=>Ek,avgPool1d:()=>Nk,avgPool2d:()=>Ck,avgPool3d:()=>Ak,avgPooling1d:()=>Sk,avgPooling2d:()=>$k,avgPooling3d:()=>Rk,batchNormalization:()=>wk,bidirectional:()=>Xk,concatenate:()=>mk,conv1d:()=>Xv,conv2d:()=>Yv,conv2dTranspose:()=>Zv,conv3d:()=>Jv,conv3dTranspose:()=>Qv,convLstm2d:()=>Hk,convLstm2dCell:()=>jk,cropping2D:()=>tk,dense:()=>ak,depthwiseConv2d:()=>sk,dot:()=>xk,dropout:()=>ik,elu:()=>Vv,embedding:()=>pk,flatten:()=>lk,gaussianDropout:()=>nI,gaussianNoise:()=>tI,globalAveragePooling1d:()=>Fk,globalAveragePooling2d:()=>Dk,globalMaxPool1d:()=>Zk,globalMaxPool2d:()=>Jk,globalMaxPooling1d:()=>_k,globalMaxPooling2d:()=>Ok,gru:()=>Pk,gruCell:()=>Bk,input:()=>zx,inputLayer:()=>Uv,layerNormalization:()=>vk,leakyReLU:()=>Hv,lstm:()=>Wk,lstmCell:()=>Uk,masking:()=>rI,maxPool1d:()=>Qk,maxPool2d:()=>eI,maxPooling1d:()=>Mk,maxPooling2d:()=>Lk,maxPooling3d:()=>zk,maximum:()=>gk,minimum:()=>yk,multiply:()=>bk,permute:()=>hk,prelu:()=>jv,reLU:()=>Gv,repeatVector:()=>uk,reshape:()=>ck,rnn:()=>qk,separableConv2d:()=>ek,simpleRNN:()=>Vk,simpleRNNCell:()=>Gk,softmax:()=>qv,spatialDropout1d:()=>ok,stackedRNNCells:()=>Kk,thresholdedReLU:()=>Kv,timeDistributed:()=>Yk,upSampling2d:()=>nk,zeroPadding2d:()=>kk});var w={};r.r(w),r.d(w,{MAPE:()=>mI,MSE:()=>bI,binaryAccuracy:()=>aI,binaryCrossentropy:()=>iI,categoricalAccuracy:()=>lI,categoricalCrossentropy:()=>uI,cosineProximity:()=>pI,mape:()=>gI,meanAbsoluteError:()=>dI,meanAbsolutePercentageError:()=>fI,meanSquaredError:()=>yI,mse:()=>xI,precision:()=>cI,recall:()=>hI,sparseCategoricalAccuracy:()=>oI});var v={};r.r(v),r.d(v,{modelFromJSON:()=>Dx});var k={};r.r(k),r.d(k,{l1:()=>vI,l1l2:()=>wI,l2:()=>kI});var I={};r.r(I),r.d(I,{json:()=>WI});var N={};r.r(N),r.d(N,{json:()=>UI});var S={};r.r(S),r.d(S,{json:()=>VI});var T={};r.r(T),r.d(T,{json:()=>GI});var C={};r.r(C),r.d(C,{json:()=>HI});var $={};r.r($),r.d($,{json:()=>jI});var E={};r.r(E),r.d(E,{json:()=>qI});var A={};r.r(A),r.d(A,{json:()=>KI});var R={};r.r(R),r.d(R,{json:()=>XI});var F={};r.r(F),r.d(F,{json:()=>YI});var D={};r.r(D),r.d(D,{json:()=>ZI});var _={};r.r(_),r.d(_,{json:()=>JI});var O={};r.r(O),r.d(O,{json:()=>QI});var M={};r.r(M),r.d(M,{json:()=>eN});var L={};r.r(L),r.d(L,{json:()=>tN});var z={};r.r(z),r.d(z,{json:()=>nN});var P={};r.r(P),r.d(P,{json:()=>sN});var B={};r.r(B),r.d(B,{json:()=>rN});var W={};r.r(W),r.d(W,{json:()=>aN});var U={};r.r(U),r.d(U,{CSVDataset:()=>FS,Dataset:()=>wS,FileDataSource:()=>GS,TextLineDataset:()=>SS,URLDataSource:()=>HS,array:()=>kS,csv:()=>jS,func:()=>qS,generator:()=>KS,microphone:()=>YS,version_data:()=>ZS,webcam:()=>XS,zip:()=>IS});var V={};r.r(V),r.d(V,{addImpl:()=>RT,bincountImpl:()=>IC,bincountReduceImpl:()=>NC,ceilImpl:()=>CC,concatImpl:()=>DC,equalImpl:()=>m$,expImpl:()=>T$,expm1Impl:()=>R$,floorImpl:()=>K$,gatherNdImpl:()=>nE,gatherV2Impl:()=>rE,greaterEqualImpl:()=>uE,greaterImpl:()=>iE,lessEqualImpl:()=>kE,lessImpl:()=>xE,linSpaceImpl:()=>SE,logImpl:()=>CE,maxImpl:()=>UE,maximumImpl:()=>HE,minimumImpl:()=>tA,multiplyImpl:()=>o$,negImpl:()=>hA,notEqualImpl:()=>xA,prodImpl:()=>FA,rangeImpl:()=>_A,rsqrtImpl:()=>jA,sigmoidImpl:()=>bT,simpleAbsImpl:()=>BT,sliceImpl:()=>xC,sparseFillEmptyRowsImpl:()=>pR,sparseReshapeImpl:()=>fR,sparseSegmentReductionImpl:()=>gR,sqrtImpl:()=>vR,squaredDifferenceImpl:()=>SR,stridedSliceImpl:()=>AR,stringNGramsImpl:()=>DR,stringSplitImpl:()=>MR,stringToHashBucketFastImpl:()=>zR,subImpl:()=>L$,tileImpl:()=>VR,topKImpl:()=>jR,transposeImpl:()=>qT,uniqueImpl:()=>JR});var G={};r.r(G),r.d(G,{Abs:()=>Ze,Acos:()=>Je,Acosh:()=>Qe,AdadeltaOptimizer:()=>Sl,AdagradOptimizer:()=>Cl,AdamOptimizer:()=>Al,AdamaxOptimizer:()=>Dl,Add:()=>et,AddN:()=>tt,All:()=>nt,Any:()=>st,ArgMax:()=>rt,ArgMin:()=>at,Asin:()=>it,Asinh:()=>ot,Atan:()=>lt,Atan2:()=>ct,Atanh:()=>ut,AvgPool:()=>ht,AvgPool3D:()=>dt,AvgPool3DGrad:()=>ft,AvgPoolGrad:()=>pt,BatchMatMul:()=>mt,BatchToSpaceND:()=>gt,Bincount:()=>yt,BroadcastArgs:()=>xt,BroadcastTo:()=>bt,Callback:()=>II,CallbackList:()=>Ib,Cast:()=>wt,Ceil:()=>vt,ClipByValue:()=>kt,Complex:()=>It,ComplexAbs:()=>Nt,Concat:()=>St,Conv2D:()=>Tt,Conv2DBackpropFilter:()=>Ct,Conv2DBackpropInput:()=>$t,Conv3D:()=>Et,Conv3DBackpropFilterV2:()=>At,Conv3DBackpropInputV2:()=>Rt,Cos:()=>Ft,Cosh:()=>Dt,CropAndResize:()=>Ot,Cumsum:()=>_t,CustomCallback:()=>Tb,DataStorage:()=>q,DenseBincount:()=>Mt,DepthToSpace:()=>Lt,DepthwiseConv2dNative:()=>zt,DepthwiseConv2dNativeBackpropFilter:()=>Pt,DepthwiseConv2dNativeBackpropInput:()=>Bt,Diag:()=>Wt,Dilation2D:()=>Ut,Dilation2DBackpropFilter:()=>Gt,Dilation2DBackpropInput:()=>Vt,ENV:()=>Ke,EarlyStopping:()=>TI,Einsum:()=>jt,Elu:()=>qt,EluGrad:()=>Kt,Environment:()=>Ge,Equal:()=>Yt,Erf:()=>Xt,Exp:()=>Zt,ExpandDims:()=>Jt,Expm1:()=>Qt,FFT:()=>en,Fill:()=>tn,FlipLeftRight:()=>nn,Floor:()=>sn,FloorDiv:()=>rn,FromPixels:()=>Js,FusedBatchNorm:()=>an,FusedConv2D:()=>tr,FusedDepthwiseConv2D:()=>nr,GatherNd:()=>ln,GatherV2:()=>on,GraphModel:()=>UN,Greater:()=>un,GreaterEqual:()=>cn,History:()=>Sb,IFFT:()=>pn,Identity:()=>hn,Imag:()=>dn,InputSpec:()=>cb,IsFinite:()=>fn,IsInf:()=>mn,IsNan:()=>gn,KernelBackend:()=>K,LRN:()=>Cn,LRNGrad:()=>$n,LayerVariable:()=>ob,LayersModel:()=>Rx,LeakyRelu:()=>yn,Less:()=>bn,LessEqual:()=>xn,LinSpace:()=>wn,Log:()=>vn,Log1p:()=>kn,LogSoftmax:()=>Tn,LogicalAnd:()=>In,LogicalNot:()=>Nn,LogicalOr:()=>Sn,Max:()=>En,MaxPool:()=>Rn,MaxPool3D:()=>Dn,MaxPool3DGrad:()=>_n,MaxPoolGrad:()=>Fn,MaxPoolWithArgmax:()=>On,Maximum:()=>An,Mean:()=>Mn,Min:()=>Ln,Minimum:()=>zn,MirrorPad:()=>Pn,Mod:()=>Bn,MomentumOptimizer:()=>Ol,Multinomial:()=>Wn,Multiply:()=>Un,Neg:()=>Vn,NonMaxSuppressionV3:()=>Hn,NonMaxSuppressionV4:()=>jn,NonMaxSuppressionV5:()=>qn,NotEqual:()=>Gn,OP_SCOPE_SUFFIX:()=>Ta,OneHot:()=>Xn,OnesLike:()=>Kn,Optimizer:()=>Nl,OptimizerConstructors:()=>Ll,Pack:()=>Yn,PadV2:()=>Zn,Pool:()=>Jn,Pow:()=>Qn,Prelu:()=>es,Prod:()=>ts,RMSPropOptimizer:()=>Ml,RNN:()=>Lw,Range:()=>ns,Rank:()=>Zr,Real:()=>ss,RealDiv:()=>Ht,Reciprocal:()=>rs,Reduction:()=>ld,Relu:()=>as,Relu6:()=>hs,Reshape:()=>is,ResizeBilinear:()=>us,ResizeBilinearGrad:()=>cs,ResizeNearestNeighbor:()=>os,ResizeNearestNeighborGrad:()=>ls,Reverse:()=>ps,RotateWithOffset:()=>Qs,Round:()=>ds,Rsqrt:()=>fs,SGDOptimizer:()=>_l,ScatterNd:()=>ms,Select:()=>gs,Selu:()=>ys,Sequential:()=>_x,Sigmoid:()=>ks,Sign:()=>vs,Sin:()=>xs,Sinh:()=>ws,Slice:()=>bs,Softmax:()=>$s,Softplus:()=>Is,SpaceToBatchND:()=>Ts,SparseFillEmptyRows:()=>Es,SparseReshape:()=>As,SparseSegmentMean:()=>Rs,SparseSegmentSum:()=>Fs,SparseToDense:()=>Ds,SplitV:()=>Cs,Sqrt:()=>Ns,Square:()=>Os,SquaredDifference:()=>_s,Step:()=>Zs,StridedSlice:()=>Ms,StringNGrams:()=>Ls,StringSplit:()=>zs,StringToHashBucketFast:()=>Ps,Sub:()=>Bs,Sum:()=>Ss,SymbolicTensor:()=>hb,Tan:()=>Ws,Tanh:()=>Us,Tensor:()=>Kr,TensorBuffer:()=>Gr,Tile:()=>Vs,TopK:()=>Gs,Transform:()=>Hs,Transpose:()=>js,Unique:()=>qs,Unpack:()=>Ks,UnsortedSegmentSum:()=>Xs,Variable:()=>Yr,ZerosLike:()=>Ys,_FusedMatMul:()=>er,abs:()=>Rl,acos:()=>zl,acosh:()=>Pl,add:()=>ul,addN:()=>Bl,all:()=>Wl,any:()=>Ul,argMax:()=>Vl,argMin:()=>Gl,asin:()=>Hl,asinh:()=>jl,atan:()=>ql,atan2:()=>Kl,atanh:()=>Xl,avgPool:()=>hu,avgPool3d:()=>pu,backend:()=>ol,backend_util:()=>m,basicLSTMCell:()=>yu,batchNorm:()=>xu,batchNorm2d:()=>wu,batchNorm3d:()=>vu,batchNorm4d:()=>ku,batchToSpaceND:()=>bu,bincount:()=>Iu,booleanMaskAsync:()=>pp,broadcastArgs:()=>Nu,broadcastTo:()=>Su,broadcast_util:()=>i,browser:()=>o,buffer:()=>Si,callbacks:()=>CI,cast:()=>Ti,ceil:()=>Tu,clipByValue:()=>Cu,clone:()=>Ci,complex:()=>$a,concat:()=>du,concat1d:()=>$u,concat2d:()=>Eu,concat3d:()=>Au,concat4d:()=>Ru,constraints:()=>y,conv1d:()=>Du,conv2d:()=>Fu,conv2dTranspose:()=>Ou,conv3d:()=>Mu,conv3dTranspose:()=>zu,copyRegisteredKernels:()=>fr,cos:()=>Pu,cosh:()=>Bu,cosineWindow:()=>vp,cumsum:()=>Wu,customGrad:()=>vl,data:()=>U,denseBincount:()=>Uu,deprecationWarn:()=>Ho,depthToSpace:()=>Vu,depthwiseConv2d:()=>Gu,deregisterOp:()=>DI,device_util:()=>n,diag:()=>Hu,dilation2d:()=>ju,disableDeprecationWarnings:()=>Go,dispose:()=>Zo,disposeVariables:()=>jo,div:()=>hl,divNoNan:()=>Xu,dot:()=>Yu,dropout:()=>xp,einsum:()=>Zu,elu:()=>Ju,enableDebugMode:()=>Vo,enableProdMode:()=>Uo,enclosingPowerOfTwo:()=>wp,engine:()=>qo,env:()=>je,equal:()=>qu,erf:()=>Qu,exp:()=>ec,expandDims:()=>tc,expm1:()=>nc,eye:()=>rc,fft:()=>Uh,fill:()=>Tl,findBackend:()=>rl,findBackendFactory:()=>al,floor:()=>ac,floorDiv:()=>cl,fused:()=>d,gather:()=>ic,gatherND:()=>bp,gather_util:()=>l,getBackend:()=>nl,getGradient:()=>lr,getKernel:()=>or,getKernelsForBackend:()=>ur,grad:()=>gl,grads:()=>yl,greater:()=>oc,greaterEqual:()=>lc,ifft:()=>Vh,imag:()=>uc,image:()=>Cd,inTopKAsync:()=>kp,initializers:()=>b,input:()=>zx,io:()=>s,irfft:()=>Gh,isFinite:()=>cc,isInf:()=>hc,isNaN:()=>pc,keep:()=>Jo,kernel_impls:()=>g,layers:()=>x,leakyRelu:()=>dc,less:()=>fc,lessEqual:()=>mc,linalg:()=>$d,linspace:()=>gc,loadGraphModel:()=>VN,loadLayersModel:()=>Lx,localResponseNormalization:()=>yc,log:()=>bc,log1p:()=>xc,logSigmoid:()=>kc,logSoftmax:()=>Sc,logSumExp:()=>_c,logicalAnd:()=>Oc,logicalNot:()=>Mc,logicalOr:()=>Lc,logicalXor:()=>zc,losses:()=>Ed,matMul:()=>ji,math:()=>a,max:()=>Ic,maxPool:()=>Pc,maxPool3d:()=>Bc,maxPoolWithArgmax:()=>Wc,maximum:()=>Fl,mean:()=>Uc,memory:()=>Ko,meshgrid:()=>Hc,metrics:()=>w,min:()=>jc,minimum:()=>qc,mirrorPad:()=>Kc,mod:()=>Xc,model:()=>Ox,models:()=>v,moments:()=>Yc,movingAverage:()=>mp,mul:()=>pl,multiRNNCell:()=>Zc,multinomial:()=>Jc,neg:()=>wc,nextFrame:()=>_d,norm:()=>fp,notEqual:()=>Qc,oneHot:()=>qi,ones:()=>Gc,onesLike:()=>eh,op:()=>Ca,outerProduct:()=>th,pad:()=>nh,pad1d:()=>sh,pad2d:()=>rh,pad3d:()=>ah,pad4d:()=>ih,pool:()=>lh,pow:()=>$l,prelu:()=>uh,print:()=>$i,prod:()=>ch,profile:()=>Xo,rand:()=>hh,randomGamma:()=>gh,randomNormal:()=>yh,randomUniform:()=>bh,range:()=>xh,ready:()=>tl,real:()=>wh,reciprocal:()=>vh,registerBackend:()=>il,registerCallbackConstructor:()=>Px,registerGradient:()=>hr,registerKernel:()=>cr,registerOp:()=>RI,regularizers:()=>k,relu:()=>kh,relu6:()=>Ih,removeBackend:()=>sl,reshape:()=>cu,reverse:()=>Nh,reverse1d:()=>Sh,reverse2d:()=>Th,reverse3d:()=>Ch,reverse4d:()=>$h,rfft:()=>jh,round:()=>Eh,rsqrt:()=>Ah,scalar:()=>Il,scatterND:()=>gp,scatter_util:()=>u,selu:()=>Rh,separableConv2d:()=>Fh,sequential:()=>Mx,serialization:()=>h,setBackend:()=>el,setPlatform:()=>ll,setdiff1dAsync:()=>Dh,sigmoid:()=>fu,sign:()=>_h,signal:()=>Td,sin:()=>Oh,sinh:()=>Mh,slice:()=>mu,slice1d:()=>Lh,slice2d:()=>zh,slice3d:()=>Ph,slice4d:()=>Bh,slice_util:()=>c,softmax:()=>Wh,softplus:()=>vc,spaceToBatchND:()=>oh,sparse:()=>Ad,sparseToDense:()=>yp,spectral:()=>Sd,split:()=>Hh,sqrt:()=>dl,square:()=>fl,squaredDifference:()=>qh,squeeze:()=>Kh,stack:()=>Xh,step:()=>Yh,stridedSlice:()=>Zh,string:()=>Rd,sub:()=>El,sum:()=>Nc,sumOutType:()=>ra,tan:()=>Jh,tanh:()=>gu,tensor:()=>Aa,tensor1d:()=>Qh,tensor2d:()=>ep,tensor3d:()=>Qi,tensor4d:()=>tp,tensor5d:()=>np,tensor6d:()=>sp,tensor_util:()=>t,test_util:()=>p,tidy:()=>Yo,tile:()=>sc,time:()=>Qo,topk:()=>rp,train:()=>Fd,transpose:()=>Ki,truncatedNormal:()=>ap,unique:()=>ip,unregisterGradient:()=>dr,unregisterKernel:()=>pr,unsortedSegmentSum:()=>op,unstack:()=>lp,upcastType:()=>sa,util:()=>e,valueAndGrad:()=>bl,valueAndGrads:()=>xl,variable:()=>up,variableGrads:()=>wl,version:()=>UB,version_converter:()=>GN,version_core:()=>Wo,version_layers:()=>ix,where:()=>Ku,whereAsync:()=>hp,zeros:()=>Vc,zerosLike:()=>ml});const H=three;var j=r.t(H,2);class q{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class K{refCount(e){return X("refCount")}incRef(e){return X("incRef")}timerAvailable(){return!0}time(e){return X("time")}read(e){return X("read")}readSync(e){return X("readSync")}readToGPU(e,t){return X("readToGPU")}numDataIds(){return X("numDataIds")}disposeData(e,t){return X("disposeData")}write(e,t,n){return X("write")}move(e,t,n,s,r){return X("move")}memory(){return X("memory")}floatPrecision(){return X("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return X("dispose")}}function X(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function Y(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,ee(e,t,n)}function Z(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,s=0;for(;n>0;)s=Math.random()*n|0,n--,ee(e,n,s),ee(t,n,s)}function J(e,t,n){return Math.max(e,Math.min(t,n))}function Q(e){return e%2==0?e:e+1}function ee(e,t,n){const s=e[t];e[t]=e[n],e[n]=s}function te(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function ne(e,t){const n=Math.random();return t*n+(1-n)*e}function se(e,t){let n=0;for(let s=0;s<e.length;s++){const r=Number(e[s])-Number(t[s]);n+=r*r}return n}function re(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function ae(e,t,n=""){re(ce(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ie(e){re(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function oe(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Se(e)&&!n)for(let s=0;s<e.length;++s)oe(e[s],t,n);else t.push(e);return t}function le(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ue(e){return 0===e.length}function ce(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function he(e){return e%1==0}function pe(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function de(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function fe(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return Y(t),t}function me(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function ge(e,t=(e=>0),n){return new Promise(((s,r)=>{let a=0;const i=()=>{if(e())return void s();a++;const o=t(a);null!=n&&a>=n?r():setTimeout(i,o)};i()}))}function ye(e,t){let n=1,s=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==s)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${s} and dim ${t}`);s=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===s){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const r=e.slice();return r[s]=t/n,r}function be(e,t){const n=t.length;return re((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),re(e.every((e=>he(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function xe(e,t){const n=[],s=[],r=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||r?null:be(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),s.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),s.push(t))}return{newShape:n,keptDims:s}}function we(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function ve(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ke(e,t){for(let n=0;n<e.length;n++){const s=e[n];if(isNaN(s)||!isFinite(s))throw Error(`A tensor of type ${t} being uploaded contains ${s}.`)}}function Ie(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ne(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Se(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Te(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function Ce(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function $e(e){return"string"==typeof e||e instanceof String}function Ee(e){return"boolean"==typeof e}function Ae(e){return"number"==typeof e}function Re(e){return Array.isArray(e)?Re(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Ae(e)?"float32":$e(e)?"string":Ee(e)?"bool":"float32"}function Fe(e){return!!(e&&e.constructor&&e.call&&e.apply)}function De(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function _e(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let s=t-3;s>=0;--s)n[s]=n[s+1]*e[s+1];return n}function Oe(e,t,n,s=!1){const r=new Array;if(1===t.length){const a=t[0]*(s?2:1);for(let t=0;t<a;t++)r[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(s?2:1);for(let t=0;t<a;t++)r[t]=Oe(e+t*o,i,n,s)}return r}function Me(e,t,n=!1){if(0===e.length)return t[0];const s=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===s)return[];if(s!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return Oe(0,e,t,n)}function Le(e,t){const n=ze(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function ze(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function Pe(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Me(e,new Float32Array(n));if("int32"===t)return Me(e,new Int32Array(n));if("bool"===t)return Me(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Be(e){e.forEach((t=>{re(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function We(e,t,n){if(0===t)return 0;if(1===t)return e[0];let s=e[e.length-1];for(let t=0;t<e.length-1;++t)s+=n[t]*e[t];return s}function Ue(e,t,n){if(0===t)return[];if(1===t)return[e];const s=new Array(t);for(let t=0;t<s.length-1;++t)s[t]=Math.floor(e/n[t]),e-=s[t]*n[t];return s[s.length-1]=e,s}function Ve(e){return e&&e.then&&"function"==typeof e.then}class Ge{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=He,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(Ve(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function He(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function je(){return Ke}let qe,Ke=null;function Xe(){if(null==qe){let e;if("undefined"!=typeof window)e=window;else if(void 0!==r.g)e=r.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}qe=e}return qe}function Ye(e,t){const n=function(){const e=Xe();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const s=t();return n.set(e,s),n.get(e)}}const Ze="Abs",Je="Acos",Qe="Acosh",et="Add",tt="AddN",nt="All",st="Any",rt="ArgMax",at="ArgMin",it="Asin",ot="Asinh",lt="Atan",ut="Atanh",ct="Atan2",ht="AvgPool",pt="AvgPoolGrad",dt="AvgPool3D",ft="AvgPool3DGrad",mt="BatchMatMul",gt="BatchToSpaceND",yt="Bincount",bt="BroadcastTo",xt="BroadcastArgs",wt="Cast",vt="Ceil",kt="ClipByValue",It="Complex",Nt="ComplexAbs",St="Concat",Tt="Conv2D",Ct="Conv2DBackpropFilter",$t="Conv2DBackpropInput",Et="Conv3D",At="Conv3DBackpropFilterV2",Rt="Conv3DBackpropInputV2",Ft="Cos",Dt="Cosh",_t="Cumsum",Ot="CropAndResize",Mt="DenseBincount",Lt="DepthToSpace",zt="DepthwiseConv2dNative",Pt="DepthwiseConv2dNativeBackpropFilter",Bt="DepthwiseConv2dNativeBackpropInput",Wt="Diag",Ut="Dilation2D",Vt="Dilation2DBackpropInput",Gt="Dilation2DBackpropFilter",Ht="RealDiv",jt="Einsum",qt="Elu",Kt="EluGrad",Xt="Erf",Yt="Equal",Zt="Exp",Jt="ExpandDims",Qt="Expm1",en="FFT",tn="Fill",nn="FlipLeftRight",sn="Floor",rn="FloorDiv",an="FusedBatchNorm",on="GatherV2",ln="GatherNd",un="Greater",cn="GreaterEqual",hn="Identity",pn="IFFT",dn="Imag",fn="IsFinite",mn="IsInf",gn="IsNan",yn="LeakyRelu",bn="Less",xn="LessEqual",wn="LinSpace",vn="Log",kn="Log1p",In="LogicalAnd",Nn="LogicalNot",Sn="LogicalOr",Tn="LogSoftmax",Cn="LRN",$n="LRNGrad",En="Max",An="Maximum",Rn="MaxPool",Fn="MaxPoolGrad",Dn="MaxPool3D",_n="MaxPool3DGrad",On="MaxPoolWithArgmax",Mn="Mean",Ln="Min",zn="Minimum",Pn="MirrorPad",Bn="Mod",Wn="Multinomial",Un="Multiply",Vn="Neg",Gn="NotEqual",Hn="NonMaxSuppressionV3",jn="NonMaxSuppressionV4",qn="NonMaxSuppressionV5",Kn="OnesLike",Xn="OneHot",Yn="Pack",Zn="PadV2",Jn="Pool",Qn="Pow",es="Prelu",ts="Prod",ns="Range",ss="Real",rs="Reciprocal",as="Relu",is="Reshape",os="ResizeNearestNeighbor",ls="ResizeNearestNeighborGrad",us="ResizeBilinear",cs="ResizeBilinearGrad",hs="Relu6",ps="Reverse",ds="Round",fs="Rsqrt",ms="ScatterNd",gs="Select",ys="Selu",bs="Slice",xs="Sin",ws="Sinh",vs="Sign",ks="Sigmoid",Is="Softplus",Ns="Sqrt",Ss="Sum",Ts="SpaceToBatchND",Cs="SplitV",$s="Softmax",Es="SparseFillEmptyRows",As="SparseReshape",Rs="SparseSegmentMean",Fs="SparseSegmentSum",Ds="SparseToDense",_s="SquaredDifference",Os="Square",Ms="StridedSlice",Ls="StringNGrams",zs="StringSplit",Ps="StringToHashBucketFast",Bs="Sub",Ws="Tan",Us="Tanh",Vs="Tile",Gs="TopK",Hs="Transform",js="Transpose",qs="Unique",Ks="Unpack",Xs="UnsortedSegmentSum",Ys="ZerosLike",Zs="Step",Js="FromPixels",Qs="RotateWithOffset",er="_FusedMatMul",tr="FusedConv2D",nr="FusedDepthwiseConv2D";function sr(...e){je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(...e)}function rr(...e){je().getBool("IS_TEST")||je().getBool("PROD")||console.log(...e)}const ar=Ye("kernelRegistry",(()=>new Map)),ir=Ye("gradRegistry",(()=>new Map));function or(e,t){const n=mr(e,t);return ar.get(n)}function lr(e){return ir.get(e)}function ur(e){const t=ar.entries(),n=[];for(;;){const{done:s,value:r}=t.next();if(s)break;const[a,i]=r,[o]=a.split("_");o===e&&n.push(i)}return n}function cr(e){const{kernelName:t,backendName:n}=e,s=mr(t,n);ar.has(s)&&sr(`The kernel '${t}' for backend '${n}' is already registered`),ar.set(s,e)}function hr(e){const{kernelName:t}=e;ir.has(t)&&je().getBool("DEBUG")&&sr(`Overriding the gradient for '${t}'`),ir.set(t,e)}function pr(e,t){const n=mr(e,t);if(!ar.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ar.delete(n)}function dr(e){if(!ir.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);ir.delete(e)}function fr(e,t){ur(e).forEach((e=>{cr(Object.assign({},e,{backendName:t}))}))}function mr(e,t){return`${t}_${e}`}var gr=r(720);const yr=r.n(gr)()||gr;function br(e){return yr.fromString(e,!0,16)}const xr=br("c3a5c85c97cb3127"),wr=br("b492b66fbe98f273"),vr=br("9ae16a3b2f90404f");function kr(e){return e.xor(e.shru(47))}function Ir(e,t,n){const s=e.slice(t,t+n);return yr.fromBytes(Array.from(s),!0,!0)}function Nr(e,t){return Ir(e,t,8)}function Sr(e,t){return Ir(e,t,4)}function Tr(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Cr(e,t,n=br("9ddfea08eb382d69")){let s=e.xor(t).mul(n);s=s.xor(s.shru(47));let r=t.xor(s).mul(n);return r=r.xor(r.shru(47)),r=r.mul(n),r}function $r(e,t,n,s){return function(e,t,n,s,r,a){r=r.add(e),a=Tr(a.add(r).add(s),21);const i=r;return r=(r=r.add(t)).add(n),a=a.add(Tr(r,44)),[r.add(s),a.add(i)]}(Nr(e,t),Nr(e,t+8),Nr(e,t+16),Nr(e,t+24),n,s)}function Er(e,t=e.length){const n=yr.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=vr.add(2*t),s=Nr(e,0).add(vr),r=Nr(e,t-8);return Cr(Tr(r,37).mul(n).add(s),Tr(s,25).add(r).mul(n),n)}if(t>=4){const n=vr.add(2*t);return Cr(Sr(e,0).shl(3).add(t),Sr(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),s=t+(e[t-1]<<2);return kr(vr.mul(n).xor(xr.mul(s))).mul(vr)}return vr}(e,t):function(e,t=e.length){const n=vr.add(2*t),s=Nr(e,0).mul(wr),r=Nr(e,8),a=Nr(e,t-8).mul(n),i=Nr(e,t-16).mul(vr);return Cr(Tr(s.add(r),43).add(Tr(a,30)).add(i),s.add(Tr(r.add(vr),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=vr.add(2*t),s=Nr(e,0).mul(vr),r=Nr(e,8),a=Nr(e,t-8).mul(n),i=Nr(e,t-16).mul(vr),o=Tr(s.add(r),43).add(Tr(a,30)).add(i),l=Cr(o,s.add(Tr(r.add(vr),18)).add(a),n),u=Nr(e,16).mul(n),c=Nr(e,24),h=o.add(Nr(e,t-32)).mul(n),p=l.add(Nr(e,t-24)).mul(n);return Cr(Tr(u.add(c),43).add(Tr(h,30)).add(p),u.add(Tr(c.add(s),18)).add(h),n)}(e,t);let s=n,r=n.mul(wr).add(113),a=kr(r.mul(vr).add(113)).mul(vr),i=[yr.UZERO,yr.UZERO],o=[yr.UZERO,yr.UZERO];s=s.mul(vr).add(Nr(e,0));let l=0;const u=64*(t-1>>6),c=u+(t-1&63)-63;do{s=Tr(s.add(r).add(i[0]).add(Nr(e,l+8)),37).mul(wr),r=Tr(r.add(i[1]).add(Nr(e,l+48)),42).mul(wr),s=s.xor(o[1]),r=r.add(i[0]).add(Nr(e,l+40)),a=Tr(a.add(o[0]),33).mul(wr),i=$r(e,l,i[1].mul(wr),s.add(o[0])),o=$r(e,l+32,a.add(o[1]),r.add(Nr(e,l+16))),[a,s]=[s,a],l+=64}while(l!==u);const h=wr.add(a.and(255).shl(1));return l=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),s=Tr(s.add(r).add(i[0]).add(Nr(e,l+8)),37).mul(h),r=Tr(r.add(i[1]).add(Nr(e,l+48)),42).mul(h),s=s.xor(o[1].mul(9)),r=r.add(i[0].mul(9).add(Nr(e,l+40))),a=Tr(a.add(o[0]),33).mul(h),i=$r(e,l,i[1].mul(h),s.add(o[0])),o=$r(e,l+32,a.add(o[1]),r.add(Nr(e,l+16))),[a,s]=[s,a],Cr(Cr(i[0],o[0],h).add(kr(r).mul(xr)).add(a),Cr(i[1],o[1],h).add(s),h)}function Ar(e,t){return"string"===t?_r(e):Rr([e],t)}function Rr(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=oe(e)),je().getBool("DEBUG")&&ke(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function Fr(){return je().platform.now()}function Dr(e,t){return je().platform.fetch(e,t)}function _r(e,t="utf-8"){return t=t||"utf-8",je().platform.encode(e,t)}function Or(e,t="utf-8"){return t=t||"utf-8",je().platform.decode(e,t)}class Mr{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new zr)}profileKernel(e,t,n){let s;const r=()=>{s=n()};let a;const i=Fr();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(r);else{r();for(const e of s)e.dataSync();a=Promise.resolve({kernelMs:Fr()-i})}if(je().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<s.length;t++){const n=s[t];n.data().then((t=>{Lr(t,n.dtype,e)}))}return{kernelName:e,outputs:s,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:s,inputs:r,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),s,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],r,n[2])}))}))}}function Lr(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const s=e[t];if(isNaN(s)||!isFinite(s))return console.warn(`Found ${s} in the result of '${n}'`),!0}return!1}class zr{logKernelProfile(e,t,n,s,r,a){const i="number"==typeof s?me(`${s}ms`,9):s.error,o=me(e,25),l=t.rank,u=t.size,c=me(t.shape.toString(),14);let h="";for(const e in r){const n=r[e];if(null!=n){const s=n.shape||t.shape,r=s.length;h+=`${e}: ${r}D ${r>0?s:""} `}}console.log(`%c${o}\t%c${i}\t%c${l}D ${c}\t%c${u}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function Pr(e,t,n,s){const r=_e(t),a=function(e,t,n,s){const r=le(t),a=s[s.length-1],i=new Array(a).fill(0),o=t.length,l="complex64"===n?Vr(e):e;if(o>1)for(let e=0;e<r/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Br(l[t+e],0,n).length)}return i}(e,t,n,r),i=t.length,o=Ur(e,t,n,r,a),l=["Tensor"];return s&&(l.push(`  dtype: ${n}`),l.push(`  rank: ${i}`),l.push(`  shape: [${t}]`),l.push("  values:")),l.push(o.map((e=>"    "+e)).join("\n")),l.join("\n")}function Br(e,t,n){let s;return s=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:$e(e)?`'${e}'`:"bool"===n?Wr(e):parseFloat(e.toFixed(7)).toString(),me(s,t)}function Wr(e){return 0===e?"false":"true"}function Ur(e,t,n,s,r,a=!0){const i="complex64"===n?2:1,o=t[0],l=t.length;if(0===l)return"complex64"===n?[Br(Vr(e)[0],0,n)]:"bool"===n?[Wr(e[0])]:[e[0].toString()];if(1===l){if(o>20){const t=3*i;let s=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(s=Vr(s),a=Vr(a)),["["+s.map(((e,t)=>Br(e,r[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Br(e,r[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Vr(e):Array.from(e)).map(((e,t)=>Br(e,r[t],n))).join(", ")+"]"]}const u=t.slice(1),c=s.slice(1),h=s[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const s=t*h,a=s+h;p.push(...Ur(e.slice(s,a),u,n,c,r,!1))}p.push("...");for(let t=o-3;t<o;t++){const s=t*h,a=s+h;p.push(...Ur(e.slice(s,a),u,n,c,r,t===o-1))}}else for(let t=0;t<o;t++){const s=t*h,a=s+h;p.push(...Ur(e.slice(s,a),u,n,c,r,t===o-1))}const d=2===l?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<l;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Vr(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Gr{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=le(e),null!=n){const e=n.length;re(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||ve(t,this.size),this.strides=_e(e)}set(e,...t){0===t.length&&(t=[0]),re(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Hr().makeTensor(this.values,this.shape,this.dtype)}}let Hr=null,jr=null,qr=null;class Kr{constructor(e,t,n,s){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=le(e),this.strides=_e(e),this.dataId=n,this.id=s,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return jr.buffer(this.shape,this.dtype,e)}bufferSync(){return jr.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Me(this.shape,e,"complex64"===this.dtype)}arraySync(){return Me(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Hr().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>Or(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Hr().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Hr().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>Or(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Hr().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Hr().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return jr.print(this,e)}clone(){return this.throwIfDisposed(),jr.clone(this)}toString(e=!1){return Pr(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),jr.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Hr().makeVariable(this,e,t,n)}}function Xr(){return Ye("Tensor",(()=>Kr))}Object.defineProperty(Kr,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Xr();class Yr extends Kr{constructor(e,t,n,s){super(e.shape,e.dtype,e.dataId,s),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!ce(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Hr().disposeTensor(this),this.dataId=e.dataId,Hr().incRef(this,null)}dispose(){Hr().disposeVariable(this),this.isDisposedInternal=!0}}var Zr,Jr,Qr,ea,ta;Object.defineProperty(Yr,Symbol.hasInstance,{value:e=>e instanceof Kr&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Zr||(Zr={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Jr||(Jr={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Qr||(Qr={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(ea||(ea={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ta||(ta={}));const na={float32:ea,int32:Jr,bool:Qr,complex64:ta};function sa(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return na[e][t]}function ra(e){return sa(e,"int32")}function aa(e,t){if(e.dtype===t.dtype)return[e,t];const n=sa(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function ia(e,t){re(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function oa(e,t){return t.some((t=>t.id===e.id))}function la(e){const t=[];return ua(e,t,new Set),t}function ua(e,t,n){if(null==e)return;if(e instanceof Kr)return void t.push(e);if(s=e,!Array.isArray(s)&&"object"!=typeof s)return;var s;const r=e;for(const e in r){const s=r[e];n.has(s)||(n.add(s),ua(s,t,n))}}function ca(e){return null!=e.kernelName}class ha{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class pa{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ha}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(sr(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Mr(this.backendInstance),!0}setupRegisteredKernels(){ur(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){ur(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof K||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,s=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,sr(`Initialization of backend ${e} failed`),sr(n.stack||n.message)),!1)));return this.pendingBackendInit=s,{success:s,asyncInit:!0}}}catch(t){return sr(`Initialization of backend ${e} failed`),sr(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:s,asyncInit:r}=this.initializeBackend(n);if(r||s)return{name:n,asyncInit:r}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),s=n.backend,r=this.readSync(t),a=s.refCount(t);s.disposeData(t,!0),n.backend=e,e.move(t,r,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,s=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");s=e}return this.scopedRun((()=>this.startScope(s)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return pa.nextTensorId++}nextVariableId(){return pa.nextVariableId++}clone(e){const t=fa.runKernel(hn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return fa.runKernel(wt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==or(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const s=this.backend.numDataIds();let r=0;n.forEach((e=>{r+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=s-t-r-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const s=this.isTapeOn(),r=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const l=ca(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(ca(e)){const{kernelName:t,inputs:r,attrs:a}=e;null==this.backendName&&this.backend;const l=or(t,this.backendName);re(null!=l,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=l.kernelFunc({inputs:r,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const u=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:s}=e;return this.makeTensorFromDataId(t,n,s)}));if(s){const e=this.getTensorsForGradient(t,r,u);n=this.saveTensorsForBackwardMode(e)}return u}}else{const{forwardFunc:t}=e,r=e=>{s&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,r)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(l,e,n),n}}const{inputs:u,attrs:c}=e,h=ca(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(l,u,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),s&&this.addTapeNode(l,u,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:l,bytesAdded:this.state.numBytes-r,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(u).map((e=>null!=u[e]?u[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const s=lr(e);if(null!=s){const e=s.inputsToSave||[],r=s.outputsToSave||[];let a;s.saveAllInputs?(re(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>r[t]));return a.concat(i)}return[]}makeTensor(e,t,n,s){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",s=s||this.backend;let r=e;"string"===n&&$e(e[0])&&(r=e.map((e=>_r(e))));const a=s.write(r,t,n),i=new Kr(t,n,a,this.nextTensorId());if(this.trackTensor(i,s),"string"===n){const e=this.state.tensorInfo.get(a),t=Ce(r);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,s){const r=new Kr(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(r,s),r}makeVariable(e,t=!0,n,s){n=n||this.nextVariableId().toString(),null!=s&&s!==e.dtype&&(e=e.cast(s));const r=new Yr(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[r.name])throw new Error(`Variable with name ${r.name} was already registered`);return this.state.registeredVariables[r.name]=r,this.incRef(r,this.backend),r}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Te(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Yr||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Te(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,s,r,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:r},o=lr(e);null!=o&&(s=o.gradFunc),null!=s&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],s=ze(e.size,e.dtype);return this.makeTensor(s,e.shape,e.dtype)}return e})),s(e.length>1?e:e[0],r,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=la(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const s=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==s.id||this.track(e)}))}gradients(e,t,n,s=!1){if(re(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const r=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));re(r instanceof Kr,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const s={},r={};for(let e=0;e<t.length;e++)s[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(s[n.id]){a.outputs.forEach((e=>s[e.id]=!0)),o=!0,r[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],s=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in s)a[s[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(r[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const r=n.inputs[t];s[r.id]&&(e[t]=r)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,r);if(!s&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[r.id]=null==n?function(e){const t=Le(le(e),"float32");return fa.makeTensor(t,e,"float32")}(r.shape):n,function(e,t,n,s){for(let r=t.length-1;r>=0;r--){const a=t[r],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const r=n((()=>o[t]()));if("float32"!==r.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${r.dtype}'`);const i=a.inputs[t];if(!ce(r.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${r.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=r;else{const t=e[i.id];e[i.id]=s(t,r),t.dispose()}}}}(e,a,(e=>this.tidy(e)),ma);const s=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:r,grads:s}}))}customGrad(e){return re(Fe(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;re(t.every((e=>e instanceof Kr)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const s={};return t.forEach(((e,t)=>{s[t]=e})),this.runKernelFunc({forwardFunc:(s,r)=>(n=e(...t,r),re(n.value instanceof Kr,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),re(Fe(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,s)=>{const r=n.gradFunc(e,s),a=Array.isArray(r)?r:[r];re(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),re(a.every((e=>e instanceof Kr)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:s})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=Fr(),n=await this.backend.time(e);return n.wallMs=Fr()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ha;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function da(){const e=Xe();if(null==e._tfengine){const t=new Ge(e);e._tfengine=new pa(t)}var t;return t=e._tfengine.ENV,Ke=t,Hr=()=>e._tfengine,e._tfengine}pa.nextTensorId=0,pa.nextVariableId=0;const fa=da();function ma(e,t){const n={a:e,b:t};return fa.runKernel(et,n)}let ga;function ya(e){ga=e}function ba(e){if(void 0!==ga)return ga;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function xa(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const wa=je();function va(e,t){let n=e;if(Se(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const s=[];for(;Array.isArray(n)||Se(n)&&"string"!==t;)s.push(n.length),n=n[0];return Array.isArray(e)&&je().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&ka(e,s,[]),s}function ka(e,t,n){if(n=n||[],!Array.isArray(e)&&!Se(e))return void re(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));re(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),re(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const s=t.slice(1);for(let t=0;t<e.length;++t)ka(e[t],s,n.concat(t))}function Ia(e,t,n,s){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${s}' must be ${e} tensor, but got ${t} tensor`)}}function Na(e,t,n,s="numeric"){if(e instanceof Kr)return Ia(s,e.dtype,t,n),e;let r=Re(e);if("string"!==r&&["bool","int32","float32"].indexOf(s)>=0&&(r=s),Ia(s,r,t,n),null==e||!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const s=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${s}'`)}const a=va(e,r);Se(e)||Array.isArray(e)||(e=[e]);const i="string"!==r?Rr(e,r):oe(e,[],!0);return fa.makeTensor(i,a,r)}function Sa(e,t,n,s="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,r)=>Na(e,`${t}[${r}]`,n,s)))}wa.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),wa.registerFlag("IS_BROWSER",(()=>xa())),wa.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),wa.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),wa.registerFlag("PROD",(()=>!1)),wa.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>wa.getBool("DEBUG"))),wa.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),wa.registerFlag("IS_TEST",(()=>!1)),wa.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),wa.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Ta="__op";function Ca(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const s=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ta;const r=(...e)=>{fa.startScope(n);try{const t=s(...e);return Ve(t)&&console.error("Cannot return a Promise inside of tidy."),fa.endScope(t),t}catch(e){throw fa.endScope(null),e}};return Object.defineProperty(r,"name",{value:n,configurable:!0}),r}const $a=Ca({complex_:function(e,t){const n=Na(e,"real","complex"),s=Na(t,"imag","complex");ae(n.shape,s.shape,`real and imag shapes, ${n.shape} and ${s.shape}, must match in call to tf.complex().`);const r={real:n,imag:s};return fa.runKernel(It,r)}});function Ea(e,t,n,s){if(null==s&&(s=Re(e)),"complex64"===s)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Se(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Be(t);const e=le(t),s=le(n);re(e===s,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${s}`));for(let e=0;e<n.length;++e){const s=n[e],r=e!==n.length-1||s!==le(t.slice(e));re(n[e]===t[e]||!r,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Se(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==s?Rr(e,s):oe(e,[],!0),fa.makeTensor(e,t,s)}function Aa(e,t,n){return Ea(e,t,va(e,n),n)}const Ra={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function Fa(e,t){const n=[],s=[],r=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<r.length;++a){const i=r[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const l={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,s=new Uint8Array(n);let r=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);s.set(a,r),r+=4,s.set(n,r),r+=n.length}e(s)}));s.push(e)}else s.push(o.data());null!=t&&(l.group=t),n.push(l)}return{data:_a(await Promise.all(s)),specs:n}}function Da(e,t){const n={};let s,r=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,l=le(o);let u;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Ra[n.dtype],c=e.slice(r,r+l*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){u=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===s&&(s=Ua()),u=s(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);u=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];u[e]=Math.round(t*n.scale+n.min)}}r+=l*o}else if("string"===i){const t=le(a.shape);u=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(r,r+4))[0];r+=4;const n=new Uint8Array(e.slice(r,r+t));u.push(n),r+=t}}else{const s=Ra[i],a=e.slice(r,r+l*s);if("float32"===i)u=new Float32Array(a);else if("int32"===i)u=new Int32Array(a);else if("bool"===i)u=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{u=new Float32Array(a);const e=new Float32Array(u.length/2),s=new Float32Array(u.length/2);for(let t=0;t<e.length;t++)e[t]=u[2*t],s[t]=u[2*t+1];const r=Aa(e,o,"float32"),i=Aa(s,o,"float32");n[t]=$a(r,i),r.dispose(),i.dispose()}}r+=l*s}"complex64"!==i&&(n[t]=Aa(u,o,i))}return n}function _a(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const s=new Uint8Array(t);let r=0;return n.forEach((e=>{s.set(new Uint8Array(e.buffer),r),r+=e.byteLength})),s.buffer}const Oa="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ma(e){return Oa?Buffer.byteLength(e):new Blob([e]).size}function La(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let s=0;return e.forEach((e=>{n.set(new Uint8Array(e),s),s+=e.byteLength})),n.buffer}function za(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function Pa(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function Ba(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[s,r]=await t(e.weightsManifest);n.weightSpecs=s,n.weightData=r}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Wa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ma(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ma(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ua(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return s=>{const r=new ArrayBuffer(4*s.length),a=new Uint32Array(r);for(let r=0;r<s.length;r++){const i=s[r],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[r]=o}return new Float32Array(r)}}class Va{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Va.instance&&(Va.instance=new Va),Va.instance}static registerSaveRouter(e){Va.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Va.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Va.getHandlers(e,"save")}static getLoadHandlers(e,t){return Va.getHandlers(e,"load",t)}static getHandlers(e,t,n){const s=[];return("load"===t?Va.getInstance().loadRouters:Va.getInstance().saveRouters).forEach((t=>{const r=t(e,n);null!==r&&s.push(r)})),s}}const Ga=e=>Va.registerSaveRouter(e),Ha=e=>Va.registerLoadRouter(e),ja=e=>Va.getSaveHandlers(e),qa=(e,t)=>Va.getLoadHandlers(e,t),Ka="tensorflowjs",Xa="models_store",Ya="model_info_store";function Za(){if(!je().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Ja(e){const t=e.result;t.createObjectStore(Xa,{keyPath:"modelPath"}),t.createObjectStore(Ya,{keyPath:"modelPath"})}class Qa{constructor(e){if(this.indexedDB=Za(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const s=this.indexedDB.open(Ka,1);s.onupgradeneeded=()=>Ja(s),s.onsuccess=()=>{const r=s.result;if(null==t){const t=r.transaction(Xa,"readonly"),s=t.objectStore(Xa).get(this.modelPath);s.onsuccess=()=>{if(null==s.result)return r.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(s.result.modelArtifacts)},s.onerror=e=>(r.close(),n(s.error)),t.oncomplete=()=>r.close()}else{const s=Wa(t),a=r.transaction(Ya,"readwrite");let i=a.objectStore(Ya);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:s});let l;o.onsuccess=()=>{l=r.transaction(Xa,"readwrite");const o=l.objectStore(Xa).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:s});o.onsuccess=()=>e({modelArtifactsInfo:s}),o.onerror=e=>{i=a.objectStore(Ya);const t=i.delete(this.modelPath);t.onsuccess=()=>(r.close(),n(o.error)),t.onerror=e=>(r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}}},s.onerror=e=>n(s.error)}))}}Qa.URL_SCHEME="indexeddb://";const ei=e=>{return je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Qa.URL_SCHEME)?(t=e.slice(Qa.URL_SCHEME.length),new Qa(t)):null;var t};Va.registerSaveRouter(ei),Va.registerLoadRouter(ei);class ti{constructor(){this.indexedDB=Za()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(Ka,1);n.onupgradeneeded=()=>Ja(n),n.onsuccess=()=>{const s=n.result,r=s.transaction(Ya,"readonly"),a=r.objectStore(Ya).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(s.close(),t(a.error)),r.oncomplete=()=>s.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Qa.URL_SCHEME)?t.slice(Qa.URL_SCHEME.length):t,new Promise(((t,n)=>{const s=this.indexedDB.open(Ka,1);s.onupgradeneeded=()=>Ja(s),s.onsuccess=()=>{const r=s.result,a=r.transaction(Ya,"readwrite"),i=a.objectStore(Ya),o=i.get(e);let l;o.onsuccess=()=>{if(null==o.result)return r.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const s=i.delete(e),a=()=>{l=r.transaction(Xa,"readwrite");const s=l.objectStore(Xa).delete(e);s.onsuccess=()=>t(o.result.modelArtifactsInfo),s.onerror=e=>n(o.error)};s.onsuccess=a,s.onerror=e=>(a(),r.close(),n(o.error))}},o.onerror=e=>(r.close(),n(o.error)),a.oncomplete=()=>{null==l?r.close():l.oncomplete=()=>r.close()}},s.onerror=e=>n(s.error)}))}}const ni="/",si="tensorflowjs_models",ri="info",ai="model_topology",ii="weight_specs",oi="weight_data",li="model_metadata";function ui(e){return{info:[si,e,ri].join(ni),topology:[si,e,ai].join(ni),weightSpecs:[si,e,ii].join(ni),weightData:[si,e,oi].join(ni),modelMetadata:[si,e,li].join(ni)}}function ci(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function hi(e){const t=e.split(ni);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ni)}class pi{constructor(e){if(!je().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ui(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),s=Wa(e);try{this.LS.setItem(this.keys.info,JSON.stringify(s)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(Oa)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,s=t.length;e<s;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const r={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(r)),{modelArtifactsInfo:s}}catch(e){throw ci(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${s.modelTopologyBytes}, weightSpecsBytes=${s.weightSpecsBytes}, weightDataBytes=${s.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const s=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==s)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=s;const r=this.LS.getItem(this.keys.modelMetadata);if(null!=r){const e=JSON.parse(r);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(Oa){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}pi.URL_SCHEME="localstorage://";const di=e=>{return je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(pi.URL_SCHEME)?(t=e.slice(pi.URL_SCHEME.length),new pi(t)):null;var t};Va.registerSaveRouter(di),Va.registerLoadRouter(di);class fi{constructor(){re(je().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),re("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=si+ni,n=ni+ri;for(let s=0;s<this.LS.length;++s){const r=this.LS.key(s);r.startsWith(t)&&r.endsWith(n)&&(e[hi(r)]=JSON.parse(this.LS.getItem(r)))}return e}async removeModel(e){var t;const n=ui(e=(t=e).startsWith(pi.URL_SCHEME)?t.slice(pi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const s=JSON.parse(this.LS.getItem(n.info));return ci(n),s}}const mi="://";class gi{constructor(){this.managers={}}static getInstance(){return null==gi.instance&&(gi.instance=new gi),gi.instance}static registerManager(e,t){re(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(mi)&&(e=e.slice(0,e.indexOf(mi))),re(e.length>0,(()=>"scheme must not be an empty string."));const n=gi.getInstance();re(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function yi(e){if(-1===e.indexOf(mi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${gi.getSchemes().join(",")}`);return{scheme:e.split(mi)[0],path:e.split(mi)[1]}}async function bi(e,t,n=!1){re(e!==t,(()=>`Old path and new path are the same: '${e}'`));const s=Va.getLoadHandlers(e);re(s.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),re(s.length<2,(()=>`Copying failed because more than one (${s.length}) load handlers for source URL ${e}.`));const r=s[0],a=Va.getSaveHandlers(t);re(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),re(a.length<2,(()=>`Copying failed because more than one (${s.length}) save handlers for destination URL ${t}.`));const i=a[0],o=yi(e).scheme,l=yi(e).path,u=o===yi(e).scheme,c=await r.load();n&&u&&await gi.getManager(o).removeModel(l);const h=await i.save(c);return n&&!u&&await gi.getManager(o).removeModel(l),h.modelArtifactsInfo}async function xi(){const e=gi.getSchemes(),t={};for(const n of e){const e=await gi.getManager(n).listModels();for(const s in e)t[n+mi+s]=e[s]}return t}async function wi(e){const t=yi(e);return gi.getManager(t.scheme).removeModel(t.path)}async function vi(e,t){return bi(e,t,!1)}async function ki(e,t){return bi(e,t,!0)}class Ii{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(je().get("IS_BROWSER")){je().setPlatform("browser",new Ii);try{gi.registerManager(pi.URL_SCHEME,new fi)}catch(e){}try{gi.registerManager(Qa.URL_SCHEME,new ti)}catch(e){}}let Ni;function Si(e,t="float32",n){return t=t||"float32",Be(e),new Gr(e,t,n)}je().get("IS_NODE")&&je().setPlatform("node",new class{constructor(){this.util=r(758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=je().global.fetch?je().global.fetch(e,t):(null==Ni&&(Ni=r(352)),Ni(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ti=Ca({cast_:function(e,t){const n=Na(e,"x","cast");if(!Ie(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const s={x:n},r={dtype:t};return fa.runKernel(wt,s,r)}}),Ci=Ca({clone_:function(e){const t={x:Na(e,"x","clone","string_or_numeric")};return fa.runKernel(hn,t)}});function $i(e,t=!1){console.log(e.toString(t))}function Ei(e){return new Promise((e=>setTimeout(e))).then(e)}da(),jr={buffer:Si,cast:Ti,clone:Ci,print:$i};class Ai{constructor(e){if(!je().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ai.URL_SCHEME)&&(e=e.slice(Ai.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=Pa(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),s=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),r=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(r.download=this.modelJsonFileName,r.href=s,await Ei((()=>r.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Ei((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Wa(e)}}}}Ai.URL_SCHEME="downloads://";class Ri{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const s=JSON.parse(n.target.result),r=s.modelTopology;if(null==r)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==s.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:r});const a=Ba(s,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const s of e)t.push(...s.weights),n.push(...s.paths);const s=this.checkManifestAndWeightFiles(e),r=n.map((e=>this.loadWeightsFile(e,s[e])));return Promise.all(r).then((e=>[t,La(e)]))}loadWeightsFile(e,t){return new Promise(((n,s)=>{const r=new FileReader;r.onload=e=>{const t=e.target.result;n(t)},r.onerror=t=>s(`Failed to weights data from file of path '${e}'.`),r.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>za(e.name))),s={};for(const r of e)r.paths.forEach((e=>{const r=za(e);if(-1!==t.indexOf(r))throw new Error(`Duplicate file basename found in weights manifest: '${r}'`);if(t.push(r),-1===n.indexOf(r))throw new Error(`Weight file with basename '${r}' is not provided.`);s[e]=this.weightsFiles[n.indexOf(r)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return s}}function Fi(e){return new Ri(e)}function Di(e,t,n,s){!function(e){re(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){re(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),re(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),re(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,s=null==s?1:s);let r=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++r/e.length*(s-n);return t(i),a})),a))))}async function _i(e,t){null==t&&(t={});const n=null==t.fetchFunc?je().platform.fetch:t.fetchFunc,s=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),r=(null==t.onProgress?await Promise.all(s):await Di(s,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(r):await Di(r,t.onProgress,.5,1)}async function Oi(e,t="",n,s){return Mi((e=>_i(e,{requestInit:s})))(e,t,n)}function Mi(e){return async(t,n="",s)=>{const r=t.map((()=>!1)),a={},i=null!=s?s.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const l="quantization"in e?e.quantization.dtype:e.dtype,u=Ra[l]*le(e.shape),c=()=>{r[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:u})};null!=s?s.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=u}))})),!i.every((e=>e))){const e=s.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const l=r.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),u=[];l.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;u.push(t)}))}));const c=await e(u),h={};let p=0;return l.forEach((e=>{const n=t[e].paths.length;let s=0;for(let e=0;e<n;e++)s+=c[p+e].byteLength;const r=new ArrayBuffer(s),i=new Uint8Array(r);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=Da(r.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}Va.registerSaveRouter((e=>je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ai.URL_SCHEME)?function(e="model"){return new Ai(e)}(e.slice(Ai.URL_SCHEME.length)):null));class Li{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(re("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=je().platform.fetch,re(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&re(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=Pa(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const s=await this.fetch(this.path,t);if(s.ok)return{modelArtifactsInfo:Wa(e),responses:[s]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${s.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,s=t.weightsManifest;if(null==n&&null==s)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return Ba(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,s]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),r=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(r+e+s);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,La(await _i(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function zi(e){return null!=e.match(Li.URL_SCHEME_REGEX)}Li.URL_SCHEME_REGEX=/^https?:\/\//;const Pi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>zi(e))):zi(e),n)return Bi(e,t)}return null};function Bi(e,t){return new Li(e,t)}function Wi(e,t){return Bi(e,t)}Va.registerSaveRouter(Pi),Va.registerLoadRouter(Pi);class Ui{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Vi{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Gi(e,t,n,s){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ui(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ui({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ui({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:s}))}function Hi(e){return new Vi(e)}const ji=Ca({matMul_:function(e,t,n=!1,s=!1){let r=Na(e,"a","matMul"),a=Na(t,"b","matMul");[r,a]=aa(r,a);const i={a:r,b:a},o={transposeA:n,transposeB:s};return fa.runKernel(mt,i,o)}}),qi=Ca({oneHot_:function(e,t,n=1,s=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const r={indices:Na(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:s};return fa.runKernel(Xn,r,a)}}),Ki=Ca({transpose_:function(e,t){const n=Na(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{re(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const s={x:n},r={perm:t};return fa.runKernel(js,s,r)}}),Xi=Ca({confusionMatrix_:function(e,t,n){const s=Na(e,"labels","confusionMatrix"),r=Na(t,"predictions","confusionMatrix");re(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),re(1===s.rank,(()=>`Expected the rank of labels to be 1, but got ${s.rank}`)),re(1===r.rank,(()=>`Expected the rank of predictions to be 1, but got ${r.rank}`)),re(s.shape[0]===r.shape[0],(()=>`Mismatch in the number of examples: ${s.shape[0]} vs. ${r.shape[0]}. Labels and predictions should have the same number of elements.`)),re(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=qi(Ti(s,"int32"),n),i=qi(Ti(r,"int32"),n),o=Ki(a),l=ji(o,i);return Ti(l,"int32")}});function Yi(e,t){const n=e.length,s=[];for(let r=0;r<n;r++){const a=n-1-r,i=e[a]||1;(t[t.length-1-r]||1)>1&&1===i&&s.unshift(a)}return s}function Zi(e,t){const n=[];for(let s=0;s<t.length;s++){const r=e[e.length-s-1],a=t.length-s-1,i=t[a];(null==r||1===r&&i>1)&&n.unshift(a)}return n}function Ji(e,t){const n=[],s=Math.max(e.length,t.length);for(let r=0;r<s;r++){let s=e[e.length-r-1];null==s&&(s=1);let a=t[t.length-r-1];if(null==a&&(a=1),1===s)n.unshift(a);else if(1===a)n.unshift(s);else{if(s!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(s)}}return n}function Qi(e,t,n){if(ie(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const s=va(e,n);if(3!==s.length&&1!==s.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Ea(e,t,s,n)}let eo;function to(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,s=!1,r=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)s=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)r=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(r){const t=2;if(r&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=or(Js,fa.backendName)){const n={pixels:e},s={numChannels:t};return fa.runKernel(Js,n,s)}const[l,u]=r?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,l,u).data;else if(s||n)c=e.data;else if(a||r||o){if(null==eo)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");eo=new OffscreenCanvas(1,1).getContext("2d")}else eo=document.createElement("canvas").getContext("2d");eo.canvas.width=l,eo.canvas.height=u,eo.drawImage(e,0,0,l,u),c=eo.getImageData(0,0,l,u).data}if(4===t)h=new Int32Array(c);else{const e=l*u;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Qi(h,[u,l,t],"int32")}async function no(e,t=3){let n=null;if(je().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return to(n,t)}async function so(e,t){let n=Na(e,"img","toPixels");if(!(e instanceof Kr)){const e=n;n=Ti(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[s,r]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,l=new Uint8ClampedArray(r*s*4);for(let e=0;e<s*r;++e){const t=[0,0,0,255];for(let s=0;s<a;s++){const r=i[e*a+s];if("float32"===n.dtype){if(r<0||r>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${r}.`)}else if("int32"===n.dtype&&(r<0||r>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${r}.`);1===a?(t[0]=r*o,t[1]=r*o,t[2]=r*o):t[s]=r*o}const s=4*e;l[s+0]=Math.round(t[0]),l[s+1]=Math.round(t[1]),l[s+2]=Math.round(t[2]),l[s+3]=Math.round(t[3])}if(null!=t){t.width=r,t.height=s;const e=t.getContext("2d"),n=new ImageData(l,r,s);e.putImageData(n,0,0)}return n!==e&&n.dispose(),l}const ro=Ca({fromPixels_:to});function ao(e,t){const n=e.shape.length,s=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(s<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${s}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[s-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[s-1]} vs. ${n}`);if(0===le(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const r=t.shape,a=r[r.length-1];let i=1;for(let e=0;e<r.length-1;++e)i*=r[e];const o=e.shape,l=r.slice();l.pop();let u=1;for(let e=a;e<n;++e)u*=o[e],l.push(o[e]);const c=[..._e(e.shape).map((e=>e/u)),1].slice(0,a);return[l,i,u,c]}function io(e,t,n){const s=t.rank>1?t.shape[t.rank-1]:1,r=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${s}, and batchDim: ${r}.`;if(n.rank<r)throw new Error(a+` update.rank < ${r}. `);if(e.length<s+(n.rank-r))throw new Error(a+` Output shape length < ${s+(n.rank-r)}`);if(n.rank!==r+e.length-s)throw new Error(a+" update.rank != "+(r+e.length-s));for(let e=0;e<r;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-r;++t)if(n.shape[t+r]!==e[t+s])throw new Error(a+` updates.shape[${t+r}] (${n.shape[t+r]}) != shape[${t+r}] (${e[t+r]})`)}function oo(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}io(n,t,e)}function lo(e,t,n){const s=t.shape.length,r=s>1?t.shape[s-1]:1,a=n.length;let i=1;for(let e=r;e<a;++e)i*=n[e];const o=r<1?1:r;return{sliceRank:r,numUpdates:le(t.shape)/o,sliceSize:i,strides:[..._e(n.slice(0,r)),1],outputSize:le(n)}}function uo(e,t,n){const s=e.shape.length;re(s===t.length,(()=>`Error in slice${s}D: Length of begin ${t} must match the rank of the array (${s}).`)),re(s===n.length,(()=>`Error in slice${s}D: Length of size ${n} must match the rank of the array (${s}).`));for(let r=0;r<s;++r)re(t[r]+n[r]<=e.shape[r],(()=>`Error in slice${s}D: begin[${r}] + size[${r}] (${t[r]+n[r]}) would overflow input.shape[${r}] (${e.shape[r]})`))}function co(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function ho(e,t,n){const s=[];for(let r=0;r<e.length;r++)s[r]=Math.ceil((t[r]-e[r])/n[r]);return s}function po(e,t,n,s){const r=[...e];for(let e=r.length;e<s.length;e++)r.push(1);for(let e=0;e<n;e++)0===e?r[t]=1:(r.splice(t,0,1),r.pop());return r}function fo(e,t,n){return n<=e?n:n-(t-1)}function mo(e,t){const n=[];for(let s=0;s<e;s++)n.push(t+s);return n}function go(e,t,n,s,r,a,i,o,l){const u=e.length;let c=new Array(u),h=new Array(u),p=new Array(u);if(t.length&&n>0){const l=t[0],u=n+1;c=yo(i,l,u,s,e),h=bo(o,l,u,r,e),p=po(a,l,u,e)}else for(let t=0;t<u;t++)c[t]=wo(i,s,a,e,t,l),h[t]=vo(o,r,a,e,t,l),p[t]=xo(a,t,l);return{begin:c,end:h,strides:p}}function yo(e,t,n,s,r){const a=[...r],i=mo(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=0;else{const i=fo(t,n,r);let o=s[i];e&1<<i&&(o=0),a[r]=o}return a}function bo(e,t,n,s,r){const a=[...r],i=mo(n,t);for(let r=0;r<a.length;r++)if(i.indexOf(r)>-1)a[r]=Number.MAX_SAFE_INTEGER;else{const i=fo(t,n,r);let o=s[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[r]=o}for(let e=0;e<a.length;e++){const t=r[e];a[e]<0&&(a[e]+=t),a[e]=J(0,a[e],r[e])}return a}function xo(e,t,n){let s=e[t];return(n&1<<t||null==s)&&(s=1),s}function wo(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=J(0,i,l-1),i}function vo(e,t,n,s,r,a){let i=t[r];const o=n[r]||1;(e&1<<r||a&1<<r||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const l=s[r];return i<0&&(i+=l),i=o>0?J(0,i,l):J(-1,i,l-1),i}function ko(e,t,n){let s=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){s=e;break}for(let r=s+1;r<n.length;r++)if(t[r]>0||n[r]!==e[r])return!1;return!0}function Io(e,t){let n=e.length>0?e[e.length-1]:1;for(let s=0;s<e.length-1;s++)n+=e[s]*t[s];return n}function No(e,t,n){let s;const r=e.shape.length;let a;return s="number"==typeof t?[t,...new Array(r-1).fill(0)]:t.length<r?t.concat(new Array(r-t.length).fill(0)):t.slice(),s.forEach((e=>{re(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(r).fill(-1):"number"==typeof n?[n,...new Array(r-1).fill(-1)]:n.length<r?n.concat(new Array(r-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(re(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-s[n]))),[s,a]}function So(e,t,n,s,r,a,i,o,l){let u;if(null==s?(u=new Array(t.length),u.fill(1)):u=s,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:u.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:u.slice(),beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let s=0;s<e.dims;s++)if(1<<s&e.ellipsisMask){const r=Math.min(t.dims-(e.dims-s)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<r;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=s}else if(1<<s&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[s]),null!=e.end&&(t.end[n]=e.end[s]),t.strides[n]=e.strides[s],e.beginMask&1<<s&&(t.beginMask|=1<<n),e.endMask&1<<s&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<s?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(s)),t.inputShapeGatherIndicesSparse[n]=s,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),s=e[t];if(-1===s){g.push(n?1:-1);continue}const r=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?s:s-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?s+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=s)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=To(p.begin[t],0,p.strides[t],s,r,a),p.end[t]=To(p.end[t],1,p.strides[t],s,r,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===s;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,l=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],l=!0):n?(o=1,l=!0):i&&s>=0&&(o=p.strides[t]<0?-s:s,l=!0),l){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function To(e,t,n,s,r,a){if(r[t])return n>0?a[t]:a[t+1&1];{const t=e<0?s+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class Co{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class $o{constructor(){this.classNameMap={}}static getMap(){return null==$o.instance&&($o.instance=new $o),$o.instance}static register(e){$o.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function Eo(e){re(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),re("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),re(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),$o.register(e)}const Ao=.1;function Ro(e,t,n){return null==n&&(n=Fo()),Do(e,t,((e,t)=>Lo(e,t,n)))}function Fo(){return 32===fa.backend.floatPrecision()?.001:Ao}function Do(e,t,n){let s=!0;if((Se(e)||Se(t))&&(s=!1),Se(e)&&Se(t)&&(s=!0),s){const n=e.constructor.name,s=t.constructor.name;if(n!==s)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${s}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=va(e),s=va(t);if(!ce(n,s))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${s}]`)}const r=Se(e)?e:oe(e),a=Se(t)?t:oe(t);if(r.length!==a.length)throw new Error(`Arrays have different lengths actual: ${r.length} vs expected: ${a.length}.\nActual:   ${r}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=r[e],s=a[e];if(!n(t,s))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${s}.\nActual:   ${r}.\nExpected: ${a}.`)}}function _o(e,t){e().then((()=>t.fail()),(()=>t()))}function Oo(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return $e(e)||$e(e[0])||$e(t)||$e(t[0])?Do(e,n,((e,t)=>e==t)):Do(e,t,((e,t)=>Lo(e,t,0)))}function Mo(e,t,n){if(null==n&&(n=Fo()),!Lo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Lo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function zo(e,t,n){for(let s=0;s<e.length;s++)if(e[s]<t||e[s]>n)throw new Error(`Value out of range:${e[s]} low: ${t}, high: ${n}`)}function Po(e,t){const n=new Float32Array(e),s=new Float32Array(t);if(n.length!==s.length)throw new Error(`Expected ArrayBuffer to be of length ${s.length}, but it was ${n.length}`);for(let e=0;e<s.length;e++)if(n[e]!==s[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${s[e]} but got ${n[e]} instead`)}function Bo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Bo(n):e[t]=_r(n)}return e}const Wo="3.13.0";function Uo(){je().set("PROD",!0)}function Vo(){je().set("DEBUG",!0)}function Go(){je().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Ho(e){je().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function jo(){fa.disposeVariables()}function qo(){return fa}function Ko(){return fa.memory()}function Xo(e){return fa.profile(e)}function Yo(e,t){return fa.tidy(e,t)}function Zo(e){la(e).forEach((e=>e.dispose()))}function Jo(e){return fa.keep(e)}function Qo(e){return fa.time(e)}function el(e){return fa.setBackend(e)}function tl(){return fa.ready()}function nl(){return fa.backendName}function sl(e){fa.removeBackend(e)}function rl(e){return fa.findBackend(e)}function al(e){return fa.findBackendFactory(e)}function il(e,t,n=1){return fa.registerBackend(e,t,n)}function ol(){return fa.backend}function ll(e,t){je().setPlatform(e,t)}qr=Ho;const ul=Ca({add_:function(e,t){let n=Na(e,"a","add"),s=Na(t,"b","add");[n,s]=aa(n,s);const r={a:n,b:s};return fa.runKernel(et,r)}}),cl=Ca({floorDiv_:function(e,t){let n=Na(e,"a","floorDiv"),s=Na(t,"b","floorDiv");[n,s]=aa(n,s);const r={a:n,b:s};return fa.runKernel(rn,r)}}),hl=Ca({div_:function(e,t){let n=Na(e,"a","div"),s=Na(t,"b","div");if([n,s]=aa(n,s),"int32"===n.dtype&&"int32"===s.dtype)return cl(n,s);const r={a:n,b:s};return fa.runKernel(Ht,r,{})}}),pl=Ca({mul_:function(e,t){let n=Na(e,"a","mul"),s=Na(t,"b","mul");[n,s]=aa(n,s);const r={a:n,b:s};return fa.runKernel(Un,r)}}),dl=Ca({sqrt_:function(e){const t={x:Na(e,"x","sqrt","float32")};return fa.runKernel(Ns,t)}}),fl=Ca({square_:function(e){const t=Na(e,"x","square");return fa.runKernel("Square",{x:t},{})}}),ml=Ca({zerosLike_:function(e){const t={x:Na(e,"x","zerosLike")};return fa.runKernel(Ys,t)}});function gl(e){return re(Fe(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const s=Na(t,"x","tf.grad","string_or_numeric"),r=null!=n?Na(n,"dy","tf.grad"):null;return fa.tidy((()=>{const{value:t,grads:n}=fa.gradients((()=>e(s)),[s],r);return null!=r&&ae(t.shape,r.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),kl(n),n[0]}))}}function yl(e){return re(Fe(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{re(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const s=Sa(t,"args","tf.grads","string_or_numeric"),r=null!=n?Na(n,"dy","tf.grads"):null;return fa.tidy((()=>{const{value:t,grads:n}=fa.gradients((()=>e(...s)),s,r);return null!=r&&ae(t.shape,r.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),kl(n),n}))}}function bl(e){return re(Fe(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{re(t instanceof Kr,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),re(null==n||n instanceof Kr,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:s,value:r}=fa.gradients((()=>e(t)),[t],n);return kl(s),{grad:s[0],value:r}}}function xl(e){return re(Fe(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{re(Array.isArray(t)&&t.every((e=>e instanceof Kr)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),re(null==n||n instanceof Kr,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const s=fa.gradients((()=>e(...t)),t,n);return null!=n&&ae(s.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),kl(s.grads),s}}function wl(e,t){re(Fe(e),(()=>"The f passed in variableGrads(f) must be a function")),re(null==t||Array.isArray(t)&&t.every((e=>e instanceof Yr)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in fa.registeredVariables)t.push(fa.registeredVariables[e])}const s=n?t.filter((e=>!e.trainable)):null,r=t.length;t=t.filter((e=>e.trainable)),re(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${r} variables is trainable.`));const{value:a,grads:i}=fa.gradients(e,t,null,!0);re(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),re(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=s&&s.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function vl(e){return fa.customGrad(e)}function kl(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function Il(e,t){if((Se(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Se(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Ea(e,[],[],t)}class Nl extends Co{minimize(e,t=!1,n){const{value:s,grads:r}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:r[e.name]})));this.applyGradients(e)}else this.applyGradients(r);return Zo(r),t?s:(s.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return wl(e,t)}dispose(){null!=this.iterations_&&Zo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:Il(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Nl,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Sl extends Nl{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=fa.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=fa.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Yo((()=>ml(s).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Yo((()=>ml(s).variable(!1)))});const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Yo((()=>{const e=ul(pl(a,this.rho),pl(fl(r),1-this.rho)),t=pl(hl(dl(ul(i,this.epsilon)),dl(ul(a,this.epsilon))),r),n=ul(pl(i,this.rho),pl(fl(t),1-this.rho));a.assign(e),i.assign(n);const o=ul(pl(t,-this.learningRate),s);s.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Zo(this.accumulatedGrads.map((e=>e.variable))),Zo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Tl(e,t,n){const s={shape:e,value:t,dtype:n};return fa.runKernel(tn,{},s)}Sl.className="Adadelta",Eo(Sl);class Cl extends Nl{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=fa.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Yo((()=>Tl(s.shape,this.initialAccumulatorValue).variable(e)))}}const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const a=this.accumulatedGrads[n].variable;Yo((()=>{const e=ul(a,fl(r));a.assign(e);const t=ul(pl(hl(r,dl(ul(e,fa.backend.epsilon()))),-this.learningRate),s);s.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Zo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Cl.className="Adagrad",Eo(Cl);const $l=Ca({pow_:function(e,t){let n=Na(e,"base","pow"),s=Na(t,"exp","pow");[n,s]=aa(n,s);const r={a:n,b:s};return fa.runKernel(Qn,r)}}),El=Ca({sub_:function(e,t){let n=Na(e,"a","sub"),s=Na(t,"b","sub");[n,s]=aa(n,s);const r={a:n,b:s};return fa.runKernel(Bs,r)}});class Al extends Nl{constructor(e,t,n,s=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Yo((()=>{this.accBeta1=Il(t).variable(),this.accBeta2=Il(n).variable()})),null==s&&(this.epsilon=fa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yo((()=>{const n=El(1,this.accBeta1),s=El(1,this.accBeta2);t.forEach(((t,r)=>{const a=fa.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:Yo((()=>ml(a).variable(!1)))}),null==this.accumulatedSecondMoment[r]&&(this.accumulatedSecondMoment[r]={originalName:`${t}/v`,variable:Yo((()=>ml(a).variable(!1)))});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedSecondMoment[r].variable,u=ul(pl(o,this.beta1),pl(i,1-this.beta1)),c=ul(pl(l,this.beta2),pl(fl(i),1-this.beta2)),h=hl(u,n),p=hl(c,s);o.assign(u),l.assign(c);const d=ul(pl(hl(h,ul(dl(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(pl(this.accBeta1,this.beta1)),this.accBeta2.assign(pl(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Zo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Zo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Yo((()=>{this.accBeta1.assign($l(this.beta1,this.iterations_+1)),this.accBeta2.assign($l(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Al.className="Adam",Eo(Al);const Rl=Ca({abs_:function(e){const t=Na(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return fa.runKernel(Nt,e)}{const e={x:t};return fa.runKernel(Ze,e)}}}),Fl=Ca({maximum_:function(e,t){let n=Na(e,"a","maximum"),s=Na(t,"b","maximum");[n,s]=aa(n,s),"bool"===n.dtype&&(n=Ti(n,"int32"),s=Ti(s,"int32")),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(An,r)}});class Dl extends Nl{constructor(e,t,n,s=null,r=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=s,this.decay=r,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Yo((()=>{this.iteration=Il(0).variable(),this.accBeta1=Il(t).variable()})),null==s&&(this.epsilon=fa.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Yo((()=>{const n=El(1,this.accBeta1),s=hl(-this.learningRate,ul(pl(this.iteration,this.decay),1));t.forEach(((t,r)=>{const a=fa.registeredVariables[t];null==this.accumulatedFirstMoment[r]&&(this.accumulatedFirstMoment[r]={originalName:`${t}/m`,variable:ml(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[r]&&(this.accumulatedWeightedInfNorm[r]={originalName:`${t}/v`,variable:ml(a).variable(!1)});const i=Array.isArray(e)?e[r].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[r].variable,l=this.accumulatedWeightedInfNorm[r].variable,u=ul(pl(o,this.beta1),pl(i,1-this.beta1)),c=pl(l,this.beta2),h=Rl(i),p=Fl(c,h);o.assign(u),l.assign(p);const d=ul(pl(hl(s,n),hl(u,ul(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(ul(this.iteration,1)),this.accBeta1.assign(pl(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Zo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Zo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Dl.className="Adamax",Eo(Dl);class _l extends Nl{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const r=fa.registeredVariables[t];Yo((()=>{const e=ul(pl(this.c,s),r);r.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Jo(Il(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}_l.className="SGD",Eo(_l);class Ol extends _l{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=Il(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=fa.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Yo((()=>ml(s).variable(e)))}}const r=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Yo((()=>{let e;const t=ul(pl(this.m,r),a);e=this.useNesterov?ul(pl(this.c,ul(a,pl(t,this.m))),s):ul(pl(this.c,t),s),r.assign(t),s.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Zo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}Ol.className="Momentum",Eo(Ol);class Ml extends Nl{constructor(e,t=.9,n=0,s=null,r=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=s,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=r,null==s&&(this.epsilon=fa.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const s=fa.registeredVariables[t],r=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Yo((()=>ml(s).variable(r)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Yo((()=>ml(s).variable(r)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Yo((()=>ml(s).variable(r)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Yo((()=>{const e=ul(pl(i,this.decay),pl(fl(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,r=ul(pl(t,this.decay),pl(a,1-this.decay)),l=hl(pl(a,this.learningRate),dl(El(e,ul(fl(r),this.epsilon)))),u=ul(pl(o,this.momentum),l);i.assign(e),t.assign(r),o.assign(u);const c=El(s,u);s.assign(c)}else{const e=ul(pl(i,this.decay),pl(fl(a),1-this.decay)),t=ul(pl(o,this.momentum),hl(pl(a,this.learningRate),dl(ul(e,this.epsilon))));i.assign(e),o.assign(t);const n=El(s,t);s.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Zo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Zo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Zo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Ml.className="RMSProp",Eo(Ml);class Ll{static sgd(e){return new _l(e)}static momentum(e,t,n=!1){return new Ol(e,t,n)}static rmsprop(e,t=.9,n=0,s=null,r=!1){return new Ml(e,t,n,s,r)}static adam(e=.001,t=.9,n=.999,s=null){return new Al(e,t,n,s)}static adadelta(e=.001,t=.95,n=null){return new Sl(e,t,n)}static adamax(e=.002,t=.9,n=.999,s=null,r=0){return new Dl(e,t,n,s,r)}static adagrad(e,t=.1){return new Cl(e,t)}}const zl=Ca({acos_:function(e){const t={x:Na(e,"x","acos")};return fa.runKernel(Je,t)}}),Pl=Ca({acosh_:function(e){const t={x:Na(e,"x","acosh")};return fa.runKernel(Qe,t)}}),Bl=Ca({addN_:function(e){re(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),re(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Na(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!ce(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const s=t;return fa.runKernel(tt,s)}}),Wl=Ca({all_:function(e,t=null,n=!1){const s={x:Na(e,"x","all","bool")},r={axis:t,keepDims:n};return fa.runKernel(nt,s,r)}}),Ul=Ca({any_:function(e,t=null,n=!1){const s={x:Na(e,"x","any","bool")},r={axis:t,keepDims:n};return fa.runKernel(st,s,r)}}),Vl=Ca({argMax_:function(e,t=0){const n={x:Na(e,"x","argMax")},s={axis:t};return fa.runKernel(rt,n,s)}}),Gl=Ca({argMin_:function(e,t=0){const n={x:Na(e,"x","argMin")},s={axis:t};return fa.runKernel(at,n,s)}}),Hl=Ca({asin_:function(e){const t={x:Na(e,"x","asin")};return fa.runKernel(it,t)}}),jl=Ca({asinh_:function(e){const t={x:Na(e,"x","asinh")};return fa.runKernel(ot,t)}}),ql=Ca({atan_:function(e){const t={x:Na(e,"x","atan")};return fa.runKernel(lt,t)}}),Kl=Ca({atan2_:function(e,t){let n=Na(e,"a","atan2"),s=Na(t,"b","atan2");[n,s]=aa(n,s);const r={a:n,b:s};return fa.runKernel(ct,r)}}),Xl=Ca({atanh_:function(e){const t={x:Na(e,"x","atanh")};return fa.runKernel(ut,t)}});function Yl(e,t,n,s,r="NHWC",a){return Ql(e,[...t,e[3]],n,a,s,null,null,lu(r))}function Zl(e,t,n,s,r,a,i="channelsLast"){const[o,l]=nu(t);let u;if("channelsLast"===i)u=[o,l,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);u=[o,l,e[1],e[1]]}return Ql(e,u,n,s,r,a,!1,i)}function Jl(e,t,n,s,r,a,i="NDHWC"){const[o,l,u]=su(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,l,u,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,l,u,e[1],e[1]]}return eu(e,c,n,s,r,!1,h,a)}function Ql(e,t,n,s,r,a,i=!1,o="channelsLast"){let[l,u,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[l,u,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[l,h,u,c]=e}const[p,d,,f]=t,[m,g]=nu(n),[y,b]=nu(s),x=ru(p,y),w=ru(d,b),{padInfo:v,outHeight:k,outWidth:I}=function(e,t,n,s,r,a,i,o,l){let u,c,h;if("number"==typeof e){u={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const r=function(e,t,n,s,r){null==s&&(s=tu(e,t,n));const a=e[1];return[au((e[0]-t+2*s)/n+1,r),au((a-t+2*s)/n+1,r)]}([t,n],a,s,e,o);c=r[0],h=r[1]}else if("same"===e){c=Math.ceil(t/s),h=Math.ceil(n/r);const e=Math.max(0,(c-1)*s+a-t),o=Math.max(0,(h-1)*r+i-n),l=Math.floor(e/2),p=e-l,d=Math.floor(o/2);u={top:l,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)u={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/s),h=Math.ceil((n-i+1)/r);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===l?e[1][0]:e[2][0],d="channelsLast"===l?e[1][1]:e[2][1],f="channelsLast"===l?e[2][0]:e[3][0],m="channelsLast"===l?e[2][1]:e[3][1];u={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=au((t-a+p+d)/s+1,o),h=au((n-i+f+m)/r+1,o)}}return{padInfo:u,outHeight:c,outWidth:h}}(r,u,c,m,g,x,w,a,o),N=i?f*h:f;let S;return"channelsFirst"===o?S=[l,N,k,I]:"channelsLast"===o&&(S=[l,k,I,N]),{batchSize:l,dataFormat:o,inHeight:u,inWidth:c,inChannels:h,outHeight:k,outWidth:I,outChannels:N,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:S,filterShape:t}}function eu(e,t,n,s,r,a=!1,i="channelsLast",o){let[l,u,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[l,u,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[l,p,u,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=su(n),[w,v,k]=su(s),I=ru(d,w),N=ru(f,v),S=ru(m,k),{padInfo:T,outDepth:C,outHeight:$,outWidth:E}=function(e,t,n,s,r,a,i,o,l,u,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,s,r,a){null==r&&(r=tu(e,t,s));const i=e[1],o=e[2];return[au((e[0]-t+2*r)/s+1,a),au((i-t+2*r)/s+1,a),au((o-t+2*r)/s+1,a),1]}([t,n,s,1],o,0,r,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/r),d=Math.ceil(n/a),f=Math.ceil(s/i);const e=(p-1)*r+o-t,c=(d-1)*a+l-n,m=(f-1)*i+u-s,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/r),d=Math.ceil((n-l+1)/a),f=Math.ceil((s-u+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(r,u,c,h,y,b,x,I,N,S,o),A=a?g*p:g;let R;return"channelsFirst"===i?R=[l,A,C,$,E]:"channelsLast"===i&&(R=[l,C,$,E,A]),{batchSize:l,dataFormat:i,inDepth:u,inHeight:c,inWidth:h,inChannels:p,outDepth:C,outHeight:$,outWidth:E,outChannels:A,padInfo:T,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:I,effectiveFilterHeight:N,effectiveFilterWidth:S,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:R,filterShape:t}}function tu(e,t,n,s=1){const r=ru(t,s);return Math.floor((e[0]*(n-1)-n+r)/2)}function nu(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function su(e){return"number"==typeof e?[e,e,e]:e}function ru(e,t){return t<=1?e:e+(e-1)*(t-1)}function au(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function iu(e){const[t,n,s]=nu(e);return 1===t&&1===n&&1===s}function ou(e,t){return iu(e)||iu(t)}function lu(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function uu(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)re(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{re(he(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const cu=Ca({reshape_:function(e,t){const n={x:Na(e,"x","reshape","string_or_numeric")},s={shape:t};return fa.runKernel(is,n,s)}}),hu=Ca({avgPool_:function(e,t,n,s,r){const a=Na(e,"x","avgPool","float32");re(ou(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=cu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),uu("avgPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r};let c=fa.runKernel(ht,l,u);return c=Ti(c,a.dtype),o?cu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),pu=Ca({avgPool3d_:function(e,t,n,s,r,a="NDHWC"){const i=Na(e,"x","avgPool3d","float32");let o=i,l=!1;4===i.rank&&(l=!0,o=cu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),uu("avgPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a};let h=fa.runKernel(dt,u,c);return h=Ti(h,o.dtype),l?cu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),du=Ca({concat_:function(e,t=0){re(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Sa(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Ci(n[0]);const s=n,r={axis:t};return fa.runKernel(St,s,r)}}),fu=Ca({sigmoid_:function(e){const t={x:Na(e,"x","sigmoid","float32")};return fa.runKernel(ks,t)}}),mu=Ca({slice_:function(e,t,n){const s=Na(e,"x","slice","string_or_numeric");if(0===s.rank)throw new Error("Slicing scalar is not possible");const r={x:s},a={begin:t,size:n};return fa.runKernel(bs,r,a)}}),gu=Ca({tanh_:function(e){const t={x:Na(e,"x","tanh","float32")};return fa.runKernel(Us,t)}}),yu=Ca({basicLSTMCell_:function(e,t,n,s,r,a){const i=Na(e,"forgetBias","basicLSTMCell"),o=Na(t,"lstmKernel","basicLSTMCell"),l=Na(n,"lstmBias","basicLSTMCell"),u=Na(s,"data","basicLSTMCell"),c=Na(r,"c","basicLSTMCell"),h=Na(a,"h","basicLSTMCell"),p=du([u,h],1),d=ji(p,o),f=ul(d,l),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=mu(f,[0,0],y),x=mu(f,[0,g],y),w=mu(f,[0,2*g],y),v=mu(f,[0,3*g],y),k=ul(pl(fu(b),gu(x)),pl(c,fu(ul(i,w))));return[k,pl(gu(k),fu(v))]}}),bu=Ca({batchToSpaceND_:function(e,t,n){const s=Na(e,"x","batchToSpaceND"),r=t.reduce(((e,t)=>e*t));re(s.rank>=1+t.length,(()=>`input rank is ${s.rank} but should be > than blockShape.length ${t.length}`)),re(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),re(s.shape[0]%r==0,(()=>`input tensor batch is ${s.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${r}`));const a={x:s},i={blockShape:t,crops:n};return fa.runKernel(gt,a,i)}}),xu=Ca({batchNorm_:function(e,t,n,s,r,a){null==a&&(a=.001);const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),l=Na(n,"variance","batchNorm");let u,c;null!=r&&(u=Na(r,"scale","batchNorm")),null!=s&&(c=Na(s,"offset","batchNorm")),re(o.rank===l.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==u||o.rank===u.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?cu(e,[1,1,1,e.size]):2===e.rank?cu(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?cu(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:u,offset:c,mean:o,variance:l},d={varianceEpsilon:a},f=fa.runKernel(an,p,d);return cu(f,i.shape)}}),wu=Ca({batchNorm2d_:function(e,t,n,s,r,a){const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),l=Na(n,"variance","batchNorm");let u,c;return null!=r&&(u=Na(r,"scale","batchNorm")),null!=s&&(c=Na(s,"offset","batchNorm")),re(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),re(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),re(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=u&&re(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=c&&re(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),xu(i,o,l,c,u,a)}}),vu=Ca({batchNorm3d_:function(e,t,n,s,r,a){const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),l=Na(n,"variance","batchNorm");let u,c;return null!=r&&(u=Na(r,"scale","batchNorm")),null!=s&&(c=Na(s,"offset","batchNorm")),re(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),re(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),re(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=u&&re(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=c&&re(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),xu(i,o,l,c,u,a)}}),ku=Ca({batchNorm4d_:function(e,t,n,s,r,a){const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),l=Na(n,"variance","batchNorm");let u,c;return null!=r&&(u=Na(r,"scale","batchNorm")),null!=s&&(c=Na(s,"offset","batchNorm")),re(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),re(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),re(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=u&&re(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=c&&re(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),xu(i,o,l,c,u,a)}}),Iu=Ca({bincount_:function(e,t,n){const s=Na(e,"x","bincount"),r=Na(t,"weights","bincount");re("int32"===s.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${s.dtype}`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(r.size===s.size||0===r.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${s.shape}, weights shape: ${r.shape}.`));const a={x:s,weights:r},i={size:n};return fa.runKernel(yt,a,i)}}),Nu=Ca({broadcastArgs_:function(e,t){const n=Na(e,"s0","broadcastArgs","int32"),s=Na(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==s.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${s.rank}`);const r={s0:n,s1:s};return fa.runKernel(xt,r)}}),Su=Ca({broadcastTo_:function(e,t){let n=Na(e,"broadcastTo","x");const s=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=cu(n,e)}const r=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(r[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Ci(n);const i={x:n},o={reps:a};return fa.runKernel(Vs,i,o)}}),Tu=Ca({ceil_:function(e){const t={x:Na(e,"x","ceil","float32")};return fa.runKernel(vt,t)}}),Cu=Ca({clipByValue_:function(e,t,n){const s=Na(e,"x","clipByValue");re(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const r={x:s},a={clipValueMin:t,clipValueMax:n};return fa.runKernel(kt,r,a)}}),$u=Ca({concat1d_:function(e){return du(e,0)}}),Eu=Ca({concat2d_:function(e,t){return du(e,t)}}),Au=Ca({concat3d_:function(e,t){return du(e,t)}}),Ru=Ca({concat4d_:function(e,t){return du(e,t)}}),Fu=Ca({conv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Na(e,"x","conv2d","float32"),l=Na(t,"filter","conv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=cu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===u.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${l.rank}.`)),uu("conv2d",s,i);const h="NHWC"===r?u.shape[3]:u.shape[1];re(h===l.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${l.shape[2]}.`)),re(ou(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:u,filter:l},d={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},f=fa.runKernel(Tt,p,d);return c?cu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Du=Ca({conv1d_:function(e,t,n,s,r="NWC",a=1,i){const o=Na(e,"x","conv1d"),l=Na(t,"filter","conv1d");let u=o,c=!1;2===o.rank&&(c=!0,u=cu(o,[1,o.shape[0],o.shape[1]])),re(3===u.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${u.rank}.`)),re(3===l.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${l.rank}.`)),uu("conv1d",s,i),re(u.shape[2]===l.shape[1],(()=>`Error in conv1d: depth of input (${u.shape[2]}) must match input depth for filter ${l.shape[1]}.`)),re(ou(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),re("NWC"===r,(()=>`Error in conv1d: got dataFormat of ${r} but only NWC is currently supported.`));const h=cu(l,[1,l.shape[0],l.shape[1],l.shape[2]]),p=cu(u,[u.shape[0],1,u.shape[1],u.shape[2]]),d=Fu(p,h,[1,n],s,"NHWC",[1,a],i);return cu(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),_u=Ca({conv2DBackpropInput_:function(e,t,n,s,r,a="NHWC",i){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,l=t,u=!1;3===t.rank&&(u=!0,l=cu(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),re(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),re(4===l.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${l.rank}`)),re(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?l.shape[3]:l.shape[1];re(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),re(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),uu("conv2dDerInput",r,i);const p={dy:l,filter:n},d={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,inputShape:o},f=fa.runKernel($t,p,d);return u?cu(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Ou=Ca({conv2dTranspose_:function(e,t,n,s,r,a){const i=Na(e,"x","conv2dTranspose"),o=Na(t,"filter","conv2dTranspose");return _u(n,i,o,s,r,"NHWC",a)}}),Mu=Ca({conv3d_:function(e,t,n,s,r="NDHWC",a=[1,1,1]){const i=Na(e,"x","conv3d"),o=Na(t,"filter","conv3d");let l=i,u=!1;4===i.rank&&(u=!0,l=cu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===l.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${l.rank}.`)),re(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),re(l.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${l.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),re(ou(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),re("NDHWC"===r,(()=>`Error in conv3d: got dataFormat of ${r} but only NDHWC is currently supported.`));const c={x:l,filter:o},h={strides:n,pad:s,dataFormat:r,dilations:a},p=fa.runKernel(Et,c,h);return u?cu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Lu=Ca({conv3DBackpropInput_:function(e,t,n,s,r){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=cu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const l=a[4],u=i.shape[4];re(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),re(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),re(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),re(l===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${l}) must match input depth for filter ${n.shape[3]}.`)),re(u===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${u}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:r,strides:s,inputShape:a},p=fa.runKernel(Rt,c,h);return o?cu(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),zu=Ca({conv3dTranspose_:function(e,t,n,s,r){const a=Na(e,"x","conv3dTranspose"),i=Na(t,"filter","conv3dTranspose");return Lu(n,a,i,s,r)}}),Pu=Ca({cos_:function(e){const t={x:Na(e,"x","cos","float32")};return fa.runKernel(Ft,t)}}),Bu=Ca({cosh_:function(e){const t={x:Na(e,"x","cosh","float32")};return fa.runKernel(Dt,t)}}),Wu=Ca({cumsum_:function(e,t=0,n=!1,s=!1){const r={x:Na(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:s};return fa.runKernel(_t,r,a)}}),Uu=Ca({denseBincount_:function(e,t,n,s=!1){const r=Na(e,"x","denseBincount"),a=Na(t,"weights","denseBincount");re("int32"===r.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${r.dtype}`)),re(r.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${r.rank}.`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(a.size===r.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${r.shape}, weights shape: ${a.shape}.`));const i={x:r,weights:a},o={size:n,binaryOutput:s};return fa.runKernel(Mt,i,o)}}),Vu=Ca({depthToSpace_:function(e,t,n="NHWC"){const s=Na(e,"x","depthToSpace","float32"),r="NHWC"===n?s.shape[1]:s.shape[2],a="NHWC"===n?s.shape[2]:s.shape[3],i="NHWC"===n?s.shape[3]:s.shape[1];re(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),re(r*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${r} and ${t}  for depthToSpace with input shape\n    ${s.shape}`)),re(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${s.shape}`)),re(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${s.shape}`));const o={x:s},l={blockSize:t,dataFormat:n};return fa.runKernel(Lt,o,l)}}),Gu=Ca({depthwiseConv2d_:function(e,t,n,s,r="NHWC",a=[1,1],i){const o=Na(e,"x","depthwiseConv2d","float32"),l=Na(t,"filter","depthwiseConv2d","float32");let u=o,c=!1;3===o.rank&&(c=!0,u=cu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===u.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${l.rank}.`)),re(u.shape[3]===l.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),uu("depthwiseConv2d",s,i);const h={x:u,filter:l},p={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i},d=fa.runKernel(zt,h,p);return c?cu(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Hu=Ca({diag_:function(e){const t={x:Na(e,"x","diag")};return fa.runKernel(Wt,t)}}),ju=Ca({dilation2d_:function(e,t,n,s,r=[1,1],a="NHWC"){const i=Na(e,"x","dilation2d"),o=Na(t,"filter","dilation2d");re(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),re(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),re("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let l=i,u=!1;3===i.rank&&(l=cu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=!0);const c={x:l,filter:o},h={strides:n,pad:s,dilations:r},p=fa.runKernel(Ut,c,h);return u?cu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),qu=Ca({equal_:function(e,t){let n=Na(e,"a","equal","string_or_numeric"),s=Na(t,"b","equal","string_or_numeric");[n,s]=aa(n,s),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(Yt,r)}}),Ku=Ca({where_:function(e,t,n){const s=Na(t,"a","where"),r=Na(n,"b","where"),a=Na(e,"condition","where","bool"),i=Ji(Ji(a.shape,s.shape),r.shape),o={condition:Su(a,i),t:Su(s,i),e:Su(r,i)};return fa.runKernel(gs,o)}}),Xu=Ca({divNoNan_:function(e,t){let n=Na(e,"a","div"),s=Na(t,"b","div");[n,s]=aa(n,s);const r=hl(n,s),a=ml(r),i=qu(s,a);return Ku(i,a,r)}}),Yu=Ca({dot_:function(e,t){const n=Na(e,"t1","dot"),s=Na(t,"t2","dot");re(!(1!==n.rank&&2!==n.rank||1!==s.rank&&2!==s.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${s.rank}.`));const r=1===n.rank?n.size:n.shape[1],a=1===s.rank?s.size:s.shape[0];if(re(r===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${r} and ${a}.`)),1===n.rank&&1===s.rank){const e=cu(n,[1,-1]),t=cu(s,[-1,1]),r=ji(e,t);return cu(r,[])}if(1===n.rank&&2===s.rank){const e=cu(n,[1,-1]),t=cu(s,[s.shape[0],s.shape[1]]),r=ji(e,t);return cu(r,[r.size])}if(2===n.rank&&1===s.rank){const e=cu(s,[-1,1]),t=ji(n,e);return cu(t,[t.size])}{const e=cu(s,[s.shape[0],s.shape[1]]);return ji(n,e)}}}),Zu=Ca({einsum_:function(e,...t){const n=t.map(((e,t)=>Na(e,`tensors${t}`,"einsum"))),s={equation:e};return fa.runKernel(jt,n,s)}}),Ju=Ca({elu_:function(e){const t={x:Na(e,"x","elu","float32")};return fa.runKernel(qt,t)}}),Qu=Ca({erf_:function(e){let t=Na(e,"x","erf");re("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ti(t,"float32"));const n={x:t};return fa.runKernel(Xt,n)}}),ec=Ca({exp_:function(e){const t={x:Na(e,"x","exp")};return fa.runKernel(Zt,t)}}),tc=Ca({expandDims_:function(e,t=0){const n=Na(e,"x","expandDims","string_or_numeric");re(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const s={input:n},r={dim:t};return fa.runKernel(Jt,s,r)}}),nc=Ca({expm1_:function(e){const t={x:Na(e,"x","expm1")};return fa.runKernel(Qt,t)}}),sc=Ca({tile_:function(e,t){const n=Na(e,"x","tile","string_or_numeric");re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const s={x:n},r={reps:t};return fa.runKernel(Vs,s,r)}}),rc=Ca({eye_:function(e,t,n,s="float32"){null==t&&(t=e);const r=Si([e,t],s),a=e<=t?e:t;for(let e=0;e<a;++e)r.set(1,e,e);const i=cu(r.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return sc(tc(i,0),[n[0],1,1]);if(2===n.length)return sc(tc(tc(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return sc(tc(tc(tc(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),ac=Ca({floor_:function(e){const t={x:Na(e,"x","floor","float32")};return fa.runKernel(sn,t)}}),ic=Ca({gather_:function(e,t,n=0,s=0){const r={x:Na(e,"x","gather"),indices:Na(t,"indices","gather","int32")},a={axis:n,batchDims:s};return fa.runKernel(on,r,a)}}),oc=Ca({greater_:function(e,t){let n=Na(e,"a","greater","string_or_numeric"),s=Na(t,"b","greater","string_or_numeric");[n,s]=aa(n,s),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(un,r)}}),lc=Ca({greaterEqual_:function(e,t){let n=Na(e,"a","greaterEqual","string_or_numeric"),s=Na(t,"b","greaterEqual","string_or_numeric");[n,s]=aa(n,s),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(cn,r)}}),uc=Ca({imag_:function(e){const t={input:Na(e,"input","imag")};return fa.runKernel(dn,t)}}),cc=Ca({isFinite_:function(e){const t={x:Na(e,"x","isFinite")};return fa.runKernel(fn,t)}}),hc=Ca({isInf_:function(e){const t={x:Na(e,"x","isInf")};return fa.runKernel(mn,t)}}),pc=Ca({isNaN_:function(e){const t={x:Na(e,"x","isNaN")};return fa.runKernel(gn,t)}}),dc=Ca({leakyRelu_:function(e,t=.2){const n={x:Na(e,"x","leakyRelu")},s={alpha:t};return fa.runKernel(yn,n,s)}}),fc=Ca({less_:function(e,t){let n=Na(e,"a","less","string_or_numeric"),s=Na(t,"b","less","string_or_numeric");[n,s]=aa(n,s),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(bn,r)}}),mc=Ca({lessEqual_:function(e,t){let n=Na(e,"a","lessEqual","string_or_numeric"),s=Na(t,"b","lessEqual","string_or_numeric");[n,s]=aa(n,s),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(xn,r)}});function gc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const s={start:e,stop:t,num:n};return fa.runKernel(wn,{},s)}const yc=Ca({localResponseNormalization_:function(e,t=5,n=1,s=1,r=.5){const a=Na(e,"x","localResponseNormalization");re(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),re(he(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=cu(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const l={x:i},u={depthRadius:t,bias:n,alpha:s,beta:r},c=fa.runKernel(Cn,l,u);return o?cu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),bc=Ca({log_:function(e){const t={x:Na(e,"x","log","float32")};return fa.runKernel(vn,t)}}),xc=Ca({log1p_:function(e){const t={x:Na(e,"x","log1p")};return fa.runKernel(kn,t)}}),wc=Ca({neg_:function(e){const t={x:Na(e,"x","neg")};return fa.runKernel(Vn,t)}}),vc=Ca({softplus_:function(e){const t={x:Na(e,"x","softplus")};return fa.runKernel(Is,t)}}),kc=Ca({logSigmoid_:function(e){const t=Na(e,"x","logSigmoid"),n=vl((e=>({value:wc(vc(wc(e))),gradFunc:t=>pl(t,fu(wc(e)))})));return n(t)}}),Ic=Ca({max_:function(e,t=null,n=!1){const s={x:Na(e,"x","max")},r={reductionIndices:t,keepDims:n};return fa.runKernel(En,s,r)}}),Nc=Ca({sum_:function(e,t=null,n=!1){let s=Na(e,"x","sum");"bool"===s.dtype&&(s=Ti(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return fa.runKernel(Ss,r,a)}}),Sc=Ca({logSoftmax_:function(e,t=-1){const n=Na(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const s=vl(((e,n)=>{const s=Ic(e,t,!0),r=El(e,s),a=El(Ti(r,"float32"),bc(Nc(ec(r),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[s]=n,r=ec(s);return El(e,pl(Nc(e,t,!0),r))}}}));return s(n)}});function Tc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Cc(e,t,n){const s=e.length+t.length,r=[];let a=0,i=0;for(let o=0;o<s;o++)-1===n.indexOf(o)?r.push(e[a++]):r.push(t[i++]);return r}function $c(e,t){const n=[],s=e.length;for(let r=0;r<s;r++)-1===t.indexOf(r)&&n.push(e[r]);return[n,t.map((t=>e[t]))]}function Ec(e,t){return Cc(e,t.map((e=>1)),t)}function Ac(e,t,n){re(Tc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Rc(e,t){if(Tc(e,t))return null;const n=[];for(let s=0;s<t;++s)-1===e.indexOf(s)&&n.push(s);return e.forEach((e=>n.push(e))),n}function Fc(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Dc(e,t){const n=[];for(let s=t-e;s<t;++s)n.push(s);return n}const _c=Ca({logSumExp_:function(e,t=null,n=!1){const s=Na(e,"x","logSumExp"),r=be(t,s.shape),a=Ic(s,r,!0),i=El(s,a),o=ec(i),l=Nc(o,r),u=bc(l),c=ul(cu(a,u.shape),u);if(n){const e=Ec(c.shape,r);return cu(c,e)}return c}}),Oc=Ca({logicalAnd_:function(e,t){const n=Na(e,"a","logicalAnd","bool"),s=Na(t,"b","logicalAnd","bool");Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(In,r)}}),Mc=Ca({logicalNot_:function(e){const t={x:Na(e,"x","logicalNot","bool")};return fa.runKernel(Nn,t)}}),Lc=Ca({logicalOr_:function(e,t){const n=Na(e,"a","logicalOr","bool"),s=Na(t,"b","logicalOr","bool");Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(Sn,r)}}),zc=Ca({logicalXor_:function(e,t){const n=Na(e,"a","logicalXor","bool"),s=Na(t,"b","logicalXor","bool");return Ji(n.shape,s.shape),Oc(Lc(e,t),Mc(Oc(e,t)))}}),Pc=Ca({maxPool_:function(e,t,n,s,r){const a=Na(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=cu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),re(ou(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),uu("maxPool",s,r);const l={x:i},u={filterSize:t,strides:n,pad:s,dimRoundingMode:r},c=fa.runKernel(Rn,l,u);return o?cu(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Bc=Ca({maxPool3d_:function(e,t=[1,1,1],n,s,r,a="NDHWC"){const i=Na(e,"x","maxPool3d");let o=i,l=!1;4===i.rank&&(l=!0,o=cu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),uu("maxPool3d",s,r);const u={x:o},c={filterSize:t,strides:n,pad:s,dimRoundingMode:r,dataFormat:a},h=fa.runKernel(Dn,u,c);return l?cu(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Wc=Ca({maxPoolWithArgmax_:function(e,t,n,s,r=!1){const a={x:Na(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:s,includeBatchInIndex:r},o=fa.runKernel(On,a,i);return{result:o[0],indexes:o[1]}}}),Uc=Ca({mean_:function(e,t=null,n=!1){const s={x:Na(e,"x","mean")},r={axis:t,keepDims:n};return fa.runKernel(Mn,s,r)}});function Vc(e,t="float32"){if("complex64"===t){const t=Vc(e,"float32"),n=Vc(e,"float32");return $a(t,n)}const n=ze(le(e),t);return fa.makeTensor(n,e,t)}function Gc(e,t="float32"){if("complex64"===t){const t=Gc(e,"float32"),n=Vc(e,"float32");return $a(t,n)}const n=Le(le(e),t);return fa.makeTensor(n,e,t)}function Hc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let s=Na(e,"x","meshgrid",e instanceof Kr?e.dtype:"float32");if(void 0===t)return[s];let r=Na(t,"y","meshgrid",t instanceof Kr?t.dtype:"float32");const a=le(s.shape),i=le(r.shape);return"xy"===n?(s=cu(s,[1,-1]),r=cu(r,[-1,1]),[ji(Gc([i,1],s.dtype),s),ji(r,Gc([1,a],r.dtype))]):(s=cu(s,[-1,1]),r=cu(r,[1,-1]),[ji(s,Gc([1,i],s.dtype)),ji(Gc([a,1],r.dtype),r)])}const jc=Ca({min_:function(e,t=null,n=!1){const s={x:Na(e,"x","min")},r={axis:t,keepDims:n};return fa.runKernel(Ln,s,r)}}),qc=Ca({minimum_:function(e,t){let n=Na(e,"a","minimum"),s=Na(t,"b","minimum");[n,s]=aa(n,s),"bool"===n.dtype&&(n=Ti(n,"int32"),s=Ti(s,"int32")),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(zn,r)}}),Kc=Ca({mirrorPad_:function(e,t,n){re("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const s=Na(e,"x","mirrorPad");if(0===s.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");re(t.length===s.rank,(()=>`Padding doesn't match input. Must be ${s.rank}. Got ${t.length}.`));const r="reflect"===n?1:0;for(let e=0;e<s.rank;e++)re(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),re(t[e][0]>=0&&t[e][0]<=s.shape[e]-r&&t[e][1]>=0&&t[e][1]<=s.shape[e]-r,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${s.shape[e]-r} or less than 0 for input of shape ${s.shape}`));const a={paddings:t,mode:n},i={x:s};return fa.runKernel(Pn,i,a)}}),Xc=Ca({mod_:function(e,t){let n=Na(e,"a","mod"),s=Na(t,"b","mod");[n,s]=aa(n,s);const r={a:n,b:s};return fa.runKernel(Bn,r)}}),Yc=Ca({moments_:function(e,t=null,n=!1){const s=be(t,(e=Na(e,"x","moments")).shape),r=Uc(e,s,n);let a=r.shape;n||(a=Ec(r.shape,s));const i=fl(El(Ti(e,"float32"),cu(r,a)));return{mean:r,variance:Uc(i,s,n)}}}),Zc=Ca({multiRNNCell_:function(e,t,n,s){const r=Na(t,"data","multiRNNCell"),a=Sa(n,"c","multiRNNCell"),i=Sa(s,"h","multiRNNCell");let o=r;const l=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);l.push(n[0]),l.push(n[1]),o=n[1]}const u=[],c=[];for(let e=0;e<l.length;e+=2)u.push(l[e]),c.push(l[e+1]);return[u,c]}}),Jc=Ca({multinomial_:function(e,t,n,s=!1){const r=Na(e,"logits","multinomial"),a=r.size,i=r.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?cu(r,[1,-1]):r},l={numSamples:t,seed:n,normalized:s},u=fa.runKernel(Wn,o,l);return 1===i?cu(u,[u.size]):u}}),Qc=Ca({notEqual_:function(e,t){let n=Na(e,"a","notEqual","string_or_numeric"),s=Na(t,"b","notEqual","string_or_numeric");[n,s]=aa(n,s),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(Gn,r)}}),eh=Ca({onesLike_:function(e){const t={x:Na(e,"x","onesLike")};return fa.runKernel(Kn,t)}}),th=Ca({outerProduct_:function(e,t){const n=Na(e,"v1","outerProduct"),s=Na(t,"v2","outerProduct");re(1===n.rank&&1===s.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${s.rank}.`));const r=cu(n,[-1,1]),a=cu(s,[1,-1]);return ji(r,a)}}),nh=Ca({pad_:function(e,t,n=0){const s=Na(e,"x","pad");if(0===s.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const r={paddings:t,constantValue:n},a={x:s};return fa.runKernel(Zn,a,r)}}),sh=Ca({pad1d_:function(e,t,n=0){return re(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),nh(e,[t],n)}}),rh=Ca({pad2d_:function(e,t,n=0){return re(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),nh(e,t,n)}}),ah=Ca({pad3d_:function(e,t,n=0){return re(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),nh(e,t,n)}}),ih=Ca({pad4d_:function(e,t,n=0){return re(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),nh(e,t,n)}}),oh=Ca({spaceToBatchND_:function(e,t,n){const s=Na(e,"x","spaceToBatchND");re(s.rank>=1+t.length,(()=>`input rank ${s.rank} should be > than [blockShape] ${t.length}`)),re(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),re(s.shape.reduce(((e,s,r)=>r>0&&r<=t.length?e&&(s+n[r-1][0]+n[r-1][1])%t[r-1]==0:e),!0),(()=>`input spatial dimensions ${s.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const r={x:s},a={blockShape:t,paddings:n};return fa.runKernel(Ts,r,a)}}),lh=Ca({pool_:function(e,t,n,s,r,a,i){null==r&&(r=[1,1]),null==a&&(a=1),0===s&&(s="valid");const o=Na(e,"x","maxPool");let l=o,u=!1;3===o.rank&&(u=!0,l=cu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(ou(a,r),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${r}'`));const c=Zl(l.shape,t,a,r,s),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===s?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),s=n.map((e=>Math.floor(e/2))),r=n.map(((e,t)=>e-s[t]));return n.map(((e,t)=>[s[t],r[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const s=n.map((e=>e[0])),r=n.map((e=>e[1])),a=e.concat(s,r),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=r.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[s[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?s:"valid",y=d?l:oh(l,h,f),b=("avg"===n?()=>hu(y,t,a,g,i):()=>Pc(y,t,a,g,i))(),x=d?b:bu(b,h,m);return u?cu(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),uh=Ca({prelu_:function(e,t){const n={x:Na(e,"x","prelu"),alpha:Na(t,"alpha","prelu")};return fa.runKernel(es,n)}}),ch=Ca({prod_:function(e,t=null,n=!1){let s=Na(e,"x","prod");"bool"===s.dtype&&(s=Ti(s,"int32"));const r={x:s},a={axis:t,keepDims:n};return fa.runKernel(ts,r,a)}}),hh=Ca({rand_:function(e,t,n){const s=le(e);let r=null;if(null==n||"float32"===n)r=new Float32Array(s);else if("int32"===n)r=new Int32Array(s);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);r=new Uint8Array(s)}for(let e=0;e<s;e++)r[e]=t();return fa.makeTensor(r,e,n)}});var ph=r(377);class dh{constructor(e,t,n,s,r){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=s,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=r||Math.random();this.random=ph.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let s,r,a;do{s=2*this.random()-1,r=2*this.random()-1,a=s*s+r*r}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*s*i,t=this.mean+this.stdDev*r*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class fh{constructor(e,t,n,s){this.alpha=e,this.beta=1/t,this.dtype=n;const r=s||Math.random();this.randu=ph.alea(r.toString()),this.randn=new dh(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,s,r,a;for(;;){do{s=this.randn.nextValue(),a=1+this.c*s}while(a<=0);if(a*=a*a,e=s*s,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),r=this.randu(),r<t||Math.log(r)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class mh{constructor(e=0,t=1,n,s){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==s&&(s=Math.random()),"number"==typeof s&&(s=s.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=ph.alea(s)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const gh=Ca({randomGamma_:function(e,t,n=1,s="float32",r){if(null==n&&(n=1),null==s&&(s="float32"),"float32"!==s&&"int32"!==s)throw new Error(`Unsupported data type ${s}`);const a=new fh(t,n,s,r),i=Si(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),yh=Ca({randomNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error(`Unsupported data type ${s}`);const a=new dh(t,n,s,!1,r),i=Si(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),bh=Ca({randomUniform_:function(e,t=0,n=1,s="float32",r){const a=Si(e,s),i=new mh(t,n,null,r);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function xh(e,t,n=1,s="float32"){if(0===n)throw new Error("Cannot have a step of zero");const r={start:e,stop:t,step:n,dtype:s};return fa.runKernel(ns,{},r)}const wh=Ca({real_:function(e){const t={input:Na(e,"input","real")};return fa.runKernel(ss,t)}}),vh=Ca({reciprocal_:function(e){const t={x:Na(e,"x","reciprocal")};return fa.runKernel(rs,t)}}),kh=Ca({relu_:function(e){const t={x:Na(e,"x","relu")};return fa.runKernel(as,t)}}),Ih=Ca({relu6_:function(e){const t={x:Na(e,"x","relu6")};return fa.runKernel(hs,t)}}),Nh=Ca({reverse_:function(e,t){const n={x:Na(e,"x","reverse")},s={dims:t};return fa.runKernel(ps,n,s)}}),Sh=Ca({reverse1d_:function(e){const t=Na(e,"x","reverse");return re(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Nh(t,0)}}),Th=Ca({reverse2d_:function(e,t){const n=Na(e,"x","reverse");return re(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Nh(n,t)}}),Ch=Ca({reverse3d_:function(e,t){const n=Na(e,"x","reverse");return re(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Nh(n,t)}}),$h=Ca({reverse4d_:function(e,t){const n=Na(e,"x","reverse");return re(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Nh(n,t)}}),Eh=Ca({round_:function(e){const t={x:Na(e,"x","round")};return fa.runKernel(ds,t)}}),Ah=Ca({rsqrt_:function(e){const t={x:Na(e,"x","rsqrt","float32")};return fa.runKernel(fs,t)}}),Rh=Ca({selu_:function(e){const t={x:Na(e,"x","selu")};return fa.runKernel(ys,t)}}),Fh=Ca({separableConv2d_:function(e,t,n,s,r,a=[1,1],i="NHWC"){const o=Na(e,"x","separableConv2d"),l=Na(t,"depthwiseFilter","separableConv2d"),u=Na(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=cu(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");re(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),re(4===l.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${l.rank}.`)),re(1===u.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${u.shape[0]}.`)),re(1===u.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${u.shape[1]}.`));const p=l.shape[2],d=l.shape[3];re(u.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${u.shape[2]}.`));const f=Gu(c,l,s,r,i,a),m=Fu(f,u,1,"valid",i);return h?cu(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Dh=async function(e,t){const n=Na(e,"x","setdiff1d"),s=Na(t,"y","setdiff1d");re(n.dtype===s.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${s.dtype}).`)),re(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),re(1===s.rank,(()=>`y should be 1D tensor, but got y (${s.shape}).`));const r=await n.data(),a=await s.data(),i=new Set(a);let o=0;for(let e=0;e<r.length;e++)i.has(r[e])||o++;const l=new Gr([o],n.dtype),u=new Gr([o],"int32");for(let e=0,t=0;e<r.length;e++)i.has(r[e])||(l.values[t]=r[e],u.values[t]=e,t++);return[l.toTensor(),u.toTensor()]},_h=Ca({sign_:function(e){const t={x:Na(e,"x","sign")};return fa.runKernel(vs,t)}}),Oh=Ca({sin_:function(e){const t={x:Na(e,"x","sin","float32")};return fa.runKernel(xs,t)}}),Mh=Ca({sinh_:function(e){const t={x:Na(e,"x","sinh")};return fa.runKernel(ws,t)}}),Lh=Ca({slice1d_:function(e,t,n){const s=Na(e,"x","slice1d");return re(1===s.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${s.rank} tensor`)),mu(s,[t],[n])}}),zh=Ca({slice2d_:function(e,t,n){const s=Na(e,"x","slice2d");return re(2===s.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${s.rank} tensor`)),mu(s,t,n)}}),Ph=Ca({slice3d_:function(e,t,n){const s=Na(e,"x","slice3d");return re(3===s.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${s.rank} tensor`)),mu(s,t,n)}}),Bh=Ca({slice4d_:function(e,t,n){const s=Na(e,"x","slice4d");return re(4===s.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${s.rank} tensor`)),mu(s,t,n)}}),Wh=Ca({softmax_:function(e,t=-1){const n=Na(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const s={logits:n},r={dim:t};return fa.runKernel($s,s,r)}}),Uh=Ca({fft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return fa.runKernel(en,t)}}),Vh=Ca({ifft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return fa.runKernel(pn,t)}}),Gh=Ca({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let s;if(t<=2){const r=cu(e,[n,t]);s=Vh(r)}else{const r=[n,2*(t-1)],a=cu(wh(e),[n,t]),i=cu(uc(e),[n,t]),o=Nh(mu(a,[0,1],[n,t-2]),1),l=pl(Nh(mu(i,[0,1],[n,t-2]),1),Il(-1)),u=du([a,o],1),c=du([i,l],1),h=cu($a(u,c),[r[0],r[1]]);s=Vh(h)}if(s=wh(s),3===e.rank&&0!==e.shape[0]){const t=s,n=e.shape[0];s=cu(s,[n,s.shape[0]/n,s.shape[1]]),t.dispose()}return s}}),Hh=Ca({split_:function(e,t,n=0){const s={x:Na(e,"x","split")},r={numOrSizeSplits:t,axis:n};return fa.runKernel(Cs,s,r)}}),jh=Ca({rfft_:function(e,t){re("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const s=e.size/n;let r;if(null!=t&&t<n){const s=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,r=mu(e,s,a),n=t}else if(null!=t&&t>n){const s=e.shape.map((e=>e));s[e.shape.length-1]=t-n,r=du([e,Vc(s)],e.shape.length-1),n=t}else r=e;const a=ml(r),i=cu($a(r,a),[s,n]),o=Uh(i),l=Math.floor(n/2)+1,u=wh(o),c=uc(o),h=Hh(u,[l,n-l],u.shape.length-1),p=Hh(c,[l,n-l],c.shape.length-1),d=r.shape.slice();return d[r.shape.length-1]=l,cu($a(h[0],p[0]),d)}}),qh=Ca({squaredDifference_:function(e,t){let n=Na(e,"a","squaredDifference"),s=Na(t,"b","squaredDifference");[n,s]=aa(n,s),Ji(n.shape,s.shape);const r={a:n,b:s};return fa.runKernel(_s,r,{})}}),Kh=Ca({squeeze_:function(e,t){const n=Na(e,"x","squeeze");return cu(n,xe(n.shape,t).newShape)}}),Xh=Ca({stack_:function(e,t=0){const n=Sa(e,"tensors","stack","string_or_numeric");re(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&re(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const s=n,r={axis:t};return fa.runKernel(Yn,s,r)}}),Yh=Ca({step_:function(e,t=0){const n={x:Na(e,"x","step")},s={alpha:t};return fa.runKernel(Zs,n,s)}}),Zh=Ca({stridedSlice_:function(e,t,n,s,r=0,a=0,i=0,o=0,l=0){const u={x:Na(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:s,beginMask:r,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:l};return fa.runKernel(Ms,u,c)}}),Jh=Ca({tan_:function(e){const t={x:Na(e,"x","tan","float32")};return fa.runKernel(Ws,t)}});function Qh(e,t){ie(e);const n=va(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Ea(e,null,n,t)}function ep(e,t,n){if(ie(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const s=va(e,n);if(2!==s.length&&1!==s.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Ea(e,t,s,n)}function tp(e,t,n){if(ie(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const s=va(e,n);if(4!==s.length&&1!==s.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Ea(e,t,s,n)}function np(e,t,n){if(ie(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const s=va(e,n);if(5!==s.length&&1!==s.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Ea(e,t,s,n)}function sp(e,t,n){if(ie(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const s=va(e,n);if(6!==s.length&&1!==s.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===s.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Ea(e,t=t||s,s,n)}const rp=Ca({topk_:function(e,t=1,n=!0){const s=Na(e,"x","topk");if(0===s.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const r=s.shape[s.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>r)throw new Error(`'k' passed to topk() must be <= the last dimension (${r}) but got ${t}`);const a={x:s},i={k:t,sorted:n},[o,l]=fa.runKernel(Gs,a,i);return{values:o,indices:l}}}),ap=Ca({truncatedNormal_:function(e,t=0,n=1,s,r){if(null!=s&&"bool"===s)throw new Error("Unsupported data type $ { dtype }");const a=new dh(t,n,s,!0,r),i=Si(e,s);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),ip=Ca({unique_:function(e,t=0){const n=Na(e,"x","unique","string_or_numeric");re(n.rank>0,(()=>"The input tensor must be at least 1D"));const s={x:n},r={axis:t},[a,i]=fa.runKernel(qs,s,r);return{values:a,indices:i}}}),op=Ca({unsortedSegmentSum_:function(e,t,n){const s=Na(e,"x","unsortedSegmentSum"),r=Na(t,"segmentIds","unsortedSegmentSum","int32");re(he(n),(()=>"numSegments must be of dtype int"));const a={x:s,segmentIds:r},i={numSegments:n};return fa.runKernel(Xs,a,i)}}),lp=Ca({unstack_:function(e,t=0){const n=Na(e,"x","unstack","string_or_numeric");re(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const s={value:n},r={axis:t};return fa.runKernel(Ks,s,r)}});function up(e,t=!0,n,s){return fa.makeVariable(e,t,n,s)}function cp(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const s=Si(e,"int32"),r=Si([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=s.indexToLoc(n[t]),i=t*e.length;r.values.set(a,i)}return r.toTensor()}const hp=async function(e){const t=Na(e,"condition","whereAsync","bool"),n=await t.data(),s=cp(t.shape,n);return e!==t&&t.dispose(),s},pp=async function(e,t,n){const s=Na(e,"tensor","boolMask"),r=Na(t,"mask","boolMask","bool"),a=null==n?0:n,i=r.rank,o=s.shape;re(i>0,(()=>"mask cannot be scalar")),ae(o.slice(a,a+i),r.shape,"mask's shape must match the first K dimensions of tensor's shape,");let l=1;for(let e=a;e<a+i;e++)l*=o[e];const u=o.slice(0,a).concat([l],o.slice(a+i)),c=cu(s,u),h=cu(r,[-1]),p=await hp(h),d=Kh(p,[1]),f=ic(c,d,a);return e!==s&&s.dispose(),t!==r&&r.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};function dp(e,t,n=null){if(0===e.rank)return Rl(e);if(1!==e.rank&&null===n)return dp(cu(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Nc(Rl(e),n);if(t===1/0)return Ic(Rl(e),n);if(t===-1/0)return jc(Rl(e),n);if("euclidean"===t||2===t)return dl(Nc($l(Rl(e),Il(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return Ic(Nc(Rl(e),n[0]),n[1]-1);if(t===1/0)return Ic(Nc(Rl(e),n[1]),n[0]);if(t===-1/0)return jc(Nc(Rl(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return dl(Nc(fl(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const fp=Ca({norm_:function(e,t="euclidean",n=null,s=!1){const r=dp(e=Na(e,"x","norm"),t,n);let a=r.shape;if(s){const t=be(n,e.shape);a=Ec(r.shape,t)}return cu(r,a)}}),mp=Ca({movingAverage_:function(e,t,n,s,r=!0){const a=Na(e,"v","movingAverage"),i=Na(t,"x","movingAverage"),o=Na(n,"decay","movingAverage");ia(a,i),re(ce(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const l=Il(1),u=El(l,o);let c=pl(El(i,a),u);if(r){re(null!=s,(()=>"When using zeroDebias: true, step is required."));const e=Na(s,"step","movingAverage");c=hl(c,El(l,$l(o,e)))}return ul(a,c)}}),gp=Ca({scatterND_:function(e,t,n){const s=Na(e,"indices","scatterND","int32"),r=Na(t,"updates","scatterND");oo(r,s,n);const a={indices:s,updates:r},i={shape:n};return fa.runKernel(ms,a,i)}}),yp=Ca({sparseToDense_:function(e,t,n,s=0){const r=Na(e,"sparseIndices","sparseToDense","int32"),a=Na(t,"sparseValues","sparseToDense"),i=Na(s,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,s){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const r=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==r))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${r}]`);if(t.dtype!==s.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(r,a,n,i);const o={sparseIndices:r,sparseValues:a,defaultValue:i},l={outputShape:n};return fa.runKernel(Ds,o,l)}}),bp=Ca({gatherND_:function(e,t){const n=Na(t,"indices","gatherND","int32"),s={params:Na(e,"x","gatherND","string_or_numeric"),indices:n};return fa.runKernel(ln,s)}}),xp=Ca({dropout_:function(e,t,n,s){const r=Na(e,"x","dropout");if(re("float32"===r.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${r.dtype} tensor instead.`)),re(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof Kr?r.clone():r;const a=function(e,t){if(null==t)return e.shape.slice();if(ce(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let s=0;s<e.shape.length;s++)null==t[s]&&null!=e.shape[s]?n.push(e.shape[s]):n.push(t[s]);return n}return t}(r,n),i=1-t,o=hl(ac(ul(bh(a,0,1,"float32",s),i)),i);return pl(r,o)}});function wp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function vp(e,t,n){const s=1-e%2,r=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+s-1);r[a]=t-n*Math.cos(i)}return Qh(r,"float32")}const kp=async function(e,t,n=1){const s=Na(e,"predictions","inTopK"),r=Na(t,"targets","inTopK");re(s.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${s.rank}`)),re(s.rank-1===r.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${s.rank} and targets rank ${r.rank}`)),ae(s.shape.slice(0,s.shape.length-1),r.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=s.shape[s.shape.length-1];re(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await s.data(),o=await r.data(),[l,u]=[i.length/a,a],c=we("bool",l);for(let e=0;e<l;e++){const t=e*u,s=i.subarray(t,t+u),r=[];for(let e=0;e<s.length;e++)r.push({value:s[e],index:e});r.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(r[t].index===o[e]){c[e]=1;break}}return e!==s&&s.dispose(),t!==r&&r.dispose(),Aa(c,r.shape,"bool")},Ip=Ca({conv2DBackpropFilter_:function(e,t,n,s,r,a="NHWC",i){let o=e;3===e.rank&&(o=cu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=cu(t,[1,t.shape[0],t.shape[1],t.shape[2]])),re(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),re(4===l.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${l.shape}.`)),re(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const u="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?l.shape[3]:l.shape[1];re(u===n[2],(()=>`Error in conv2dDerFilter: depth of input ${u}) must match input depth in filter (${n[2]}.`)),re(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),uu("conv2dDerFilter",r,i);const h={x:o,dy:l},p={strides:s,pad:r,dataFormat:a,dimRoundingMode:i,filterShape:n};return fa.runKernel(Ct,h,p)}});function Np(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return pl(e,Yh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Sp(e,t){let n=t;const s=Zi(e.shape,t.shape);return s.length>0&&(n=Nc(n,s)),cu(n,e.shape)}function Tp(e,t,n,s){if("linear"===t)return e;if("relu"===t)return kh(e);if("elu"===t)return Ju(e);if("relu6"===t)return Ih(e);if("prelu"===t)return uh(e,n);if("leakyrelu"===t)return dc(e,s);if("sigmoid"===t)return fu(e);throw new Error(`Unknown fused activation ${t}.`)}const Cp=(e,t)=>!(e>0)||"linear"===t,$p=Ca({fusedConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(l=l||"linear",!1===Cp(fa.state.gradientDepth,l)){let h=Fu(e,t,n,s,r,a,i);return null!=o&&(h=ul(h,o)),Tp(h,l,u,c)}const h=Na(e,"x","conv2d","float32"),p=Na(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=cu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),uu("fused conv2d",s,i),re(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),re(ou(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),re("NHWC"===r,(()=>`Error in conv2d: got dataFormat of ${r} but only NHWC is currently supported.`));const m=Ql(d.shape,p.shape,n,a,s,i);let g,y;null!=o&&(g=Na(o,"bias","fused conv2d"),[g]=aa(g,h),Ji(m.outShape,g.shape)),null!=u&&(y=Na(u,"prelu weights","fused conv2d"));const b=(e,t)=>{const[r,i,o,u]=t,c=Np(e,o,l);re(iu(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[_u(i.shape,c,r,n,s),Ip(i,c,r.shape,n,s)];if(null!=u){const e=Sp(u,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=vl(((e,t,n)=>{let s=fa.runKernel(tr,x,w);return n([t,e,s]),f&&(s=cu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p)}{const e=vl(((e,t,n,s)=>{let r=fa.runKernel(tr,x,w);return s([t,e,r,n]),f&&(r=cu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p,g)}}}),Ep=Ca({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,s,r,a=[1,1],i){let o=e;3===e.rank&&(o=cu(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let l=t;3===l.rank&&(l=cu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={x:o,dy:l},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,filterShape:n};return fa.runKernel(Pt,u,c)}}),Ap=Ca({depthwiseConv2dNativeBackpropInput_:function(e,t,n,s,r,a=[1,1],i){let o=t,l=!1;3===t.rank&&(l=!0,o=cu(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const u={dy:o,filter:n},c={strides:s,pad:r,dimRoundingMode:i,dilations:a,inputShape:e},h=fa.runKernel(Bt,u,c);return l?cu(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Rp=Ca({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:s,dataFormat:r="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:l="linear",preluActivationWeights:u,leakyreluAlpha:c}){if(!1===Cp(fa.state.gradientDepth,l)){let h=Gu(e,t,n,s,r,a,i);return null!=o&&(h=ul(h,o)),Tp(h,l,u,c)}const h=Na(e,"x","depthwiseConv2d","float32"),p=Na(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=cu(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),re(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),re(ou(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),uu("fused depthwiseConv2d",s,i);const m=Ql(d.shape,p.shape,n,a,s,i,!0);let g,y;null!=o&&(g=Na(o,"bias","fused conv2d"),[g]=aa(g,h),Ji(m.outShape,g.shape)),null!=u&&(y=Na(u,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{re(iu(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[r,o,u,c]=t,h=Np(e,u,l),p=Ap(o.shape,h,r,n,s,a,i),d=Ep(o,h,r.shape,n,s,a,i);return null!=c?[p,d,Sp(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:s,dataFormat:r,dilations:a,dimRoundingMode:i,activation:l,leakyreluAlpha:c};if(null==o){const e=vl(((e,t,n)=>{let s=fa.runKernel(nr,x,w);return n([t,e,s]),f&&(s=cu(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p)}{const e=vl(((e,t,n,s)=>{let r=fa.runKernel(nr,x,w);return s([t,e,r,n]),f&&(r=cu(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p,g)}}}),Fp=Ca({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:s=!1,bias:r,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Cp(fa.state.gradientDepth,a)){let l=ji(e,t,n,s);return null!=r&&(l=ul(l,r)),Tp(l,a,i,o)}let l=Na(e,"a","fused matMul"),u=Na(t,"b","fused matMul");[l,u]=aa(l,u);const c=n?l.shape[l.rank-2]:l.shape[l.rank-1],h=s?u.shape[u.rank-1]:u.shape[u.rank-2],p=n?l.shape[l.rank-1]:l.shape[l.rank-2],d=s?u.shape[u.rank-2]:u.shape[u.rank-1],f=l.shape.slice(0,-2),m=u.shape.slice(0,-2),g=le(f),y=le(m);re(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${l.shape} and ${u.shape} and transposeA=${n} and transposeB=${s} must match.`));const b=Ji(l.shape.slice(0,-2),u.shape.slice(0,-2)).concat([p,d]),x=cu(l,n?[g,c,p]:[g,p,c]),w=cu(u,s?[y,d,h]:[y,h,d]);let v,k;null!=r&&(v=Na(r,"bias","fused matMul"),[v]=aa(v,l),Ji(b,v.shape)),null!=i&&(k=Na(i,"prelu weights","fused matMul"));const I=(e,t)=>{const[i,o,l,u]=t,c=Np(cu(e,l.shape),l,a);let h,p;return n||s?!n&&s?(h=ji(c,o,!1,!1),p=ji(c,i,!0,!1)):n&&!s?(h=ji(o,c,!1,!0),p=ji(i,c,!1,!1)):(h=ji(o,c,!0,!0),p=ji(c,i,!0,!0)):(h=ji(c,o,!1,!0),p=ji(i,c,!0,!1)),null!=r?[h,p,Sp(u,c)]:[h,p]},N={a:x,b:w,bias:v,preluActivationWeights:k},S={transposeA:n,transposeB:s,activation:a,leakyreluAlpha:o};if(null==r){const e=vl(((e,t,n)=>{const s=fa.runKernel(er,N,S);return n([e,t,s]),{value:cu(s,b),gradFunc:I}}));return e(x,w)}{const e=vl(((e,t,n,s)=>{const r=fa.runKernel(er,N,S);return s([e,t,r,n]),{value:cu(r,b),gradFunc:I}}));return e(x,w,v)}}}),Dp=Ca({hammingWindow_:function(e){return vp(e,.54,.46)}}),_p=Ca({hannWindow_:function(e){return vp(e,.5,.5)}}),Op=Ca({frame_:function(e,t,n,s=!1,r=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(mu(e,a,t)),a+=n;if(s)for(;a<e.size;){const s=a+t-e.size,o=du([mu(e,a,t-s),Tl([s],r)]);i.push(o),a+=n}return 0===i.length?ep([],[0,t]):cu(du(i),[i.length,t])}}),Mp=Ca({stft_:function(e,t,n,s,r=_p){null==s&&(s=wp(t));const a=Op(e,t,n),i=pl(a,r(t));return jh(i,s)}}),Lp=Ca({cropAndResize_:function(e,t,n,s,r="bilinear",a=0){const i=Na(e,"image","cropAndResize"),o=Na(t,"boxes","cropAndResize","float32"),l=Na(n,"boxInd","cropAndResize","int32"),u=o.shape[0];re(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${u},4] but had shape ${o.shape}.`)),re(1===l.rank&&l.shape[0]===u,(()=>`Error in cropAndResize: boxInd must be have size [${u}] but had shape ${o.shape}.`)),re(2===s.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${s.length}.`)),re(s[0]>=1&&s[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${s}`)),re("bilinear"===r||"nearest"===r,(()=>`method must be bilinear or nearest, but was ${r}`));const c={image:i,boxes:o,boxInd:l},h={method:r,extrapolationValue:a,cropSize:s};return fa.runKernel(Ot,c,h)}}),zp=Ca({flipLeftRight_:function(e){const t=Na(e,"image","flipLeftRight","float32");re(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return fa.runKernel(nn,n,{})}}),Pp=Ca({grayscaleToRGB_:function(e){const t=Na(e,"image","grayscaleToRGB"),n=t.rank-1,s=t.shape[n];re(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),re(1===s,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${s}.`));const r=new Array(t.rank);return r.fill(1,0,n),r[n]=3,sc(t,r)}}),Bp=Ca({rotateWithOffset_:function(e,t,n=0,s=.5){const r=Na(e,"image","rotateWithOffset","float32");re(4===r.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${r.rank}.`));const a={image:r},i={radians:t,fillValue:n,center:s};return fa.runKernel(Qs,a,i)}});function Wp(e,t,n,s,r,a){null==s&&(s=.5),null==r&&(r=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),re(0<=s&&s<=1,(()=>`iouThreshold must be in [0, 1], but was '${s}'`)),re(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),re(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),re(1===t.rank,(()=>"scores must be a 1D tensor")),re(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),re(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:s,scoreThreshold:r,softNmsSigma:a}}const Up=Ca({nonMaxSuppression_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Na(e,"boxes","nonMaxSuppression","float32"),i=Na(t,"scores","nonMaxSuppression","float32"),o=Wp(a,i,n,s,r),l={maxOutputSize:n=o.maxOutputSize,iouThreshold:s=o.iouThreshold,scoreThreshold:r=o.scoreThreshold};return fa.runKernel(Hn,{boxes:a,scores:i},l)}});function Vp(e,t,n){const s=function(e,t,n){return function(e,t,n){let s=0,r=e.length,a=0,i=!1;for(;s<r;){a=s+(r-s>>>1);const o=n(t,e[a]);o>0?s=a+1:(r=a,i=!o)}return i?s:-s-1}(e,t,n||Gp)}(e,t,n),r=s<0?-(s+1):s;e.splice(r,0,t)}function Gp(e,t){return e>t?1:e<t?-1:0}function Hp(e,t,n,s,r){return Kp(e,t,n,s,r,0)}function jp(e,t,n,s,r,a){return Kp(e,t,n,s,r,0,!1,a,!0)}function qp(e,t,n,s,r,a){return Kp(e,t,n,s,r,a,!0)}function Kp(e,t,n,s,r,a,i=!1,o=!1,l=!1){const u=[];for(let e=0;e<t.length;e++)t[e]>r&&u.push({score:t[e],boxIndex:e,suppressBeginIndex:0});u.sort(Zp);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&u.length>0;){const t=u.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<r)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Xp(e,a,h[n]);if(i>=s){o=!0;break}if(t.score=t.score*Yp(s,c,i),t.score<=r)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>r&&Vp(u,t,Zp))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),l&&(m.validOutputs=d),m}function Xp(e,t,n){const s=e.subarray(4*t,4*t+4),r=e.subarray(4*n,4*n+4),a=Math.min(s[0],s[2]),i=Math.min(s[1],s[3]),o=Math.max(s[0],s[2]),l=Math.max(s[1],s[3]),u=Math.min(r[0],r[2]),c=Math.min(r[1],r[3]),h=Math.max(r[0],r[2]),p=Math.max(r[1],r[3]),d=(o-a)*(l-i),f=(h-u)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,u),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(l,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Yp(e,t,n){const s=Math.exp(t*n*n);return n<=e?s:0}function Zp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Jp=Ca({nonMaxSuppressionWithScore_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Na(e,"boxes","nonMaxSuppression"),o=Na(t,"scores","nonMaxSuppression"),l=Wp(i,o,n,s,r,a),u={boxes:i,scores:o},c={maxOutputSize:n=l.maxOutputSize,iouThreshold:s=l.iouThreshold,scoreThreshold:r=l.scoreThreshold,softNmsSigma:a=l.softNmsSigma},h=fa.runKernel(qn,u,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Qp=Ca({nonMaxSuppressionPadded_:function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Na(e,"boxes","nonMaxSuppression"),o=Na(t,"scores","nonMaxSuppression"),l=Wp(i,o,n,s,r,null),u={boxes:i,scores:o},c={maxOutputSize:l.maxOutputSize,iouThreshold:l.iouThreshold,scoreThreshold:l.scoreThreshold,padToMaxOutputSize:a},h=fa.runKernel(jn,u,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),ed=Ca({resizeBilinear_:function(e,t,n=!1,s=!1){const r=Na(e,"images","resizeBilinear");re(3===r.rank||4===r.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${r.rank}.`)),re(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),re(!1===s||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=cu(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=fa.runKernel(us,o,l);return i?cu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),td=Ca({resizeNearestNeighbor_:function(e,t,n=!1,s=!1){const r=Na(e,"images","resizeNearestNeighbor");re(3===r.rank||4===r.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${r.rank}.`)),re(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),re("float32"===r.dtype||"int32"===r.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),re(!1===s||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=r,i=!1;3===r.rank&&(i=!0,a=cu(r,[1,r.shape[0],r.shape[1],r.shape[2]]));const[]=t,o={images:a},l={alignCorners:n,halfPixelCenters:s,size:t},u=fa.runKernel(os,o,l);return i?cu(u,[u.shape[1],u.shape[2],u.shape[3]]):u}}),nd=Ca({threshold_:function(e,t="binary",n=!1,s=.5){const r=Na(e,"image","threshold"),a=r.shape[0]*r.shape[1];let i,o,l,u,c=pl(Qh([s]),255);if(re(3===r.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${r.rank}.`)),re(3===r.shape[2]||1===r.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${r.shape[2]}.`)),re("int32"===r.dtype||"float32"===r.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${r.dtype}.`)),re("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===r.shape[2]){[i,o,l]=Hh(r,[1,1,1],-1);const e=pl(i,.2989),t=pl(o,.587),n=pl(l,.114);u=ul(ul(e,t),n)}else u=e;"otsu"===t&&(c=function(e,t){let n,s,r,a,i,o,l=Qh([-1]),u=Qh([0]),c=Qh([0]);for(let h=0;h<e.size-1;h++){n=mu(e,0,h+1),s=mu(e,h+1),i=hl(Nc(n),t),o=hl(Nc(s),t);const p=Nc(pl(n,xh(0,n.size)));r=hl(p,Nc(n));const d=Tl(s.shape,n.size),f=ul(xh(0,s.size),d),m=pl(s,f);a=hl(Nc(m),Nc(s));const g=El(r,a),y=El(r,a),b=pl(i,o);c=pl(pl(b,g),y);const x=oc(c,u);u=Ku(x,c,u),l=Ku(x,Qh([h]),l)}return l}(Iu(Ti(Eh(u),"int32"),Aa([]),256),a));const h=n?mc(u,c):oc(u,c);return Ti(pl(h,255),"int32")}}),sd=Ca({transform_:function(e,t,n="nearest",s="constant",r=0,a){const i=Na(e,"image","transform","float32"),o=Na(t,"transforms","transform","float32");re(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),re(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const l={image:i,transforms:o},u={interpolation:n,fillMode:s,fillValue:r,outputShape:a};return fa.runKernel(Hs,l,u)}}),rd=Ca({bandPart_:function(e,t,n){re(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),re(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const s=Na(e,"a","bandPart");re(s.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${s.rank}.`));const r=s.shape,[a,i]=s.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=cu(xh(0,a,1,"int32"),[-1,1]),l=xh(0,i,1,"int32"),u=El(o,l),c=Oc(mc(u,Il(+t,"int32")),lc(u,Il(-n,"int32"))),h=Vc([a,i],s.dtype);return cu(Xh(lp(cu(s,[-1,a,i])).map((e=>Ku(c,e,h)))),r)}}),ad=Ca({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,re(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)re(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Hh(e,e.shape[0],0).map((e=>Kh(e,[0])));re(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],s=e;for(let t=0;t<e.length;++t)n.push(fa.tidy((()=>{let e=s[t];if(t>0)for(let s=0;s<t;++s){const t=pl(Nc(pl(n[s],e)),n[s]);e=El(e,t)}return hl(e,fp(e,"euclidean"))})));return t?Xh(n,0):n}});function id(e,t=!1){return fa.tidy((()=>{re(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],s=e.shape[1];let r=rc(n),a=Ci(e);const i=ep([[1]],[1,1]);let o=Ci(i);const l=n>=s?s:n;for(let e=0;e<l;++e){const t=a,l=o,u=r;[o,a,r]=fa.tidy((()=>{const t=mu(a,[e,e],[n-e,1]),l=fp(t),u=mu(a,[e,e],[1,1]),c=Ku(oc(u,0),ep([[-1]]),ep([[1]])),h=El(u,pl(c,l)),p=hl(t,h);o=1===p.shape[0]?Ci(i):du([i,mu(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=wc(hl(ji(c,h),l)),f=mu(a,[e,0],[n-e,s]),m=pl(d,o),g=Ki(o);if(0===e)a=El(f,ji(m,ji(g,f)));else{const t=El(f,ji(m,ji(g,f)));a=du([mu(a,[0,0],[e,s]),t],0)}const y=Ki(m),b=mu(r,[0,e],[n,r.shape[1]-e]);if(0===e)r=El(b,ji(ji(b,o),y));else{const t=El(b,ji(ji(b,o),y));r=du([mu(r,[0,0],[n,e]),t],1)}return[o,a,r]})),Zo([t,l,u])}return!t&&n>s&&(r=mu(r,[0,0],[n,s]),a=mu(a,[0,0],[s,s])),[r,a]}))}const od=Ca({qr_:function(e,t=!1){if(re(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return id(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),s=lp(cu(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),r=[],a=[];return s.forEach((e=>{const[n,s]=id(e,t);r.push(n),a.push(s)})),[cu(Xh(r,0),e.shape),cu(Xh(a,0),e.shape)]}}});var ld;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(ld||(ld={}));const ud=Ca({computeWeightedLoss_:function(e,t,n=ld.SUM_BY_NONZERO_WEIGHTS){const s=Na(e,"losses","computeWeightedLoss");let r=null;null!=t&&(r=Na(t,"weights","computeWeightedLoss"));const a=null==r?s:pl(s,r);if(n===ld.NONE)return a;if(n===ld.SUM)return Nc(a);if(n===ld.MEAN){if(null==r)return Uc(a);{const e=s.size/r.size,t=hl(Nc(a),Nc(r));return e>1?hl(t,Il(e)):t}}if(n===ld.SUM_BY_NONZERO_WEIGHTS){if(null==r)return hl(Nc(a),Il(s.size));{const e=pl(r,Gc(s.shape)),t=Ti(Nc(Qc(e,Il(0))),"float32");return hl(Nc(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),cd=Ca({absoluteDifference_:function(e,t,n,s=ld.SUM_BY_NONZERO_WEIGHTS){const r=Na(e,"labels","absoluteDifference"),a=Na(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Na(n,"weights","absoluteDifference")),ae(r.shape,a.shape,"Error in absoluteDifference: ");const o=Rl(El(r,a));return ud(o,i,s)}}),hd=Ca({cosineDistance_:function(e,t,n,s,r=ld.SUM_BY_NONZERO_WEIGHTS){const a=Na(e,"labels","cosineDistance"),i=Na(t,"predictions","cosineDistance");let o=null;null!=s&&(o=Na(s,"weights","cosineDistance")),ae(a.shape,i.shape,"Error in cosineDistance: ");const l=Il(1),u=El(l,Nc(pl(a,i),n,!0));return ud(u,o,r)}}),pd=Ca({hingeLoss_:function(e,t,n,s=ld.SUM_BY_NONZERO_WEIGHTS){let r=Na(e,"labels","hingeLoss");const a=Na(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Na(n,"weights","hingeLoss")),ae(r.shape,a.shape,"Error in hingeLoss: ");const o=Il(1);r=El(pl(Il(2),r),o);const l=kh(El(o,pl(r,a)));return ud(l,i,s)}}),dd=Ca({huberLoss_:function(e,t,n,s=1,r=ld.SUM_BY_NONZERO_WEIGHTS){const a=Na(e,"labels","huberLoss"),i=Na(t,"predictions","huberLoss");let o=null;null!=n&&(o=Na(n,"weights","huberLoss")),ae(a.shape,i.shape,"Error in huberLoss: ");const l=Il(s),u=Rl(El(i,a)),c=qc(u,l),h=El(u,c),p=ul(pl(Il(.5),fl(c)),pl(l,h));return ud(p,o,r)}}),fd=Ca({logLoss_:function(e,t,n,s=1e-7,r=ld.SUM_BY_NONZERO_WEIGHTS){const a=Na(e,"labels","logLoss"),i=Na(t,"predictions","logLoss");let o=null;null!=n&&(o=Na(n,"weights","logLoss")),ae(a.shape,i.shape,"Error in logLoss: ");const l=Il(1),u=Il(s),c=wc(pl(a,bc(ul(i,u)))),h=pl(El(l,a),bc(ul(El(l,i),u))),p=El(c,h);return ud(p,o,r)}}),md=Ca({meanSquaredError_:function(e,t,n,s=ld.SUM_BY_NONZERO_WEIGHTS){const r=Na(e,"labels","meanSquaredError"),a=Na(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Na(n,"weights","meanSquaredError")),ae(r.shape,a.shape,"Error in meanSquaredError: ");const o=qh(r,a);return ud(o,i,s)}}),gd=Ca({sigmoidCrossEntropy_:function(e,t,n,s=0,r=ld.SUM_BY_NONZERO_WEIGHTS){let a=Na(e,"multiClassLabels","sigmoidCrossEntropy");const i=Na(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Na(n,"weights","sigmoidCrossEntropy")),ae(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),s>0){const e=Il(s),t=Il(1),n=Il(.5);a=ul(pl(a,El(t,e)),pl(n,e))}const l=function(e,t){const n=Na(e,"labels","sigmoidCrossEntropyWithLogits"),s=Na(t,"logits","sigmoidCrossEntropyWithLogits");ae(n.shape,s.shape,"Error in sigmoidCrossEntropyWithLogits: ");const r=kh(s),a=pl(s,n),i=xc(ec(wc(Rl(s))));return ul(El(r,a),i)}(a,i);return ud(l,o,r)}}),yd=Ca({softmaxCrossEntropy_:function(e,t,n,s=0,r=ld.SUM_BY_NONZERO_WEIGHTS){let a=Na(e,"onehotLabels","softmaxCrossEntropy");const i=Na(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Na(n,"weights","softmaxCrossEntropy")),ae(a.shape,i.shape,"Error in softmaxCrossEntropy: "),s>0){const e=Il(s),t=Il(1),n=Il(a.shape[1]);a=ul(pl(a,El(t,e)),hl(e,n))}const l=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const s=vl(((e,t,s)=>{const r=_c(t,[n],!0),a=El(Ti(t,"float32"),r);s([e,a]);const i=wc(pl(a,e));return{value:Nc(i,[n]),gradFunc:(e,t)=>{const[s,r]=t,a=Ec(e.shape,[n]);return[pl(cu(e,a),El(Ti(s,"float32"),ec(r))),pl(cu(e,a),El(ec(r),Ti(s,"float32")))]}}}));return s(e,t)}(a,i);return ud(l,o,r)}}),bd=Ca({sparseFillEmptyRows_:function(e,t,n,s){const r=Na(e,"indices","sparseFillEmptyRows","int32"),a=Na(t,"values","sparseFillEmptyRows"),i=Na(n,"denseShape","sparseFillEmptyRows","int32"),o=Na(s,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==r.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const l={indices:r,values:a,denseShape:i,defaultValue:o},u=fa.runKernel(Es,l);return{outputIndices:u[0],outputValues:u[1],emptyRowIndicator:u[2],reverseIndexMap:u[3]}}}),xd=Ca({sparseReshape_:function(e,t,n){const s=Na(e,"inputIndices","sparseReshape","int32"),r=Na(t,"inputShape","sparseReshape","int32"),a=Na(n,"newShape","sparseReshape","int32");if(2!==s.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==r.rank)throw new Error(`Input shape should be Tensor1D but received shape ${r.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:s,inputShape:r,newShape:a},o=fa.runKernel(As,i);return{outputIndices:o[0],outputShape:o[1]}}}),wd=Ca({sparseSegmentMean_:function(e,t,n){const s=Na(e,"data","sparseSegmentMean"),r=Na(t,"indices","sparseSegmentMean","int32"),a=Na(n,"segmentIds","sparseSegmentMean","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return fa.runKernel(Rs,i)}}),vd=Ca({sparseSegmentSum_:function(e,t,n){const s=Na(e,"data","sparseSegmentSum"),r=Na(t,"indices","sparseSegmentSum","int32"),a=Na(n,"segmentIds","sparseSegmentSum","int32");if(s.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${r.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:s,indices:r,segmentIds:a};return fa.runKernel(Fs,i)}}),kd=Ca({stringNGrams_:function(e,t,n,s,r,a,i,o){const l=Na(e,"data","stringNGrams","string");if("string"!==l.dtype)throw new Error("Data must be of datatype string");if(1!==l.shape.length)throw new Error(`Data must be a vector, saw: ${l.shape}`);const u=Na(t,"dataSplits","stringNGrams");if("int32"!==u.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:s,leftPad:r,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:l,dataSplits:u},p=fa.runKernel(Ls,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),Id=Ca({stringSplit_:function(e,t,n=!0){const s=Na(e,"input","stringSplit","string"),r=Na(t,"delimiter","stringSplit","string");if(1!==s.rank)throw new Error(`Input should be Tensor1D but received shape ${s.shape}`);if(0!==r.rank)throw new Error(`Delimiter should be a scalar but received shape ${r.shape}`);const a={skipEmpty:n},i={input:s,delimiter:r},o=fa.runKernel(zs,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Nd=Ca({stringToHashBucketFast_:function(e,t){const n=Na(e,"input","stringToHashBucketFast","string"),s={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const r={input:n};return fa.runKernel(Ps,r,s)}}),Sd={fft:Uh,ifft:Vh,rfft:jh,irfft:Gh},Td={hammingWindow:Dp,hannWindow:_p,frame:Op,stft:Mp},Cd={flipLeftRight:zp,grayscaleToRGB:Pp,resizeNearestNeighbor:td,resizeBilinear:ed,rotateWithOffset:Bp,cropAndResize:Lp,nonMaxSuppression:Up,nonMaxSuppressionAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY){const a=Na(e,"boxes","nonMaxSuppressionAsync"),i=Na(t,"scores","nonMaxSuppressionAsync"),o=Wp(a,i,n,s,r);n=o.maxOutputSize,s=o.iouThreshold,r=o.scoreThreshold;const l=await Promise.all([a.data(),i.data()]),u=l[0],c=l[1],{selectedIndices:h}=Hp(u,c,n,s,r);return a!==e&&a.dispose(),i!==t&&i.dispose(),Qh(h,"int32")},nonMaxSuppressionWithScore:Jp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=0){const i=Na(e,"boxes","nonMaxSuppressionAsync"),o=Na(t,"scores","nonMaxSuppressionAsync"),l=Wp(i,o,n,s,r,a);n=l.maxOutputSize,s=l.iouThreshold,r=l.scoreThreshold,a=l.softNmsSigma;const u=await Promise.all([i.data(),o.data()]),c=u[0],h=u[1],{selectedIndices:p,selectedScores:d}=qp(c,h,n,s,r,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qh(p,"int32"),selectedScores:Qh(d)}},nonMaxSuppressionPadded:Qp,nonMaxSuppressionPaddedAsync:async function(e,t,n,s=.5,r=Number.NEGATIVE_INFINITY,a=!1){const i=Na(e,"boxes","nonMaxSuppressionAsync"),o=Na(t,"scores","nonMaxSuppressionAsync"),l=Wp(i,o,n,s,r,null),u=l.maxOutputSize,c=l.iouThreshold,h=l.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=jp(p,d,u,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Qh(f,"int32"),validOutputs:Il(m,"int32")}},threshold:nd,transform:sd},$d={bandPart:rd,gramSchmidt:ad,qr:od},Ed={absoluteDifference:cd,computeWeightedLoss:ud,cosineDistance:hd,hingeLoss:pd,huberLoss:dd,logLoss:fd,meanSquaredError:md,sigmoidCrossEntropy:gd,softmaxCrossEntropy:yd},Ad={sparseFillEmptyRows:bd,sparseReshape:xd,sparseSegmentMean:wd,sparseSegmentSum:vd},Rd={stringNGrams:kd,stringSplit:Id,stringToHashBucketFast:Nd},Fd={sgd:Ll.sgd,momentum:Ll.momentum,adadelta:Ll.adadelta,adagrad:Ll.adagrad,rmsprop:Ll.rmsprop,adamax:Ll.adamax,adam:Ll.adam},Dd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function _d(){return new Promise((e=>Dd((()=>e()))))}function Od(e,t){const n=e[0].length;e.forEach(((e,t)=>{re(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),re(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const s=e[0];e.forEach(((e,r)=>{for(let a=0;a<n;a++)re(a===t||e[a]===s[a],(()=>`Error in concat${n}D: Shape of tensors[${r}] (${e}) does not match the shape of the rest (${s}) along the non-concatenated axis ${r}.`))}))}function Md(e,t){const n=e[0].slice();for(let s=1;s<e.length;s++)n[t]+=e[s][t];return n}const Ld=30;function zd(e){return e<=Ld?e:De(e,Math.floor(Math.sqrt(e)))}function Pd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Bd(e,t,n,s=!0){let r=[];if(s)r=r.concat(t.slice(0)),r.push(e[0]/n),r=r.concat(e.slice(1));else{r=r.concat(e[0]);const n=t.length;for(let s=0;s<n;++s)r=r.concat([e[s+1]/t[s],t[s]]);r=r.concat(e.slice(n+1))}return r}function Wd(e,t,n=!0){const s=[];if(n){s.push(t);for(let n=t+1;n<e;++n)n<=2*t?(s.push(n),s.push(n-(t+1))):s.push(n)}else{const n=[],r=[];for(let s=1;s<e;++s)s>=2*t+1||s%2==1?r.push(s):n.push(s);s.push(...n),s.push(0),s.push(...r)}return s}function Ud(e,t,n,s=!0){const r=[];s?r.push(e[0]/n):r.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?s?r.push(t[n-1]*e[n]):r.push(e[n]/t[n-1]):r.push(e[n]);return r}function Vd(e,t){const n=[0];for(let s=0;s<t;++s)n.push(e[s][0]);return n}function Gd(e,t,n){const s=e.slice(0,1);for(let r=0;r<n;++r)s.push(e[r+1]-t[r][0]-t[r][1]);return s}const Hd=1.7580993408473768,jd=1.0507009873554805,qd=.3275911,Kd=.254829592,Xd=-.284496736,Yd=1.421413741,Zd=-1.453152027,Jd=1.061405429;function Qd(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let s=0;s<n.length;s+=2)n[s]=e[s/2],n[s+1]=t[s/2];return n}function ef(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let s=0;s<e.length;s+=2)t[s/2]=e[s],n[s/2]=e[s+1];return{real:t,imag:n}}function tf(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function nf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),s=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],s[Math.floor(t/4)]=e[t+1];return{real:n,imag:s}}function sf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function rf(e,t,n,s){e[2*s]=t,e[2*s+1]=n}function af(e,t){const n=new Float32Array(e/2),s=new Float32Array(e/2);for(let r=0;r<Math.ceil(e/2);r++){const a=(t?2:-2)*Math.PI*(r/e);n[r]=Math.cos(a),s[r]=Math.sin(a)}return{real:n,imag:s}}function of(e,t,n){const s=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(s),imag:Math.sin(s)}}const lf=/->/g;function uf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(lf,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[s,r]=e.split("->");re(-1===s.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=s.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<r.length;++e){const t=r[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<s.length;++e){const t=s[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const l=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);l[e]=[];for(let t=0;t<a[e].length;++t)l[e].push(o.indexOf(a[e][t]))}const u=o.length,c=[];for(let e=r.length;e<u;++e)c.push(e);return{allDims:o,summedDims:c,idDims:l}}function cf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const s=[];for(let t=0;t<e;++t)-1===n[t]&&s.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:s}}function hf(e,t,n){const s=new Array(e);for(let e=0;e<n.length;++e){const r=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===s[t[e][n]]?s[t[e][n]]=r[n]:re(s[t[e][n]]===r[n],(()=>`Expected dimension ${s[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(r)}, but got dimension ${r[n]}`))}}function pf(e,t){const n=e,s=[];let r=0;0===e.length&&n.push(-1),r=e.length+1;for(let e=0;e<r;++e)s.push([]);const a=[];for(let e=0;e<n.length;++e){const r=ff(t,n[e]);for(const t of r)-1===a.indexOf(t)&&(s[e].push(t),a.push(t))}return{path:n,steps:s}}function df(e){return e.every(((e,t)=>e===t))}function ff(e,t){const n=[];for(let s=0;s<e.length;++s)0!==e[s].length&&-1===e[s].indexOf(t)&&-1!==t||n.push(s);return n}function mf(e,t,n=0){let s=[];if("number"==typeof t)re(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),s=new Array(t).fill(e.shape[n]/t);else{const r=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);re(r<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const s=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-s}re(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),s=t}return s}function gf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function yf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function bf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function xf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wf(e,t){return`size ${e} must be non-negative, not ${t}`}function vf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function kf(e,t){return`Input to reshape is a SparseTensor with ${le(e)}\n  dense values, but the requested shape requires a multiple of ${le(t)}. inputShape=${e} outputShape= ${t}`}function If(e,t){return`Input to reshape is a tensor with ${le(e)} dense values, but the requested shape has ${le(t)}. inputShape=${e} outputShape=${t}`}function Nf(){return"segment ids must be >= 0"}function Sf(){return"segment ids are not increasing"}function Tf(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Cf(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function $f(e,t){let n,s=!1;for(e<=Ld?(n=e,s=!0):n=De(e,Math.floor(Math.sqrt(e)));!s;)n>t||n===e?s=!0:n=De(e,n+1);return n}function Ef(e,t,n){const s=[],r=e.length;for(let a=0;a<r;a++)a!==t?s.push(e[a]):s.push(n);return s}function Af(e,t,n,s){const r=t.shape.length,a=e.shape.length;if(0!==s&&(s<-r||s>r))throw new Error(`Expect batchDims in the range of [-${r}, ${r}], but got ${s}`);if(s<0&&(s+=r),s>a)throw new Error(`batchDims (${s}) must be less than rank(x) (\n    ${a}).`);if(n<s)throw new Error(`batchDims (${s}) must be less than or equal to axis (${n}).`);for(let n=0;n<s;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let l=1,u=1,c=1;for(let t=0;t<s;++t)o.push(e.shape[t]),l*=e.shape[t];for(let t=s;t<n;t++)o.push(e.shape[t]),u*=e.shape[t];for(let e=s;e<r;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:l,sliceSize:c,outerSize:u,dimSize:i,outputShape:o}}function Rf(e){try{return e.map((e=>Or(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ff(e){return e.map((e=>_r(e)))}const Df={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(e,Yh(Ti(n,"float32"),-1))}}},_f={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=fl(Ti(n,"float32")),s=dl(El(Il(1),t));return wc(hl(e,s))}}}},Of={kernelName:Qe,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=dl(El(fl(Ti(n,"float32")),1));return hl(e,t)}}}},Mf={kernelName:et,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ji(n.shape,s.shape);return{a:()=>{let t=e;const s=Zi(n.shape,r);return s.length>0&&(t=Nc(t,s)),cu(t,n.shape)},b:()=>{let t=e;const n=Zi(s.shape,r);return n.length>0&&(t=Nc(t,n)),cu(t,s.shape)}}}},Lf={kernelName:tt,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,s)=>{n[s]=()=>e.clone()})),n}},zf={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(n)}}},Pf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ml(n)}}},Bf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,dl(El(Il(1),fl(Ti(n,"float32")))))}}},Wf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=dl(ul(Il(1),fl(Ti(n,"float32"))));return hl(e,t)}}}},Uf={kernelName:ct,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ji(n.shape,s.shape);return{a:()=>{const t=ul(fl(n),fl(s));let a=pl(e,hl(s,t));const i=Zi(n.shape,r);return i.length>0&&(a=Nc(a,i)),cu(a,n.shape)},b:()=>{const t=ul(fl(n),fl(s));let a=wc(pl(e,hl(n,t)));const i=Zi(s.shape,r);return i.length>0&&(a=Nc(a,i)),cu(a,s.shape)}}}},Vf={kernelName:lt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,ul(fl(Ti(n,"float32")),1))}}},Gf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,El(Il(1),fl(Ti(n,"float32"))))}}},Hf=Ca({avgPool3dGrad_:function(e,t,n,s,r,a){const i=Na(e,"dy","avgPool3dGrad"),o=Na(t,"input","avgPool3dGrad");let l=i,u=o,c=!1;4===o.rank&&(c=!0,l=cu(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),u=cu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),re(5===l.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${l.rank}.`)),re(5===u.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${u.rank}.`)),uu("avgPool3dGrad",r,a);const h={dy:l,input:u},p={filterSize:n,strides:s,pad:r,dimRoundingMode:a},d=fa.runKernel(ft,h,p);return c?cu(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),jf={kernelName:dt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>Hf(e,s,r,a,i,o)}}},qf=Ca({avgPoolGrad_:function(e,t,n,s,r){const a=Na(e,"dy","avgPoolGrad"),i=Na(t,"input","avgPoolGrad");re(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,l=a,u=!1;3===i.rank&&(u=!0,o=cu(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=cu(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===l.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${l.rank}.`)),re(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:l,input:o},h={filterSize:n,strides:s,pad:r},p=fa.runKernel(pt,c,h);return u?cu(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Kf={kernelName:ht,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{filterSize:r,strides:a,pad:i}=n;return{x:()=>qf(e,s,r,a,i)}}},Xf={kernelName:mt,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[s,r]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>ji(e,r,!1,!1),b:()=>ji(e,s,!0,!1)}:a&&!i?{a:()=>ji(r,e,!1,!0),b:()=>ji(s,e,!1,!1)}:{a:()=>ji(r,e,!0,!0),b:()=>ji(e,s,!0,!0)}:{a:()=>ji(e,r,!1,!0),b:()=>ji(s,e,!0,!1)}}},Yf={kernelName:gt,gradFunc:(e,t,n)=>{const{blockShape:s,crops:r}=n;return{x:()=>oh(e,s,r)}}},Zf={kernelName:bt,gradFunc:(e,t,n)=>{const s=n,r=s.inputShape,a=s.shape,i=Array.from(a);for(let e=r.length-1;e>=0;e--)if(r[e]===a[e])i[e]=1;else if(1!==r[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Nc(e,o,!0)}}},Jf={kernelName:wt,gradFunc:e=>({x:()=>e.clone()})},Qf={kernelName:vt,gradFunc:e=>({x:()=>ml(e)})},em={kernelName:kt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{clipValueMin:r,clipValueMax:a}=n;return{x:()=>Ku(Oc(lc(s,r),mc(s,a)),e,ml(e))}}},tm={kernelName:Nt,inputsToSave:["x"],gradFunc:Df.gradFunc},nm={kernelName:St,saveAllInputs:!0,gradFunc:(e,t,n)=>{const s=t.map((e=>e.shape)),{axis:r}=n,a=be(r,t[0].shape)[0],i=s.map((e=>e[a]));return Hh(e,i,a).map((e=>()=>e))}},sm={kernelName:Tt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{dilations:a,strides:i,pad:o,dataFormat:l}=n;return re(iu(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>_u(s.shape,e,r,i,o,l),filter:()=>Ip(s,e,r.shape,i,o,l)}}},rm={kernelName:$t,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:l}=n;return{dy:()=>Fu(e,r,a,i,o,1,l),filter:()=>Ip(e,s,r.shape,a,i,o,l)}}},am=Ca({conv3DBackpropFilter_:function(e,t,n,s,r){let a=e;4===e.rank&&(a=cu(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=cu(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),re(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),re(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),re(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),re(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),re(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},l={strides:s,pad:r,filterShape:n};return fa.runKernel(At,o,l)}}),im={kernelName:Et,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a}=n;re(iu(s),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${s}'`));const[i,o]=t;return{x:()=>Lu(i.shape,e,o,r,a),filter:()=>am(i,e,o.shape,r,a)}}},om={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(wc(Oh(Ti(n,"float32"))),e)}}},lm={kernelName:Dt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(Mh(Ti(n,"float32")),e)}}},um={kernelName:_t,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r,exclusive:a,reverse:i}=n;return{x:()=>{const t=Rc([r],s.rank);let n=Wu(e,r,a,!i);return null!=t&&(n=Ki(n,t)),n}}}},cm={kernelName:zt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:s,strides:r,pad:a,dimRoundingMode:i}=n,o=null==s?[1,1]:s;re(iu(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[l,u]=t;return re(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${u.rank}.`)),re(l.shape[3]===u.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),re(ou(r,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${r} and dilations '${o}'.`)),uu("depthwiseConv2d",a,i),{x:()=>Ap(l.shape,e,u,r,a,o,i),filter:()=>Ep(l,e,u.shape,r,a,o,i)}}},hm={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[s,r]=t,a={x:s,filter:r,dy:e},i={x:s,filter:r,dy:e};return{x:()=>fa.runKernel(Vt,a,n),filter:()=>fa.runKernel(Gt,i,n)}}},pm={kernelName:qt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,s={dy:e,y:n};return{x:()=>fa.runKernel(Kt,s)}}},dm={kernelName:Xt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=pl(ec(wc(fl(n))),2/Math.sqrt(Math.PI));return{x:()=>pl(e,s)}}},fm={kernelName:Zt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(e,n)}}},mm={kernelName:Jt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>cu(e,n.shape)}}},gm={kernelName:Qt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(e,ec(n))}}},ym={kernelName:sn,gradFunc:e=>({x:()=>ml(e)})},bm={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ji(n.shape,s.shape);return{a:()=>{const t=hl(e,Ti(s,"float32")),a=Zi(n.shape,r);return a.length>0?cu(Nc(t,a),n.shape):t},b:()=>{let t=pl(e,Ti(n,"float32"));const a=Zi(s.shape,r);a.length>0&&(t=cu(Nc(t,a),s.shape));const i=fl(s);return wc(hl(t,Ti(i,"float32")))}}}},xm={kernelName:an,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:s}=n,[r,a,i,o]=t,l=null==o?Il(1):o,u=Zi(a.shape,r.shape),c=[];if(1===a.rank){for(let e=0;e<r.shape.length-1;++e)c.push(r.shape[e]);c.push(1)}const h=El(r,a),p=pl(e,l),d=Ah(ul(i,Il(s))),f=pl(pl(pl(d,d),d),Il(-.5));return{x:()=>1===a.rank?cu(pl(pl(e,sc(cu(d,[1,1,1,a.shape[0]]),c)),l),r.shape):cu(pl(pl(e,d),l),r.shape),mean:()=>{let e=pl(pl(d,Il(-1)),p);return 1===a.rank&&(e=Nc(e,u)),cu(e,a.shape)},variance:()=>{let e=pl(pl(f,h),p);return 1===a.rank&&(e=Nc(e,u)),cu(e,a.shape)},scale:()=>{const t=pl(h,d);let n=pl(e,t);return 1===a.rank&&(n=Nc(n,u)),cu(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Nc(t,u)),cu(t,a.shape)}}}},wm={kernelName:on,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[s,r]=t,{axis:a}=n,i=be(a,s.shape)[0];return{x:()=>{const t=s.shape,n=r.size,o=t.slice(0,i),l=o.length,u=t.slice(a,t.length).slice(1),c=u.length,h=vm(0,l),p=vm(l+1,l+1+c),d=km([o,[n],u]),f=cu(e,d),m=cu(r,[n]),g=km([[l],h,p]),y=Ki(f,g);let b=op(y,m,s.shape[i]);const x=Fc(g);return b=Ki(b,x),b},indices:()=>r}}};function vm(e,t){const n=[];for(let s=e;s<t;++s)n.push(s);return n}function km(e){const t=[];for(let n=0;n<e.length;++n)for(let s=0;s<e[n].length;++s)t.push(e[n][s]);return t}const Im={kernelName:cn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>ml(n),b:()=>ml(s)}}},Nm={kernelName:hn,gradFunc:e=>({x:()=>Ti(e,"float32")})},Sm={kernelName:fn,gradFunc:e=>({x:()=>ml(e)})},Tm={kernelName:mn,gradFunc:e=>({x:()=>ml(e)})},Cm={kernelName:gn,gradFunc:e=>({x:()=>ml(e)})},$m={kernelName:yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{alpha:r}=n,a=oc(s,0);return{x:()=>Ku(a,e,pl(e,r))}}},Em={kernelName:kn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,ul(n,1))}}},Am={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,Ti(n,"float32"))}}},Rm={kernelName:Tn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n;return{logits:()=>{const t=ec(s);return El(e,pl(Nc(e,r,!0),t))}}}},Fm=Ca({localResponseNormalizationBackprop_:function(e,t,n,s=5,r=1,a=1,i=.5){const o={x:e,y:t,dy:n},l={depthRadius:s,bias:r,alpha:a,beta:i};return fa.runKernel($n,o,l)}}),Dm={kernelName:Cn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{depthRadius:a,bias:i,alpha:o,beta:l}=n;return{x:()=>Fm(s,r,e,a,i,o,l)}}};function _m(e,t,n,s){return t.rank<n.rank&&(t=cu(t,Ec(t.shape,s))),e.rank<n.rank&&(e=cu(e,Ec(e.shape,s))),{x:()=>pl(e,Ti(qu(n,t),e.dtype))}}const Om={kernelName:En,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{reductionIndices:r}=s,a=t[0],i=_m(e,t[1],a,be(r,a.shape));return{x:()=>i.x()}}},Mm={kernelName:An,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>pl(e,Ti(lc(n,s),"float32")),b:()=>pl(e,Ti(fc(n,s),"float32"))}}},Lm=Ca({maxPool3dGrad_:function(e,t,n,s,r,a,i){const o=Na(e,"dy","maxPool3dGrad"),l=Na(t,"input","maxPool3dGrad"),u=Na(n,"output","maxPool3dGrad");let c=o,h=l,p=u,d=!1;4===l.rank&&(d=!0,c=cu(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=cu(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]]),p=cu(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]])),re(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),re(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),re(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),uu("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:s,strides:r,pad:a,dimRoundingMode:i},g=fa.runKernel(_n,f,m);return d?cu(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),zm={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=n;return{x:()=>Lm(e,s,r,a,i,o,l)}}},Pm=Ca({maxPoolGrad_:function(e,t,n,s,r,a,i){const o=Na(e,"dy","maxPoolGrad"),l=Na(t,"input","maxPoolGrad"),u=Na(n,"output","maxPoolGrad");re(l.rank===o.rank,(()=>`Rank of input (${l.rank}) does not match rank of dy (${o.rank})`)),re(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),re(4===l.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${l.rank}.`)),uu("maxPoolGrad",a,i);const c={dy:o,input:l,output:u},h={filterSize:s,strides:r,pad:a,dimRoundingMode:i};return fa.runKernel(Fn,c,h)}}),Bm={kernelName:Rn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s,r]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Pm(e,s,r,a,i,o)}}},Wm={kernelName:Pn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>mu(e,a,s.shape)}}},Um={kernelName:Zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const s=t[0],{paddings:r}=n,a=r.map((e=>e[0]));return{x:()=>mu(e,a,s.shape)}}},Vm={kernelName:Qn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,s,r]=t,a=n,i=s,o=Ji(a.shape,i.shape);return{a:()=>{const t=Ti(i,"float32");let n=pl(e,pl(t,$l(a,El(t,Il(1)))));const s=Zi(a.shape,o);return s.length>0&&(n=Nc(n,s)),cu(n,a.shape)},b:()=>{const t=oc(a,0),n=Ku(t,bc(a),ml(a));let s=pl(e,pl(r,n));const l=Zi(i.shape,o);return l.length>0&&(s=Nc(s,l)),cu(s,i.shape)}}}},Gm={kernelName:ys,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=oc(n,Il(0)),s=Il(Hd),r=Il(jd),a=pl(e,r),i=pl(pl(e,s),ec(Ti(n,"float32")));return Ku(t,a,i)}}}},Hm={kernelName:Ts,gradFunc:(e,t,n)=>{const{blockShape:s,paddings:r}=n;return{x:()=>bu(e,s,r)}}},jm={kernelName:Cs,gradFunc:(e,t,n)=>{const{axis:s}=n;return{x:()=>du(e,s)}}},qm=[Df,_f,Of,Mf,Lf,zf,Pf,Bf,Wf,Uf,Vf,Gf,jf,Kf,Xf,Yf,Zf,Jf,Qf,em,tm,nm,rm,sm,im,om,lm,um,cm,hm,{kernelName:Ht,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ji(n.shape,s.shape);return{a:()=>{const t=hl(e,Ti(s,"float32")),a=Zi(n.shape,r);return a.length>0?cu(Nc(t,a),n.shape):t},b:()=>{let t=pl(e,Ti(n,"float32"));const a=Zi(s.shape,r);a.length>0&&(t=cu(Nc(t,a),s.shape));const i=fl(s);return wc(hl(t,Ti(i,"float32")))}}}},pm,dm,fm,mm,gm,bm,ym,xm,wm,Im,Nm,Sm,Tm,Cm,$m,Em,Am,Rm,Dm,Om,Om,Mm,zm,Bm,{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{axis:r}=n,a=be(r,s.shape),i=le($c(s.shape,a)[1]);return{x:()=>{const t=s.shape.slice();a.forEach((e=>{t[e]=1}));const n=cu(e,t);return hl(pl(n,Gc(s.shape,"float32")),i)}}}},{kernelName:Ln,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const s=n,{axis:r}=s,[a,i]=t,o=_m(e,i,a,be(r,a.shape));return{x:()=>o.x()}}},{kernelName:zn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t;return{a:()=>pl(e,Ti(mc(n,s),"float32")),b:()=>pl(e,Ti(oc(n,s),"float32"))}}},Wm,{kernelName:Bn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ji(n.shape,s.shape);return{a:()=>{const t=Zi(n.shape,r);return t.length>0?cu(Nc(e,t),n.shape):e},b:()=>{const t=pl(e,wc(ac(hl(n,s)))),a=Zi(s.shape,r);return a.length>0?cu(Nc(t,a),s.shape):t}}}},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ji(n.shape,s.shape);return{a:()=>{const t=pl(e,Ti(s,"float32")),a=Zi(n.shape,r);return a.length>0?cu(Nc(t,a),n.shape):t},b:()=>{const t=pl(e,Ti(n,"float32")),a=Zi(s.shape,r);return a.length>0?cu(Nc(t,a),s.shape):t}}}},{kernelName:Vn,gradFunc:e=>({x:()=>wc(e)})},{kernelName:Xn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Vc(n.shape,"float32")}}},{kernelName:Kn,gradFunc:e=>({x:()=>ml(e)})},{kernelName:Yn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:s}=n;return lp(e,s).map((e=>()=>e))}},Um,Um,Vm,{kernelName:es,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,s]=t,r=oc(n,0);return{x:()=>Ku(r,e,pl(e,s)),alpha:()=>{let t=Ku(r,ml(e),pl(e,n));const a=Zi(s.shape,e.shape);return a.length>0&&(t=Nc(t,a)),cu(t,s.shape)}}}},{kernelName:rs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,wc(fl(n)))}}},{kernelName:hs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,s=pl(mc(n,6),Yh(n));return{x:()=>pl(e,Ti(s,"float32"))}}},{kernelName:as,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(e,Ti(Yh(n),"float32"))}}},{kernelName:is,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,n.shape)}}},{kernelName:us,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>fa.runKernel(cs,r,n)}}},{kernelName:os,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[s]=t,r={dy:e,images:s};return{images:()=>fa.runKernel(ls,r,n)}}},{kernelName:ps,gradFunc:(e,t,n)=>{const{dims:s}=n,r=be(s,e.shape);return{x:()=>Nh(e,r)}}},{kernelName:ds,gradFunc:e=>({x:()=>ml(e)})},{kernelName:fs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>wc(hl(e,pl($l(n,1.5),2)))}}},{kernelName:gs,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ti(ml(n),"float32"),t:()=>pl(e,Ti(n,e.dtype)),e:()=>pl(e,Ti(Mc(n),e.dtype))}}},Gm,{kernelName:ks,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(e,pl(n,El(Il(1),n)))}}},{kernelName:vs,gradFunc:e=>({x:()=>ml(e)})},{kernelName:xs,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(Pu(Ti(n,"float32")),e)}}},{kernelName:ws,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(Bu(Ti(n,"float32")),e)}}},{kernelName:bs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{begin:r,size:a}=n,i=s.shape,[o,l]=No(s,r,a),u=[];for(let t=0;t<e.rank;t++)u.push([o[t],i[t]-o[t]-l[t]]);return{x:()=>nh(e,u)}}},{kernelName:$s,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[s]=t,{dim:r}=n,a=pl(e,s);return{logits:()=>El(a,pl(Nc(a,[r],!0),s))}}},{kernelName:Is,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(e,fu(n))}}},Hm,Hm,jm,jm,{kernelName:Ns,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,pl(dl(Ti(n,"float32")),2))}}},{kernelName:_s,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Il(2);return{a:()=>pl(e,pl(r,El(n,s))),b:()=>pl(e,pl(r,El(s,n)))}}},{kernelName:Os,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(e,pl(Ti(n,"float32"),2))}}},{kernelName:Zs,gradFunc:e=>({x:()=>ml(e)})},{kernelName:Bs,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,s]=t,r=Ji(n.shape,s.shape);return{a:()=>{let t=e;const s=Zi(n.shape,r);return s.length>0&&(t=Nc(t,s)),cu(t,n.shape)},b:()=>{let t=e;const n=Zi(s.shape,r);return n.length>0&&(t=Nc(t,n)),cu(wc(t),s.shape)}}}},{kernelName:Ss,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,r=s.shape.slice(),{axis:a}=n;be(a,s.shape).forEach((e=>{r[e]=1}));const i=cu(e,r),o=pl(i,Gc(s.shape,"float32"));return{x:()=>o}}},{kernelName:Ws,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hl(e,fl(Pu(n)))}}},{kernelName:Us,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>pl(El(Il(1),fl(n)),e)}}},{kernelName:Vs,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[s]=t,{reps:r}=n;return{x:()=>{let t=ml(s);if(1===s.rank)for(let n=0;n<r[0];++n)t=ul(t,mu(e,[n*s.shape[0]],[s.shape[0]]));else if(2===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)t=ul(t,mu(e,[n*s.shape[0],a*s.shape[1]],[s.shape[0],s.shape[1]]));else if(3===s.rank)for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)t=ul(t,mu(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2]],[s.shape[0],s.shape[1],s.shape[2]]));else{if(4!==s.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${s.rank} tensors yet.`);for(let n=0;n<r[0];++n)for(let a=0;a<r[1];++a)for(let i=0;i<r[2];++i)for(let o=0;o<r[3];++o)t=ul(t,mu(e,[n*s.shape[0],a*s.shape[1],i*s.shape[2],o*s.shape[3]],[s.shape[0],s.shape[1],s.shape[2],s.shape[3]]))}return t}}}},{kernelName:js,gradFunc:(e,t,n)=>{const s=n,{perm:r}=s,a=Fc(r);return{x:()=>Ki(e,a)}}},{kernelName:Ks,gradFunc:(e,t,n)=>{const s=n,{axis:r}=s;return{value:()=>Xh(e,r)}}},{kernelName:Xs,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=Fl(t,ml(t)),s=ic(e,n);let r=lc(t,Il(0,"int32"));const a=s.rank-r.rank;for(let e=0;e<a;++e)r=tc(r,e+1);r=Oc(r,Gc(s.shape,"bool"));const i=ml(s);return Ku(r,s,i)}(e,n)}}},{kernelName:Ys,gradFunc:e=>({x:()=>ml(e)})}];for(const e of qm)hr(e);let Km;function Xm(){return null==Km&&(Km=ol().epsilon()),Km}Xr().prototype.abs=function(){return this.throwIfDisposed(),Rl(this)},Xr().prototype.acos=function(){return this.throwIfDisposed(),zl(this)},Xr().prototype.acosh=function(){return this.throwIfDisposed(),Pl(this)},Xr().prototype.add=function(e){return this.throwIfDisposed(),ul(this,e)},Xr().prototype.all=function(e,t){return this.throwIfDisposed(),Wl(this,e,t)},Xr().prototype.any=function(e,t){return this.throwIfDisposed(),Ul(this,e,t)},Xr().prototype.argMax=function(e){return this.throwIfDisposed(),Vl(this,e)},Xr().prototype.argMin=function(e){return this.throwIfDisposed(),Gl(this,e)},Xr().prototype.asScalar=function(){return this.throwIfDisposed(),re(1===this.size,(()=>"The array must have only 1 element.")),cu(this,[])},Xr().prototype.asType=function(e){return this.throwIfDisposed(),Ti(this,e)},Xr().prototype.as1D=function(){return this.throwIfDisposed(),cu(this,[this.size])},Xr().prototype.as2D=function(e,t){return this.throwIfDisposed(),cu(this,[e,t])},Xr().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),cu(this,[e,t,n])},Xr().prototype.as4D=function(e,t,n,s){return this.throwIfDisposed(),cu(this,[e,t,n,s])},Xr().prototype.as5D=function(e,t,n,s,r){return this.throwIfDisposed(),cu(this,[e,t,n,s,r])},Xr().prototype.asin=function(){return this.throwIfDisposed(),Hl(this)},Xr().prototype.asinh=function(){return this.throwIfDisposed(),jl(this)},Xr().prototype.atan=function(){return this.throwIfDisposed(),ql(this)},Xr().prototype.atan2=function(e){return this.throwIfDisposed(),Kl(this,e)},Xr().prototype.atanh=function(){return this.throwIfDisposed(),Xl(this)},Xr().prototype.avgPool=function(e,t,n,s){return this.throwIfDisposed(),hu(this,e,t,n,s)},Xr().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),bu(this,e,t)},Xr().prototype.batchNorm=function(e,t,n,s,r){return this.throwIfDisposed(),xu(this,e,t,n,s,r)},Xr().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Su(this,e)},Xr().prototype.cast=function(e){return this.throwIfDisposed(),Ti(this,e)},Xr().prototype.ceil=function(){return this.throwIfDisposed(),Tu(this)},Xr().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Cu(this,e,t)},Xr().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof Kr&&(e=[e]),du([this,...e],t)},Xr().prototype.conv1d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Du(this,e,t,n,s,r,a)},Xr().prototype.conv2dTranspose=function(e,t,n,s,r){return this.throwIfDisposed(),Ou(this,e,t,n,s,r)},Xr().prototype.conv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Fu(this,e,t,n,s,r,a)},Xr().prototype.cos=function(){return this.throwIfDisposed(),Pu(this)},Xr().prototype.cosh=function(){return this.throwIfDisposed(),Bu(this)},Xr().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Wu(this,e,t,n)},Xr().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Vu(this,e,t)},Xr().prototype.depthwiseConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Gu(this,e,t,n,s,r,a)},Xr().prototype.dilation2d=function(e,t,n,s,r){return this.throwIfDisposed(),ju(this,e,t,n,s,r)},Xr().prototype.divNoNan=function(e){return this.throwIfDisposed(),Xu(this,e)},Xr().prototype.div=function(e){return this.throwIfDisposed(),hl(this,e)},Xr().prototype.dot=function(e){return this.throwIfDisposed(),Yu(this,e)},Xr().prototype.elu=function(){return this.throwIfDisposed(),Ju(this)},Xr().prototype.equal=function(e){return this.throwIfDisposed(),qu(this,e)},Xr().prototype.erf=function(){return this.throwIfDisposed(),Qu(this)},Xr().prototype.exp=function(){return this.throwIfDisposed(),ec(this)},Xr().prototype.expandDims=function(e){return this.throwIfDisposed(),tc(this,e)},Xr().prototype.expm1=function(){return this.throwIfDisposed(),nc(this)},Xr().prototype.fft=function(){return this.throwIfDisposed(),Uh(this)},Xr().prototype.flatten=function(){return this.throwIfDisposed(),cu(this,[this.size])},Xr().prototype.floor=function(){return this.throwIfDisposed(),ac(this)},Xr().prototype.floorDiv=function(e){return this.throwIfDisposed(),cl(this,e)},Xr().prototype.gather=function(e,t){return this.throwIfDisposed(),ic(this,e,t)},Xr().prototype.greaterEqual=function(e){return this.throwIfDisposed(),lc(this,e)},Xr().prototype.greater=function(e){return this.throwIfDisposed(),oc(this,e)},Xr().prototype.ifft=function(){return this.throwIfDisposed(),Vh(this)},Xr().prototype.irfft=function(){return this.throwIfDisposed(),Gh(this)},Xr().prototype.isFinite=function(){return this.throwIfDisposed(),cc(this)},Xr().prototype.isInf=function(){return this.throwIfDisposed(),hc(this)},Xr().prototype.isNaN=function(){return this.throwIfDisposed(),pc(this)},Xr().prototype.leakyRelu=function(e){return this.throwIfDisposed(),dc(this,e)},Xr().prototype.lessEqual=function(e){return this.throwIfDisposed(),mc(this,e)},Xr().prototype.less=function(e){return this.throwIfDisposed(),fc(this,e)},Xr().prototype.localResponseNormalization=function(e,t,n,s){return this.throwIfDisposed(),yc(this,e,t,n,s)},Xr().prototype.logSigmoid=function(){return this.throwIfDisposed(),kc(this)},Xr().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Sc(this,e)},Xr().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),_c(this,e,t)},Xr().prototype.log=function(){return this.throwIfDisposed(),bc(this)},Xr().prototype.log1p=function(){return this.throwIfDisposed(),xc(this)},Xr().prototype.logicalAnd=function(e){return this.throwIfDisposed(),Oc(this,e)},Xr().prototype.logicalNot=function(){return this.throwIfDisposed(),Mc(this)},Xr().prototype.logicalOr=function(e){return this.throwIfDisposed(),Lc(this,e)},Xr().prototype.logicalXor=function(e){return this.throwIfDisposed(),zc(this,e)},Xr().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ji(this,e,t,n)},Xr().prototype.maxPool=function(e,t,n,s){return this.throwIfDisposed(),Pc(this,e,t,n,s)},Xr().prototype.max=function(e,t){return this.throwIfDisposed(),Ic(this,e,t)},Xr().prototype.maximum=function(e){return this.throwIfDisposed(),Fl(this,e)},Xr().prototype.mean=function(e,t){return this.throwIfDisposed(),Uc(this,e,t)},Xr().prototype.min=function(e,t){return this.throwIfDisposed(),jc(this,e,t)},Xr().prototype.minimum=function(e){return this.throwIfDisposed(),qc(this,e)},Xr().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),Kc(this,e,t)},Xr().prototype.mod=function(e){return this.throwIfDisposed(),Xc(this,e)},Xr().prototype.mul=function(e){return this.throwIfDisposed(),pl(this,e)},Xr().prototype.neg=function(){return this.throwIfDisposed(),wc(this)},Xr().prototype.norm=function(e,t,n){return this.throwIfDisposed(),fp(this,e,t,n)},Xr().prototype.notEqual=function(e){return this.throwIfDisposed(),Qc(this,e)},Xr().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),qi(this,e,t,n)},Xr().prototype.onesLike=function(){return this.throwIfDisposed(),eh(this)},Xr().prototype.pad=function(e,t){return this.throwIfDisposed(),nh(this,e,t)},Xr().prototype.pool=function(e,t,n,s,r,a){return this.throwIfDisposed(),lh(this,e,t,n,s,r,a)},Xr().prototype.pow=function(e){return this.throwIfDisposed(),$l(this,e)},Xr().prototype.prelu=function(e){return this.throwIfDisposed(),uh(this,e)},Xr().prototype.prod=function(e,t){return this.throwIfDisposed(),ch(this,e,t)},Xr().prototype.reciprocal=function(){return this.throwIfDisposed(),vh(this)},Xr().prototype.relu=function(){return this.throwIfDisposed(),kh(this)},Xr().prototype.relu6=function(){return this.throwIfDisposed(),Ih(this)},Xr().prototype.reshapeAs=function(e){return this.throwIfDisposed(),cu(this,e.shape)},Xr().prototype.reshape=function(e){return this.throwIfDisposed(),cu(this,e)},Xr().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),ed(this,e,t,n)},Xr().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),td(this,e,t,n)},Xr().prototype.reverse=function(e){return this.throwIfDisposed(),Nh(this,e)},Xr().prototype.rfft=function(){return this.throwIfDisposed(),jh(this)},Xr().prototype.round=function(){return this.throwIfDisposed(),Eh(this)},Xr().prototype.rsqrt=function(){return this.throwIfDisposed(),Ah(this)},Xr().prototype.selu=function(){return this.throwIfDisposed(),Rh(this)},Xr().prototype.separableConv2d=function(e,t,n,s,r,a){return this.throwIfDisposed(),Fh(this,e,t,n,s,r,a)},Xr().prototype.sigmoid=function(){return this.throwIfDisposed(),fu(this)},Xr().prototype.sign=function(){return this.throwIfDisposed(),_h(this)},Xr().prototype.sin=function(){return this.throwIfDisposed(),Oh(this)},Xr().prototype.sinh=function(){return this.throwIfDisposed(),Mh(this)},Xr().prototype.slice=function(e,t){return this.throwIfDisposed(),mu(this,e,t)},Xr().prototype.softmax=function(e){return this.throwIfDisposed(),Wh(this,e)},Xr().prototype.softplus=function(){return this.throwIfDisposed(),vc(this)},Xr().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),oh(this,e,t)},Xr().prototype.split=function(e,t){return this.throwIfDisposed(),Hh(this,e,t)},Xr().prototype.sqrt=function(){return this.throwIfDisposed(),dl(this)},Xr().prototype.square=function(){return this.throwIfDisposed(),fl(this)},Xr().prototype.squaredDifference=function(e){return this.throwIfDisposed(),qh(this,e)},Xr().prototype.squeeze=function(e){return this.throwIfDisposed(),Kh(this,e)},Xr().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof Kr?[this,e]:[this,...e];return Xh(n,t)},Xr().prototype.step=function(e){return this.throwIfDisposed(),Yh(this,e)},Xr().prototype.stridedSlice=function(e,t,n,s,r,a,i,o){return this.throwIfDisposed(),Zh(this,e,t,n,s,r,a,i,o)},Xr().prototype.sub=function(e){return this.throwIfDisposed(),El(this,e)},Xr().prototype.sum=function(e,t){return this.throwIfDisposed(),Nc(this,e,t)},Xr().prototype.tan=function(){return this.throwIfDisposed(),Jh(this)},Xr().prototype.tanh=function(){return this.throwIfDisposed(),gu(this)},Xr().prototype.tile=function(e){return this.throwIfDisposed(),sc(this,e)},Xr().prototype.toBool=function(){return this.throwIfDisposed(),Ti(this,"bool")},Xr().prototype.toFloat=function(){return this.throwIfDisposed(),Ti(this,"float32")},Xr().prototype.toInt=function(){return this.throwIfDisposed(),Ti(this,"int32")},Xr().prototype.topk=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},Xr().prototype.transpose=function(e){return this.throwIfDisposed(),Ki(this,e)},Xr().prototype.unique=function(e){return this.throwIfDisposed(),ip(this,e)},Xr().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),op(this,e,t)},Xr().prototype.unstack=function(e){return this.throwIfDisposed(),lp(this,e)},Xr().prototype.where=function(e,t){return this.throwIfDisposed(),Ku(e,this,t)},Xr().prototype.zerosLike=function(){return this.throwIfDisposed(),ml(this)};class Ym extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ym.prototype)}}class Zm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zm.prototype)}}class Jm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jm.prototype)}}class Qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qm.prototype)}}class eg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,eg.prototype)}}function tg(e,t){if(Array.isArray(e)){let n=[];for(let s=0;s<t;s++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ng(e,t){if(!e)throw new eg(t)}function sg(e,t){let n=0;for(const s of e)s===t&&n++;return n}function rg(e){return 1===e.length?e[0]:e}function ag(e){return Array.isArray(e)?e:[e]}function ig(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function og(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let lg={};function ug(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function cg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>cg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?cg(t):e[n]=t.value)}}}function hg(e,t={},n={},s="object",r=!1){if("string"==typeof e){const r=e;let a;if(r in n)a=n[r];else if(r in lg)a=lg[r];else if(a=t[r],null==a)throw new Jm(`Unknown ${s}: ${e}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Jm(`${s}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,l;if(i in n?[o,l]=n[i]:i in lg?[o,l]=lg.className:i in t&&([o,l]=t[i]),null==o)throw new Jm(`Unknown ${s}: ${i}. This may be due to one of the following reasons:\n1. The ${s} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${s} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=l){const e={};for(const t of Object.keys(lg))e[t]=lg[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},lg);for(const e of Object.keys(n))lg[e]=n[e];cg(a.config);const s=l(o,a.config,n,r);return lg=Object.assign({},t),s}{const e=Object.assign({},lg);for(const e of Object.keys(n))lg[e]=n[e];const t=new o(a.config);return lg=Object.assign({},e),t}}}function pg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function dg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function fg(e){if(null==e)throw new Jm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function mg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Jm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function gg(e,t,n=0,s=1/0){return ng(n>=0),ng(s>=n),Array.isArray(e)&&e.length>=n&&e.length<=s&&e.every((e=>typeof e===t))}function yg(e,t){Array.isArray(e)?(re(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>yg(e,`element ${n+1} of ${t}`)))):re(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${bg(e)}.`))}function bg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>bg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function xg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function wg(e,t){return Yo((()=>dl(Nc(pl(e,e),t,!0))))}class vg extends Co{getConfig(){return{}}}class kg extends vg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>{const t=wg(e,this.axis),n=Cu(t,0,this.maxValue);return pl(e,hl(n,ul(Xm(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}kg.className="MaxNorm",Eo(kg);class Ig extends vg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>hl(e,ul(Xm(),wg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ig.className="UnitNorm",Eo(Ig);class Ng extends vg{apply(e){return kh(e)}}Ng.className="NonNeg",Eo(Ng);class Sg extends vg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Yo((()=>{const t=wg(e,this.axis),n=ul(pl(this.rate,Cu(t,this.minValue,this.maxValue)),pl(1-this.rate,t));return pl(e,hl(n,ul(Xm(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Sg.className="MinMaxNorm",Eo(Sg);const Tg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Cg(e){return ug(e)}function $g(e,t={}){return hg(e,$o.getMap().classNameMap,t,"constraint")}function Eg(e){return null==e?null:"string"==typeof e?$g({className:e in Tg?Tg[e]:e,config:{}}):e instanceof vg?e:$g(e)}function Ag(e){return new kg(e)}function Rg(e){return new Ig(e)}function Fg(){return new Ng}function Dg(e){return new Sg(e)}const _g=["channelsFirst","channelsLast"],Og=["nearest","bilinear"],Mg=["valid","same","causal"],Lg=["max","avg"],zg=["sum","mul","concat","ave"],Pg=new Map;function Bg(e){mg(_g,"DataFormat",e)}function Wg(e){mg(Mg,"PaddingMode",e)}function Ug(e){mg(Lg,"PoolMode",e)}const Vg=[];function Gg(e,t){Vg.push(e);try{const e=t();return Vg.pop(),e}catch(e){throw Vg.pop(),e}}function Hg(e){if(!Kg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Vg.length?"":Vg.join("/")+"/")+e}function jg(e){if(!Kg(e))throw new Error("Not a valid tensor name: '"+e+"'");Pg.has(e)||Pg.set(e,0);const t=Pg.get(e);if(Pg.set(e,Pg.get(e)+1),t>0){const n=`${e}_${t}`;return Pg.set(n,1),n}return e}const qg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Kg(e){return!!e.match(qg)}function Xg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let s=1;for(let r=t;r<n;++r)s*=e[r];return s}function Yg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s<t&&(t=s)}return t}function Zg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const s=e[n];s>t&&(t=s)}return t}function Jg(e,t){if(t<e)throw new Jm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let s=e;s<t;++s)n.push(s);return n}function Qg(e,t){return Ti(e,t)}function ey(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),cu(e,n)}function ty(e,t,n){return Yo((()=>{switch(e.rank){case 1:return Lh(e,t,n);case 2:return zh(e,[t,0],[n,e.shape[1]]);case 3:return Ph(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Bh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return mu(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return mu(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Jm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ny(e,t,n){return Yo((()=>{switch(e.rank){case 1:return Lh(e,t,n);case 2:return zh(e,[0,t],[e.shape[0],n]);case 3:return Ph(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Bh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Jm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sy(e,t,n,s){return Yo((()=>{switch(e.rank){case 1:return Lh(e,t,n);case 2:switch(s){case 1:return ty(e,t,n);case 2:return ny(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${s}`)}case 3:switch(s){case 1:return ty(e,t,n);case 2:return Ph(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ny(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${s}`)}case 4:switch(s){case 1:return ty(e,t,n);case 2:return Bh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Bh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ny(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${s}`)}default:throw new Jm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ry(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),du(e,t)}function ay(e,t){switch(e.rank){case 1:return $u([e,t]);case 2:return Eu([e,t],0);case 3:return Au([e,t],0);case 4:return Ru([e,t],0);default:throw new Jm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function iy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Jm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return sc(e,t)}function oy(e,t=0,n=1,s,r){return yh(e,t,n,s,r)}function ly(e,t,n,s){if(e.rank<2||t.rank<2)throw new Qm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Qm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return Fp({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?hy(e.rank,s,"channelsLast"):null,activation:n});{const r=e.shape.slice(),a=r.pop();e=cu(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),l=i.pop(),u=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=cu(Ki(t,c),[l,-1]);const h=[...r,...u];return cu(Fp({a:e,b:t,transposeA:!1,transposeB:!1,bias:s?hy(e.rank,s,"channelsLast"):null,activation:n}),h)}}function uy(e,t,n){return Yo((()=>(t=Array.isArray(t)?Qh(t,"int32"):Ti(t,"int32"),ic(e,t,n))))}function cy(e){return pl(e,e)}function hy(e,t,n){const s=t.shape;if(1!==t.rank&&t.rank!==e)throw new Jm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===s.length?cu(t,[1,s[0],1,1,1]):cu(t,[1,s[3],s[0],s[1],s[2]]);if("channelsLast"===n)return 1===s.length?cu(t,[1,1,1,1,s[0]]):cu(t,[1].concat(s))}else if(4===e){if("channelsFirst"===n)return 1===s.length?cu(t,[1,s[0],1,1]):cu(t,[1,s[2],s[0],s[1]]);if("channelsLast"===n)return 1===s.length?cu(t,[1,1,1,s[0]]):cu(t,[1].concat(s))}else if(3===e){if("channelsFirst"===n)return 1===s.length?cu(t,[1,s[0],1]):cu(t,[1,s[1],s[0]]);if("channelsLast"===n)return 1===s.length?cu(t,[1,1,s[0]]):cu(t,[1].concat(s))}else if(e<3)return t;throw new Jm(`Unsupported input rank by biasAdd: ${t.rank}`)}function py(e,t,n){return Yo((()=>(null==n&&(n="channelsLast"),Bg(n),ul(e,hy(e.rank,t,n)))))}function dy(e,t,n,s){return Yo((()=>xp(e,t,n,s)))}function fy(e,t,n=!1){return n?e():t()}const my=["fanIn","fanOut","fanAvg"],gy=["normal","uniform","truncatedNormal"];class yy extends Co{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class by extends yy{apply(e,t){return Vc(e,t)}}by.className="Zeros",Eo(by);class xy extends yy{apply(e,t){return Gc(e,t)}}xy.className="Ones",Eo(xy);class wy extends yy{constructor(e){if(super(),"object"!=typeof e)throw new Jm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Jm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Yo((()=>pl(Il(this.value),Gc(e,t))))}getConfig(){return{value:this.value}}}wy.className="Constant",Eo(wy);class vy extends yy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return bh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}vy.className="RandomUniform",Eo(vy);class ky extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`randomNormal does not support dType ${t}.`);return oy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ky.className="RandomNormal",Eo(ky);class Iy extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`truncatedNormal does not support dType ${t}.`);return ap(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Iy.className="TruncatedNormal",Eo(Iy);class Ny extends yy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Yo((()=>{if(2!==e.length||e[0]!==e[1])throw new Jm("Identity matrix initializer can only be used for 2D square matrices.");return pl(this.gain,rc(e[0]))}))}getConfig(){return{gain:this.gain}}}Ny.className="Identity",Eo(Ny);class Sy extends yy{constructor(e){if(super(),e.scale<0)throw new Jm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,mg(my,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){mg(gy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,s;if(Bg(t),2===e.length)n=e[0],s=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Xg(e,2);n=e[1]*t,s=e[0]*t}else if("channelsLast"===t){const t=Xg(e,0,e.length-2);n=e[e.length-2]*t,s=e[e.length-1]*t}}else{const t=Xg(e);n=Math.sqrt(t),s=Math.sqrt(t)}return[n,s]}(e),s=n[0],r=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,s):"fanOut"===this.mode?a/=Math.max(1,r):a/=Math.max(1,(s+r)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`${this.getClassName()} does not support dType ${t}.`);return ap(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return bh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Sy.className="VarianceScaling",Eo(Sy);class Ty extends Sy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sy.className}}Ty.className="GlorotUniform",Eo(Ty);class Cy extends Sy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sy.className}}Cy.className="GlorotNormal",Eo(Cy);class $y extends Sy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sy.className}}$y.className="HeNormal",Eo($y);class Ey extends Sy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sy.className}}Ey.className="HeUniform",Eo(Ey);class Ay extends Sy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Sy.className}}Ay.className="LeCunNormal",Eo(Ay);class Ry extends Sy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Sy.className}}Ry.className="LeCunNormal",Eo(Ry);class Fy extends yy{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Qm("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Yo((()=>{if(e.length<2)throw new Qm("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=oy(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=$d.gramSchmidt(t);return e[0]>e[1]&&(n=Ki(n)),pl(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Fy.className="Orthogonal",Eo(Fy);const Dy={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _y(e,t={}){return hg(e,$o.getMap().classNameMap,t,"initializer")}function Oy(e){return ug(e)}function My(e){if("string"==typeof e){const t=e in Dy?Dy[e]:e;if("GlorotNormal"===t)return new Cy;if("GlorotUniform"===t)return new Ty;if("HeNormal"===t)return new $y;if("HeUniform"===t)return new Ey;if("LeCunNormal"===t)return new Ay;if("LeCunUniform"===t)return new Ry;{const e={};return e.className=t,e.config={},_y(e)}}return e instanceof yy?e:_y(e)}function Ly(){return new by}function zy(){return new xy}function Py(e){return new wy(e)}function By(e){return new vy(e)}function Wy(e){return new ky(e)}function Uy(e){return new Iy(e)}function Vy(e){return new Ny(e)}function Gy(e){return new Sy(e)}function Hy(e){return new Ty(e)}function jy(e){return new Cy(e)}function qy(e){return new $y(e)}function Ky(e){return new Ey(e)}function Xy(e){return new Ay(e)}function Yy(e){return new Ry(e)}function Zy(e){return new Fy(e)}let Jy=0;function Qy(){return Jy++}const eb={};function tb(e=""){return e in eb||(eb[e]=0),eb[e]+=1,e+eb[e].toString()}function nb(e){return Array.isArray(e)&&Array.isArray(e[0])}function sb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function rb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Jm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ab(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Jm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ib(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class ob{constructor(e,t="float32",n="Variable",s=!0,r=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Qy(),n=null==n?"Variable":n,this.originalName=Hg(n),this.name=jg(this.originalName),this.trainable_=s,this.constraint=r,this.val=up(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function lb(e){return e.map((e=>e.read()))}function ub(e){e.forEach((e=>{e[0].write(e[1])}))}class cb{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class hb{constructor(e,t,n,s,r,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=s,this.callArgs=r,this.outputTensorIndex=i,this.id=Qy(),null!=a&&(this.originalName=Hg(a),this.name=jg(this.originalName)),this.rank=t.length}}let pb=0;class db{constructor(e,t){this.callArgs=t,this.id=pb++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fb=0;class mb extends Co{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ig(e)+"_"+tb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Zm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Jm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return rg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return rg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ym(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Ym(`Layer ${this.name} is not connected, no input to return.`);return rg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ym(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ym(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return rg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ag(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ag(this.inputSpec);if(e.length!==t.length)throw new Jm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const s=e[n],r=t[n];if(null==r)continue;const a=s.rank;if(null!=r.ndim&&a!==r.ndim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${r.ndim}, found ndim=${a}`);if(null!=r.maxNDim&&a>r.maxNDim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${r.maxNDim}, found ndim=${a}`);if(null!=r.minNDim&&a<r.minNDim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${r.minNDim}, found ndim=${a}.`);if(null!=r.dtype&&s.dtype!==r.dtype)throw new Jm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${r.dtype}, found dtype=${s.dtype}.`);if(r.axes){const e=s.shape;for(const t in r.axes){const s=Number(t),a=r.axes[t],i=s>=0?e[s]:e[e.length+s];if(null!=a&&-1===[a,null].indexOf(i))throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${s} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=r.shape)for(let e=0;e<r.shape.length;++e){const t=r.shape[e],a=s.shape[e];if(null!=t&&null!=a&&t!==a)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${r.shape}, found shape=${s.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ag(e);let s=!0;for(const e of n)if(!(e instanceof hb)){s=!1;break}let r=!0;for(const e of n)if(e instanceof hb){r=!1;break}if(s===r)throw new Jm("Arguments to apply() must be all SymbolicTensors or all Tensors");return Gg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ag(e))t.push(n.shape);this.build(rg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&r&&(this._refCount=1)}if(this.assertInputCompatibility(e),r){let s=this.call(e,t);const r=ag(s),a=[];for(let e of r)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(s=rg(a),null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}{const n=function(e){e=ag(e);const t=[];for(const n of e)t.push(n.shape);return rg(t)}(e),s=this.computeOutputShape(n);let r;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),r=null!=s&&s.length>0&&Array.isArray(s[0])?s.map(((n,s)=>new hb(a,n,this,ag(e),t,this.name,s))):new hb(a,s,this,ag(e),t,this.name),this.addInboundNode(e,r,null,null,n,s,t),this._refCount++,null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,s)=>{null!=n&&null!=e[s]&&e[s]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ym(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ym(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Zm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ib(this.weights)}build(e){this.built=!0}getWeights(e=!1){return lb(e?this.trainableWeights:this.weights)}setWeights(e){Yo((()=>{const t=this.weights;if(t.length!==e.length)throw new Jm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],s=lb(t);for(let r=0;r<s.length;++r){const a=s[r],i=t[r],o=e[r];if(!ce(a.shape,o.shape))throw new Jm(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}ub(n)}))}addWeight(e,t,n,s,r,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Jm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(s=null!=o?o():My("zeros"));const l=s.apply(t,n),u=new ob(l,n,e,a,i);return l.dispose(),null!=r&&this.addLoss((()=>r.apply(u.read()))),null==a&&(a=!0),a?this._trainableWeights.push(u):this._nonTrainableWeights.push(u),u}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ag(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,s,r,a,i=null){const o=ag(e);t=ag(t),n=ag(n),s=ag(s),r=sb(r),a=sb(a);const l=[],u=[],c=[];for(const e of o)l.push(e.sourceLayer),u.push(e.nodeIndex),c.push(e.tensorIndex);new db({outboundLayer:this,inboundLayers:l,nodeIndices:u,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:s,inputShapes:r,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function gb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const s=gb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of s)-1===t.indexOf(e)&&t.push(e)}return t}}}class yb extends mb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:tb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Jm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Jm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Jm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const s=new hb(this.dtype,this.batchInputShape,this,[],{},this.name);s.nodeIndex=0,s.tensorIndex=0,new db({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[s],outputTensors:[s],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Jm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function bb(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Jm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new yb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function xb(e){if(null==e)return;const t=[],n=[],s=[];for(const r in e){const a=e[r];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(r),s.push(e)}}if(t.length>0){const r=await Promise.all(t);for(let t=0;t<r.length;++t)e[n[t]]=r[t][0];Zo(s)}}function wb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var vb;yb.className="InputLayer",Eo(yb),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(vb||(vb={}));class kb{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Ib{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Nb extends kb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const s=t[e];if("number"==typeof s)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+s*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const r=Yo((()=>ul(this.totals[e],pl(s,n))));this.totals[e]=r,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Yo((()=>{const n=pl(hl(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Jo(t[e])})))}}class Sb extends kb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const s in this.history){const r=this.history[s];for(let a=0;a<r.length;++a)if("number"!=typeof r[a]){const i=r[a];e.push(i.data()),t.push(s),n.push(a)}}const s=await Promise.all(e);for(let e=0;e<s.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=s[e][0]}}class Tb extends kb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||_d,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Ae(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let s,r=null!=n?n():Fr();return(...a)=>{const i=null!=n?n():Fr();return i-r<t||(r=i,s=e(...a)),s}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const s=[];null!=this.yield&&(await xb(n),s.push(this.yield(e,t,n))),s.push(this.nextFrameFunc()),await Promise.all(s)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await xb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await xb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await xb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await xb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Ae(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await xb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await xb(e),await this.trainEnd(e))}}function Cb(e,t){return null==e&&(e={}),e instanceof kb?[e]:Array.isArray(e)&&e[0]instanceof kb?e:ag(e).map((e=>new Tb(e,t)))}class $b{constructor(){}static registerCallbackConstructor(e,t){re(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),$b.checkForDuplicate(t),null==$b.constructors[e]&&($b.constructors[e]=[]),$b.constructors[e].push(t)}static checkForDuplicate(e){for(const t in $b.constructors)$b.constructors[+t].forEach((t=>{if(t===e)throw new Jm("Duplicate callback constructor.")}))}static clear(){$b.constructors={}}static createCallbacks(e){const t=[];for(const n in $b.constructors){const s=+n;e>=s&&t.push(...$b.constructors[s])}return t.map((e=>new e))}}function Eb(e,t,n,s,r,a,i,o,l){const u=new Sb,c=[new Nb,...$b.createCallbacks(t)];null!=e&&c.push(...e),c.push(u);const h=new Ib(c);return h.setParams({epochs:n,initialEpoch:s,samples:r,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:l}),{callbackList:h,history:u}}function Ab(e,t={},n=!1){return hg(e,$o.getMap().classNameMap,t,"layer",n)}function Rb(e,t){return Yo((()=>{"float32"!==e.dtype&&(e=Ti(e,"float32"));const n=Nc(cy(e),t,!0),s=Tl(n.shape,Xm()),r=dl(Fl(n,s));return hl(e,r)}))}function Fb(e,t){return Yo((()=>Uc(cy(El(t,e)),-1)))}function Db(e,t){return Yo((()=>Uc(Rl(El(t,e)),-1)))}function _b(e,t){return Yo((()=>{const n=El(e,t),s=Cu(Rl(e),Xm(),Number.MAX_VALUE),r=Rl(hl(n,s));return pl(100,Uc(r,-1))}))}function Ob(e,t,n=!1){return Yo((()=>{if(n)t=Wh(t);else{const e=Nc(t,t.shape.length-1,!0);t=hl(t,e)}return t=Cu(t,Xm(),1-Xm()),wc(Nc(pl(Ti(e,"float32"),bc(t)),t.shape.length-1))}))}function Mb(e,t,n=!1){return Yo((()=>{const s=Ti(ac(function(e){const t=[Xg(e.shape)];return cu(e,t)}(e)),"int32"),r=(t=Cu(t,Xm(),1-Xm())).shape;return Ob(cu(qi(s,r[r.length-1]),r),t,n)}))}function Lb(e,t){return Yo((()=>{let n;return n=Cu(t,Xm(),1-Xm()),n=bc(hl(n,El(1,n))),Uc(function(e,t){if(!ce(e.shape,t.shape))throw new Jm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Yo((()=>{const n=kh(t),s=wc(Rl(t));return ul(El(n,pl(t,e)),xc(ec(s)))}))}(e,n),-1)}))}function zb(e,t){return Yo((()=>{const n=Rb(e,-1),s=Rb(t,-1),r=pl(n,s);return wc(Nc(r,-1))}))}$b.constructors={};const Pb={meanSquaredError:Fb,meanAbsoluteError:Db,meanAbsolutePercentageError:_b,meanSquaredLogarithmicError:function(e,t){return Yo((()=>{const n=Cu(t,Xm(),Number.MAX_VALUE),s=bc(ul(1,n)),r=Cu(e,Xm(),Number.MAX_VALUE),a=bc(ul(1,r));return Uc(cy(El(s,a)),-1)}))},squaredHinge:function(e,t){return Yo((()=>{const n=Fl(0,El(1,pl(e,t)));return Uc(cy(n),-1)}))},hinge:function(e,t){return Yo((()=>{const n=Fl(0,El(1,pl(e,t)));return Uc(n,-1)}))},categoricalHinge:function(e,t){return Yo((()=>{const n=Nc(pl(e,t),-1),s=Ic(pl(El(1,e),t),-1);return Fl(0,ul(1,El(s,n)))}))},logcosh:function(e,t){return Yo((()=>{const n=Math.log(2),s=El(t,e),r=El(ul(s,vc(pl(-2,s))),n);return Uc(r,-1)}))},categoricalCrossentropy:Ob,sparseCategoricalCrossentropy:Mb,binaryCrossentropy:Lb,kullbackLeiblerDivergence:function(e,t){return Yo((()=>{const n=Cu(e,Xm(),1),s=Cu(t,Xm(),1);return Nc(pl(e,bc(hl(n,s))),-1)}))},poisson:function(e,t){return Yo((()=>{const n=bc(ul(Xm(),t));return Uc(El(t,pl(e,n)),-1)}))},cosineProximity:zb};function Bb(e){if("string"==typeof e){if(e in Pb)return Pb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Jm(t)}return e}function Wb(e,t){return Yo((()=>{const n=pl(.5,eh(t)),s=Qg(oc(t,n),e.dtype);return Uc(qu(e,s),-1)}))}function Ub(e,t){return Yo((()=>Qg(qu(Vl(e,-1),Vl(t,-1)),"float32")))}function Vb(e,t){return Yo((()=>Ti(Nc(Oc(qu(e,1),qu(t,1))),"float32")))}function Gb(e,t){return Yo((()=>{const n=Vb(e,t),s=function(e,t){return Yo((()=>Ti(Nc(Oc(qu(e,0),qu(t,1))),"float32")))}(e,t),r=ul(n,s);return Ti(Ku(oc(r,0),hl(n,r),0),"float32")}))}function Hb(e,t){return Lb(e,t)}function jb(e,t){return e.rank===t.rank&&(e=Kh(e,[e.rank-1])),(t=Vl(t,-1)).dtype!==e.dtype&&(t=Ti(t,e.dtype)),Ti(qu(e,t),"float32")}const qb=Ob,Kb=Mb,Xb={binaryAccuracy:Wb,categoricalAccuracy:Ub,precision:Gb,categoricalCrossentropy:qb,sparseCategoricalCrossentropy:Kb,mse:Fb,MSE:Fb,mae:Db,MAE:Db,mape:_b,MAPE:_b,cosine:zb};function Yb(e){if("string"==typeof e&&e in Xb)return Xb[e];if("string"!=typeof e&&null!=e)return e;throw new Jm(`Unknown metric ${e}`)}function Zb(e){if(ng(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Pb))if(Pb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Xb))if(Xb[n]===e){t=n;break}return void 0!==t?t:e.name}}function Jb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Qb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Qb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Qb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Qb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function ex(e,t,n=console.log){let s="";for(let n=0;n<e.length;++n)n>0&&(s=s.slice(0,s.length-1)+" "),s+=e[n],s=s.slice(0,t[n]),s+=" ".repeat(t[n]-s.length);n(s)}function tx(e,t,n){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}ex([`${e.name} (${e.getClassName()})`,s,e.countParams().toString()],t,n)}function nx(e,t,n,s){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,s=t.nodeIndices[e],r=t.tensorIndices[e];a.push(`${n}[${s}][${r}]`)}const i=e.name,o=e.getClassName(),l=0===a.length?"":a[0];ex([`${i} (${o})`,r,e.countParams().toString(),l],t,s);for(let e=1;e<a.length;++e)ex(["","","",a[e]],t,s)}function sx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function rx(e,t){if(null===e)return null;if("string"==typeof e)return og(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];sx(t,r,s)?n.push(s):n.push(rx(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];if("name"===n&&"string"==typeof s)t[n]=s;else{const e=og(n);t[e]=rx(s,e)}}return t}}function ax(e,t){if(null==e)return null;if("string"==typeof e)return ig(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],s=e.length;for(let r=0;r<s;++r){const s=e[r];sx(t,r,s)?n.push(s):n.push(ax(s,t))}return n}{const t={};for(const n of Object.keys(e)){const s=e[n];t[ig(n)]="name"!==n&&"className"!==n||"string"!=typeof s?ax(s,n):s}return t}}const ix="3.13.0";class ox{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ox)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Jm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ti(t,e.dtype)}catch(n){throw new Jm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hb){if(null==this.id2Value[e.id])throw new Jm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hb){if(null==this.id2Value[e.id])throw new Jm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Zo(this.id2Mask)}}const lx={},ux={};function cx(e,t,n,s){const r=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),l=[],u=t.names();for(const e of o)-1!==u.indexOf(e)?l.push(t.getValue(e)):l.push(null);null!=s&&(s.maxNumTensors=-1/0,s.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==lx[c]){const e=function(e,t){re(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],s={};if(1===e.length){const r=px(e[0],t);n=r.sorted,s=r.recipientMap}else{const r=new Set;for(const a of e){const{sorted:e,recipientMap:i}=px(a,t);for(const t of e)r.has(t.name)||(n.push(t),r.add(t.name));for(const e in i)null==s[e]&&(s[e]=new Set),i[e].forEach((t=>s[e].add(t)))}}return{sorted:n,recipientCounts:hx(s)}}(i,t);h=e.sorted,p=e.recipientCounts,lx[c]=h,ux[c]=p}h=lx[c],p={},r||Object.assign(p,ux[c]);const d=new ox(t);for(let e=0;e<h.length;++e){if(null!=s){const e=Ko().numTensors;e>s.maxNumTensors&&(s.maxNumTensors=e),e<s.minNumTensors&&(s.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof yb)continue;const u=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),s=d.getMask(e);u.push(n),c.push(s),null!=s&&(m=!0),r||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=ag(i.apply(u,n));let y=null;i.supportsMasking&&(y=i.computeMask(u,c));const b=dx(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(l[t]=g[e])}r||Zo(f)}return d.disposeMasks(),a?l:l[0]}function hx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function px(e,t){const n=new Set,s=[],r={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),s.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==r[t.name]&&(r[t.name]=new Set),r[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:s,recipientMap:r}}function dx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const s of e.sourceLayer.inboundNodes[t].outputTensors)if(s.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class fx extends mb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=tb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],dg(this.inputs).length!==this.inputs.length)throw new Jm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);dg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(s)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,s=e.tensorIndex;ng(0===n,"input layer has >1 nodes"),ng(0===s,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(s)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof yb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},s={},r={},a={},i=[],o=(e,t,n,s,r,l)=>{null!=s&&null!=r&&null!=l||(s=e.sourceLayer,r=e.nodeIndex,l=e.tensorIndex);const u=s.inboundNodes[r];if(-1!==n.indexOf(u))throw new Zm(`The tensor ${e.name} at layer "${s.name}" is part of a cycle.`);if(-1!==t.indexOf(u))return;this.containerNodes.add(fx.nodeKey(s,r)),s.id in a||(a[s.id]=Object.keys(a).length),-1===n.indexOf(u)&&n.push(u);const c=u.inboundLayers.length;for(let e=0;e<c;e++){const s=u.inputTensors[e],r=u.inboundLayers[e],a=u.nodeIndices[e],i=u.tensorIndices[e];o(s,t,n,r,a,i)}for(t.push(u);n.indexOf(u)>=0;)n.splice(n.indexOf(u),1);i.push(u)},l=[],u=[];for(const e of this.outputs)o(e,l,u);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==s[e.outboundLayer.id]?0:s[e.outboundLayer.id];a=Math.max(a,i),s[e.outboundLayer.id]=a,r[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let s=0;s<e.inboundLayers.length;s++){const r=e.inboundLayers[s],i=e.nodeIndices[s],o=r.inboundNodes[i],l=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,l),n[o.id]=o}}const h={};for(const e in t){const s=t[e];s in h||(h[s]=[]),h[s].push(n[e])}const p={};for(const e in s){const t=s[e];t in p||(p[t]=[]),p[t].push(r[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(pg);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],s=a[t.id];return n<s?-1:n>s?1:0}));for(const e of t)e instanceof fx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(pg);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Zm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Zm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new db({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Jm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let s=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Jm(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,s++}const r=[];for(const s in e){let a=s;if(null==n[s]){const e=s.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])r.push([n[a],e[s]]);else if(t)throw new Jm(`Provided weight data has no target variable: ${s}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Jm(`${e.length} of ${s} weights are not set: ${e}`)}ub(r)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${ix}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=ax(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Yo((()=>{e=ag(e);const n=new ox;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return cx(this.outputs,n,t)}))}computeMask(e,t){return Yo((()=>{let n;return e=ag(e),n=null==t?tg(null,e.length):ag(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=sb(e);if(t.length!==this.inputLayers.length)throw new Jm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const s=this.inputLayers[e],r=t[e];n[s.name+"_0_0"]=r}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(pg);if(s.length>1)for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const s=[];for(let t=0;t<e.inboundLayers.length;t++){const r=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${r.name}_${a}_${i}`];s.push(o)}const r=sb(t.computeOutputShape(rg(s))),a=t.inboundNodes.indexOf(e);for(let e=0;e<r.length;e++)n[`${t.name}_${a}_${e}`]=r[e]}}const r=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],s=this.outputLayersTensorIndices[e],r=`${t.name}_${n}_${s}`;a.push(r)}for(let e=0;e<a.length;e++){const t=a[e];ng(t in n),r.push(n[t])}return rg(r)}runInternalGraph(e,t){null==t&&(t=tg(null,e.length));const n={};for(let s=0;s<this.inputs.length;++s){const r=this.inputs[s],a=e[s],i=t[s];n[r.id]=[a,i]}const s=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(pg);for(const e of s){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,s=e.inputTensors,r=e.outputTensors,a=new Array;for(const e of s)e.id in n&&a.push(n[e.id]);if(a.length===s.length){let s,i,o,l,u={};if(null!=e.callArgs&&(u=e.callArgs),1===a.length){const[e,n]=a[0];null==u.mask&&(u.mask=n),o=ag(t.call(e,u)),l=ag(t.computeMask(e,n)),s=[e],i=[n]}else s=a.map((e=>e[0])),i=a.map((e=>e[1])),null==u.mask&&(u.mask=i),o=ag(t.call(s,u)),l=ag(t.computeMask(s,i));if(t.activityRegularizer)throw new Qm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<r.length;++e){const t=r[e],s=o[e],a=l[e];n[t.id]=[s,a]}}}}const r=[],a=[],i=[];for(const e of this.outputs){ng(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,s]=n[e.id];i.push(t.shape),r.push(t),a.push(s)}return[r,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof fx?1:0;for(let s=0;s<e.inboundNodes.length;s++){const r=fx.nodeKey(e,s);this.containerNodes.has(r)&&(t[r]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Jm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Jm("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Jm(`No such layer: ${e}`)}calculateLosses(){return Yo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const s=fx.nodeKey(t,n);this.containerNodes.has(s)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const s=e.getClassName(),r=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const s=e.inboundNodes[n],r=fx.nodeKey(e,n);let i={};if(this.containerNodes.has(r)){if(s.callArgs)try{JSON.stringify(s.callArgs),i=s.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${s.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(s.inboundLayers.length>0){const e=[];for(let n=0;n<s.inboundLayers.length;n++){const r=s.inboundLayers[n],a=s.nodeIndices[n],o=s.tensorIndices[n];let l=t[fx.nodeKey(r,a)];null==l&&(l=0),e.push([r.name,l,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=s,i.config=r,i.inboundNodes=a,n.push(i)}e.layers=n;const s=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],r=this.inputLayersNodeIndices[e],a=fx.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];s.push([n.name,i,o])}e.inputLayers=s;const r=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],s=this.outputLayersNodeIndices[e],a=fx.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];r.push([n.name,i,o])}return e.outputLayers=r,e}static fromConfig(e,t,n={},s=!1){const r={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let s;for(const a of t){const o=a[0],l=a[1],u=a[2];if(s=null==a[3]?{}:a[3],!(o in r))return void i(e,t);const c=r[o];if(c.inboundNodes.length<=l)return void i(e,t);const h=c.inboundNodes[l];n.push(h.outputTensors[u])}n.length>0&&e.apply(rg(n),s)}function l(e){const n=e.name,a=Ab(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(s),r[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Jm(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const u=t.name,c=t.layers;for(const e of c)l(e);for(;!fg(a);)for(const e of c){const t=r[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],s=e[2];ng(t in r);const a=r[t].inboundNodes[n].outputTensors;h.push(a[s])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],s=e[2];ng(t in r);const a=r[t].inboundNodes[n].outputTensors;p.push(a[s])}return new e({inputs:h,outputs:p,name:u})}get stateful(){if(this._stateful)throw new Jm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Yo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function mx(e,t){return function(e,t,n){const s=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===s)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==s)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${s} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${s}) outputs, so ${n} must be either an array with ${s} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function gx(e,t,n,s){if(null!=t||null!=s)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Yo((()=>{if(1===e.shape.length)return Ci(e);if(2===e.shape.length){if(e.shape[1]>1)return Vl(e,1);if(1===e.shape[1])return cu(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),s=Array.from(await t.data());Zo(t);const r=[];return s.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);r.push(n[e])})),Qh(r,"float32")}return null}function yx(e,t){return pl(e,t)}function bx(e,t){let n,s;const r=t;n=r.xs,s=r.ys,re(null!=n&&null!=s,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=xx("input",e.inputNames,n),i=xx("output",e.outputNames,s),o=a[0].shape[0];re(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),re(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)re(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)re(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function xx(e,t,n){if(n instanceof Kr)return[n];if(Array.isArray(n))return re(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const s=[];for(const r of t){if(null==n[r])throw new Jm(`The feature data generated by the dataset lacks the required ${e} key '${r}'.`);s.push(n[r])}return s}}function wx(e){return"function"==typeof e.iterator}function vx(e){re(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function kx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ty(e,t,n-t))):ty(e,t,n-t)}function Ix(e,t){return Yo((()=>null==e?null:Array.isArray(e)?e.map((e=>Ix(e,t))):uy(e,"int32"===t.dtype?t:Ti(t,"int32"))))}function Nx(e,t){const n=[];let s=0,r=null;for(;s<e;)r=s+t,r>=e&&(r=e),n.push([s,r]),s=r;return n}function Sx(e){const t=[];e instanceof Kr&&(e=[e]);for(let n=0;n<e.length;++n){const s=e[n];if(1===s.rank)t.push(ey(s,1));else{if(0===s.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(s)}}return t}function Tx(e,t){if(null==e)return;const n=[];if(t instanceof Kr)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const s=t[e];n.push(s.id)}const s=[];if(e instanceof Kr)-1===n.indexOf(e.id)&&s.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&s.push(e)}));else if(null!=e)for(const t in e){const r=e[t];-1===n.indexOf(r.id)&&s.push(r)}s.forEach((e=>{e.isDisposed||e.dispose()}))}function Cx(e){return Array.isArray(e)}function $x(e){return!function(e){return e instanceof Kr}(e)&&!Cx(e)}function Ex(e,t,n,s=!0,r=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Cx(e)&&e.length>0)t=!0;else if($x(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Jm(`Error when checking model ${r} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if($x(e)){a=[];for(const n of t){if(null==e[n])throw new Jm(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Cx(e)){if(e.length!==t.length)throw new Jm(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Jm(`The model ${r} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Sx(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Jm(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!s)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new Jm(`${r} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${r} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Ax(e,t,n,s=!0,r=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Jm(`Error when checking model ${r}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Jm(`The model expects ${t.length} ${r} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Jm(`Error when checking ${r}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!s)continue;const o=i.shape[a],l=n[e][a];if(null!=l&&l!==o)throw new Jm(`Error when checking ${r}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class Rx extends fx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Jm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,s=console.log){const r=function(e){let t=!0;const n=[],s=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}s.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const r of n.inboundNodes)if(-1!==s.indexOf(r)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(r?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!r){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}s("_".repeat(t)),ex(a,n,s),s("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)r?tx(o[e],n,s):nx(o[e],n,i,s),s((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const l=function(e){let t;return t=null!=e.collectedTrainableWeights?ib(e.collectedTrainableWeights):ib(e.trainableWeights),t}(e),u=ib(e.nonTrainableWeights);s(`Total params: ${l+u}`),s(`Trainable params: ${l}`),s(`Non-trainable params: ${u}`),s("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>Fd.adagrad(.01),Adadelta:()=>Fd.adadelta(1,.95,Xm()),Adam:()=>Fd.adam(.001,.9,.999,Xm()),Adamax:()=>Fd.adamax(.002,.9,.999,Xm(),0),RMSProp:()=>Fd.rmsprop(.001,.9,0,Xm()),SGD:()=>Fd.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Jm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Nl))throw new Jm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Jm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Bb(e)))}else{const n=Bb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Jm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Bb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Gg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const s=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const s of t){let t=n.hasOwnProperty(s)?n[s]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),r=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Gg("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,s,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let r;1===t[t.length-1]||this.lossFunctions[e]===Lb?-1!==["accuracy","acc"].indexOf(i)?s=Wb:-1!==["crossentropy","ce"].indexOf(i)&&(s=Hb):this.lossFunctions[e]===Mb?-1!==["accuracy","acc"].indexOf(i)?s=jb:-1!==["crossentropy","ce"].indexOf(i)&&(s=Kb):-1!==["accuracy","acc"].indexOf(i)?s=Ub:-1!==["crossentropy","ce"].indexOf(i)&&(s=qb),-1!==["accuracy","acc"].indexOf(i)?r="acc":-1!==["crossentropy","ce"].indexOf(i)&&(r="ce"),a=s,n=""+r}else{const e=Yb(i);a=e,n=""+Zb(i)}let t;Gg(n,(()=>{t=a})),r(e,n,t)}})(s[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const s=null==n.batchSize?32:n.batchSize;vx(s);const r=this.standardizeUserDataXY(e,t,!0,s);try{const a=r[0].concat(r[1]);this.makeTestFunction();const i=this.testFunction;return rg(this.testLoop(i,a,s,n.verbose,n.steps))}finally{Tx(r[0],e),Tx(r[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const s=null!=(n=n||{}).batches,r=e.testFunction;let a=[];if(n.verbose>0)throw new Qm("Verbose mode is not implemented yet.");re(!s||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,l=0;for(;!s||l<n.batches;){const t=await i.next();if(a=Yo((()=>{if(t.value){const{xs:n,ys:s}=bx(e,t.value),i=n.concat(s),u=Yo((()=>r(i)));if(Zo(i),0===l)for(let e=0;e<u.length;++e)a.push(Il(0));const c=i[0].shape[0];for(let e=0;e<u.length;++e){const t=u[e],n=a[e];a[e]=Yo((()=>ul(a[e],pl(c,t)))),l>0&&Zo(n)}Zo(u),o+=c,++l}return a})),t.done){s&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=hl(a[e],o),Zo(t)}return rg(a)}(this,e,t)}checkNumSamples(e,t,n,s="steps"){let r;if(null!=n){if(r=null,null!=t)throw new Jm(`If ${s} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Jm(`Either the input data should have a defined shape, or ${s} shoud be specified.`);r=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return r}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Jm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),s=n?t:[t],r=this.retrieveSymbolicTensors(s),a=new ox;if(e instanceof Kr&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Jm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Jm(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=cx(r,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=tg(null,e.length);let n=e.length;for(const s of this.layers){const r=Array.isArray(s.output)?s.output:[s.output],a=r.map((e=>e.name));for(let s=0;s<e.length;++s){const i=a.indexOf(e[s]);if(-1!==i&&(t[s]=r[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,s)=>{null==t&&n.push(e[s])})),new Jm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Yo((()=>{const s=this.checkNumSamples(e);if(n)throw new Qm("Verbose predictLoop() is not implemented yet.");const r=Nx(s,t),a=this.outputs.map((e=>[]));for(let t=0;t<r.length;++t)Yo((()=>{const n=r[t][0],s=r[t][1],a=kx(e,n,s),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new ox(i);return cx(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)));return rg(a.map((e=>du(e,0))))}))}predict(e,t={}){const n=Sx(e);Ax(n,this.inputNames,this.feedInputShapes,!1);try{const s=null==t.batchSize?32:t.batchSize;return vx(s),this.predictLoop(n,s)}finally{Tx(n,e)}}predictOnBatch(e){Ax(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,s){if(null==this.optimizer_)throw new Zm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const r=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Mb?r.push(t.slice(0,t.length-1).concat([1])):r.push(t)}if(function(e,t,n){const s=dg(e.map((e=>e.shape[0])));s.sort();const r=dg(t.map((e=>e.shape[0])));if(r.sort(),s.length>1)throw new Jm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(r.length>1)throw new Jm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(s.length>0&&r.length>0&&!ce(s,r))throw new Jm(`Input Tensors should have the same number of samples as target Tensors. Found ${s[0]} input sample(s) and ${r[0]} target sample(s).`)}(e=Ex(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Ex(t,this.feedOutputNames,r,!1,"target")),function(e,t,n){const s=[Fb,Lb,Ob];for(let r=0;r<e.length;++r){const a=e[r],i=t[r],o=n[r];if(null!=i){if(i===Ob&&1===a.shape[a.shape.length-1])throw new Jm(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==s.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const s=e[n],r=t[n];if(null!=r&&s!==r)throw new Jm(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=s&&s>0&&e[0].shape[0]%s!=0)throw new Jm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${s}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,s,r=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,r,a);if(null!=n)throw new Error("sample weight is not supported yet.");let l=null;if(null!=s){const e=mx(s,this.outputNames);l=[];for(let t=0;t<e.length;++t)l.push(await gx(o[t],null,e[t]))}return[i,o,l]}testLoop(e,t,n,s=0,r){return Yo((()=>{const a=this.checkNumSamples(t,n,r,"steps"),i=[];if(s>0)throw new Qm("Verbose mode is not implemented yet.");if(null!=r)throw new Qm("steps mode in testLoop() is not implemented yet");{const s=Nx(a,n),r=Qh(Jg(0,a));for(let n=0;n<s.length;++n){const a=s[n][0],o=s[n][1],l=ty(r,a,o-a),u=Ix(t,l),c=e(u);if(0===n)for(let e=0;e<c.length;++e)i.push(Il(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=ul(i[e],pl(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=hl(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const s=e[n];let r=s;sg(e,s)>1&&(r+=`_${sg(e.slice(0,n),s)}`),t.push(r)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),r=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new ox(e),o=cx(this.outputs,i,{training:!0});let l;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(s[e],o[e]);null!=r[e]&&(n=yx(n,r[e]));const a=Uc(n);t.push(a),l=0===e?n:ul(l,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],r=this.metricsTensors[e][1];n=Uc(t(s[r],o[r]))}Jo(n),a.push(n)}return l=Uc(l),this.calculateLosses().forEach((e=>{l=ul(l,e)})),l}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Yo((()=>{const t=[];let n;const s=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:s[e]});const i=new ox(a),o=cx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const s=this.lossFunctions[e],a=Uc(s(r[e],o[e]));n=0===e?a:ul(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],s=this.metricsTensors[e][1],a=Uc(n(r[s],o[s]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,s={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let r,a,i,o,l,u,c,h,p;e.isTraining=!0;try{const d=null==s.batchSize?32:s.batchSize;vx(d);const f=!1,m=await e.standardizeUserData(t,n,s.sampleWeight,s.classWeight,f,d);r=m[0],a=m[1],p=m[2];let g,y=!1;if(null!=s.validationData&&s.validationData.length>0){if(y=!0,2!==s.validationData.length)throw 3===s.validationData.length?new Qm("validationData including sample weights is not supported yet."):new Jm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${s.validationData} is invalid.`);l=s.validationData[0],u=s.validationData[1];const t=!0,n=await e.standardizeUserData(l,u,null,null,t,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=s.validationSplit&&s.validationSplit>0&&s.validationSplit<1){y=!0;const e=Math.floor(r[0].shape[0]*(1-s.validationSplit)),t=r[0].shape[0];c=kx(r,e,t),i=r,r=kx(r,0,e),h=kx(a,e,t),o=a,a=kx(a,0,e),g=c.concat(h)}else null!=s.validationSteps&&(y=!0);const b=r.concat(a).concat(p);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),w=e.getDedupedMetricsNames();let v,k;y?(e.makeTestFunction(),v=e.testFunction,k=w.slice().concat(w.map((e=>"val_"+e)))):(v=null,g=[],k=w.slice());const I=Cb(s.callbacks,s.yieldEvery),N=await async function(e,t,n,s,r,a,i,o,l,u,c,h,p,d,f){null==r&&(r=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=l&&null!=u&&(m=!0);const g=e.checkNumSamples(n,r,d,"steps_per_epoch");let y;null!=g&&(y=Jg(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Eb(o,i,a,p,g,d,r,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new Qm("batch shuffling is not implemneted yet");c&&Y(y);const i=Qh(y),o=Nx(g,r);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Yo((()=>{const p=o[c][0],d=o[c][1],f=ty(i,p,d-p);h.batch=c,h.size=d-p;const g=Ix(n,f),y=t(g);for(let e=0;e<s.length;++e){const t=s[e],n=y[e];h[t]=n,Jo(n)}if(c===o.length-1&&m){const t=e.testLoop(l,u,r);for(let e=0;e<s.length;++e){const n=s[e],r=t[e];Jo(r),a["val_"+n]=r}}})),await b.onBatchEnd(c,h),wb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,w,d,s.epochs,s.verbose,I,v,g,s.shuffle,k,s.initialEpoch,null);return N}finally{e.isTraining=!1,Tx(r,t),Tx(a,n),Tx(i,t),Tx(o,n),Tx(c,l),Tx(h,u),null!=p&&Zo(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const s=null!=n.batchesPerEpoch;if(re(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),re(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),re(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),re(!s||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),re(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const r=null!=n.validationData;let a,i;if(r)if(wx(n.validationData))re(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Qm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),l=e.getDedupedMetricsNames();let u;u=r?l.slice().concat(l.map((e=>"val_"+e))):l.slice();const c=Cb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=Eb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,r,u);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const u={};await p.onEpochBegin(f);let c=0,h=0;for(s||(m=await t.iterator());!s||c<n.batchesPerEpoch;){const t=await m.next();if(s&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:s,ys:r}=bx(e,t.value),a={};a.batch=h,a.size=s[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=mx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await gx(r[e],null,t[e]))}const u=s.concat(r).concat(i),d=o(u);Zo(u);for(let e=0;e<l.length;++e){const t=l[e],n=d[e];a[t]=n,Jo(n)}await p.onBatchEnd(h,a),wb(a),h++,c++}if(s?c>=n.batchesPerEpoch:t.done){if(r){let t;t=wx(n.validationData)?ag(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ag(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)u[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,u),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),s=n[0],r=n[1],a=this.makeTrainFunction()(s.concat(r)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Zo(a),Tx(n[0],e),Tx(n[1],t),rg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,s=n?this.trainableWeights:this.weights,r=this.getWeights(n);for(let e=0;e<s.length;++e)n&&!s[e].trainable||t.push({name:s[e].originalName,tensor:r[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=Ko().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-Ko().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ig(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ig(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const s of t){if("string"!=typeof n[s])throw new Error("Serialization of non-string loss is not supported.");e[s]=ig(n[s])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ig(Zb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ig(Zb(e))));{const e={};for(const t in this.metrics)e[t]=ig(Zb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ab(rx(e.optimizer_config));let n,s;if("string"==typeof e.loss)n=og(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>og(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=og(e.loss[t])}if(Array.isArray(e.metrics))s=e.metrics.map((e=>og(e)));else if(null!=e.metrics){s={};for(const t in e.metrics)s[t]=og(e.metrics[t])}this.compile({loss:n,metrics:s,optimizer:t})}async save(e,t){if("string"==typeof e){const t=ja(e);if(0===t.length)throw new Jm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Jm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Jm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await Fa(this.getNamedWeights(t)),s={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${ix}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){s.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:r}=await Fa(await this.optimizer.getWeights(),e);n.specs.push(...r),n.data=La([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Jb(this.userDefinedMetadata,this.name,e),s.userDefinedMetadata=this.userDefinedMetadata}return s.weightData=n.data,s.weightSpecs=n.specs,e.save(s)}setUserDefinedMetadata(e){Jb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}Rx.className="Model",Eo(Rx);class Fx extends Rx{}async function Dx(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const s=Ab(rx(n),t);if(null!=e.weightsManifest){const t=await Oi(e.weightsManifest,e.pathPrefix,s.weights.map((e=>e.originalName))),n={};for(const e of s.weights)n[e.originalName]=t[e.originalName];s.loadWeights(n),Zo(t)}return s}Fx.className="Functional",Eo(Fx);class _x extends Rx{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:tb("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Jm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof _x||e instanceof Rx;let n;if(t){if(n=e,1!==n.outputs.length)throw new Jm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Jm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Jm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=bb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Jm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Jm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=gb(this.outputs[0])}this.inboundNodes=[],new db({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:tg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ab(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new Rx({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},s=!1){let r,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Jm("Legacy serialization format not supported yet.");r=t}else re(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),r=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof _x))throw new Qm(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of r){const t=Ab(e,void 0,s);s&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Jm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Jm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Ox(e){return new Rx(e)}function Mx(e){return new _x(e)}function Lx(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=qa(e,t);if(0===n.length)n.push(Wi(e,t));else if(n.length>1)throw new Jm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Jm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const s=await e.load();let r=s.modelTopology;null!=r.model_config&&(r=r.model_config);const a=null==n.strict||n.strict,i=null!=s.weightData&&null!=s.weightSpecs&&a,o=Ab(rx(r),void 0,i),l=s.trainingConfig;if(null!=l&&o.loadTrainingConfig(l),null!=s.userDefinedMetadata&&o.setUserDefinedMetadata(s.userDefinedMetadata),null!=s.weightData){if(null==s.weightSpecs)throw new Jm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Da(e,t),s={},r=[];return t.forEach((e=>{"optimizer"===e.group?r.push({name:e.name,tensor:n[e.name]}):s[e.name]=n[e.name]})),{modelWeights:s,optimizerWeights:r}}(s.weightData,s.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Zo(e),Zo(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function zx(e){return bb(e)}function Px(e,t){$b.registerCallbackConstructor(e,t)}_x.className="Sequential",Eo(_x);class Bx extends Co{getConfig(){return{}}}class Wx extends Bx{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Qm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Ju(e)}(e,t)}}Wx.className="elu",Eo(Wx);class Ux extends Bx{apply(e){return Rh(e)}}Ux.className="selu",Eo(Ux);class Vx extends Bx{apply(e){return kh(e)}}Vx.className="relu",Eo(Vx);class Gx extends Bx{apply(e){return Yo((()=>qc(6,kh(e))))}}Gx.className="relu6",Eo(Gx);class Hx extends Bx{apply(e){return e}}Hx.className="linear",Eo(Hx);class jx extends Bx{apply(e){return fu(e)}}jx.className="sigmoid",Eo(jx);class qx extends Bx{apply(e){return function(e){return Yo((()=>{const t=ul(.5,pl(.2,e));return Cu(t,0,1)}))}(e)}}qx.className="hardSigmoid",Eo(qx);class Kx extends Bx{apply(e){return vc(e)}}Kx.className="softplus",Eo(Kx);class Xx extends Bx{apply(e){return function(e){return Yo((()=>hl(e,ul(Rl(e),1))))}(e)}}Xx.className="softsign",Eo(Xx);class Yx extends Bx{apply(e){return gu(e)}}Yx.className="tanh",Eo(Yx);class Zx extends Bx{apply(e,t=-1){return Wh(e,t)}}Zx.className="softmax",Eo(Zx);class Jx extends Bx{apply(e,t=-1){return Sc(e,t)}}Jx.className="logSoftmax",Eo(Jx);class Qx extends Bx{apply(e,t=1){return Yo((()=>pl(fu(pl(e,t)),e)))}}Qx.className="swish",Eo(Qx);class ew extends Bx{apply(e){return Yo((()=>pl(e,gu(vc(e)))))}}function tw(e){return e.getClassName()}function nw(e,t={}){return hg(e,$o.getMap().classNameMap,t,"activation")}function sw(e){if(null==e){return nw({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},nw(t)}return e instanceof Bx?e:nw(e)}function rw(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}ew.className="mish",Eo(ew);class aw extends Co{}class iw extends aw{constructor(e){super(),rw(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Yo((()=>{let t=Vc([1]);return this.hasL1&&(t=ul(t,Nc(pl(this.l1,Rl(e))))),this.hasL2&&(t=ul(t,Nc(pl(this.l2,cy(e))))),cu(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}iw.className="L1L2",Eo(iw);const ow={l1l2:"L1L2"};function lw(e){return ug(e)}function uw(e,t={}){return hg(e,$o.getMap().classNameMap,t,"regularizer")}function cw(e){return null==e?null:"string"==typeof e?uw({className:e in ow?ow[e]:e,config:{}}):e instanceof aw?e:uw(e)}class hw extends mb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=rb(e);let n=kh(e);return null!=this.maxValue&&(n=Cu(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}hw.className="ReLU",Eo(hw);class pw extends mb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rb(e);return dc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}pw.className="LeakyReLU",Eo(pw);class dw extends mb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=My(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=cw(e.alphaRegularizer),this.alphaConstraint=Eg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Jm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ab(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new cb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=rb(e),uh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:Oy(this.alphaInitializer),alphaRegularizer:lw(this.alphaRegularizer),alphaConstraint:Cg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}dw.className="PReLU",Eo(dw);class fw extends mb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Qm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=rb(e);return Ju(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}fw.className="ELU",Eo(fw);class mw extends mb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=rb(e);return pl(n,Ti(oc(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}mw.className="ThresholdedReLU",Eo(mw);class gw extends mb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Zx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=rb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yw(e,t,n){if("number"==typeof e)return tg(e,t);if(e.length!==t)throw new Jm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let r=0;r<t;++r){const a=e[r];if((s=a)!==parseInt(s.toString(),10))throw new Jm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var s}function bw(e,t,n,s,r=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(r-1))+1,Math.floor((a+s-1)/s)}function xw(e,t,n,s){if(null==e)return null;if("valid"===s)e=e*t+Zg([n-t,0]);else{if("same"!==s)throw new Jm(`Unsupport padding mode: ${s}.`);e*=t}return e}function ww(e,t){return Yo((()=>(Bg(t),"channelsFirst"===t?Ki(e,[0,2,3,1]):e)))}function vw(e,t){return Yo((()=>(Bg(t),"channelsFirst"===t?Ki(e,[0,2,3,4,1]):e)))}function kw(e,t,n,s=[1,1],r="valid",a,i,o=null){return Yo((()=>{if(null==a&&(a="channelsLast"),Bg(a),3!==e.rank&&4!==e.rank)throw new Jm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Jm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let l=ww(e,a);if("causal"===r)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return l=$p({x:l,filter:t,strides:s,pad:"same"===r?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(l=Ki(l,[0,3,1,2])),l}))}gw.className="Softmax",Eo(gw);class Iw extends mb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Iw.verifyArgs(t),this.rank=e,yg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Qm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=yw(t.kernelSize,e,"kernelSize"),this.strides=yw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Wg(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Bg(this.dataFormat),this.activation=sw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=My(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Eg(t.biasConstraint),this.biasRegularizer=cw(t.biasRegularizer),this.activityRegularizer=cw(t.activityRegularizer),this.dilationRate=yw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ng("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!gg(e.kernelSize,"number",1,3))throw new Jm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:tw(this.activation),useBias:this.useBias,biasInitializer:Oy(this.biasInitializer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),biasConstraint:Cg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Nw extends Iw{constructor(e,t){super(e,t),this.kernel=null,Nw.verifyArgs(t),this.filters=t.filters,yg(this.filters,"filters"),this.kernelInitializer=My(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Eg(t.kernelConstraint),this.kernelRegularizer=cw(t.kernelRegularizer)}build(e){e=ab(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],s=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Yo((()=>{let t;e=rb(e);const n=null==this.bias?null:this.bias.read(),s=xg(this.activation.getClassName());if(null!=s&&2===this.rank)t=kw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,s);else{if(1===this.rank)t=function(e,t,n,s=1,r="valid",a,i=1){return Yo((()=>{if(null==a&&(a="channelsLast"),Bg(a),3!==e.shape.length)throw new Jm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Jm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Jm(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=Ki(e,[0,2,1])),"causal"===r)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Du(e,t,s,"same"===r?"same":"valid","NWC",i);return null!=n&&(o=py(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=kw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Qm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,s=[1,1,1],r="valid",a,i){return Yo((()=>{if(null==a&&(a="channelsLast"),Bg(a),4!==e.rank&&5!==e.rank)throw new Jm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Jm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=vw(e,a);if("causal"===r)throw new Qm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Mu(o,t,s,"same"===r?"same":"valid","NDHWC",i),null!=n&&(o=py(o,n)),"channelsFirst"===a&&(o=Ki(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ab(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const s=bw(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(s)}let s=[e[0]];return"channelsLast"===this.dataFormat?(s=s.concat(t),s.push(this.filters)):(s.push(this.filters),s=s.concat(t)),s}getConfig(){const e={filters:this.filters,kernelInitializer:Oy(this.kernelInitializer),kernelRegularizer:lw(this.kernelRegularizer),kernelConstraint:Cg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Jm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Sw extends Nw{constructor(e){super(2,e),Sw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!gg(e.kernelSize,"number",1,2))throw new Jm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Sw.className="Conv2D",Eo(Sw);class Tw extends Nw{constructor(e){super(3,e),Tw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Jm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Tw.className="Conv3D",Eo(Tw);class Cw extends Sw{constructor(e){if(super(e),this.inputSpec=[new cb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Jm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ab(e)).length)throw new Jm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t=rb(e);if(4!==t.shape.length)throw new Jm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a;"channelsFirst"===this.dataFormat?(r=2,a=3):(r=1,a=2);const i=n[r],o=n[a],l=this.kernelSize[0],u=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[s,xw(i,c,l,this.padding),xw(o,h,u,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ki(t,[0,2,3,1]));let d=Ou(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=Ki(d,[0,3,1,2])),null!=this.bias&&(d=py(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=ab(e)).slice();let n,s,r;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3):(n=3,s=1,r=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],l=this.strides[1];return t[n]=this.filters,t[s]=xw(t[s],o,a,this.padding),t[r]=xw(t[r],l,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Cw.className="Conv2DTranspose",Eo(Cw);class $w extends Tw{constructor(e){if(super(e),this.inputSpec=[new cb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Jm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ab(e)).length)throw new Jm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],s=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",s,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t=rb(e);if(5!==t.shape.length)throw new Jm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,s=n[0];let r,a,i;"channelsFirst"===this.dataFormat?(i=2,r=3,a=4):(i=1,r=2,a=3);const o=n[i],l=n[r],u=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[s,xw(o,d,c,this.padding),xw(l,f,h,this.padding),xw(u,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=Ki(t,[0,2,3,4,1]));let y=zu(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=Ki(y,[0,4,1,2,3])),null!==this.bias&&(y=py(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=ab(e)).slice();let n,s,r,a;"channelsFirst"===this.dataFormat?(n=1,s=2,r=3,a=4):(n=4,s=1,r=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],l=this.kernelSize[2],u=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[s]=xw(t[s],u,i,this.padding),t[r]=xw(t[r],c,o,this.padding),t[a]=xw(t[a],h,l,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}$w.className="Conv3DTranspose",Eo($w);class Ew extends Nw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Jm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Jm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Jm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=My(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=cw(t.depthwiseRegularizer),this.depthwiseConstraint=Eg(t.depthwiseConstraint),this.pointwiseInitializer=My(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=cw(t.pointwiseRegularizer),this.pointwiseConstraint=Eg(t.pointwiseConstraint)}build(e){if((e=ab(e)).length<this.rank+2)throw new Jm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Jm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],s=this.kernelSize.concat([n,this.depthMultiplier]),r=[];for(let e=0;e<this.rank;++e)r.push(1);r.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",s,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",r,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new cb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Yo((()=>{let t;if(e=rb(e),1===this.rank)throw new Qm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=Ki(e,[0,2,3,1])),t=Fh(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=py(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=Ki(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=Oy(this.depthwiseInitializer),e.pointwiseInitializer=Oy(this.pointwiseInitializer),e.depthwiseRegularizer=lw(this.depthwiseRegularizer),e.pointwiseRegularizer=lw(this.pointwiseRegularizer),e.depthwiseConstraint=Cg(this.depthwiseConstraint),e.pointwiseConstraint=Cg(this.pointwiseConstraint),e}}Ew.className="SeparableConv";class Aw extends Ew{constructor(e){super(2,e)}}Aw.className="SeparableConv2D",Eo(Aw);class Rw extends Nw{constructor(e){super(1,e),Rw.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!gg(e.kernelSize,"number",1,1))throw new Jm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}Rw.className="Conv1D",Eo(Rw);class Fw extends mb{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Yo((()=>{if(e=rb(e),"channelsLast"===this.dataFormat){const t=sy(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return sy(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=sy(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return sy(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Fw.className="Cropping2D",Eo(Fw);class Dw extends mb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Bg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,mg(Og,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Yo((()=>{let t=rb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=Ki(t,[0,2,3,1]);const e=this.size[0]*n[2],s=this.size[1]*n[3],r="nearest"===this.interpolation?Cd.resizeNearestNeighbor(t,[e,s]):Cd.resizeBilinear(t,[e,s]);return Ki(r,[0,3,1,2])}{const e=this.size[0]*n[1],s=this.size[1]*n[2];return"nearest"===this.interpolation?Cd.resizeNearestNeighbor(t,[e,s]):Cd.resizeBilinear(t,[e,s])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Dw.className="UpSampling2D",Eo(Dw);class _w extends Iw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=My(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Eg(e.depthwiseConstraint),this.depthwiseRegularizer=cw(e.depthwiseRegularizer)}build(e){if((e=ab(e)).length<4)throw new Jm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Jm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],s=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",s,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{let t=function(e,t,n=[1,1],s="valid",r,a){return Yo((()=>{null==r&&(r="channelsLast"),Bg(r);let i=ww(e,r);if(4!==e.rank)throw new Jm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Jm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Gu(i,t,n,"same"===s?"same":"valid","NHWC",a),"channelsFirst"===r&&(i=Ki(i,[0,3,1,2])),i}))}(e=rb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=py(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ab(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,r=bw(t,this.kernelSize[0],this.padding,this.strides[0]),a=bw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],s,r,a]:[e[0],r,a,s]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=Oy(this.depthwiseInitializer),e.depthwiseRegularizer=lw(this.depthwiseRegularizer),e.depthwiseConstraint=Cg(this.depthwiseRegularizer),e}}function Ow(e,t,n,s){if(Array.isArray(e)){if(null!=t||null!=n)throw new Jm("When inputs is an array, neither initialState or constants should be provided");null!=s&&(n=e.slice(e.length-s,e.length),e=e.slice(0,e.length-s)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function r(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=r(t),constants:n=r(n)}}function Mw(e,t,n,s=!1,r,a,i=!1,o=!1){return Yo((()=>{const l=t.shape.length;if(l<3)throw new Jm(`Input should be at least 3D, but is ${l}D.`);const u=[1,0].concat(Jg(2,l));if(t=Ki(t,u),null!=a)throw new Qm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=r&&((r=Ti(Ti(r,"bool"),"float32")).rank===l-1&&(r=tc(r,-1)),r=Ki(r,u)),s&&(t=Nh(t,0),null!=r&&(r=Nh(r,0)));const c=[];let h,p=n;const d=t.shape[0],f=lp(t);let m,g;null!=r&&(m=lp(r));for(let t=0;t<d;++t){const n=f[t],s=Yo((()=>e(n,p)));if(null==r)h=s[0],p=s[1];else{const e=Yo((()=>{const e=m[t],n=El(eh(e),e);return{output:ul(pl(s[0],e),pl(p[0],n)),newStates:p.map(((t,r)=>ul(pl(s[1][r],e),pl(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=Xh(c,1)),[h,g,p]}))}_w.className="DepthwiseConv2D",Eo(_w);class Lw extends mb{constructor(e){let t;if(super(e),null==e.cell)throw new Jm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new Hw({cells:e.cell}):e.cell,null==t.stateSize)throw new Jm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new cb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Jg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){nb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let s;if(s=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const s of t)n.push([e[0],s]);return[s].concat(n)}return s}computeMask(e,t){return Yo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Qm("Constants support is not implemented in RNN yet.");nb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new cb({shape:[t,null,...n]});const s=[e[0]].concat(e.slice(2));let r;if(this.cell.build(s),r=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!ce(this.stateSpec.map((e=>e.shape[e.shape.length-1])),r))throw new Jm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=r.map((e=>new cb({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Yo((()=>{if(!this.stateful)throw new Ym("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Jm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vc([n,e]))):this.states_=[Vc([n,this.cell.stateSize])];else if(null==e)Zo(this.states_),null!=this.keptStates&&(Zo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Vc([n,e]))):this.states_[0]=Vc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Zo(this.states_);for(let t=0;t<this.states_.length;++t){const s=e[t],r=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,r];if(!ce(s.shape,a))throw new Jm(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${s.shape}`);this.states_[t]=s}}this.states_=this.states_.map((e=>Jo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Ow(e,n,s,this.numConstants);e=r.inputs,n=r.initialState,s=r.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new cb({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=s&&(t.constants=s,a=a.concat(s),this.numConstants=s.length),a[0]instanceof hb){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Yo((()=>{const n=null==t?null:t.mask,s=null==t?null:t.training;let r=null==t?null:t.initialState;e=rb(e),null==r&&(r=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(r.length!==a)throw new Jm(`RNN Layer has ${a} state(s) but was passed ${r.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:s},o=Mw(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,r,this.goBackwards,n,null,this.unroll,this.returnSequences),l=o[0],u=o[1],c=o[2];this.stateful&&this.resetStates(c,s);const h=this.returnSequences?u:l;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Yo((()=>{let t=Vc(e.shape);return t=Nc(t,[1,2]),t=ey(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?iy(t,[1,e]):t)):this.cell.stateSize>1?[iy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Lw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const s=Ab(t.cell,n);return new e(Object.assign(t,{cell:s}))}}Lw.className="RNN",Eo(Lw);class zw extends mb{}class Pw extends zw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,yg(this.units,"units"),this.activation=sw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=My(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cw(e.kernelRegularizer),this.recurrentRegularizer=cw(e.recurrentRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.kernelConstraint=Eg(e.kernelConstraint),this.recurrentConstraint=Eg(e.recurrentConstraint),this.biasConstraint=Eg(e.biasConstraint),this.dropout=Yg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ab(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{if(2!==e.length)throw new Jm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const s=null!=t.training&&t.training;let r;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jw({ones:()=>eh(e),rate:this.dropout,training:s,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jw({ones:()=>eh(n),rate:this.recurrentDropout,training:s,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;r=ly(null!=a?pl(e,a):e,this.kernel.read()),null!=this.bias&&(r=py(r,this.bias.read())),null!=i&&(n=pl(n,i));let o=ul(r,ly(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tw(this.activation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),recurrentInitializer:Oy(this.recurrentInitializer),biasInitializer:Oy(this.biasInitializer),kernelRegularizer:lw(this.kernelRegularizer),recurrentRegularizer:lw(this.recurrentRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),recurrentConstraint:Cg(this.recurrentConstraint),biasConstraint:Cg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Pw.className="SimpleRNNCell",Eo(Pw);class Bw extends Lw{constructor(e){e.cell=new Pw(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return new e(t)}}Bw.className="SimpleRNN",Eo(Bw);class Ww extends zw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Jm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,yg(this.units,"units"),this.activation=sw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=sw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=My(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cw(e.kernelRegularizer),this.recurrentRegularizer=cw(e.recurrentRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.kernelConstraint=Eg(e.kernelConstraint),this.recurrentConstraint=Eg(e.recurrentConstraint),this.biasConstraint=Eg(e.biasConstraint),this.dropout=Yg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ab(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Yo((()=>{if(2!==e.length)throw new Jm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let s=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jw({ones:()=>eh(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jw({ones:()=>eh(s),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const r=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,l;0<this.dropout&&this.dropout<1&&(e=pl(e,r[0]));let u=ly(e,this.kernel.read());this.useBias&&(u=py(u,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(s=pl(s,a[0]));const c=this.recurrentKernel.read(),[h,p]=Hh(c,[2*this.units,this.units],c.rank-1),d=ly(s,h),[f,m,g]=Hh(u,3,u.rank-1),[y,b]=Hh(d,2,d.rank-1);i=this.recurrentActivation.apply(ul(f,y)),o=this.recurrentActivation.apply(ul(m,b));const x=ly(pl(o,s),p);l=this.activation.apply(ul(g,x));const w=ul(pl(i,s),pl(ul(1,wc(i)),l));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tw(this.activation),recurrentActivation:tw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),recurrentInitializer:Oy(this.recurrentInitializer),biasInitializer:Oy(this.biasInitializer),kernelRegularizer:lw(this.kernelRegularizer),recurrentRegularizer:lw(this.recurrentRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),recurrentConstraint:Cg(this.recurrentConstraint),biasConstraint:Cg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Ww.className="GRUCell",Eo(Ww);class Uw extends Lw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Ww(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Uw.className="GRU",Eo(Uw);class Vw extends zw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,yg(this.units,"units"),this.activation=sw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=sw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=My(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=cw(e.kernelRegularizer),this.recurrentRegularizer=cw(e.recurrentRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.kernelConstraint=Eg(e.kernelConstraint),this.recurrentConstraint=Eg(e.recurrentConstraint),this.biasConstraint=Eg(e.biasConstraint),this.dropout=Yg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ab(e))[e.length-1];let s;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;s=new((t=class extends yy{apply(t,s){const r=e.apply([n]),a=(new xy).apply([n]),i=e.apply([2*n]);return ay(ay(r,a),i)}}).className="CustomInit",t)}else s=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,s,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Yo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Jm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let s=e[1];const r=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jw({ones:()=>eh(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jw({ones:()=>eh(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,l,u,c;0<this.dropout&&this.dropout<1&&(e=pl(e,a[0]));let h=ly(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(s=pl(s,i[0])),h=ul(h,ly(s,this.recurrentKernel.read())),this.useBias&&(h=py(h,this.bias.read()));const[p,d,f,m]=Hh(h,4,h.rank-1);o=this.recurrentActivation.apply(p),l=this.recurrentActivation.apply(d),u=ul(pl(l,r),pl(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=pl(c,this.activation.apply(u));return[g,g,u]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tw(this.activation),recurrentActivation:tw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),recurrentInitializer:Oy(this.recurrentInitializer),biasInitializer:Oy(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:lw(this.kernelRegularizer),recurrentRegularizer:lw(this.recurrentRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),recurrentConstraint:Cg(this.recurrentConstraint),biasConstraint:Cg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Vw.className="LSTMCell",Eo(Vw);class Gw extends Lw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Vw(e),super(e)}call(e,t){return Yo((()=>{null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Gw.className="LSTM",Eo(Gw);class Hw extends zw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Yo((()=>{let n=e.slice(1);const s=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?s.push(n.splice(0,e.stateSize.length)):s.push(n.splice(0,1));s.reverse();const r=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=s[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),r.push(a.slice(1))}n=[];for(const e of r.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;nb(e)&&(e=e[0]),this.cells.forEach(((n,s)=>{Gg(`RNNCell_${s}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const s=[];for(const e of t.cells)s.push(Ab(e,n));return new e({cells:s})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return lb(e)}setWeights(e){const t=[];for(const n of this.cells){const s=n.weights.length,r=e.splice(s);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],r[e]])}ub(t)}}function jw(e){const{ones:t,rate:n,training:s=!1,count:r=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):dy(t(),n),o=()=>fy(i,t,s);return!r||r<=1?Jo(o().clone()):Array(r).fill(void 0).map(o).map((e=>Jo(e.clone())))}Hw.className="StackedRNNCells",Eo(Hw);class qw extends Lw{constructor(e){if(e.unroll)throw new Qm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Qm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new cb({ndim:5})]}call(e,t){return Yo((()=>{if(null!=this.cell.dropoutMask&&(Zo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Zo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Jm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,s=null==t?null:t.training,r=null==t?null:t.initialState;return super.call(e,{mask:n,training:s,initialState:r})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Yo((()=>{const{stateSize:t}=this.cell,n=e.shape,s=this.computeSingleOutputShape(n),r=Vc([s[0],...s.slice(2)]);return Array.isArray(t)?Array(t.length).fill(r):[r]}))}resetStates(e,t=!1){Yo((()=>{if(!this.stateful)throw new Ym("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,s=this.computeSingleOutputShape(n),r=[s[0],...s.slice(2)];if(null==n[0])throw new Jm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vc(r))):this.states_=[Vc(r)];else if(null==e)Zo(this.states_),null!=this.keptStates&&(Zo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Vc(r))):this.states_[0]=Vc(r);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Zo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],s=r;if(!ce(n.shape,s))throw new Jm(`State ${t} is incompatible with layer ${this.name}: expected shape=${s}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Jo(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:s,padding:r,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,l=e[o?3:2],u=e[o?4:3],c=bw(l,s[0],r,a[0],i[0]),h=bw(u,s[1],r,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}qw.className="ConvRNN2D";class Kw extends Vw{constructor(e){const{filters:t,kernelSize:n,strides:s,padding:r,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,yg(this.filters,"filters"),this.kernelSize=yw(n,2,"kernelSize"),this.kernelSize.forEach((e=>yg(e,"kernelSize"))),this.strides=yw(s||1,2,"strides"),this.strides.forEach((e=>yg(e,"strides"))),this.padding=r||"valid",Wg(this.padding),this.dataFormat=a||"channelsLast",Bg(this.dataFormat),this.dilationRate=yw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>yg(e,"dilationRate")))}build(e){var t;e=ab(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Jm(`The channel dimension of the input should be defined. Found ${e[n]}`);const s=e[n],r=this.kernelSize.concat([s,4*this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,s=this.filters;e=new((t=class extends yy{apply(e,t){return ry([n.apply([s]),Gc([s]),n.apply([2*s])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Yo((()=>{if(3!==e.length)throw new Jm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,s=e[0],r=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=jw({ones:()=>eh(s),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?pl(t[n],e):e;let l=o(s,i,0),u=o(s,i,1),c=o(s,i,2),h=o(s,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=jw({ones:()=>eh(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(r,p,0),f=o(r,p,1),m=o(r,p,2),g=o(r,p,3);const[y,b,x,w]=Hh(this.kernel.read(),4,3),[v,k,I,N]=this.useBias?Hh(this.bias.read(),4):[null,null,null,null];l=this.inputConv(l,y,v,this.padding),u=this.inputConv(u,b,k,this.padding),c=this.inputConv(c,x,I,this.padding),h=this.inputConv(h,w,N,this.padding);const[S,T,C,$]=Hh(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,S),f=this.recurrentConv(f,T),m=this.recurrentConv(m,C),g=this.recurrentConv(g,$);const E=this.recurrentActivation.apply(ul(l,d)),A=this.recurrentActivation.apply(ul(u,f)),R=ul(pl(A,a),pl(E,this.activation.apply(ul(c,m)))),F=pl(this.recurrentActivation.apply(ul(h,g)),this.activation.apply(R));return[F,F,R]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&t.indexOf(s)<0&&(n[s]=e[s]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var r=0;for(s=Object.getOwnPropertySymbols(e);r<s.length;r++)t.indexOf(s[r])<0&&Object.prototype.propertyIsEnumerable.call(e,s[r])&&(n[s[r]]=e[s[r]])}return n}(e,["units"]),s={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,s)}inputConv(e,t,n,s){const r=Fu(e,t,this.strides,s||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?py(r,n,this.dataFormat):r}recurrentConv(e,t){return Fu(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Kw.className="ConvLSTM2DCell",Eo(Kw);class Xw extends qw{constructor(e){const t=new Kw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Xw.className="ConvLSTM2D",Eo(Xw);class Yw extends mb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=rb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,s=this.getNoiseShape(n);return fy((()=>dy(n,this.rate,s,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Yw.className="Dropout",Eo(Yw);class Zw extends Yw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Zw.className="SpatialDropout1D",Eo(Zw);class Jw extends mb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,yg(this.units,"units"),this.activation=sw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=My(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=My(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Eg(e.kernelConstraint),this.biasConstraint=Eg(e.biasConstraint),this.kernelRegularizer=cw(e.kernelRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.activityRegularizer=cw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ab(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ab(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=rb(e),s=xg(this.activation.getClassName());let r;return null!=s?r=ly(n,this.kernel.read(),s,this.bias?this.bias.read():null):(r=ly(n,this.kernel.read()),null!=this.bias&&(r=py(r,this.bias.read())),null!=this.activation&&(r=this.activation.apply(r))),r}))}getConfig(){const e={units:this.units,activation:tw(this.activation),useBias:this.useBias,kernelInitializer:Oy(this.kernelInitializer),biasInitializer:Oy(this.biasInitializer),kernelRegularizer:lw(this.kernelRegularizer),biasRegularizer:lw(this.biasRegularizer),activityRegularizer:lw(this.activityRegularizer),kernelConstraint:Cg(this.kernelConstraint),biasConstraint:Cg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Jw.className="Dense",Eo(Jw);class Qw extends mb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ab(e);for(const t of e.slice(1))if(null==t)throw new Jm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Xg(e,1)]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);let n=rb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=Ki(n,e)}return function(e){if(e.rank<=1)throw new Jm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Xg(e.shape,1)];return cu(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Qw.className="Flatten",Eo(Qw);class ev extends mb{constructor(e){super(e),this.supportsMasking=!0,this.activation=sw(e.activation)}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=rb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:tw(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ev.className="Activation",Eo(ev);class tv extends mb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Yo((()=>{return e=rb(e),t=e,n=this.n,Yo((()=>{if(2!==t.shape.length)throw new Jm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return iy(ey(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}tv.className="RepeatVector",Eo(tv);class nv extends mb{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",s=t.slice();let r=1,a=null;for(let e=0;e<s.length;++e){const t=s[e];if(this.isUnknown(t)){if(null!==a)throw new Jm("Can only specifiy one unknown dimension.");a=e}else r*=t}const i=Xg(e);if(null!==a){if(0===r||i%r!=0)throw new Jm(n);s[a]=i/r}else if(i!==r)throw new Jm(n);return s}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=rb(e),s=n.shape,r=s.slice(0,1).concat(this.fixUnknownDimension(s.slice(1),this.targetShape));return cu(n,r)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}nv.className="Reshape",Eo(nv);class sv extends mb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Jg(1,e.dims.length+1);if(!ce(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new cb({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ab(e)).slice();return this.dims.forEach(((n,s)=>{t[s+1]=e[n]})),t}call(e,t){return Ki(rb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}sv.className="Permute",Eo(sv);class rv extends mb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=rb(e);return Ul(Qc(n,this.maskValue),-1)}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=rb(e),s=Ul(Qc(n,this.maskValue),-1,!0);return pl(n,Ti(s,n.dtype))}))}}rv.className="Masking",Eo(rv);class av extends mb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ag(e.inputLength))}this.inputDim=e.inputDim,yg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,yg(this.outputDim,"outputDim"),this.embeddingsInitializer=My(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=cw(e.embeddingsRegularizer),this.activityRegularizer=cw(e.activityRegularizer),this.embeddingsConstraint=Eg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Yo((()=>this.maskZero?(e=rb(e),Qc(e,ml(e))):null))}computeOutputShape(e){if(e=ab(e),null==this.inputLength)return[...e,this.outputDim];const t=ag(this.inputLength);if(t.length!==e.length-1)throw new Jm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let s=0;s<t.length;++s){const r=t[s],a=e[s+1];if(null!=r&&null!=a&&r!==a)throw new Jm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==r&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);let n=rb(e);"int32"!==n.dtype&&(n=Qg(n,"int32"));const s=uy(this.embeddings.read(),cu(n,[n.size]));return cu(s,ab(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:Oy(this.embeddingsInitializer),embeddingsRegularizer:lw(this.embeddingsRegularizer),activityRegularizer:lw(this.activityRegularizer),embeddingsConstraint:Cg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}av.className="Embedding",Eo(av);class iv extends mb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Qm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let s=0;s<t.length;++s){const r=e[e.length-t.length+s],a=t[s];if(null==r||null==a||r<0||a<0)n.push(null);else if(1===r)n.push(a);else if(1===a)n.push(r);else{if(r!==a)throw new Jm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(r)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ab(e)]),e.length<2)throw new Jm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=dg(t),t.length>1)throw new Jm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const s=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,s)}const s=e.map((e=>e.length));-1===e.indexOf(null)&&1===dg(s).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Yo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const s=Zg(n);for(let n of e){const e=n.rank;for(let t=0;t<s-e;++t)n=ey(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const s of e){const e=s.rank;if(null==e){const e=s.shape,r=e[0],a=e.slice(1).concat([r]);let i=cu(s,[r].concat(Xg(e.slice(1))));i=Ki(i,[1,0]),i=cu(i,a),t.push(i),n=!0}else if(e>1){const r=Jg(1,e).concat([0]);t.push(Ki(s,r)),n=!0}else t.push(s)}let s=this.mergeFunction(t);const r=s.rank;if(n)if(null==r){const e=s.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));s=cu(Ki(cu(s,[-1,t]),[1,0]),n)}else if(r>1){const e=[r-1].concat(Jg(0,r-1));s=Ki(s,e)}return s}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const s=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,s)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=dg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Yo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Jm("`mask` should be an Array");if(!Array.isArray(e))throw new Jm("`inputs` should be an Array");if(t.length!==e.length)throw new Jm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:tc(e,0))))[0];for(let e=1;e<t.length-1;++e)n=Oc(n,t[e]);return n}))}}class ov extends iv{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ul(t,e[n]);return t}))}}ov.className="Add",Eo(ov);class lv extends iv{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=pl(t,e[n]);return t}))}}lv.className="Multiply",Eo(lv);class uv extends iv{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=ul(t,e[n]);return pl(1/e.length,t)}))}}uv.className="Average",Eo(uv);class cv extends iv{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Fl(t,e[n]);return t}))}}cv.className="Maximum",Eo(cv);class hv extends iv{constructor(e){super(e)}mergeFunction(e){return Yo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=qc(t,e[n]);return t}))}}hv.className="Minimum",Eo(hv);class pv extends iv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Jm("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const s=e[t].slice();s.splice(this.axis,1);let r=!1;for(const e of n)if(ce(e,s)){r=!0;break}r||n.push(s)}if(n.length>1)throw new Jm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Yo((()=>ry(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Jm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),s=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[s]||null==e[s]){n[s]=null;break}n[s]+=e[s]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Jm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Jm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Jm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Yo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const s=[];for(let n=0;n<e.length;++n)null==t[n]?s.push(Ti(eh(e[n]),"bool")):t[n].rank<e[n].rank?s.push(tc(t[n],-1)):s.push(t[n]);const r=du(s,this.axis);return Wl(r,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function dv(e,t){for(;e<0;)e+=t;return e}pv.className="Concatenate",Eo(pv);class fv extends iv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);if(t[s[0]]!==n[s[1]])throw new Jm(`Dimension incompatibility: ${t[s[0]]} !== ${n[s[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Jm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],s=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>dv(t,e[n].shape.length))):[dv(this.axes,n.shape.length),dv(this.axes,s.shape.length)],this.normalize&&(n=Rb(n,t[0]),s=Rb(s,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Qm("batchDot is not implemented for tensors of 4D or higher rank yet");if(re(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),re(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Qm("batchDot is not implemented for complex64-type Tensors yet.");const s=e.shape.length,r=t.shape.length;null==n&&(n=[s-1,r-2]);const a=n;return Yo((()=>{let n,i;if(s>r){n=s-r;const e=[];for(let t=0;t<n;++t)e.push(1);t=cu(t,t.shape.concat(e))}else if(r>s){n=r-s;const t=[];for(let e=0;e<n;++e)t.push(1);e=cu(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?Nc(pl(e,t),a[0]):Nc(pl(Ki(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,s=a[1]===t.shape.length-1;i=ji(e,t,n,s)}if(n>0){let e;e=s>r?s+r-3:s-1;const t=[];for(let s=e;s<e+n;++s)t.push(s);i=Kh(i,t)}return 1===i.shape.length&&(i=tc(i,1)),i}))}(n,s,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[dv(this.axes,e.length),dv(this.axes,t.length)],n}computeOutputShape(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const s=this.interpretAxes(t,n);t.splice(s[0],1),n.splice(s[1],1),n.splice(0,1);const r=t.concat(n);return 1===r.length&&r.push(1),r}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}fv.className="Dot",Eo(fv);class mv extends mb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=rb(e);return fy((()=>ul(oy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}mv.className="GaussianNoise",Eo(mv);class gv extends mb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yo((()=>{this.invokeCallHook(e,t);const n=rb(e);return this.rate>0&&this.rate<1?fy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return pl(n,oy(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}gv.className="GaussianDropout",Eo(gv);class yv extends mb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||rb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Yo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),s=()=>{const t=rb(e),s=-1.7580993408473766;let r=lc(bh(n),this.rate);r=Qg(r,"float32");const a=((1-this.rate)*(1+this.rate*s**2))**-.5,i=-a*s*this.rate,o=ul(pl(t,r),pl(ul(r,-1),s));return ul(pl(o,a),i)};return fy(s,(()=>rb(e)),t.training||!1)}return e}))}}function bv(e,t,n,s,r,a=.001){let i;if(2===e.rank)i=wu(e,t,n,s,r,a);else if(3===e.rank)i=vu(e,t,n,s,r,a);else{if(4!==e.rank)throw new Qm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=ku(e,t,n,s,r,a)}return i}yv.className="AlphaDropout",Eo(yv);class xv extends mb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=My(e.betaInitializer||"zeros"),this.gammaInitializer=My(e.gammaInitializer||"ones"),this.movingMeanInitializer=My(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=My(e.movingVarianceInitializer||"ones"),this.betaConstraint=Eg(e.betaConstraint),this.gammaConstraint=Eg(e.gammaConstraint),this.betaRegularizer=cw(e.betaRegularizer),this.gammaRegularizer=cw(e.gammaRegularizer)}build(e){e=ab(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Jm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new cb({ndim:e.length,axes:{[t]:n}})];const s=[n];this.scale&&(this.gamma=this.addWeight("gamma",s,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",s,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",s,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",s,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Yo((()=>{const n=null!=t.training&&t.training,s=rb(e),r=s.shape,a=r.length,i=Jg(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const l=tg(1,a);l[o]=r[o];const u=i.slice();u.sort();const c=!ce(u,Jg(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=cu(this.movingMean.read(),l),t=cu(this.movingVariance.read(),l),n=this.center?cu(this.beta.read(),l):null,r=this.scale?cu(this.gamma.read(),l):null;return bv(s,e,t,n,r,this.epsilon)}return bv(s,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,s,r=.001){return ce(s.slice().sort(),Jg(0,e.rank-1))?function(e,t,n,s,r=.001){return Yo((()=>{const a=Yc(e,s),i=a.mean,o=a.variance;return[bv(e,i,o,n,t,r),i,o]}))}(e,t,n,s,r):function(e,t,n,s,r=.001){return Yo((()=>{const a=Yc(e,s),i=a.mean,o=a.variance,l=[];for(const t of Jg(0,e.rank))-1!==s.indexOf(t)?l.push(1):l.push(e.shape[t]);const u=cu(i,l),c=cu(o,l),h=null==t?null:cu(t,l),p=null==n?null:cu(n,l);return[bv(e,u,c,p,h,r),i,o]}))}(e,t,n,s,r)}(s,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Yo((()=>{const s=1-n,r=e.read(),a=pl(El(r,t),s);e.write(El(r,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oy(this.betaInitializer),gammaInitializer:Oy(this.gammaInitializer),movingMeanInitializer:Oy(this.movingMeanInitializer),movingVarianceInitializer:Oy(this.movingVarianceInitializer),betaRegularizer:lw(this.betaRegularizer),gammaRegularizer:lw(this.gammaRegularizer),betaConstraint:Cg(this.betaConstraint),gammaConstraint:Cg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}xv.className="BatchNormalization",Eo(xv);class wv extends mb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=My(e.betaInitializer||"zeros"),this.gammaInitializer=My(e.gammaInitializer||"ones"),this.betaRegularizer=cw(e.betaRegularizer),this.gammaRegularizer=cw(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ab(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==dg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=rb(e),s=n.shape,r=s.length;return Yo((()=>{let{mean:e,variance:t}=Yc(n,this.axis,!0);const a=tg(1,r);for(const e of this.axis)a[e]=s[e];const i=e=>null!=e&&e.shape.length!==r?cu(e,a):e;let o=i(this.gamma.read()),l=i(this.beta.read());const u=[],c=[];for(let e=0;e<r;++e)-1!==this.axis.indexOf(e)?(u.push(s[e]),c.push(1)):(u.push(1),c.push(s[e]));return e=sc(e,u),t=sc(t,u),o=sc(o,c),l=sc(l,c),bv(n,e,t,l,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:Oy(this.betaInitializer),gammaInitializer:Oy(this.gammaInitializer),betaRegularizer:lw(this.betaRegularizer),gammaRegularizer:lw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}wv.className="LayerNormalization",Eo(wv);class vv extends mb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Jm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Jm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Jm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new cb({ndim:4})]}computeOutputShape(e){let t,n;return e=ab(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Yo((()=>{return t=rb(e),n=this.padding,s=this.dataFormat,Yo((()=>{if(4!==t.rank)throw new Jm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Jm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==s&&(s="channelsLast"),"channelsLast"!==s&&"channelsFirst"!==s)throw new Jm(`Unknown data format: ${s}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===s?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],nh(t,e)}));var t,n,s}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function kv(e,t,n,s,r,a){return Yo((()=>{let i;Bg(r),Ug(a),Wg(s),null==n&&(n=[1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=ww(e,r);const o="same"===s?"same":"valid";return i="max"===a?Pc(e,t,n,o):hu(e,t,n,o),"channelsFirst"===r&&(i=Ki(i,[0,3,1,2])),i}))}function Iv(e,t,n,s,r,a){return Yo((()=>{let i;Bg(r),Ug(a),Wg(s),null==n&&(n=[1,1,1]),null==s&&(s="valid"),null==r&&(r="channelsLast"),null==a&&(a="max"),e=vw(e,r);const o="same"===s?"same":"valid";return i="max"===a?Bc(e,t,n,o):pu(e,t,n,o),"channelsFirst"===r&&(i=Ki(i,[0,4,1,2,3])),i}))}vv.className="ZeroPadding2D",Eo(vv);class Nv extends mb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Jm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(yg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Jm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}yg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Wg(this.padding),this.inputSpec=[new cb({ndim:3})]}computeOutputShape(e){const t=bw((e=ab(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Yo((()=>{this.invokeCallHook(e,t),e=ey(rb(e),2);const n=this.poolingFunction(rb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return Kh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Sv extends Nv{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Bg(r),Wg(s),kv(e,t,n,s,r,"max")}}Sv.className="MaxPooling1D",Eo(Sv);class Tv extends Nv{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Bg(r),Wg(s),kv(e,t,n,s,r,"avg")}}Tv.className="AveragePooling1D",Eo(Tv);class Cv extends mb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Jm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];yg(this.poolSize,"poolSize"),yg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Bg(this.dataFormat),Wg(this.padding),this.inputSpec=[new cb({ndim:4})]}computeOutputShape(e){e=ab(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=bw(t,this.poolSize[0],this.padding,this.strides[0]),n=bw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Yo((()=>(this.invokeCallHook(e,t),this.poolingFunction(rb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $v extends Cv{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Bg(r),Wg(s),kv(e,t,n,s,r,"max")}}$v.className="MaxPooling2D",Eo($v);class Ev extends Cv{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Bg(r),Wg(s),kv(e,t,n,s,r,"avg")}}Ev.className="AveragePooling2D",Eo(Ev);class Av extends mb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Jm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];yg(this.poolSize,"poolSize"),yg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Bg(this.dataFormat),Wg(this.padding),this.inputSpec=[new cb({ndim:5})]}computeOutputShape(e){e=ab(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],s="channelsFirst"===this.dataFormat?e[4]:e[3];return t=bw(t,this.poolSize[0],this.padding,this.strides[0]),n=bw(n,this.poolSize[1],this.padding,this.strides[1]),s=bw(s,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,s]:[e[0],t,n,s,e[4]]}call(e,t){return Yo((()=>(this.invokeCallHook(e,t),this.poolingFunction(rb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Rv extends Av{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Bg(r),Wg(s),Iv(e,t,n,s,r,"max")}}Rv.className="MaxPooling3D",Eo(Rv);class Fv extends Av{constructor(e){super(e)}poolingFunction(e,t,n,s,r){return Bg(r),Wg(s),Iv(e,t,n,s,r,"avg")}}Fv.className="AveragePooling3D",Eo(Fv);class Dv extends mb{constructor(e){super(e),this.inputSpec=[new cb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Qm}}class _v extends Dv{constructor(e){super(e||{})}call(e,t){return Yo((()=>{const t=rb(e);return Uc(t,1)}))}}_v.className="GlobalAveragePooling1D",Eo(_v);class Ov extends Dv{constructor(e){super(e||{})}call(e,t){return Yo((()=>{const t=rb(e);return Ic(t,1)}))}}Ov.className="GlobalMaxPooling1D",Eo(Ov);class Mv extends mb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Bg(this.dataFormat),this.inputSpec=[new cb({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Qm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Lv extends Mv{call(e,t){return Yo((()=>{const t=rb(e);return"channelsLast"===this.dataFormat?Uc(t,[1,2]):Uc(t,[2,3])}))}}Lv.className="GlobalAveragePooling2D",Eo(Lv);class zv extends Mv{call(e,t){return Yo((()=>{const t=rb(e);return"channelsLast"===this.dataFormat?Ic(t,[1,2]):Ic(t,[2,3])}))}}zv.className="GlobalMaxPooling2D",Eo(zv);class Pv extends mb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const s=Ab(t.layer,n);delete t.layer;const r={layer:s};return Object.assign(r,t),new e(r)}}class Bv extends Pv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ab(e)).length<3)throw new Jm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ab(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),s=e[1];return[n[0],s].concat(n.slice(1))}call(e,t){return Yo((()=>Mw(((e,n)=>[rb(this.layer.call(e,t)),[]]),e=rb(e),[],!1,null,null,!1,!0)[1]))}}Bv.className="TimeDistributed",Eo(Bv);class Wv extends Pv{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ab(n),t.goBackwards=!0!==t.goBackwards;const s={};var r;if(s.className=e.layer.getClassName(),s.config=t,this.backwardLayer=Ab(s),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,r=this.mergeMode,mg(zg,"BidirectionalMergeMode",r),e.weights)throw new Qm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,s,r=this.forwardLayer.computeOutputShape(e);return Array.isArray(r)&&Array.isArray(r[0])||(r=[r]),this.returnState?(s=r.slice(1),t=r[0]):t=r[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(s).concat(s.slice()):[t].concat(s).concat(s.slice()):rg(n)}apply(e,t){let n=null==t?null:t.initialState,s=null==t?null:t.constants;null==t&&(t={});const r=Ow(e,n,s,this.numConstants);if(e=r.inputs,n=r.initialState,s=r.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==s)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Jm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const s=n.map((e=>new cb({shape:e.shape})));this.forwardLayer.stateSpec=s.slice(0,e/2),this.backwardLayer.stateSpec=s.slice(e/2),i.push(...s)}if(null!=s)throw new Qm("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof hb;for(const e of a)if(e instanceof hb!==o)throw new Jm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),s=this.inputSpec.concat(i),r=this.inputSpec;this.inputSpec=s;const o=super.apply(n,t);return this.inputSpec=r,o}return super.apply(e,t)}call(e,t){return Yo((()=>{const n=t.initialState;let s,r,a,i;if(null==n)s=this.forwardLayer.call(e,t),r=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);s=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),r=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(s)&&(a=s.slice(1).concat(r.slice(1))),s=s[0],r=r[0]),this.returnSequences&&(r=Nh(r,1)),"concat"===this.mergeMode?i=ry([s,r]):"sum"===this.mergeMode?i=ul(s,r):"ave"===this.mergeMode?i=pl(.5,ul(s,r)):"mul"===this.mergeMode?i=pl(s,r):null==this.mergeMode&&(i=[s,r]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Gg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Gg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ab(t.layer);if(delete t.layer,null!=t.numConstants)throw new Qm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const s=t;return s.layer=n,new e(s)}}function Uv(e){return new yb(e)}function Vv(e){return new fw(e)}function Gv(e){return new hw(e)}function Hv(e){return new pw(e)}function jv(e){return new dw(e)}function qv(e){return new gw(e)}function Kv(e){return new mw(e)}function Xv(e){return new Rw(e)}function Yv(e){return new Sw(e)}function Zv(e){return new Cw(e)}function Jv(e){return new Tw(e)}function Qv(e){return new $w(e)}function ek(e){return new Aw(e)}function tk(e){return new Fw(e)}function nk(e){return new Dw(e)}function sk(e){return new _w(e)}function rk(e){return new ev(e)}function ak(e){return new Jw(e)}function ik(e){return new Yw(e)}function ok(e){return new Zw(e)}function lk(e){return new Qw(e)}function uk(e){return new tv(e)}function ck(e){return new nv(e)}function hk(e){return new sv(e)}function pk(e){return new av(e)}function dk(e){return new ov(e)}function fk(e){return new uv(e)}function mk(e){return new pv(e)}function gk(e){return new cv(e)}function yk(e){return new hv(e)}function bk(e){return new lv(e)}function xk(e){return new fv(e)}function wk(e){return new xv(e)}function vk(e){return new wv(e)}function kk(e){return new vv(e)}function Ik(e){return new Tv(e)}function Nk(e){return Ik(e)}function Sk(e){return Ik(e)}function Tk(e){return new Ev(e)}function Ck(e){return Tk(e)}function $k(e){return Tk(e)}function Ek(e){return new Fv(e)}function Ak(e){return Ek(e)}function Rk(e){return Ek(e)}function Fk(e){return new _v(e)}function Dk(e){return new Lv(e)}function _k(e){return new Ov(e)}function Ok(e){return new zv(e)}function Mk(e){return new Sv(e)}function Lk(e){return new $v(e)}function zk(e){return new Rv(e)}function Pk(e){return new Uw(e)}function Bk(e){return new Ww(e)}function Wk(e){return new Gw(e)}function Uk(e){return new Vw(e)}function Vk(e){return new Bw(e)}function Gk(e){return new Pw(e)}function Hk(e){return new Xw(e)}function jk(e){return new Kw(e)}function qk(e){return new Lw(e)}function Kk(e){return new Hw(e)}function Xk(e){return new Wv(e)}function Yk(e){return new Bv(e)}Wv.className="Bidirectional",Eo(Wv);const Zk=_k,Jk=Ok,Qk=Mk,eI=Lk;function tI(e){return new mv(e)}function nI(e){return new gv(e)}function sI(e){return new yv(e)}function rI(e){return new rv(e)}function aI(e,t){return Wb(e,t)}function iI(e,t){return Hb(e,t)}function oI(e,t){return jb(e,t)}function lI(e,t){return Ub(e,t)}function uI(e,t){return qb(e,t)}function cI(e,t){return Gb(e,t)}function hI(e,t){return function(e,t){return Yo((()=>{const n=Vb(e,t),s=function(e,t){return Yo((()=>Ti(Nc(Oc(qu(e,1),qu(t,0))),"float32")))}(e,t),r=ul(n,s);return Ti(Ku(oc(r,0),hl(n,r),0),"float32")}))}(e,t)}function pI(e,t){return zb(e,t)}function dI(e,t){return Db(e,t)}function fI(e,t){return _b(e,t)}function mI(e,t){return _b(e,t)}function gI(e,t){return _b(e,t)}function yI(e,t){return Fb(e,t)}function bI(e,t){return Fb(e,t)}function xI(e,t){return Fb(e,t)}function wI(e){return new iw(e)}function vI(e){return rw(t=e),new iw({l1:null!=t?t.l1:null,l2:0});var t}function kI(e){return rw(t=e),new iw({l2:null!=t?t.l2:null,l1:0});var t}class II extends kb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof Rx))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function NI(e,t){return e<t}function SI(e,t){return e>t}class TI extends II{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Qm("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=NI:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=SI:this.monitorFunc=NI,this.monitorFunc===NI&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===NI?1/0:-1/0}async onEpochEnd(e,t){await xb(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const CI={earlyStopping:function(e){return new TI(e)}};var $I,EI;je().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}($I||($I={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(EI||(EI={}));const AI={};function RI(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};AI[e]=n}function FI(e){return AI[e]}function DI(e){delete AI[e]}function _I(e,t,n,s,r){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return OI(t.inputNames[a.inputIndexStart],n,s,r);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>OI(e,n,s,r)));const o=OI(t.inputNames.slice(e)[0],n,s,r),l=o.dataSync();return"number"===a.type?l[0]:Me(o.shape,l)}const i=t.attrParams[e];return i&&i.value}function OI(e,t,n,s){const[r,a]=zI(e);if(null!=s){const e=s.getHashTableHandleByName(r);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[LI(r,e)]));return void 0!==i?t[LI(r,i)][a]:void 0}function MI(e,t){const[n,s,r]=zI(e);return[LI(n,t&&t.currentContextId),s,r]}function LI(e,t){return t?`${e}-${t}`:e}function zI(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],s=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),s]}function PI(e,t,n){let s=_I("pad",e,t,n);if("explicit"===s){s=_I("explicitPaddings",e,t,n);const r=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)r[e][0]=s[2*e],r[e][1]=s[2*e+1];return r}return s}function BI(e){return e.kept?e:Ci(e)}const WI=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],UI=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VI=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],GI=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],HI=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],jI=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qI=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],KI=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],XI=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],YI=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],ZI=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JI=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],QI=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],eN=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tN=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],nN=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],sN=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],rN=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],aN=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class iN{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[I,N,S,T,C,$,E,A,R,F,D,_,O,M,L,z,P,B,W].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,s=[],r=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?s.push(e[t.name]):"Const"===t.op?r.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const l=[];let u={},c={};null!=t&&(u=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[s,,r]=MI(e),a=i[s];if(null!=a.outputs){const e=a.outputs.indexOf(r);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&l.push(t)})):Object.keys(c).forEach((e=>{const[t]=MI(e),n=i[t];null!=n&&(n.signatureKey=c[e],l.push(n))})),Object.keys(u).length>0?Object.keys(u).forEach((e=>{const[t]=MI(e),n=i[t];n&&(n.signatureKey=u[e],o.push(n))})):o=s;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:l,weights:r,placeholders:s,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=FI(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const s=n.type;let r;switch(n.type){case"string":r=lN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=lN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":r=bN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=bN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":r=cN(e.attr,n.tfName,n.defaultValue||0),void 0===r&&n.tfDeprecatedName&&(r=cN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":r=yN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=yN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":r=uN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=uN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":r=wN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=wN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":r=gN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=gN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":r=xN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=xN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":r=dN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=dN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":r=fN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=fN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":r=pN(e.attr,n.tfName,n.defaultValue),void 0===r&&n.tfDeprecatedName&&(r=pN(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:r,type:s},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let s={};null!=t&&(s=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const r=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=MI(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:hN(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,r.push(n),s[t]=n})),Object.keys(s).forEach((e=>{const t=s[e];t.inputNames.forEach(((e,n)=>{const[r,,a]=MI(e),i=s[r];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=MI(i[e.name]),r=s[t];null!=r&&(r.defaultOutput=n,a.push(r))}));const o=this.mapArgsToSignature(e);return{nodes:s,inputs:r,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function oN(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=je().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function lN(e,t,n,s=!1){const r=e[t];return null!=r?oN(r.s,s):n}function uN(e,t,n){const s=e[t];return s?s.b:n}function cN(e,t,n){const s=e[t]||{},r=null!=s.i?s.i:null!=s.f?s.f:n;return"number"==typeof r?r:parseInt(r,10)}function hN(e){switch("string"==typeof e&&(e=$I[e]),e){case $I.DT_FLOAT:case $I.DT_HALF:return"float32";case $I.DT_INT32:case $I.DT_INT64:case $I.DT_INT8:case $I.DT_UINT8:return"int32";case $I.DT_BOOL:return"bool";case $I.DT_DOUBLE:return"float32";case $I.DT_STRING:return"string";default:return null}}function pN(e,t,n){const s=e[t];return s&&s.func?s.func.name:n}function dN(e,t,n){const s=e[t];return s&&s.type?hN(s.type):n}function fN(e,t,n){const s=e[t];return s&&s.list&&s.list.type?s.list.type.map((e=>hN(e))):n}function mN(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function gN(e,t,n){const s=e[t];return s&&s.shape?mN(s.shape):n}function yN(e,t,n){const s=e[t];return s?((s.list.f&&s.list.f.length?s.list.f:s.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function bN(e,t,n,s=!1){const r=e[t];return r&&r.list&&r.list.s?r.list.s.map((e=>oN(e,s))):n}function xN(e,t,n){const s=e[t];return s&&s.list&&s.list.shape?s.list.shape.map((e=>mN(e))):n}function wN(e,t,n){const s=e[t];return s&&s.list&&s.list.b?s.list.b:n}class vN{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return OI(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return OI(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return cN(this.node.rawAttrs,e,t);if(null!=n.s)return lN(this.node.rawAttrs,e,t);if(null!=n.b)return uN(this.node.rawAttrs,e,t);if(null!=n.shape)return gN(this.node.rawAttrs,e,t);if(null!=n.type)return dN(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return yN(this.node.rawAttrs,e,t);if(null!=n.list.s)return bN(this.node.rawAttrs,e,t);if(null!=n.list.shape)return xN(this.node.rawAttrs,e,t);if(null!=n.list.b)return wN(this.node.rawAttrs,e,t);if(null!=n.list.type)return fN(this.node.rawAttrs,e,t)}return t}}function kN(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){re(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let s=0;s<e.length;s++){const r=e[s],a=t[s];re(r<0||a<0||r===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function IN(e){return"number"!=typeof e&&!e.some((e=>e<0))}function NN(e,t,n){let s=SN(e,n);const r=!IN(s);if(r&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${s}`);if(r&&t.forEach((e=>{s=SN(e.shape,s)})),!IN(s))throw new Error(`Non-fully-defined elementShape: ${s}`);return s}function SN(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let s=0;s<e.length;++s){const r=e[s],a=t[s];if(r>=0&&a>=0&&r!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[s]=r>=0?r:a}return n}class TN{constructor(e,t,n,s,r,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=s,this.identicalElementShapes=r,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=Il(0),Jo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),kN(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Jo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Aa([],[0].concat(this.elementShape));const n=this.readMany(e);return kN(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Xh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Aa([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return kN(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),du(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,lp(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const s=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const r=0===n?0:t.size/n,a=[];Yo((()=>{t=cu(t,[1,n,r]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:s[n-1],0],o=[1,e[n],r];a[n]=cu(mu(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class CN{constructor(e,t,n,s=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);kN(t,e.shape,"TensorList shape mismatch: "),Jo(e)})),this.idTensor=Il(0),this.maxNumElements=s,Jo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new CN([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);kN(e,this.elementShape,"TensorList shape mismatch: ");const s=NN(this.elementShape,this.tensors,e);return Yo((()=>{const e=this.tensors.map((e=>cu(e,s)));return Xh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=NN(this.elementShape,this.tensors,e),s=this.tensors.pop();return kN(s.shape,e,"TensorList shape mismatch: "),cu(s,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(kN(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Jo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);kN(this.tensors[e].shape,t,"TensorList shape mismatch: ");const s=NN(this.elementShape,this.tensors,t);return cu(this.tensors[e],s)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);kN(this.elementShape,t.shape,"TensorList shape mismatch: "),Jo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);kN(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const s=NN(this.elementShape,this.tensors,n);return 0===e.length?Aa([],[0].concat(s)):Yo((()=>{const t=e.map((e=>cu(this.tensors[e],s)));return Xh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);kN(this.elementShape,t,"TensorList shape mismatch: ");const n=NN(this.elementShape,this.tensors,t);return 0===this.size()?Aa([],[0].concat(n)):Yo((()=>{const e=this.tensors.map((e=>cu(e,n)));return du(e,0)}))}}function $N(e,t,n){const[s,r]=_I("fusedOps",e,t,n),a="biasadd"===s,i=!a,o="prelu"===r,l="fusedbatchnorm"===s,u=_I("numArgs",e,t,n);if(a){if(o&&2!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==u)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(l)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=_I("strides",e,t,n),h=PI(e,t,n),p=_I("dataFormat",e,t,n).toUpperCase(),d=_I("dilations",e,t,n);let[f,m]=_I("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:r,leakyreluAlpha:_I("leakyreluAlpha",e,t,n)}}function EN(e,t,n){return{boxes:_I("boxes",e,t,n),scores:_I("scores",e,t,n),maxOutputSize:_I("maxOutputSize",e,t,n),iouThreshold:_I("iouThreshold",e,t,n),scoreThreshold:_I("scoreThreshold",e,t,n),softNmsSigma:_I("softNmsSigma",e,t,n)}}class AN{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=Il(0),this.tensorMap=new Map,Jo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return Il(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Yo((()=>{const e=lp(t),s=n.length,r=e.length;re(s===r,(()=>`The number of elements doesn't match, keys has ${s} elements, the values has ${r} elements.`));for(let t=0;t<s;t++){const s=n[t],r=e[t];Jo(r),this.tensorMap.set(s,r)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Yo((()=>{const e=[];for(let s=0;s<n.length;s++){const r=n[s],a=this.findWithDefault(r,t);e.push(a)}return Xh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function RN(e,t,n,s){const r=((e,t,n)=>{switch(e.category){case"arithmetic":return Yo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[ul(_I("a",e,t,n),_I("b",e,t,n))];case"AddN":return[Bl(_I("tensors",e,t,n))];case"FloorMod":case"Mod":return[Xc(_I("a",e,t,n),_I("b",e,t,n))];case"Mul":return[pl(_I("a",e,t,n),_I("b",e,t,n))];case"RealDiv":case"Div":return[hl(_I("a",e,t,n),_I("b",e,t,n))];case"DivNoNan":return[Xu(_I("a",e,t,n),_I("b",e,t,n))];case"FloorDiv":return[cl(_I("a",e,t,n),_I("b",e,t,n))];case"Sub":return[El(_I("a",e,t,n),_I("b",e,t,n))];case"Minimum":return[qc(_I("a",e,t,n),_I("b",e,t,n))];case"Maximum":return[Fl(_I("a",e,t,n),_I("b",e,t,n))];case"Pow":return[$l(_I("a",e,t,n),_I("b",e,t,n))];case"SquaredDifference":return[qh(_I("a",e,t,n),_I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Yo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Rl(_I("x",e,t,n))];case"Acos":return[zl(_I("x",e,t,n))];case"Acosh":return[Pl(_I("x",e,t,n))];case"Asin":return[Hl(_I("x",e,t,n))];case"Asinh":return[jl(_I("x",e,t,n))];case"Atan":return[ql(_I("x",e,t,n))];case"Atan2":return[Kl(_I("x",e,t,n),_I("y",e,t,n))];case"Atanh":return[Xl(_I("x",e,t,n))];case"Ceil":return[Tu(_I("x",e,t,n))];case"Complex":return[$a(_I("real",e,t,n),_I("imag",e,t,n))];case"Cos":return[Pu(_I("x",e,t,n))];case"Cosh":return[Bu(_I("x",e,t,n))];case"Elu":return[Ju(_I("x",e,t,n))];case"Erf":return[Qu(_I("x",e,t,n))];case"Exp":return[ec(_I("x",e,t,n))];case"Expm1":return[nc(_I("x",e,t,n))];case"Floor":return[ac(_I("x",e,t,n))];case"Log":return[bc(_I("x",e,t,n))];case"Log1p":return[xc(_I("x",e,t,n))];case"Imag":return[uc(_I("x",e,t,n))];case"Neg":return[wc(_I("x",e,t,n))];case"Reciprocal":return[vh(_I("x",e,t,n))];case"Real":return[wh(_I("x",e,t,n))];case"Relu":return[kh(_I("x",e,t,n))];case"Round":return[Eh(_I("x",e,t,n))];case"Selu":return[Rh(_I("x",e,t,n))];case"Sigmoid":return[fu(_I("x",e,t,n))];case"Sin":return[Oh(_I("x",e,t,n))];case"Sign":return[_h(_I("x",e,t,n))];case"Sinh":return[Mh(_I("x",e,t,n))];case"Softplus":return[vc(_I("x",e,t,n))];case"Sqrt":return[dl(_I("x",e,t,n))];case"Square":return[fl(_I("x",e,t,n))];case"Tanh":return[gu(_I("x",e,t,n))];case"Tan":return[Jh(_I("x",e,t,n))];case"ClipByValue":return[Cu(_I("x",e,t,n),_I("clipValueMin",e,t,n),_I("clipValueMax",e,t,n))];case"Relu6":return[Ih(_I("x",e,t,n))];case"Rsqrt":return[Ah(OI(e.inputNames[0],t,n))];case"Prod":return[ch(_I("x",e,t,n),_I("axes",e,t,n))];case"LeakyRelu":return[dc(_I("x",e,t,n),_I("alpha",e,t,n))];case"Prelu":return[uh(_I("x",e,t,n),_I("alpha",e,t,n))];case"IsNan":return[pc(OI(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const s=_I("thenBranch",e,t,n),r=_I("elseBranch",e,t,n),a=_I("cond",e,t,n),i=_I("args",e,t,n);return(await a.data())[0]?n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const s=_I("body",e,t,n),r=_I("cond",e,t,n),a=_I("args",e,t,n),i=await n.functionMap[r].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let l=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let u=a;for(;l[0];){const e=u;u=await n.functionMap[s].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);const t=u.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[r].executeFunctionAsync(u,n.tensorArrayMap,n.tensorListMap);l=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return u}case"LoopCond":return[BI(_I("pred",e,t,n))];case"Switch":{const s=_I("pred",e,t,n);let r=_I("data",e,t,n);return r.kept||(r=BI(r)),(await s.data())[0]?[void 0,r]:[r,void 0]}case"Merge":{const s=e.inputNames.find((e=>void 0!==OI(e,t,n)));return s?[BI(OI(s,t,n))]:void 0}case"Enter":{const s=_I("frameName",e,t,n),r=_I("tensor",e,t,n);return n.enterFrame(s),[BI(r)]}case"Exit":{const s=_I("tensor",e,t,n);return n.exitFrame(),[BI(s)]}case"NextIteration":{const s=_I("tensor",e,t,n);return n.nextIteration(),[BI(s)]}case"TensorArrayV3":{const s=_I("size",e,t,n),r=_I("dtype",e,t,n),a=_I("elementShape",e,t,n),i=_I("dynamicSize",e,t,n),o=_I("clearAfterRead",e,t,n),l=_I("identicalElementShapes",e,t,n),u=_I("name",e,t,n),c=new TN(u,r,s,a,l,i,o);return n.addTensorArray(c),[c.idTensor,Il(1)]}case"TensorArrayWriteV3":{const s=_I("tensorArrayId",e,t,n),r=_I("index",e,t,n),a=_I("tensor",e,t,n),i=n.getTensorArray(s.id);return i.write(r,a),[i.idTensor]}case"TensorArrayReadV3":{const s=_I("tensorArrayId",e,t,n),r=_I("index",e,t,n);return[n.getTensorArray(s.id).read(r)]}case"TensorArrayGatherV3":{const s=_I("tensorArrayId",e,t,n),r=_I("indices",e,t,n),a=_I("dtype",e,t,n);return[n.getTensorArray(s.id).gather(r,a)]}case"TensorArrayScatterV3":{const s=_I("tensorArrayId",e,t,n),r=_I("indices",e,t,n),a=_I("tensor",e,t,n),i=n.getTensorArray(s.id);return i.scatter(r,a),[i.idTensor]}case"TensorArrayConcatV3":{const s=_I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id),a=_I("dtype",e,t,n);return[r.concat(a)]}case"TensorArraySplitV3":{const s=_I("tensorArrayId",e,t,n),r=_I("tensor",e,t,n),a=_I("lengths",e,t,n),i=n.getTensorArray(s.id);return i.split(a,r),[i.idTensor]}case"TensorArraySizeV3":{const s=_I("tensorArrayId",e,t,n);return[Il(n.getTensorArray(s.id).size(),"int32")]}case"TensorArrayCloseV3":{const s=_I("tensorArrayId",e,t,n),r=n.getTensorArray(s.id);return r.clearAndClose(),[r.idTensor]}case"TensorListSetItem":{const s=_I("tensorListId",e,t,n),r=_I("index",e,t,n),a=_I("tensor",e,t,n),i=n.getTensorList(s.id);return i.setItem(r,a),[i.idTensor]}case"TensorListGetItem":{const s=_I("tensorListId",e,t,n),r=_I("index",e,t,n),a=_I("elementShape",e,t,n),i=_I("elementDType",e,t,n);return[n.getTensorList(s.id).getItem(r,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const s=_I("indices",e,t,n),r=function(e,t,n,s){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const r=Math.max(...t);if(null!=s&&-1!==s&&r>=s)throw new Error(`Max index must be < array size (${r}  vs. ${s})`);const a=new CN([],n,e.dtype,s),i=lp(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(_I("tensor",e,t,n),s,_I("elementShape",e,t,n),_I("numElements",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const s=_I("elementShape",e,t,n),r=_I("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new CN([],e,t,n)}(s,r,_I(a,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const s=_I("tensorListId",e,t,n),r=_I("indices",e,t,n),a=_I("elementShape",e,t,n),i=_I("elementDType",e,t,n);return[n.getTensorList(s.id).gather(r,i,a)]}case"TensorListStack":{const s=_I("tensorListId",e,t,n),r=_I("elementShape",e,t,n),a=_I("elementDType",e,t,n),i=_I("numElements",e,t,n);return[n.getTensorList(s.id).stack(r,a,i)]}case"TensorListFromTensor":{const s=function(e,t,n){const s=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);kN(e.shape.slice(1),t,"TensorList shape mismatch: ");const r=lp(e);return new CN(r,t,s)}(_I("tensor",e,t,n),_I("elementShape",e,t,n),_I("elementDType",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListConcat":{const s=_I("tensorListId",e,t,n),r=n.getTensorList(s.id),a=_I("dtype",e,t,n),i=_I("elementShape",e,t,n);return[r.concat(a,i)]}case"TensorListPushBack":{const s=_I("tensorListId",e,t,n),r=_I("tensor",e,t,n),a=n.getTensorList(s.id);return a.pushBack(r),[a.idTensor]}case"TensorListPopBack":{const s=_I("tensorListId",e,t,n),r=_I("elementShape",e,t,n),a=_I("elementDType",e,t,n);return[n.getTensorList(s.id).popBack(r,a)]}case"TensorListSplit":{const s=_I("tensor",e,t,n),r=_I("elementShape",e,t,n),a=function(e,t,n){let s=0;const r=t.map((e=>(s+=e,s)));if(s!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${s}, and tensor's shape is: ${e.shape}`);const a=SN(e.shape.slice(1),n),i=0===s?0:e.size/s,o=Yo((()=>{const n=[];e=cu(e,[1,s,i]);for(let s=0;s<t.length;++s){const o=[0,0===s?0:r[s-1],0],l=[1,t[s],i];n[s]=cu(mu(e,o,l),a)}return e.dispose(),n})),l=new CN([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)l.setItem(e,o[e]);return l}(s,_I("lengths",e,t,n),r);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Yo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const s=_I("stride",e,t,n),r=_I("pad",e,t,n),a=_I("dataFormat",e,t,n).toUpperCase(),i=_I("dilation",e,t,n);return[Du(_I("x",e,t,n),_I("filter",e,t,n),s,r,a,i)]}case"Conv2D":{const s=_I("strides",e,t,n),r=PI(e,t,n),a=_I("dataFormat",e,t,n).toUpperCase(),i=_I("dilations",e,t,n);return[Fu(_I("x",e,t,n),_I("filter",e,t,n),[s[1],s[2]],r,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=$N(e,t,n);return[$p({x:_I("x",e,t,n),filter:_I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:s,pad:r,dataFormat:a,dilations:i,biasArg:o,preluArg:l,activationFunc:u,leakyreluAlpha:c}=$N(e,t,n);return[Rp({x:_I("x",e,t,n),filter:_I("filter",e,t,n),strides:[s[1],s[2]],pad:r,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:u,preluActivationWeights:l,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const s=_I("outputShape",e,t,n),r=_I("strides",e,t,n),a=PI(e,t,n);return[Ou(_I("x",e,t,n),_I("filter",e,t,n),s,[r[1],r[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const s=_I("strides",e,t,n),r=PI(e,t,n),a=_I("dilations",e,t,n),i=_I("dataFormat",e,t,n).toUpperCase();return[Gu(_I("input",e,t,n),_I("filter",e,t,n),[s[1],s[2]],r,i,[a[1],a[2]])]}case"Conv3D":{const s=_I("strides",e,t,n),r=_I("pad",e,t,n),a=_I("dataFormat",e,t,n).toUpperCase(),i=_I("dilations",e,t,n);return[Mu(_I("x",e,t,n),_I("filter",e,t,n),[s[1],s[2],s[3]],r,a,[i[1],i[2],i[3]])]}case"AvgPool":{const s=_I("strides",e,t,n),r=_I("pad",e,t,n),a=_I("kernelSize",e,t,n);return[hu(_I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPool":{const s=_I("strides",e,t,n),r=_I("pad",e,t,n),a=_I("kernelSize",e,t,n);return[Pc(_I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r)]}case"MaxPoolWithArgmax":{const s=_I("strides",e,t,n),r=_I("pad",e,t,n),a=_I("kernelSize",e,t,n),i=_I("includeBatchInIndex",e,t,n),{result:o,indexes:l}=Wc(_I("x",e,t,n),[a[1],a[2]],[s[1],s[2]],r,i);return[o,l]}case"AvgPool3D":{const s=_I("strides",e,t,n),r=_I("pad",e,t,n),a=_I("kernelSize",e,t,n);return[pu(_I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"MaxPool3D":{const s=_I("strides",e,t,n),r=_I("pad",e,t,n),a=_I("kernelSize",e,t,n);return[Bc(_I("x",e,t,n),[a[1],a[2],a[3]],[s[1],s[2],s[3]],r)]}case"Dilation2D":{const s=_I("strides",e,t,n),r=_I("pad",e,t,n),a=_I("dilations",e,t,n),i=s[1],o=s[2],l=a[1],u=a[2];return[ju(_I("x",e,t,n),_I("filter",e,t,n),[i,o],r,[l,u],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Yo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const s=_I("shape",e,t,n),r=_I("dtype",e,t,n);return[Tl(s,_I("value",e,t,n),r)]}case"LinSpace":return[gc(_I("start",e,t,n),_I("stop",e,t,n),_I("num",e,t,n))];case"Multinomial":{const s=_I("logits",e,t,n),r=_I("numSamples",e,t,n),a=_I("seed",e,t,n);return[Jc(s,r,a)]}case"OneHot":{const s=_I("indices",e,t,n),r=_I("depth",e,t,n),a=_I("onValue",e,t,n),i=_I("offValue",e,t,n);return[qi(s,r,a,i)]}case"Ones":return[Gc(_I("shape",e,t,n),_I("dtype",e,t,n))];case"OnesLike":return[eh(_I("x",e,t,n))];case"RandomUniform":return[bh(_I("shape",e,t,n),_I("minval",e,t,n),_I("maxval",e,t,n),_I("dtype",e,t,n))];case"Range":return[xh(_I("start",e,t,n),_I("stop",e,t,n),_I("step",e,t,n),_I("dtype",e,t,n))];case"TruncatedNormal":{const s=_I("shape",e,t,n),r=_I("mean",e,t,n),a=_I("stdDev",e,t,n),i=_I("seed",e,t,n);return[ap(s,r,a,_I("dtype",e,t,n),i)]}case"Zeros":return[Vc(_I("shape",e,t,n),_I("dtype",e,t,n))];case"ZerosLike":return[ml(_I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:l}=EN(e,t,n),u=await Cd.nonMaxSuppressionWithScoreAsync(s,r,a,i,o,l);return[u.selectedIndices,u.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=EN(e,t,n),l=_I("padToMaxOutputSize",e,t,n),u=await Cd.nonMaxSuppressionPaddedAsync(s,r,a,i,o,l);return[u.selectedIndices,u.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:s,scores:r,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=EN(e,t,n);return[await Cd.nonMaxSuppressionAsync(s,r,a,i,o)]}case"Where":{const s=Ti(_I("condition",e,t,n),"bool"),r=[await hp(s)];return s.dispose(),r}case"ListDiff":return Dh(_I("x",e,t,n),_I("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Yo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const s=_I("x",e,t,n),r=_I("k",e,t,n),a=_I("sorted",e,t,n),i=rp(s,r,a);return[i.values,i.indices]}case"Unique":{const s=_I("x",e,t,n),r=ip(s);return[r.values,r.indices]}case"UniqueV2":{const s=_I("x",e,t,n),r=_I("axis",e,t,n),a=ip(s,r);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Yo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const s=_I("images",e,t,n),r=_I("size",e,t,n),a=_I("alignCorners",e,t,n),i=_I("halfPixelCenters",e,t,n);return[Cd.resizeBilinear(s,[r[0],r[1]],a,i)]}case"ResizeNearestNeighbor":{const s=_I("images",e,t,n),r=_I("size",e,t,n),a=_I("alignCorners",e,t,n),i=_I("halfPixelCenters",e,t,n);return[Cd.resizeNearestNeighbor(s,[r[0],r[1]],a,i)]}case"CropAndResize":{const s=_I("image",e,t,n),r=_I("boxes",e,t,n),a=_I("boxInd",e,t,n),i=_I("cropSize",e,t,n),o=_I("method",e,t,n),l=_I("extrapolationValue",e,t,n);return[Cd.cropAndResize(s,r,a,i,o,l)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Yo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const s=_I("default",e,t,n);return[OI(e.name,t,n)||s];case"Placeholder":return[OI(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[BI(_I("x",e,t,n))];case"IdentityN":return _I("x",e,t,n).map((e=>BI(e)));case"Shape":return[Qh(_I("x",e,t,n).shape,"int32")];case"ShapeN":return _I("x",e,t,n).map((e=>Qh(e.shape)));case"Size":return[Il(_I("x",e,t,n).size,"int32")];case"Rank":return[Il(_I("x",e,t,n).rank,"int32")];case"NoOp":return[Il(1)];case"Print":const r=_I("x",e,t,n),a=_I("data",e,t,n),i=_I("message",e,t,n),o=_I("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[r];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Yo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[qu(_I("a",e,t,n),_I("b",e,t,n))];case"NotEqual":return[Qc(_I("a",e,t,n),_I("b",e,t,n))];case"Greater":return[oc(_I("a",e,t,n),_I("b",e,t,n))];case"GreaterEqual":return[lc(_I("a",e,t,n),_I("b",e,t,n))];case"Less":return[fc(_I("a",e,t,n),_I("b",e,t,n))];case"LessEqual":return[mc(_I("a",e,t,n),_I("b",e,t,n))];case"LogicalAnd":return[Oc(_I("a",e,t,n),_I("b",e,t,n))];case"LogicalNot":return[Mc(_I("a",e,t,n))];case"LogicalOr":return[Lc(_I("a",e,t,n),_I("b",e,t,n))];case"Select":case"SelectV2":return[Ku(_I("condition",e,t,n),_I("a",e,t,n),_I("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Yo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ji(_I("a",e,t,n),_I("b",e,t,n),_I("transposeA",e,t,n),_I("transposeB",e,t,n))];case"Einsum":return[Zu(_I("equation",e,t,n),..._I("tensors",e,t,n))];case"Transpose":return[Ki(_I("x",e,t,n),_I("perm",e,t,n))];case"_FusedMatMul":const[s,r]=_I("fusedOps",e,t,n),a="biasadd"===s,i="prelu"===r,o=_I("numArgs",e,t,n),l=_I("leakyreluAlpha",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[u,c]=_I("args",e,t,n);return[Fp({a:_I("a",e,t,n),b:_I("b",e,t,n),transposeA:_I("transposeA",e,t,n),transposeB:_I("transposeB",e,t,n),bias:u,activation:r,preluActivationWeights:c,leakyreluAlpha:l})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Yo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[xu(_I("x",e,t,n),_I("mean",e,t,n),_I("variance",e,t,n),_I("offset",e,t,n),_I("scale",e,t,n),_I("epsilon",e,t,n))];case"LRN":return[yc(_I("x",e,t,n),_I("radius",e,t,n),_I("bias",e,t,n),_I("alpha",e,t,n),_I("beta",e,t,n))];case"Softmax":return[Wh(_I("x",e,t,n))];case"LogSoftmax":return[Sc(_I("x",e,t,n))];case"SparseToDense":return[yp(_I("sparseIndices",e,t,n),_I("outputShape",e,t,n),_I("sparseValues",e,t,n),_I("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Yo((()=>((e,t,n)=>{switch(e.op){case"Max":{const s=_I("axis",e,t,n),r=_I("keepDims",e,t,n);return[Ic(_I("x",e,t,n),s,r)]}case"Mean":{const s=_I("axis",e,t,n),r=_I("keepDims",e,t,n);return[Uc(_I("x",e,t,n),s,r)]}case"Min":{const s=_I("axis",e,t,n),r=_I("keepDims",e,t,n);return[jc(_I("x",e,t,n),s,r)]}case"Sum":{const s=_I("axis",e,t,n),r=_I("keepDims",e,t,n);return[Nc(_I("x",e,t,n),s,r)]}case"All":{const s=_I("axis",e,t,n),r=_I("keepDims",e,t,n);return[Wl(_I("x",e,t,n),s,r)]}case"Any":{const s=_I("axis",e,t,n),r=_I("keepDims",e,t,n);return[Ul(_I("x",e,t,n),s,r)]}case"ArgMax":{const s=_I("axis",e,t,n);return[Vl(_I("x",e,t,n),s)]}case"ArgMin":{const s=_I("axis",e,t,n);return[Gl(_I("x",e,t,n),s)]}case"Prod":{const s=_I("axis",e,t,n),r=_I("keepDims",e,t,n);return[ch(_I("x",e,t,n),s,r)]}case"Cumsum":{const s=_I("axis",e,t,n),r=_I("exclusive",e,t,n),a=_I("reverse",e,t,n);return[Wu(_I("x",e,t,n),s,r,a)]}case"Bincount":const s=_I("x",e,t,n),r=_I("weights",e,t,n),a=_I("size",e,t,n);return[Iu(s,r,a)];case"DenseBincount":{const s=_I("x",e,t,n),r=_I("weights",e,t,n),a=_I("size",e,t,n),i=_I("binaryOutput",e,t,n);return[Uu(s,r,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Yo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const s=_I("n",e,t,n),r=_I("axis",e,t,n);let a=_I("tensors",e,t,n);return a=a.slice(0,s),[du(a,r)]}case"Gather":{const s=_I("x",e,t,n),r=_I("indices",e,t,n);return[ic(s,Ti(r,"int32"),0)]}case"GatherV2":{const s=_I("axis",e,t,n),r=_I("batchDims",e,t,n),a=_I("x",e,t,n),i=_I("indices",e,t,n);return[ic(a,Ti(i,"int32"),s,r)]}case"Reverse":{const s=_I("dims",e,t,n),r=[];for(let e=0;e<s.length;e++)s[e]&&r.push(e);const a=_I("x",e,t,n);return[Nh(a,r)]}case"ReverseV2":{const s=_I("axis",e,t,n),r=_I("x",e,t,n);return[Nh(r,s)]}case"Slice":{const s=_I("begin",e,t,n),r=_I("size",e,t,n);return[mu(_I("x",e,t,n),s,r)]}case"StridedSlice":{const s=_I("begin",e,t,n),r=_I("end",e,t,n),a=_I("strides",e,t,n),i=_I("beginMask",e,t,n),o=_I("endMask",e,t,n),l=_I("ellipsisMask",e,t,n),u=_I("newAxisMask",e,t,n),c=_I("shrinkAxisMask",e,t,n),h=_I("x",e,t,n);return[Zh(h,s,r,a,i,o,l,u,c)]}case"Pack":return Yo((()=>{const s=_I("axis",e,t,n),r=_I("tensors",e,t,n),a=r[0].shape,i=Kh(r[0]).shape,o=r.map((e=>{const t=ce(e.shape,a);if(!t&&!ce(Kh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:cu(e,a)}));return[Xh(o,s)]}));case"Unpack":{const s=_I("axis",e,t,n),r=_I("tensor",e,t,n);return lp(r,s)}case"Tile":{const s=_I("reps",e,t,n);return[sc(_I("x",e,t,n),s)]}case"Split":case"SplitV":{const s=_I("axis",e,t,n),r=_I("numOrSizeSplits",e,t,n),a=_I("x",e,t,n);return Hh(a,r,s)}case"ScatterNd":{const s=_I("indices",e,t,n),r=_I("values",e,t,n),a=_I("shape",e,t,n);return[gp(s,r,a)]}case"GatherNd":{const s=_I("x",e,t,n),r=_I("indices",e,t,n);return[bp(s,r)]}case"SparseToDense":{const s=_I("sparseIndices",e,t,n),r=_I("outputShape",e,t,n),a=_I("sparseValues",e,t,n),i=_I("defaultValue",e,t,n);return[yp(s,a,r,a.dtype===i.dtype?i:Ti(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Yo((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:s,outputValues:r,emptyRowIndicator:a,reverseIndexMap:i}=Ad.sparseFillEmptyRows(_I("indices",e,t,n),_I("values",e,t,n),_I("denseShape",e,t,n),_I("defaultValue",e,t,n));return[s,r,a,i]}case"SparseReshape":{const{outputIndices:s,outputShape:r}=Ad.sparseReshape(_I("inputIndices",e,t,n),_I("inputShape",e,t,n),_I("newShape",e,t,n));return[s,r]}case"SparseSegmentMean":return[Ad.sparseSegmentMean(_I("data",e,t,n),_I("indices",e,t,n),_I("segmentIds",e,t,n))];case"SparseSegmentSum":return[Ad.sparseSegmentSum(_I("data",e,t,n),_I("indices",e,t,n),_I("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Yo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Uh(_I("x",e,t,n))];case"IFFT":return[Vh(_I("x",e,t,n))];case"RFFT":return[jh(_I("x",e,t,n))];case"IRFFT":return[Gh(_I("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Yo((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:s,nGramsSplits:r}=Rd.stringNGrams(_I("data",e,t,n),_I("dataSplits",e,t,n),_I("separator",e,t,n),_I("nGramWidths",e,t,n),_I("leftPad",e,t,n),_I("rightPad",e,t,n),_I("padWidth",e,t,n),_I("preserveShortSequences",e,t,n));return[s,r]}case"StringSplit":{const{indices:s,values:r,shape:a}=Rd.stringSplit(_I("input",e,t,n),_I("delimiter",e,t,n),_I("skipEmpty",e,t,n));return[s,r,a]}case"StringToHashBucketFast":return[Rd.stringToHashBucketFast(_I("input",e,t,n),_I("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Yo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ti(_I("x",e,t,n),_I("dtype",e,t,n))];case"ExpandDims":{const s=_I("axis",e,t,n);return[tc(_I("x",e,t,n),s)]}case"Squeeze":{const s=_I("axis",e,t,n);return[Kh(_I("x",e,t,n),s)]}case"Reshape":return[cu(_I("x",e,t,n),_I("shape",e,t,n))];case"MirrorPad":return[Kc(_I("x",e,t,n),_I("padding",e,t,n),_I("mode",e,t,n))];case"PadV2":case"Pad":return[nh(_I("x",e,t,n),_I("padding",e,t,n),_I("constantValue",e,t,n))];case"SpaceToBatchND":{const s=_I("blockShape",e,t,n),r=_I("paddings",e,t,n);return[oh(_I("x",e,t,n),s,r)]}case"BatchToSpaceND":{const s=_I("blockShape",e,t,n),r=_I("crops",e,t,n);return[bu(_I("x",e,t,n),s,r)]}case"DepthToSpace":{const s=_I("blockSize",e,t,n),r=_I("dataFormat",e,t,n).toUpperCase();return[Vu(_I("x",e,t,n),s,r)]}case"BroadcastTo":return[Su(_I("x",e,t,n),_I("shape",e,t,n))];case"BroadcastArgs":return[Nu(_I("s0",e,t,n),_I("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,s)=>{switch(e.op){case"HashTable":case"HashTableV2":{const r=_I("keyDType",e,t,n),a=_I("valueDType",e,t,n),i=new AN(r,a);return s.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const r=_I("tableHandle",e,t,n,s),a=_I("keys",e,t,n),i=_I("values",e,t,n),o=s.getHashTableById(r.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const r=_I("tableHandle",e,t,n,s),a=_I("keys",e,t,n),i=_I("defaultValue",e,t,n),o=s.getHashTableById(r.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const r=_I("tableHandle",e,t,n,s);return[s.getHashTableById(r.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,s);case"custom":const r=FI(e.op);if(r&&r.customExecutor)return r.customExecutor(new vN(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return Ve(r)?r.then((e=>[].concat(e))):[].concat(r)}class FN{constructor(e={},t={},n={},s={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=s,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function DN(e,t,n,s){const r=new Set,a=[];let i=null,o=null;const l=new Set,u=Object.keys(e).map((e=>zI(e)[0]));let c=[];null!=s&&(c=s.map((e=>zI(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(LN(e)||zN(e)||PN(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>r.has(e)))),r.add(e.name),null==n[e.name]&&-1===u.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{l.has(e.name)||(l.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:r,missingInputs:a,dynamicNode:i,syncInputs:o}}const _N=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],ON=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],MN=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function LN(e){return _N.indexOf(e.op)>=0}function zN(e){return ON.indexOf(e.op)>=0}function PN(e){return MN.indexOf(e.op)>=0}class BN{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new BN(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),s=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+s.join(this.SEPERATOR)}compile(e,t){const n=DN(e,t,this.weightMap,this._initNodes),{missingInputs:s,dynamicNode:r,syncInputs:a}=n;if(null!=r)throw new Error(`This execution contains the node '${r.name}', which has the dynamic op '${r.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(s.length>0){const n=t.map((e=>e.name)),r=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${r}]. Missing the following inputs: [${s}]`)}return function(e,t,n){const{usedNodes:s,inputs:r}=n,a=[],i=Object.keys(r).map((e=>zI(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{s.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{s.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{s.has(e.name)&&a.push(e)}));const l=new Set,u=[];for(;a.length>0;){const e=a.pop();l.add(e.name),t[e.name]||u.push(e),e.children.forEach((e=>{!l.has(e.name)&&s.has(e.name)&&e.inputs.every((e=>l.has(e.name)))&&a.push(e)}))}return u}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const s=n.map((e=>this.graph.nodes[zI(e)[0]])),r=t.map((e=>zI(e)[0]));let a=r.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const i=this.getCompilationKey(s,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const l={},u={};return Yo((()=>{const n=new FN(this.weightMap,l,u,this.functionExecutorMap),s=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=zI(t),a=[];a[r]=e[t],s[n]=a}));const a=this.getFrozenTensorIds(s),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!s[t.name]){const e=RN(t,s,n,this._resourceManager);if(Ve(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);s[t.name]=e,this.checkTensorForDisposal(t.name,t,s,n,a,r,i)}}return null==this.parent&&n.dispose(a),t.map((e=>OI(e,s,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,s,r,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=function(e,t,n){return t[LI(e,n.currentContextId)]}(e.name,n,s);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!r.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,r]=MI(t.name,s);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][r]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,s={},r={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=je().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new FN(this.weightMap,s,r,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const i=t.map((e=>OI(e,this.tensorsMap,a))),o=i.map((e=>e.id)),l=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...l,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const s=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(s,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,s){const r=Object.keys(e),a=r.map((e=>this.graph.nodes[zI(e)[0]])),i=n.map((e=>zI(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:l,missingInputs:u,dynamicNode:c,syncInputs:h}=DN(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=zI(t),r=[];r[s]=e[t],d[n]=r}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,l);await Promise.all(e)}null!=c||s||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!LN(e)&&!OI(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${r}]. Consider providing the following inputs: [${u}]. ${e}`)}return d}processStack(e,t,n,s,r,a,i,o,l){const u=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&_I("isConstant",e.node,s,n)&&([c]=MI(e.node.name,n)),null==s[e.node.name]){const h=RN(e.node,s,n,this._resourceManager);c||([c]=MI(e.node.name,n));const p=n.currentContext;Ve(h)?u.push(h.then((u=>(s[c]=u,n.currentContext=p,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l),u)))):(s[c]=h,this.checkTensorForDisposal(c,e.node,s,n,a,i,o),this.processChildNodes(e.node,t,n,s,r,l))}else this.processChildNodes(e.node,t,n,s,r,l)}return u}processChildNodes(e,t,n,s,r,a){e.children.forEach((e=>{const[i]=MI(e.name,n);!r[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!OI(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!OI(e,s,n)))&&(r[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[s]=zI(t),r=this.graph.nodes[s];if(r.attrParams.shape&&r.attrParams.shape.value){const e=r.attrParams.shape.value;re(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${r.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}r.attrParams.dtype&&r.attrParams.dtype.value&&re(n.dtype===r.attrParams.dtype.value,(()=>`The dtype of dict['${r.name}'] provided in model.execute(dict) must be ${r.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=zI(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=zI(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class WN{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class UN{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new WN}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Wi(e,this.loadOptions);else{const t=qa(e,this.loadOptions);if(0===t.length)t.push(Wi(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const s=Da(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new BN(iN.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(s),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=iN.Instance.transformGraph(e.modelInitializer);this.initializer=new BN(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=ja(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof Kr||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,s)=>(t[n]=e[s],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function VN(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new UN(e,t);return await n.load(),n}const GN="3.13.0";function HN(e,t,n=new Map,s=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(s.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(r.recurse){if(YN(e)){const r=Array.isArray(e)?[]:{};s.add(e);for(const a in e){const i=HN(e[a],t,n,s);r[a]=i}return s.delete(e),e.__proto__&&(r.__proto__=e.__proto__),r}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,r.value),r.value}function jN(e,t=KN){return qN(e,t)}function qN(e,t,n=new Set){const s=e[0];if(n.has(s))throw new Error("Circular references are not supported.");const r=t(e);if(r.recurse&&null!==r.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(r.recurse){if(YN(s)){const r=Array.isArray(s)?[]:{};n.add(s);for(const a in s){const s=qN(e.map((e=>e[a])),t,n);r[a]=s}return n.delete(s),r}throw new Error(`Can't recurse into non-iterable type: ${s}`)}return r.value}function KN(e){return null===e?null:YN(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function XN(e,t){const n=new Map;HN(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(Ve(t)){const s=await t;n.set(e,s)}}return HN(e,t,n)}function YN(e){let t=!1;if(je().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:n}=r(589);t=e instanceof n}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof Kr)&&!(e instanceof Promise)&&!t)}function ZN(e){return e instanceof Kr?{value:e.clone(),recurse:!1}:YN(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class JN{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class QN extends JN{constructor(){super(QN.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function eS(e){return new sS(e)}function tS(e){return new rS(e)}QN.INITIAL_CAPACITY=32;class nS{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new hS(this,e)}filter(e){return new uS(this,e)}map(e){return new cS(this,e)}mapAsync(e){return new pS(this,e)}serialMapAsync(e){return new pS(this,e).serial()}flatmap(e){return new fS(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new lS(this,e,t)}columnMajorBatch(e,t=!0,n=KN){return this.rowMajorBatch(e,t).map((e=>jN(e,n)))}concatenate(e,t){return new mS(eS([this,e]),t)}take(e){return e<0||null==e?this:new oS(this,e)}skip(e){return e<0||null==e?this:new iS(this,e)}prefetch(e){return new bS(this,e)}shuffle(e,t){return new xS(this,e,t)}serial(){return new aS(this)}}class sS extends nS{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return HN(e,t)}(t,ZN)),done:!1};var t}}class rS extends nS{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class aS extends nS{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class iS extends nS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Zo(e.value)}return this.upstream.next()}}class oS extends nS{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class lS extends nS{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class uS extends nS{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Zo(e.value)}}}class cS extends nS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=la(e.value),n=this.transform(e.value),s=la(n);for(const e of t)oa(e,s)||e.dispose();return{value:n,done:!1}}}class hS extends nS{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class pS extends nS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=la(e.value),n=await this.transform(e.value),s=la(n);for(const e of t)oa(e,s)||e.dispose();return{value:n,done:!1}}}class dS extends nS{constructor(){super(),this.outputQueue=new QN,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class fS extends dS{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=la(e.value),n=this.transform(e.value),s=la(n);this.outputQueue.pushAll(n);for(const e of t)oa(e,s)||e.dispose();return!0}}class mS extends nS{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var gS;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(gS||(gS={}));class yS extends nS{constructor(e,t=gS.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const s=await XN(this.iterators,(function(e){return e instanceof nS?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case gS.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case gS.SHORTEST:return{value:null,done:!0};case gS.LONGEST:}return this.count++,{value:s,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class bS extends nS{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new JN(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class xS extends bS{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=ph.alea(n||Fr().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class wS{constructor(){this.size=null}batch(e,t=!0){const n=this;let s;return re(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),s=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),vS((async()=>(await n.iterator()).columnMajorBatch(e,t,NS)),s)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,vS((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,vS((async()=>(await t.iterator()).filter((t=>Yo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return vS((async()=>(await t.iterator()).map((t=>Yo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return vS((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return vS((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,vS((async()=>{return n=tS((async()=>({value:await t.iterator(),done:!1}))).take(e),new mS(n,s);var n,s}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,vS((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const s=this,r=ph.alea(t||Fr().toString());return vS((async()=>{let t=r.int32();return n&&(t+=r.int32()),(await s.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,vS((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function vS(e,t=null){return new class extends wS{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function kS(e){return vS((async()=>eS(e)),e.length)}function IS(e){if(!YN(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return vS((async()=>function(e,t=gS.FAIL){return new yS(e,t)}(await XN(e,(e=>{if(e instanceof wS)return{value:e.iterator(),recurse:!1};if(YN(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),gS.SHORTEST)),t)}function NS(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof Kr||Se(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof Kr?Xh(e):Aa(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}wS.MAX_BUFFER_SIZE=1e4;class SS extends wS{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const TS='"',CS=Symbol("out"),$S=Symbol("field"),ES=Symbol("quote"),AS=Symbol("quoteafterquote"),RS=Symbol("quoteinquote");class FS extends wS{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new SS(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(re(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&re(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(re(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},s={};for(let r=0;r<this.fullColumnNames.length;r++){const a=this.fullColumnNames[r],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[r];let l=null;if(""===o)if(i&&void 0!==i.default)l=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);l=void 0}else{const e=Number(o);if(isNaN(e))l=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:l=e;break;case"int32":l=Math.floor(e);break;case"bool":l=this.getBoolean(o)}else l=e}i&&i.isLabel?s[a]=l:n[a]=l}}return 0===Object.keys(s).length?n:{xs:n,ys:s}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let s=0;const r=e.length;let a=CS;for(let t=0;t<r;t++)switch(a){case CS:switch(e.charAt(t)){case TS:s=t+1,a=ES;break;case this.delimiter:if(s=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=CS;break;default:a=$S,s=t}break;case $S:e.charAt(t)===this.delimiter&&(n.push(e.substring(s,t)),a=CS,s=t+1);break;case ES:e.charAt(t)===TS&&(a=AS);break;case AS:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(s,t-1)),a=CS,s=t+1;break;case TS:a=ES;break;default:a=RS}break;case RS:e.charAt(t)===TS&&(a=ES)}if(a===AS?n.push(e.substring(s,r-1)):n.push(e.substring(s)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class DS extends nS{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(je().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new DS(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((s=>{const r=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&s({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(r),s({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,s)=>n.set(e,s*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(le(t));return n.set(e,n.length-e.length),Aa(n,t)}}class _S extends nS{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Qh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,s=(1-t)/2,r=n+e,a=t+s;this.cropBox=ep([s,n,a,r],[1,4])}else this.cropBox=ep([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(je().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new _S(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&re("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ro(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Yo((()=>{const t=tc(Ti(e,"float32"),0);let n;n=Cd.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const s=n.shape;return cu(n,s.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class OS{}class MS extends nS{split(e){return new LS(this,e)}}class LS extends MS{constructor(e,t){super(),this.upstream=e,this.impl=new zS(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class zS extends dS{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class PS extends nS{decodeUTF8(){return new BS(this)}}class BS extends MS{constructor(e){super(),this.upstream=e,this.impl=new WS(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class WS extends dS{constructor(e){if(super(),this.upstream=e,je().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=r(589);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=je().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class US extends PS{constructor(e,t={}){super(),this.file=e,this.options=t,re(e instanceof Uint8Array||!!je().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const s=new FileReader;s.onload=n=>{let r=s.result;if(r instanceof ArrayBuffer&&(r=new Uint8Array(r)),!(r instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(r)},s.onabort=e=>t(new Error("Aborted")),s.onerror=e=>t(new Error(e.type));const r=this.file.slice(this.offset,n);s.readAsArrayBuffer(r)}this.offset=n}));return{value:await e,done:!1}}}function VS(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class GS extends OS{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(VS(this.input)&&je().get("IS_NODE")){const e=r(993);this.input=e.readFileSync(this.input.substr(7))}return new US(this.input,this.options)}}class HS extends OS{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return VS(this.url)?new GS(this.url,this.fileOptions).iterator():async function(e,t={},n){let s,r;var a;"string"==typeof e?s=e:(s=e.url,r={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await(n||Dr)(s,r);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new US(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function jS(e,t={}){return new FS(new HS(e),t)}function qS(e){const t=tS(e);return vS((async()=>t))}function KS(e){return vS((async()=>{const t=await e();return tS((()=>t.next()))}))}async function XS(e,t){return _S.create(e,t)}async function YS(e){return DS.create(e)}const ZS="3.13.0";function JS(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const QS=cp;class eT extends K{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new q(this,qo())}nextDataId(){return eT.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,je().get("IS_NODE")&&sr("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const s={id:this.nextDataId()};return this.data.set(s,{values:e,dtype:n,refCount:1}),s}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const r=n.map((e=>_r(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return{dataId:s,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,s,r){this.data.set(e,{values:t,dtype:s,refCount:r})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Qd(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Or(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Si(e.shape,e.dtype,n)}makeOutput(e,t,n){const s=this.write(e,t,n);return qo().makeTensorFromDataId(s,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=Fr();return e(),{kernelMs:Fr()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){JS([e],"where");const t=this.readSync(e.dataId);return QS(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function tT(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(JS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=le(i.shape),c=n||i.dtype,h=ve(c,u);for(let e=0;e<u;++e)h[e]=t(l[e],r);return o.makeTensorInfo(i.shape,c,h)}}function nT(e,t,n){return({inputs:s,attrs:r,backend:a})=>{const{x:i}=s;if(JS(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,l=o.data.get(i.dataId).values,u=n||i.dtype,c=t(l,u,r);return o.makeTensorInfo(i.shape,u,c)}}eT.nextDataId=0,il("cpu",(()=>new eT),1);const sT=tT(qt,(e=>e>=0?e:Math.exp(e)-1)),rT={kernelName:qt,backendName:"cpu",kernelFunc:sT};function aT(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const iT={kernelName:hn,backendName:"cpu",kernelFunc:aT};function oT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s;JS([r],"leakyRelu");const i=le(r.shape),o=n.data.get(r.dataId).values,l=we("float32",i);for(let e=0;e<o.length;e++)l[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(r.shape,"float32",l)}const lT={kernelName:yn,backendName:"cpu",kernelFunc:oT};function uT(e){return(t,n,s,r,a)=>{const i=Ji(t,n),o=i.length,l=_e(i),u=we(a,le(i)),c=t.length,h=n.length,p=_e(t),d=_e(n),f=Yi(t,i),m=Yi(n,i);if(f.length+m.length===0)for(let t=0;t<u.length;++t)u[t]=e(s[t%s.length],r[t%r.length]);else for(let t=0;t<u.length;++t){const n=Ue(t,o,l),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=We(a,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=We(g,h,d);u[t]=e(s[i],r[y])}return[u,i]}}const cT=uT(((e,t)=>e<0?t*e:e));function hT(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t;JS([s,r],"prelu");const a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,[o,l]=cT(s.shape,r.shape,a,i,"float32");return n.makeTensorInfo(l,"float32",o)}const pT={kernelName:es,backendName:"cpu",kernelFunc:hT},dT=tT(as,(e=>Math.max(0,e))),fT={kernelName:as,backendName:"cpu",kernelFunc:dT},mT=tT(hs,(e=>Math.min(Math.max(0,e),6))),gT={kernelName:hs,backendName:"cpu",kernelFunc:mT};function yT(e){return(t,n,s)=>{const r=we(n,t.length);for(let n=0;n<t.length;++n)r[n]=e(t[n],s);return r}}const bT=yT((e=>1/(1+Math.exp(-e)))),xT=tT(ks,(e=>1/(1+Math.exp(-e)))),wT={kernelName:ks,backendName:"cpu",kernelFunc:xT};function vT(e,t,n,s,r){if("linear"===n)return aT({inputs:{x:t},backend:e});if("relu"===n)return dT({inputs:{x:t},backend:e});if("elu"===n)return sT({inputs:{x:t},backend:e});if("relu6"===n)return mT({inputs:{x:t},backend:e});if("prelu"===n)return hT({inputs:{x:t,alpha:s},backend:e});if("leakyrelu"===n)return oT({inputs:{x:t},backend:e,attrs:{alpha:r}});if("sigmoid"===n)return xT({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function kT(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=n.makeTensorInfo(s.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(s.shape,"float32",a),imag:n.makeTensorInfo(r.shape,"float32",i)},o}const IT={kernelName:It,backendName:"cpu",kernelFunc:kT};function NT(e,t,n="float32"){if("complex64"===n)return kT({inputs:{real:NT(e,t,"float32"),imag:NT(e,t,"float32")},backend:e});const s=ze(le(t),n);return e.makeTensorInfo(t,n,s)}function ST(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.real,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const TT={kernelName:ss,backendName:"cpu",kernelFunc:ST};function CT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dtype:a}=s;if("complex64"===a){if("complex64"===r.dtype)return aT({inputs:{x:r},backend:n});const e=NT(n,r.shape,r.dtype),t=CT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}}),s=kT({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),s}if("complex64"===r.dtype){const e=ST({inputs:{input:r},backend:n}),t=CT({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Ne(r.dtype,a)){const e=aT({inputs:{x:r},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(r.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(r.shape,"int32",t)}if("bool"===a){const e=n.data.get(r.dataId).values,t=Rr([0],r.dtype),[s,a]=uT(((e,t)=>e!==t?1:0))(r.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",s)}throw new Error(`Error in Cast: failed to cast ${r.dtype} to ${a}`)}const $T={kernelName:wt,backendName:"cpu",kernelFunc:CT};function ET(e,t,n,s){return null==n?({inputs:n,backend:r})=>{const{a,b:i}=n,o=r;JS([a,i],e);const l=o.data.get(a.dataId).values,u=o.data.get(i.dataId).values,c="string"===a.dtype?Rf(l):l,h="string"===a.dtype?Rf(u):u,p=s||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:r})=>{const{a,b:i}=e,o=r;if("complex64"===a.dtype||"complex64"===i.dtype){const e=CT({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),s=t.complexTensorInfos.real,r=t.complexTensorInfos.imag,l=o.data.get(s.dataId).values,u=o.data.get(r.dataId).values,c=CT({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,l,u,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=kT({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,r=s||a.dtype,[l,u]=t(a.shape,i.shape,e,n,r);return o.makeTensorInfo(u,r,l)}}}function AT(e){return(t,n,s,r,a,i)=>{const o=Ji(t,n),l=le(o),u=o.length,c=_e(o),h=we("float32",l),p=we("float32",l),d=Yi(t,o),f=Yi(n,o),m=Qd(s,r),g=Qd(a,i),y=t.length,b=_e(t),x=n.length,w=_e(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,s=t%g.length,r=e(m[2*n],m[2*n+1],g[2*s],g[2*s+1]);h[t]=r.real,p[t]=r.imag}else for(let t=0;t<h.length;t++){const n=Ue(t,u,c),s=n.slice(-y);d.forEach((e=>s[e]=0));const r=We(s,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=We(a,x,w),o=e(m[2*r],m[2*r+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const RT=uT(((e,t)=>e+t)),FT=AT(((e,t,n,s)=>({real:e+n,imag:t+s}))),DT=ET(et,RT,FT),_T={kernelName:et,backendName:"cpu",kernelFunc:DT};function OT(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=le(r.shape),o=ye(a,i),l=le(o);re(i===l,(()=>`The new shape (${o}) has ${l} elements and the old shape (${r.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(r.dataId);const u=n.data.get(r.dataId);if(null!=u.complexTensorInfos){const e=u.complexTensorInfos.real,t=u.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:r.dataId,shape:o,dtype:r.dtype}}const MT={kernelName:is,backendName:"cpu",kernelFunc:OT};function LT(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;JS([r,a],"matMul");const l=r.shape.length,u=a.shape.length,c=i?r.shape[l-2]:r.shape[l-1],h=o?a.shape[u-1]:a.shape[u-2],p=i?r.shape[l-1]:r.shape[l-2],d=o?a.shape[u-2]:a.shape[u-1],f=r.shape.slice(0,-2),m=a.shape.slice(0,-2),g=le(f),y=le(m),b=Ji(r.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);re(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${r.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=OT({inputs:{x:r},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=OT({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],I=i?w.shape[2]:w.shape[1],N=o?v.shape[1]:v.shape[2],S=Math.max(g,y),T=n.data.get(w.dataId).values,C=n.data.get(v.dataId).values,$=_e(w.shape),E=_e(v.shape),[A,R,F]=i?[$[0],1,$[1]]:[$[0],$[1],1],[D,_,O]=o?[1,E[1],E[0]]:[E[1],1,E[0]],M=I*N,L=Si([S,I,N],w.dtype),z=L.values,P=n.blockSize;for(let e=0;e<S;e++)for(let t=0;t<I;t+=P)for(let n=0;n<N;n+=P)for(let s=0;s<k;s+=P){const r=Math.min(t+P,I),a=Math.min(n+P,N),i=Math.min(s+P,k);for(let o=t;o<r;o++)for(let t=n;t<a;t++){let n=0;for(let r=s;r<i;r++){const s=Math.min(e,g-1)*A,a=Math.min(e,y-1)*O;n+=T[s+o*R+r*F]*C[r*D+t*_+a]}z[e*M+(o*N+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,L.dtype,L.values)}const zT={kernelName:mt,backendName:"cpu",kernelFunc:LT},PT={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;let p,d,f;const m=[];p=LT({inputs:{a:r,b:a},attrs:{transposeA:l,transposeB:u},backend:n}),i&&(d=DT({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=vT(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function BT(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const WT={kernelName:Ze,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;JS(t,"abs");let s=new Float32Array(le(t.shape));return s=BT(n.data.get(t.dataId).values),n.makeOutput(s,t.shape,t.dtype)}},UT=tT(Je,(e=>Math.acos(e))),VT={kernelName:Je,backendName:"cpu",kernelFunc:UT},GT=tT(Qe,(e=>Math.acosh(e))),HT={kernelName:Qe,backendName:"cpu",kernelFunc:GT},jT={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,s=t;JS(t,"addN");const r=s.map((e=>n.data.get(e.dataId).values)),a=Si(s[0].shape,s[0].dtype),i=a.values;for(let e=0;e<s.length;e++){const t=r[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function qT(e,t,n,s,r){const a=t.length,i=le(t),o=_e(t),l=_e(r),u=we(n,le(r));for(let t=0;t<i;++t){const n=Ue(t,a,o),r=new Array(n.length);for(let e=0;e<r.length;e++)r[e]=n[s[e]];u[We(r,a,l)]=e[t]}return u}function KT(e){const{inputs:t,attrs:n,backend:s}=e,{x:r}=t,{perm:a}=n;JS(r,"transpose");const i=r.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=r.shape[a[e]];const l=qT(s.data.get(r.dataId).values,r.shape,r.dtype,a,o);return{dataId:s.write(l,o,r.dtype),shape:o,dtype:r.dtype}}const XT={kernelName:js,backendName:"cpu",kernelFunc:KT},YT={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;JS(r,"all");const o=be(a,r.shape);let l=o;const u=Rc(l,r.shape.length);let c=r;null!=u&&(c=KT({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Dc(l.length,r.shape.length)),Ac("all",l,c.shape.length);const[h,p]=$c(c.shape,l),d=le(p),f=ze(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n&&s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=OT({inputs:{x:g},backend:n,attrs:{shape:Ec(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},ZT={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;JS(r,"any");const o=be(a,r.shape);let l=o;const u=Rc(l,r.shape.length);let c=r;null!=u&&(c=KT({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Dc(l.length,r.shape.length)),Ac("any",l,c.shape.length);const[h,p]=$c(c.shape,l),d=le(p),f=ze(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];n=n||s}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=OT({inputs:{x:g},backend:n,attrs:{shape:Ec(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},JT={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;JS(r,"argMax");let i=be(a,r.shape);const o=Rc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=KT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Dc(i.length,l.shape.length)),i=[i[0]],Ac("argMax",i,l.shape.length);const[c,h]=$c(l.shape,i),p=ze(le(c),"int32"),d=le(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],s=0;for(let e=0;e<d;++e){const r=f[t+e];r>n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},QT={kernelName:at,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;JS(r,"argMin");let i=be(a,r.shape);const o=Rc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=KT({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Dc(i.length,l.shape.length)),i=[i[0]],Ac("argMin",i,l.shape.length);const[c,h]=$c(l.shape,i),p=ze(le(c),"int32"),d=le(h),f=n.data.get(l.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],s=0;for(let e=0;e<d;++e){const r=f[t+e];r<n&&(n=r,s=e)}p[e]=s}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},eC=tT(it,(e=>Math.asin(e))),tC={kernelName:it,backendName:"cpu",kernelFunc:eC},nC=tT(ot,(e=>Math.asinh(e))),sC={kernelName:ot,backendName:"cpu",kernelFunc:nC},rC=tT(lt,(e=>Math.atan(e))),aC={kernelName:lt,backendName:"cpu",kernelFunc:rC},iC=uT(((e,t)=>Math.atan2(e,t))),oC=ET(ct,iC),lC={kernelName:ct,backendName:"cpu",kernelFunc:oC},uC=tT(ut,(e=>Math.atanh(e))),cC={kernelName:ut,backendName:"cpu",kernelFunc:uC};function hC(e,t,n,s,r,a){const i=r.strideHeight,o=r.strideWidth,l=r.dilationHeight,u=r.dilationWidth,c=r.effectiveFilterHeight,h=r.effectiveFilterWidth,p=r.padInfo.top,d=r.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Si(r.outShape,n),g=m.values,y=r.outShape[1]*r.outShape[2]*r.outShape[3],b=r.outShape[2]*r.outShape[3],x=r.outShape[3];for(let t=0;t<r.batchSize;++t){const n=t*y,m=t*s[0];for(let t=0;t<r.inChannels;++t)for(let y=0;y<r.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(r.inHeight,c+w),I=n+y*b;for(let n=0;n<r.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(r.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=l){const r=m+n*s[1];for(let n=c;n<p;n+=u){const i=e[r+n*s[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[I+n*x+t]="avg"===a?b/w:y}}}return m}function pC(e,t,n,s,r=!1,a=!1){const i=Si(s.outShape,"int32"),o=s.strideHeight,l=s.strideWidth,u=s.dilationHeight,c=s.dilationWidth,h=s.effectiveFilterHeight,p=s.effectiveFilterWidth,d=s.padInfo.top,f=s.padInfo.left,m=Si(t,n,e);for(let e=0;e<s.batchSize;++e)for(let t=0;t<s.inChannels;++t)for(let n=0;n<s.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=u;const b=Math.min(s.inHeight,h+g);for(let o=0;o<s.outWidth;++o){const h=o*l-f;let d=h;for(;d<0;)d+=c;const x=Math.min(s.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=u){const i=n-g;for(let o=d;o<x;o+=c){const l=o-h,u=m.get(e,n,o,t);u>w&&(w=u,v=r?a?((e*s.inHeight+n)*s.inWidth+o)*s.inChannels+t:(n*s.inWidth+o)*s.inChannels+t:i*p+l)}}i.set(v,e,n,o,t)}}return i}function dC(e,t,n,s,r,a){const i=r.strideDepth,o=r.strideHeight,l=r.strideWidth,u=r.dilationDepth,c=r.dilationHeight,h=r.dilationWidth,p=r.effectiveFilterDepth,d=r.effectiveFilterHeight,f=r.effectiveFilterWidth,m=r.padInfo.front,g=r.padInfo.top,y=r.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Si(r.outShape,n),w=x.values,v=r.outShape[1]*r.outShape[2]*r.outShape[3]*r.outShape[4],k=r.outShape[2]*r.outShape[3]*r.outShape[4],I=r.outShape[3]*r.outShape[4],N=r.outShape[4];for(let t=0;t<r.batchSize;++t){const n=t*v,x=t*s[0];for(let t=0;t<r.inChannels;++t)for(let v=0;v<r.outDepth;++v){const S=v*i-m;let T=S;for(;T<0;)T+=u;const C=Math.min(r.inDepth,p+S),$=n+v*k;for(let n=0;n<r.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(r.inHeight,d+i),v=$+n*I;for(let n=0;n<r.outWidth;++n){const i=n*l-y;let o=i;for(;o<0;)o+=h;const d=Math.min(r.inWidth,f+i),g=v+n*N;let k=b,I=0,S=0;for(let n=T;n<C;n+=u){const r=x+n*s[1];for(let n=p;n<m;n+=c){const i=r+n*s[2];for(let n=o;n<d;n+=h){const r=e[i+n*s[3]+t];if("max"===a&&r>k?k=r:"avg"===a&&(I+=r,S++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?I/S:k}}}}return x}const fC={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;JS(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;re(ou(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Zl(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))c=aT({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=_e(r.shape),s=hC(e,r.shape,r.dtype,t,u,"avg");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},mC={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;JS(r,"avgPool3d");const c=Jl(r.shape,a,i,1,o,l,u),h=dC(n.data.get(r.dataId).values,r.shape,r.dtype,_e(r.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},gC={kernelName:ft,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;JS([r,a],"avgPool3DGrad");const c=Jl(a.shape,i,o,1,l,u),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,I=w-1-c.padInfo.front,N=k-1-c.padInfo.left,S=v-1-c.padInfo.top,T=Si(a.shape,"float32"),C=1/(f*m*g),$=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-I,i=s-S,o=r-N;let l=0;for(let n=0;n<w;n+=y){const s=(a+n)/h;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let n=0;n<v;n+=b){const r=(i+n)/p;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<k;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(l+=$.get(e,s,r,a,t))}}}T.set(l*C,e,n,s,r,t)}return n.makeTensorInfo(T.shape,T.dtype,T.values)}},yC={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;JS([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Zl(i.shape,o,l,1,u),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Si(i.shape,"float32"),k=1/(d*f),I=n.data.get(r.dataId).values,N=Si(r.shape,"float32",I);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let s=0;s<c.inWidth;++s){const r=n-w,a=s-x;let i=0;for(let n=0;n<y;n+=m){const s=(r+n)/h;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<b;n+=g){const r=(a+n)/p;r<0||r>=c.outWidth||Math.floor(r)!==r||(i+=N.get(e,s,r,t))}}v.set(i*k,e,n,s,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},bC={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,scale:a,offset:i,mean:o,variance:l}=t;re(o.shape.length===l.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),JS([r,o,l,a,i],"batchNorm");let{varianceEpsilon:u}=s;null==u&&(u=.001);const c=n.data.get(r.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(l.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,I=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*d[k++]/Math.sqrt(p[I++]+u),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),I>=b&&(I=0);return n.makeTensorInfo(r.shape,r.dtype,m)}};function xC(e,t,n,s,r){const a=ko(s,t,n),i=le(n),o=_e(s);if(a){const n=Io(t,o);return"string"===r?e.slice(n,n+i):e.subarray(n,n+i)}const l=Si(s,r,"string"===r?Rf(e):e),u=Si(n,r);for(let e=0;e<u.size;++e){const n=u.indexToLoc(e),s=n.map(((e,n)=>e+t[n]));u.set(l.get(...s),...n)}return"string"===r?Ff(u.values):u.values}function wC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s;JS(r,"slice");const[o,l]=No(r,a,i);uo(r,o,l);const u=xC(n.data.get(r.dataId).values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,u)}const vC={kernelName:bs,backendName:"cpu",kernelFunc:wC},kC={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;JS([r],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),l=Bd(r.shape,a,o),u=Wd(l.length,a.length),c=Ud(r.shape,a,o),h=Vd(i,a.length),p=Gd(c,i,a.length),d=OT({inputs:{x:r},backend:n,attrs:{shape:l}}),f=KT({inputs:{x:d},backend:n,attrs:{perm:u}}),m=OT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=wC({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function IC(e,t,n,s,r){const a=le(s),i=ze(r,n);for(let n=0;n<e.length;n++){const s=e[n];if(s<0)throw new Error("Input x must be non-negative!");s>=r||(i[s]+=a>0?t[n]:1)}return i}function NC(e,t,n,s=!1){const r=e.shape[0],a=e.shape[1],i=Si([r,n],t.dtype);for(let o=0;o<r;o++)for(let r=0;r<a;r++){const a=e.get(o,r);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(s?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,r),o,a):i.set(i.get(o,a)+1,o,a))}return i}const SC={kernelName:yt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=IC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},TC={kernelName:xt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.data.get(s.dataId).values,i=n.data.get(r.dataId).values,o=Ji(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},CC=yT((e=>Math.ceil(e))),$C=nT(vt,CC),EC={kernelName:vt,backendName:"cpu",kernelFunc:$C},AC=tT(kt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),RC={kernelName:kt,backendName:"cpu",kernelFunc:AC},FC={kernelName:Nt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,s=new Float32Array(le(t.shape)),r=n.data.get(t.dataId),a=r.complexTensorInfos.real,i=r.complexTensorInfos.imag,o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=l[e];s[e]=Math.hypot(t,n)}return n.makeOutput(s,t.shape,"float32")}};function DC(e,t,n,s){const r=ve(n,le(t));if(s&&"string"!==n){let t=0;e.forEach((e=>{const n=le(e.shape);r.set(e.vals,t),t+=n}))}else{let s=0;e.forEach((e=>{const a="string"===n?Rf(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+s;for(let t=0;t<e.shape[1];++t)r[o+t]=a[i++]}s+=e.shape[1]}))}return r}function _C(e){const{inputs:t,backend:n}=e,{input:s}=t,r=n.data.get(s.dataId).complexTensorInfos.imag,a=n.data.get(r.dataId).values;return n.makeTensorInfo(r.shape,r.dtype,a)}const OC={kernelName:dn,backendName:"cpu",kernelFunc:_C};function MC(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=be(r,t[0].shape)[0];let i=Md(t.map((e=>e.shape)),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>le(e.shape)>0));if(1===o.length)return aT({inputs:{x:o[0]},backend:n});if(Od(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>ST({inputs:{input:e},backend:n}))),t=o.map((e=>_C({inputs:{input:e},backend:n}))),s=MC({inputs:e,backend:n,attrs:{axis:a}}),r=MC({inputs:t,backend:n,attrs:{axis:a}}),i=kT({inputs:{real:s,imag:r},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),i}const l=o.map((e=>{const t=le(e.shape.slice(a));return OT({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),u=l.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Md(l.map((e=>e.shape)),1);const c=1===l[0].shape[0],h=DC(u,i,t[0].dtype,c),p=Md(o.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const LC={kernelName:St,backendName:"cpu",kernelFunc:MC};function zC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s;JS([r,a],"conv2d");const h=lu(l),p=Ql(r.shape,a.shape,i,u,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new Gr(p.outShape,r.dtype),v=_e(r.shape),k=_e(a.shape),I=v[0],N=x?v[1]:v[2],S=x?v[2]:1,T=x?1:v[1],C=w.strides[0],$=x?w.strides[1]:w.strides[2],E=x?w.strides[2]:1,A=x?1:w.strides[1],R=n.data.get(r.dataId).values,F=n.data.get(a.dataId).values,D=w.values;for(let e=0;e<p.batchSize;++e){const t=e*I,n=e*C;for(let e=0;e<p.outHeight;++e){const s=n+e*$,r=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=r+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*N;for(let e=0;e<p.outWidth;++e){const t=s+e*E,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const s=n+e*g;if(s<0||s>=p.inWidth)continue;const r=i+s*S;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=R[r+e*T];for(let e=0;e<p.outChannels;++e)D[t+e*A]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,D)}const PC={kernelName:Tt,backendName:"cpu",kernelFunc:zC},BC={kernelName:Ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s;JS([r,a],"conv2dBackpropFilter");const h=lu(l),p=Ql(r.shape,c,i,1,o,u,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Gr(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=new Gr(r.shape,r.dtype,v),N=new Gr(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(p.outHeight,(p.inHeight+w-e)/d);for(let s=0;s<g;++s){const r=Math.max(0,Math.ceil((x-s)/f)),a=Math.min(p.outWidth,(p.inWidth+x-s)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let l=0;for(let u=0;u<p.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=r;e<a;++e){const n=s+e*f-x;l+=y?I.get(u,t,n,i)*N.get(u,c,e,o):I.get(u,i,t,n)*N.get(u,o,c,e)}}b.set(l,e,s,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},WC={kernelName:$t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s;JS([r,a],"conv2dBackpropInput");const h=_e(a.shape),p=_e(r.shape);let d=lu(u);const f=Ql(i,a.shape,o,1,l,c,!1,d),m=new Gr(f.inShape,"float32"),g=m.values,y=n.data.get(r.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:I,filterWidth:N,inChannels:S,inHeight:T,inWidth:C,outChannels:$,outHeight:E,outWidth:A,strideHeight:R,strideWidth:F}=f;d=f.dataFormat;const D=I-1-f.padInfo.top,_=N-1-f.padInfo.left,O="channelsLast"===d,M=m.strides[0],L=O?m.strides[1]:m.strides[2],z=O?m.strides[2]:1,P=O?1:m.strides[1],B=p[0],W=O?p[1]:p[2],U=O?p[2]:1,V=O?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<S;++t)for(let n=0;n<T;++n){const s=n-D,r=Math.max(0,Math.ceil(s/R)),a=Math.min(E,(I+s)/R);for(let i=0;i<C;++i){const o=i-_,l=Math.max(0,Math.ceil(o/F)),u=Math.min(A,(N+o)/F);let c=0;for(let n=r;n<a;++n){const r=n*R-s;for(let s=l;s<u;++s){const a=B*e+W*n+U*s,i=x*(I-1-r)+w*(N-1-(s*F-o))+v*t;for(let e=0;e<$;++e)c+=y[a+V*e]*b[i+e]}}g[M*e+L*n+z*i+P*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},UC={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s;JS([r,a],"conv3d");const u=eu(r.shape,a.shape,i,l,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=u,y=g.front,b=g.left,x=g.top,w=new Gr(u.outShape,r.dtype),v=n.data.get(r.dataId).values,k=n.data.get(a.dataId).values,I=w.values,N=_e(r.shape),S=_e(a.shape);for(let e=0;e<u.batchSize;++e){const t=e*N[0],n=e*w.strides[0];for(let e=0;e<u.outDepth;++e){const s=n+e*w.strides[1],r=e*u.strideDepth-y;for(let e=0;e<c;++e){const n=r+e*d;if(n<0||n>=u.inDepth)continue;const a=e*S[0],i=t+n*N[1];for(let e=0;e<u.outHeight;++e){const t=s+e*w.strides[2],n=e*u.strideHeight-x;for(let e=0;e<h;++e){const s=n+e*f;if(s<0||s>=u.inHeight)continue;const r=a+e*S[1],o=i+s*N[2];for(let e=0;e<u.outWidth;++e){const n=t+e*u.outChannels,s=e*u.strideWidth-b;for(let e=0;e<p;++e){const t=s+e*m;if(t<0||t>=u.inWidth)continue;const a=r+e*S[2],i=o+t*u.inChannels;let l=a;for(let e=0;e<u.inChannels;++e){const t=v[i+e];for(let e=0;e<u.outChannels;++e)I[n+e]+=t*k[l+e];l+=u.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},VC={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s;JS([r,a],"conv3dBackpropFilterV2");const u=_e(r.shape),c=_e(a.shape),h=eu(r.shape,l,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Gr(h.filterShape,"float32"),x=b.values,[w,v,k,I]=b.strides,N=n.data.get(a.dataId).values,[S,T,C,$]=c,E=n.data.get(r.dataId).values,[A,R,F,D]=u,_=h.padInfo.front,O=h.padInfo.left,M=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/p)),n=Math.min(h.outDepth,(h.inDepth+_-e)/p),s=e*w;for(let r=0;r<g;++r){const a=Math.max(0,Math.ceil((M-r)/d)),i=Math.min(h.outHeight,(h.inHeight+M-r)/d),o=r*v+s;for(let s=0;s<y;++s){const l=Math.max(0,Math.ceil((O-s)/f)),u=Math.min(h.outWidth,(h.inWidth+O-s)/f),c=s*k+o;for(let o=0;o<h.inChannels;++o){const m=o*I+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*S;for(let m=t;m<n;++m){const t=(e+m*p-_)*R+h,n=m*T+y;for(let e=a;e<i;++e){const a=(r+e*d-M)*F+t,i=e*C+n;for(let e=l;e<u;++e){const t=e*$+i;g+=E[(s+e*f-O)*D+a+o]*N[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},GC={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s;JS([r],"conv3dBackpropInputV2");const u=_e(r.shape),c=_e(a.shape),h=eu(l,a.shape,o,1,i),p=new Gr(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(r.dataId).values,[x,w,v,k]=u,I=n.data.get(a.dataId).values,[N,S,T,C]=c,{batchSize:$,filterDepth:E,filterHeight:A,filterWidth:R,inChannels:F,inDepth:D,inHeight:_,inWidth:O,outChannels:M,outDepth:L,outHeight:z,outWidth:P,strideDepth:B,strideHeight:W,strideWidth:U}=h,V=E-1-h.padInfo.front,G=A-1-h.padInfo.top,H=R-1-h.padInfo.left;for(let e=0;e<$;++e)for(let t=0;t<F;++t)for(let n=0;n<D;++n){const s=n-V,r=Math.max(0,Math.ceil(s/B)),a=Math.min(L,(E+s)/B);for(let i=0;i<_;++i){const o=i-G,l=Math.max(0,Math.ceil(o/W)),u=Math.min(z,(A+o)/W);for(let c=0;c<O;++c){const h=c-H,p=Math.max(0,Math.ceil(h/U)),$=Math.min(P,(R+h)/U);let F=0;for(let n=r;n<a;++n){const r=n*B-s;for(let s=l;s<u;++s){const a=s*W-o;for(let i=p;i<$;++i){const o=x*e+w*n+v*s+k*i,l=N*(E-1-r)+S*(A-1-a)+T*(R-1-(i*U-h))+C*t;for(let e=0;e<M;++e)F+=b[o+e]*I[l+e]}}}d[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},HC=tT(Ft,(e=>Math.cos(e))),jC={kernelName:Ft,backendName:"cpu",kernelFunc:HC},qC=tT(Dt,(e=>Math.cosh(e))),KC={kernelName:Dt,backendName:"cpu",kernelFunc:qC},XC={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,[c,h,p,d]=r.shape,f=a.shape[0],[m,g]=o,y=Si([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(r.dataId).values,v=_e(r.shape),k=_e(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],s=b[t+1],r=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(r-n)*(h-1)/(m-1):0,f=g>1?(a-s)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+r)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let s=0;s<d;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}else if("bilinear"===l){const n=Math.floor(c),r=Math.ceil(c),o=c-n;for(let l=0;l<g;l++){const c=g>1?s*(p-1)+l*f:.5*(s+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const s=n+l*k[2]+t*k[1]+e*k[0];y.values[s]=u}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let s=0;s<d;s++){let a=s+h*v[2]+n*v[1]+i*v[0];const u=w[a];a=s+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=s+h*v[2]+r*v[1]+i*v[0];const p=w[a];a=s+m*v[2]+r*v[1]+i*v[0];const d=u+(c-u)*b,f=p+(w[a]-p)*b;a=s+l*k[2]+t*k[1]+e*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const r=g>1?s*(p-1)+n*f:.5*(s+a)*(p-1);if(r<0||r>p-1){for(let s=0;s<d;s++){const r=s+n*k[2]+t*k[1]+e*k[0];y.values[r]=u}continue}const o=Math.round(r),l=Math.round(c);for(let s=0;s<d;s++){const r=s+o*v[2]+l*v[1]+i*v[0],a=s+n*k[2]+t*k[1]+e*k[0];y.values[a]=w[r]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},YC={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s;JS(r,"cumsum");const l=Rc([a],r.shape.length);let u=r;null!=l&&(u=KT({inputs:{x:r},backend:n,attrs:{perm:l}}));const c=Dc(1,r.shape.length)[0];if(c!==u.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${u.shape.length-1} but got axis=${c}`);const h=sa(u.dtype,"int32"),p=ze(le(u.shape),h),d=n.data.get(u.dataId).values,f=u.shape[u.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const s=m(e,t-1);p[n]=i?d[s]+p[s]:d[n]+p[s]}}const g=n.makeTensorInfo(u.shape,h,p);if(null!=l){const e=KT({inputs:{x:g},backend:n,attrs:{perm:Fc(l)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(u),e}return g}},ZC={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=IC(n.data.get(r.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===r.shape.length){const e=NC(n.bufferSync(r),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}},JC={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s;re("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=r.shape[0],l=r.shape[1],u=r.shape[2],c=r.shape[3],h=l*a,p=u*a,d=c/(a*a),f=n.data.get(r.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),s=t%a;for(let t=0;t<p;++t){const r=Math.floor(t/a),i=(s*a+t%a)*d;for(let t=0;t<d;++t){const s=t+i+c*(r+u*(n+l*e));m[g++]=f[s]}}}return n.makeTensorInfo([o,h,p,d],r.dtype,m)}};function QC(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;JS([r,a],"depthwiseConv2DNative");const c=_e(r.shape),h=_e(a.shape);let p=l;null==p&&(p=[1,1]),re(ou(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=Ql(r.shape,a.shape,i,p,o,u,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new Gr(d.outShape,r.dtype),I=n.data.get(r.dataId).values,N=n.data.get(a.dataId).values,S=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const s=n+e*k.strides[1],r=e*d.strideHeight-w;for(let e=0;e<f;++e){const n=r+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=s+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const s=n+e*y;if(s<0||s>=d.inWidth)continue;const r=a+e*h[1],o=i+s*d.inChannels;let l=t,u=r;for(let e=0;e<d.inChannels;++e){const t=I[o+e];for(let e=0;e<v;++e)S[l+e]+=t*N[u+e];l+=v,u+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const e$={kernelName:zt,backendName:"cpu",kernelFunc:QC},t$={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s;JS([r,a],"depthwiseConv2dNativeBackpropFilter");const h=Ql(r.shape,c,i,o,l,u,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Gr(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(r.dataId).values,v=new Gr(r.shape,r.dtype,w),k=n.data.get(a.dataId).values,I=new Gr(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let s=0;s<m;++s){const r=Math.max(0,Math.ceil((y-s)/d)),a=Math.min(h.outWidth,(h.inWidth+y-s)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),l=i%x;let u=0;for(let l=0;l<h.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=r;e<a;++e){const n=s+e*d-y;u+=v.get(l,t,n,o)*I.get(l,c,e,i)}}g.set(u,e,s,o,l)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},n$={kernelName:Bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s;JS([r,a],"depthwiseConv2DNativeBackpropInput");const h=_e(r.shape),p=_e(a.shape),d=Ql(c,a.shape,i,o,l,u,!0),f=new Gr(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(r.dataId).values,[w,v,k]=h,I=n.data.get(a.dataId).values,[N,S,T]=p,{batchSize:C,filterHeight:$,filterWidth:E,inChannels:A,inHeight:R,inWidth:F,outChannels:D,outHeight:_,outWidth:O,strideHeight:M,strideWidth:L}=d,z=$-1-d.padInfo.top,P=E-1-d.padInfo.left,B=D/A;for(let e=0;e<C;++e)for(let t=0;t<A;++t)for(let n=0;n<R;++n){const s=n-z,r=Math.max(0,Math.ceil(s/M)),a=Math.min(_,($+s)/M);for(let i=0;i<F;++i){const o=i-P,l=Math.max(0,Math.ceil(o/L)),u=Math.min(O,(E+o)/L);let c=0;for(let n=r;n<a;++n){const r=n*M-s;for(let s=l;s<u;++s){const a=w*e+v*n+k*s,i=N*($-1-r)+S*(E-1-(s*L-o))+T*t;for(let e=0;e<B;++e)c+=x[a+(t*B+e)]*I[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},s$={kernelName:Wt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=le(s.shape),a=n.data.get(s.dataId).values,i=Si([r,r],s.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*r+e]=a[e];const l=[...s.shape,...s.shape];return n.makeTensorInfo(l,i.dtype,i.values)}},r$={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r}=e,{strides:a,pad:i,dilations:o}=n,l=t,u=l.data.get(s.dataId).values,c=s.shape.length,h=l.data.get(r.dataId).values,p=r.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:I,dilationHeight:N,dilationWidth:S,outShape:T}=Yl(s.shape,r.shape,a,i,"NHWC",o),C=le(T),$=T.length,E=ve(s.dtype,C);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let l=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*N;if(a>=0&&a<f)for(let n=0;n<I;++n){const d=i+n*S;if(d>=0&&d<m){const i=We([e,a,d,o],c,_e(s.shape)),f=We([t,n,o],p,_e(r.shape)),m=u[i]+h[f];m>l&&(l=m)}}}E[We([e,t,a,o],$,_e(T))]=l}}}return{dataId:l.write(Rr(E,s.dtype),T,s.dtype),shape:T,dtype:s.dtype}}},a$={kernelName:Gt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Me(s.shape,u.data.get(s.dataId).values),h=Me(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Yl(s.shape,r.shape,i,o,"NHWC",l);re(a.rank===S.length,(()=>`Error in ${Gt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const T=Me(S,u.data.get(a.dataId).values),C=Pe(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,l=0;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*N;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=t,l=n)}}}C[o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write(Rr(C,s.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},i$={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,filter:r,dy:a}=e,{strides:i,pad:o,dilations:l}=n,u=t,c=Me(s.shape,u.data.get(s.dataId).values),h=Me(r.shape,u.data.get(r.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:I,dilationWidth:N,outShape:S}=Yl(s.shape,r.shape,i,o,"NHWC",l);re(a.rank===S.length,(()=>`Error in ${Vt}, dy must have the same rank as output ${S.length}, but got ${a.rank}`));const T=Me(S,u.data.get(a.dataId).values),C=Pe(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let s=0;s<y;++s){const r=s*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,l=r<0?0:r;for(let t=0;t<v;++t){const s=n+t*I;if(s>=0&&s<d)for(let n=0;n<k;++n){const u=r+n*N;if(u>=0&&u<f){const r=c[e][s][u][a]+h[t][n][a];r>i&&(i=r,o=s,l=u)}}}C[e][o][l][a]+=T[e][t][s][a]}}}return{dataId:u.write(Rr(C,s.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},o$=uT(((e,t)=>e*t)),l$=AT(((e,t,n,s)=>({real:e*n-t*s,imag:e*s+t*n}))),u$=ET(Un,o$,l$),c$={kernelName:Un,backendName:"cpu",kernelFunc:u$};function h$(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;let o;JS(r,"sum"),o="bool"===r.dtype?CT({inputs:{x:r},backend:n,attrs:{dtype:"int32"}}):aT({inputs:{x:r},backend:n});const l=o.shape.length,u=be(a,o.shape),c=Rc(u,l);let h=u,p=o;null!=c&&(p=KT({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Dc(h.length,l)),Ac("sum",h,p.shape.length);const[d,f]=$c(p.shape,h);let m=NT(n,d,sa(p.dtype,"int32"));const g=le(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=OT({inputs:{x:m},backend:n,attrs:{shape:Ec(m.shape,u)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const p$={kernelName:Ss,backendName:"cpu",kernelFunc:h$},d$={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=uf(r,a.length);hf(i.length,l,a);const{path:u,steps:c}=pf(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=cf(d,l[t]);let r;df(e)?r=a[t]:(r=KT({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);ce(r.shape,i)||(r=OT({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=u$({inputs:{a:r,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=h$({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},f$={kernelName:Kt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:s,y:r}=t;JS([s,r],"eluGrad");const a=new Float32Array(le(r.shape)),i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(r.shape,"float32",a)}},m$=uT(((e,t)=>e===t?1:0)),g$=ET(Yt,m$,null,"bool"),y$={kernelName:Yt,backendName:"cpu",kernelFunc:g$},b$=qd,x$=Kd,w$=Xd,v$=Yd,k$=Zd,I$=Jd,N$=tT(Xt,(e=>{const t=Math.sign(e),n=Math.abs(e),s=1/(1+b$*n);return t*(1-((((I$*s+k$)*s+v$)*s+w$)*s+x$)*s*Math.exp(-n*n))})),S$={kernelName:Xt,backendName:"cpu",kernelFunc:N$},T$=yT((e=>Math.exp(e))),C$=nT(Zt,T$,"float32"),$$={kernelName:Zt,backendName:"cpu",kernelFunc:C$};function E$(e){const{inputs:t,backend:n,attrs:s}=e,{input:r}=t,{dim:a}=s,i=r.shape.length,o=r.shape.slice();let l=a;return a<0&&(re(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+a+1),o.splice(l,0,1),OT({inputs:{x:r},backend:n,attrs:{shape:o}})}const A$={kernelName:Jt,backendName:"cpu",kernelFunc:E$},R$=yT((e=>Math.expm1(e))),F$=nT(Qt,R$),D$={kernelName:Qt,backendName:"cpu",kernelFunc:F$},_$=uT(((e,t)=>e/t)),O$=ET(Ht,_$),M$={kernelName:Ht,backendName:"cpu",kernelFunc:O$},L$=uT(((e,t)=>e-t)),z$=AT(((e,t,n,s)=>({real:e-n,imag:t-s}))),P$=ET(Bs,L$,z$),B$={kernelName:Bs,backendName:"cpu",kernelFunc:P$};function W$(e,t,n){const s=e.shape,r=s[0],a=s[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,l=i.complexTensorInfos.imag,u=[r,a],c=le(u),h=we("float32",c),p=we("float32",c);for(let e=0;e<r;e++){const s=wC({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),r=wC({inputs:{x:l},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=kT({inputs:{real:s,imag:r},backend:n}),{real:u,imag:c}=U$(i,t,n),d=Qd(u,c);for(let t=0;t<a;t++){const n=sf(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(u,"float32",h),f=n.makeTensorInfo(u,"float32",p),m=kT({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function U$(e,t,n){const s=le(e.shape),r=n.data.get(e.dataId),a=n.data.get(r.complexTensorInfos.real.dataId).values,i=n.data.get(r.complexTensorInfos.imag.dataId).values;if(0==((o=s)&o-1)){const r=V$(a,i,s,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",r.real),t=n.makeTensorInfo(o,"float32",r.imag),a=n.makeTensorInfo([],"float32",Ar(s,"float32")),i=aT({inputs:{x:a},backend:n}),l=M$.kernelFunc({inputs:{a:e,b:a},backend:n}),u=M$.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(l.dataId).values,h=n.data.get(u.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),{real:c,imag:h}}return r}{const e=function(e,t,n){const s=new Float32Array(2*t);for(let r=0;r<t;r++){let a=0,i=0;for(let s=0;s<t;s++){const o=of(r*s,t,n),l=sf(e,s);a+=l.real*o.real-l.imag*o.imag,i+=l.real*o.imag+l.imag*o.real}n&&(a/=t,i/=t),rf(s,a,i,r)}return s}(Qd(a,i),s,t);return ef(e)}var o}function V$(e,t,n,s,r){if(1===n)return{real:e,imag:t};const a=Qd(e,t),i=n/2,o=tf(a),l=o.real,u=o.imag,c=[l.length],h=r.makeTensorInfo(c,"float32",l),p=r.makeTensorInfo(c,"float32",u),d=kT({inputs:{real:h,imag:p},backend:r}),f=nf(a),m=f.real,g=f.imag,y=[m.length],b=r.makeTensorInfo(y,"float32",m),x=r.makeTensorInfo(y,"float32",g),w=kT({inputs:{real:b,imag:x},backend:r}),v=V$(l,u,i,s,r),k=v.real,I=v.imag,N=[k.length],S=r.makeTensorInfo(N,"float32",k),T=r.makeTensorInfo(N,"float32",I),C=kT({inputs:{real:S,imag:T},backend:r}),$=V$(m,g,i,s,r),E=$.real,A=$.imag,R=[E.length],F=r.makeTensorInfo(R,"float32",E),D=r.makeTensorInfo(R,"float32",A),_=kT({inputs:{real:F,imag:D},backend:r}),O=af(n,s),M=[O.real.length],L=r.makeTensorInfo(M,"float32",O.real),z=r.makeTensorInfo(M,"float32",O.imag),P=kT({inputs:{real:L,imag:z},backend:r}),B=u$({inputs:{a:P,b:_},backend:r}),W=DT({inputs:{a:C,b:B},backend:r}),U=P$({inputs:{a:C,b:B},backend:r}),V=ST({inputs:{input:W},backend:r}),G=ST({inputs:{input:U},backend:r}),H=_C({inputs:{input:W},backend:r}),j=_C({inputs:{input:U},backend:r}),q=MC({inputs:[V,G],backend:r,attrs:{axis:0}}),K=MC({inputs:[H,j],backend:r,attrs:{axis:0}}),X=r.data.get(q.dataId).values,Y=r.data.get(K.dataId).values;return r.disposeIntermediateTensorInfo(h),r.disposeIntermediateTensorInfo(p),r.disposeIntermediateTensorInfo(d),r.disposeIntermediateTensorInfo(b),r.disposeIntermediateTensorInfo(x),r.disposeIntermediateTensorInfo(w),r.disposeIntermediateTensorInfo(S),r.disposeIntermediateTensorInfo(T),r.disposeIntermediateTensorInfo(C),r.disposeIntermediateTensorInfo(F),r.disposeIntermediateTensorInfo(D),r.disposeIntermediateTensorInfo(_),r.disposeIntermediateTensorInfo(L),r.disposeIntermediateTensorInfo(z),r.disposeIntermediateTensorInfo(P),r.disposeIntermediateTensorInfo(B),r.disposeIntermediateTensorInfo(W),r.disposeIntermediateTensorInfo(U),r.disposeIntermediateTensorInfo(V),r.disposeIntermediateTensorInfo(H),r.disposeIntermediateTensorInfo(G),r.disposeIntermediateTensorInfo(j),r.disposeIntermediateTensorInfo(q),r.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const G$={kernelName:en,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=le(s.shape),a=s.shape[s.shape.length-1],i=OT({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=W$(i,!1,n),l=OT({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}};function H$(e){const{backend:t,attrs:n}=e,{shape:s,value:r,dtype:a}=n,i=a||Re(r),o=ve(i,le(s));return function(e,t,n){e.fill(t)}(o,r),t.makeTensorInfo(s,i,o)}const j$={kernelName:tn,backendName:"cpu",kernelFunc:H$},q$={kernelName:nn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,r=n,a=we(s.dtype,le(s.shape)),[i,o,l,u]=s.shape,c=r.data.get(s.dataId).values;for(let e=0;e<i;e++){const t=e*l*o*u;for(let e=0;e<o;e++){const n=e*(l*u);for(let e=0;e<l;e++){const s=e*u;for(let r=0;r<u;r++){const i=Math.round(l-e-1),o=t+n+s+r;let h=c[o];i>=0&&i<l&&(h=c[t+n+i*u+r]),a[o]=h}}}}return{dataId:r.write(a,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},K$=yT((e=>Math.floor(e))),X$=nT(sn,K$),Y$={kernelName:sn,backendName:"cpu",kernelFunc:X$},Z$=uT(((e,t)=>Math.floor(e/t))),J$=ET(rn,Z$,null,"int32"),Q$={kernelName:rn,backendName:"cpu",kernelFunc:J$},eE={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=zC({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=DT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=vT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},tE={kernelName:nr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s;let m=QC({inputs:{x:r,filter:a},backend:n,attrs:{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=DT({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=vT(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function nE(e,t,n,s,r,a,i,o,l){const u=Si([s,a],n);for(let n=0;n<s;n++){const s=[];let c=0;for(let t=0;t<r;t++){const a=e[n*r+t];c+=a*i[t],s.push(a)}if(c<0||c>=l/a)throw new Error(`Invalid indices: ${s} does not index into ${o}`);for(let e=0;e<a;e++)u.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return u}const sE={kernelName:ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=le(s.shape),i=r.shape,o=i[i.length-1],[l,u,c,h]=ao(s,r);if(0===u)return n.makeTensorInfo(l,s.dtype,[]);const p=nE(n.data.get(r.dataId).values,n.bufferSync(s),s.dtype,u,o,c,h,s.shape,a);return n.makeTensorInfo(l,s.dtype,p.values)}};function rE(e,t,n){const s=Si(n,e.dtype);for(let n=0;n<s.size;++n){const r=s.indexToLoc(n).slice(),a=r[0],i=r[2],o=t.locToIndex([a,i]);r[2]=t.values[o];const l=e.locToIndex(r);0<=l&&l<e.values.length&&(s.values[n]=e.values[l])}return s}const aE={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s;JS([r,a],"gatherV2");const l=be(i,r.shape)[0],u=n.data.get(a.dataId).values,c=r.shape[l];for(let e=0;e<u.length;++e){const t=u[e];re(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=le(a.shape),d=Af(r,a,l,h),f=OT({inputs:{x:r},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=OT({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=rE(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},iE=uT(((e,t)=>e>t?1:0)),oE=ET(un,iE,null,"bool"),lE={kernelName:un,backendName:"cpu",kernelFunc:oE},uE=uT(((e,t)=>e>=t?1:0)),cE=ET(cn,uE,null,"bool"),hE={kernelName:cn,backendName:"cpu",kernelFunc:cE},pE={kernelName:pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t,r=le(s.shape),a=s.shape[s.shape.length-1],i=OT({inputs:{x:s},backend:n,attrs:{shape:[r/a,a]}}),o=W$(i,!0,n),l=OT({inputs:{x:o},backend:n,attrs:{shape:s.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),l}},dE=tT(fn,(e=>Number.isFinite(e)?1:0),"bool"),fE={kernelName:fn,backendName:"cpu",kernelFunc:dE},mE=tT(mn,(e=>Math.abs(e)===1/0?1:0),"bool"),gE={kernelName:mn,backendName:"cpu",kernelFunc:mE},yE=tT(gn,(e=>Number.isNaN(e)?1:0),"bool"),bE={kernelName:gn,backendName:"cpu",kernelFunc:yE},xE=uT(((e,t)=>e<t?1:0)),wE=ET(bn,xE,null,"bool"),vE={kernelName:bn,backendName:"cpu",kernelFunc:wE},kE=uT(((e,t)=>e<=t?1:0)),IE=ET(xn,kE,null,"bool"),NE={kernelName:xn,backendName:"cpu",kernelFunc:IE};function SE(e,t,n){const s=(t-e)/(n-1),r=ze(n,"float32");r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+s;return r}const TE={kernelName:wn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=SE(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},CE=yT((e=>Math.log(e))),$E=nT(vn,CE),EE={kernelName:vn,backendName:"cpu",kernelFunc:$E},AE=tT(kn,(e=>Math.log1p(e))),RE={kernelName:kn,backendName:"cpu",kernelFunc:AE},FE=uT(((e,t)=>e&&t)),DE=ET(In,FE,null,"bool"),_E={kernelName:In,backendName:"cpu",kernelFunc:DE},OE=tT(Nn,(e=>e?0:1),"bool"),ME={kernelName:Nn,backendName:"cpu",kernelFunc:OE},LE=uT(((e,t)=>e||t)),zE=ET(Sn,LE,null,"bool"),PE={kernelName:Sn,backendName:"cpu",kernelFunc:zE},BE={kernelName:Cn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s;JS(r,"LRN");const u=r.shape[3],c=u-1,h=n.data.get(r.dataId).values,p=le(r.shape),d=new Float32Array(p);function f(e){const t=e%u;let n=e-t+Math.max(0,t-a);const s=e-t+Math.min(t+a,c);let r=0;for(;n<=s;n++){const e=h[n];r+=e*e}return r}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-l);d[e]=n}return n.makeTensorInfo(r.shape,r.dtype,d)}},WE={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s;JS(i,"LRNGrad");const h=le(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(r.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),s=e-t+Math.min(p,t+o+1);let r=0;for(let e=n;e<s;e++)r+=Math.pow(f[e],2);r=u*r+l;for(let t=n;t<s;t++){let n=-2*u*c*f[t]*m[e]/r;e===t&&(n+=Math.pow(r,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,r.dtype,g)}};function UE(e,t,n,s){const r=we(s,le(n));for(let n=0;n<r.length;++n){const s=n*t;let a=e[s];for(let n=0;n<t;++n){const t=e[s+n];(Number.isNaN(t)||t>a)&&(a=t)}r[n]=a}return r}function VE(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=n;let l=r.shape;const u=l.length,c=be(a,l);let h=c;const p=Rc(h,u);let d=o.data.get(r.dataId).values;if(null!=p){const e=new Array(u);for(let t=0;t<e.length;t++)e[t]=l[p[t]];d=qT(d,l,r.dtype,p,e),h=Dc(h.length,u),l=e}JS(r,"max"),Ac("max",h,u);const[f,m]=$c(l,h),g=UE(d,le(m),f,r.dtype),y=o.write(g,f,r.dtype);let b=f;return i&&(b=Ec(f,c)),{dataId:y,shape:b,dtype:r.dtype}}const GE={kernelName:En,backendName:"cpu",kernelFunc:VE},HE=uT(((e,t)=>Math.max(e,t))),jE=ET(An,HE),qE={kernelName:An,backendName:"cpu",kernelFunc:jE},KE={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;JS(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;re(ou(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Zl(r.shape,a,i,1,o,l);let c;if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))c=aT({inputs:{x:r},backend:n});else{const e=n.data.get(r.dataId).values,t=_e(r.shape),s=hC(e,r.shape,r.dtype,t,u,"max");c=n.makeTensorInfo(u.outShape,r.dtype,s.values)}return c}},XE={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s;JS(r,"maxPool3d");const c=Jl(r.shape,a,i,1,o,l,u),h=dC(n.data.get(r.dataId).values,r.shape,r.dtype,_e(r.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},YE={kernelName:_n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,{filterSize:i,strides:o,pad:l,dimRoundingMode:u}=s;JS([r,a],"maxPool3DGrad");const c=Jl(a.shape,i,o,1,l,u),h=function(e,t){const n=Si(t.outShape,"int32"),s=t.strideDepth,r=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,l=t.dilationWidth,u=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*s-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,u+b);for(let s=0;s<t.outHeight;++s){const u=s*r-d;let p=u;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+u);for(let r=0;r<t.outWidth;++r){const d=r*a-f;let k=d;for(;k<0;)k+=l;const I=Math.min(t.inWidth,h+d);let N=Number.NEGATIVE_INFINITY,S=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let s=p;s<v;s+=o){const r=s-u;for(let a=k;a<I;a+=l){const i=a-d,o=e.get(m,t,s,a,g);o>=N&&(N=o,S=n*c*h+r*c+i)}}}n.set(S,m,y,s,r,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,I=x-1-c.padInfo.top,N=Si(a.shape,"float32"),S=n.bufferSync(r);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let s=0;s<c.inHeight;++s)for(let r=0;r<c.inWidth;++r){const a=n-v,i=s-I,o=r-k;let l=0;for(let n=0;n<b;n+=m){const s=(a+n)/p;if(!(s<0||s>=c.outDepth||Math.floor(s)!==s))for(let r=0;r<x;r+=g){const a=(i+r)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const u=(o+i)/f;if(u<0||u>=c.outWidth||Math.floor(u)!==u)continue;const p=b*x*w-1-h.get(e,s,a,u,t)===n*x*w+r*w+i?1:0;0!==p&&(l+=S.get(e,s,a,u,t)*p)}}}N.set(l,e,n,s,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},ZE={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;JS([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Zl(o.shape,l,u,1,c,h),d=n.data.get(o.dataId).values,f=Si(p.outShape,o.dtype,pC(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,I=Si(o.shape,"float32"),N=n.data.get(r.dataId).values,S=Si(r.shape,"float32",N);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let s=0;s<p.inWidth;++s){const r=n-k,a=s-v;let i=0;for(let n=0;n<x;n+=y){const s=(r+n)/m;if(!(s<0||s>=p.outHeight||Math.floor(s)!==s))for(let r=0;r<w;r+=b){const o=(a+r)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const l=x*w-1-f.get(e,s,o,t)===n*w+r?1:0;0!==l&&(i+=S.get(e,s,o,t)*l)}}I.set(i,e,n,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},JE={kernelName:On,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;JS(s,"MaxPoolWithArgmax");const u=l.data.get(s.dataId).values,c=Zl(s.shape,r,a,[1,1],i),[h,p]=function(e,t,n,s,r){const a=hC(e,0,n,_e(t),r,"max"),i=pC(e,t,n,r,!0,s);return[a.values,i.values]}(u,s.shape,s.dtype,o,c),d=l.write(h,c.outShape,s.dtype),f=l.write(p,c.outShape,s.dtype);return[{dataId:d,shape:c.outShape,dtype:s.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},QE={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=be(a,r.shape),l=le($c(r.shape,o)[1]),u=[],c=n.makeTensorInfo([],"float32",new Float32Array([l]));u.push(c);const h=CT({inputs:{x:r},backend:n,attrs:{dtype:"float32"}});u.push(h);const p=O$({inputs:{a:h,b:c},backend:n});u.push(p);const d=h$({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},eA={kernelName:Ln,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;JS(r,"min");const o=be(a,r.shape);let l=o;const u=Rc(l,r.shape.length);let c=r;null!=u&&(c=KT({inputs:{x:r},backend:n,attrs:{perm:u}}),l=Dc(l.length,r.shape.length)),Ac("min",l,c.shape.length);const[h,p]=$c(c.shape,l),d=le(p),f=ze(le(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const s=m[t+e];(Number.isNaN(s)||s<n)&&(n=s)}f[e]=n}null!=u&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=OT({inputs:{x:g},backend:n,attrs:{shape:Ec(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},tA=uT(((e,t)=>Math.min(e,t))),nA=ET(zn,tA),sA={kernelName:zn,backendName:"cpu",kernelFunc:nA},rA={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,mode:i}=s;JS(r,"mirrorPad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=a.map(((e,t)=>e[0]+r.shape[t])),c="reflect"===i?0:1,h=n.data.get(r.dataId).values,p=r.shape.length,d=_e(r.shape),f=le(o),m=o.length,g=_e(o),y=we(r.dtype,f);for(let e=0;e<f;e++){let t=Ue(e,m,g);for(let e=0;e<m;e++)t[e]<l[e]?t[e]=2*l[e]-t[e]-c:t[e]>=u[e]&&(t[e]=2*(u[e]-1)-t[e]+c);t=t.map(((e,t)=>e-l[t]));const n=We(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,r.dtype),shape:o,dtype:r.dtype}}},aA=uT(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),iA=ET(Bn,aA),oA={kernelName:Bn,backendName:"cpu",kernelFunc:iA};function lA(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=r.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const l=be([o],r.shape),u=VE({inputs:{x:r},backend:n,attrs:{reductionIndices:l,keepDims:!1}}),c=Ec(u.shape,l),h=OT({inputs:{x:u},backend:n,attrs:{shape:c}}),p=P$({inputs:{a:r,b:h},backend:n}),d=C$({inputs:{x:p},backend:n}),f=h$({inputs:{x:d},backend:n,attrs:{axis:l,keepDims:!1}}),m=OT({inputs:{x:f},backend:n,attrs:{shape:c}}),g=O$({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const uA={kernelName:$s,backendName:"cpu",kernelFunc:lA},cA={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s;JS(r,"multinomial");const l=o?r:lA({inputs:{logits:r},backend:n,attrs:{dim:-1}}),u=l.shape[0],c=l.shape[1],h=n.data.get(l.dataId).values,p=[u,a],d=ze(le(p),"int32");for(let e=0;e<u;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const s=ph.alea(i.toString()),r=e*a;for(let e=0;e<a;++e){const t=s();d[r+e]=n.length;for(let s=0;s<n.length;s++)if(t<n[s]){d[r+e]=s;break}}}return o||n.disposeIntermediateTensorInfo(l),n.makeTensorInfo(p,"int32",d)}};function hA(e,t,n){const s=Ar(-1,n);return o$([],t,s,e,n)}const pA={kernelName:Vn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;JS(s,"neg");const r=n.data.get(s.dataId).values,[a,i]=hA(r,s.shape,s.dtype);return n.makeTensorInfo(i,s.dtype,a)}},dA=Hp,fA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s;JS(r,"NonMaxSuppression");const u=n.data.get(r.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=dA(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},mA=jp,gA={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s;JS(r,"NonMaxSuppressionPadded");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=mA(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},yA=qp,bA={kernelName:qn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s;JS(r,"NonMaxSuppressionWithScore");const c=n.data.get(r.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=yA(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},xA=uT(((e,t)=>e!==t?1:0)),wA=ET(Gn,xA,null,"bool"),vA={kernelName:Gn,backendName:"cpu",kernelFunc:wA},kA={kernelName:Xn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s;JS(r,"oneHot");const l=le(r.shape),u=new Float32Array(l*a);u.fill(o);const c=n.data.get(r.dataId).values;for(let e=0;e<l;++e)c[e]>=0&&c[e]<a&&(u[e*a+c[e]]=i);return n.makeTensorInfo([...r.shape,a],"int32",u)}};function IA(e){const{inputs:t,backend:n}=e,{x:s}=t;if("string"===s.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===s.dtype){const e=ST({inputs:{input:s},backend:n}),t=IA({inputs:{x:e},backend:n}),r=_C({inputs:{input:s},backend:n}),a=IA({inputs:{x:r},backend:n}),i=kT({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return H$({backend:n,attrs:{shape:s.shape,value:0,dtype:s.dtype}})}const NA={kernelName:Ys,backendName:"cpu",kernelFunc:IA},SA={kernelName:Kn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===r.dtype){const t=ST({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=_C({inputs:{input:r},backend:s}),i=IA({inputs:{x:a},backend:s}),o=kT({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return H$({backend:s,attrs:{shape:r.shape,value:1,dtype:r.dtype}})}};function TA(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return E$({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{ae(a,e.shape,"All tensors passed to stack must have matching shapes"),re(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=MC({inputs:t.map((e=>{const t=E$({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}const CA={kernelName:Yn,backendName:"cpu",kernelFunc:TA},$A={kernelName:Zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;JS(r,"pad");const o=a.map(((e,t)=>e[0]+r.shape[t]+e[1])),l=a.map((e=>e[0])),u=n.data.get(r.dataId).values,c=le(r.shape),h=r.shape.length,p=_e(r.shape),d=le(o),f=o.length,m=_e(o),g=we(r.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[We(Ue(e,h,p).map(((e,t)=>e+l[t])),f,m)]=u[e];return{dataId:n.write(g,o,r.dtype),shape:o,dtype:r.dtype}}},EA=uT(((e,t)=>Math.pow(e,t))),AA=ET(Qn,EA),RA={kernelName:Qn,backendName:"cpu",kernelFunc:AA};function FA(e,t,n,s){const[r,a]=$c(e,s),i=sa(t,"int32"),o=ze(le(r),i),l=le(a);for(let e=0;e<o.length;++e){const t=e*l;let s=1;for(let e=0;e<l;++e)s*=n[t+e];o[e]=s}return{outVals:o,outShape:r,outDtype:i}}const DA={kernelName:ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;JS(r,"prod");const o=r.shape.length,l=be(a,r.shape),u=Rc(l,o);let c=l,h=r;const p=[];null!=u&&(h=KT({inputs:{x:r},backend:n,attrs:{perm:u}}),p.push(h),c=Dc(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=FA(h.shape,h.dtype,d,c);let y=m;return i&&(y=Ec(m,l)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function _A(e,t,n,s){if(e===t||e<t&&n<0||t<e&&n>1)return ze(0,s);const r=ze(Math.abs(Math.ceil((t-e)/n)),s);t<e&&1===n&&(n=-1),r[0]=e;for(let e=1;e<r.length;e++)r[e]=r[e-1]+n;return r}const OA={kernelName:ns,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,dtype:a,step:i}=n,o=_A(s,r,i,a);return t.makeTensorInfo([o.length],a,o)}},MA=tT(rs,(e=>1/e)),LA={kernelName:rs,backendName:"cpu",kernelFunc:MA},zA={kernelName:us,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;JS(r,"resizeBilinear");const l=_e(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(le([h,u,c,f])),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<u;t++){let n;n=i?w*(t+.5)-.5:w*t;const s=Math.max(0,Math.floor(n)),r=n-s,a=Math.min(p-1,Math.ceil(n)),o=e*l[0]+s*l[1],u=e*l[0]+a*l[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),s=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*l[2],h=u+n*l[2],p=o+a*l[2],y=u+a*l[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*s,i=a+(n+(m[y+e]-n)*s-a)*r;g[x++]=i}}}return n.makeTensorInfo([h,u,c,f],"float32",g)}},PA={kernelName:cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;JS([a,r],"resizeBilinearGrad");const o=_e(r.shape),[l,u,c,h]=r.shape,[,p,d]=a.shape,f=new Float32Array(l*u*c*h),m=[i&&p>1?u-1:u,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,s=Math.floor(n),r=Math.min(Math.ceil(n),u-1),a=t+s*o[1],i=t+r*o[1],l=n-s,p=1-l;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),s=Math.min(Math.ceil(t),c-1),r=t-n,u=1-r,d=a+n*o[2],m=a+s*o[2],g=i+n*o[2],y=i+s*o[2],v=p*u,k=p*r,I=l*u,N=l*r;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*I,f[y+e]+=t*N}}}}return n.makeTensorInfo([l,c,u,h],"float32",f)}},BA={kernelName:os,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s;JS(r,"resizeNearestNeighbor");const l=_e(r.shape),[u,c]=o,[h,p,d,f]=r.shape,m=n.data.get(r.dataId).values,g=new Float32Array(h*u*c*f),y=[a&&u>1?p-1:p,a&&c>1?d-1:d],b=[a&&u>1?u-1:u,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*l[0];for(let e=0;e<u;e++){const n=i?x*(e+.5):x*e;let s=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(s=Math.max(0,s));const r=t+s*l[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const s=r+n*l[2];for(let e=0;e<f;e++){const t=m[s+e];g[v++]=t}}}}return n.makeTensorInfo([h,u,c,f],r.dtype,g)}},WA={kernelName:ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s;JS([a,r],"resizeNearestNeighborGrad");const o=_e(r.shape),l=_e(a.shape),[u,c,h,p]=r.shape,[,d,f]=a.shape,m=new Float32Array(u*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,I=2*Math.ceil(v)+2,N=2*Math.ceil(k)+2;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],s=Math.floor(e*v),r=Math.floor(s-I/2);for(let s=0;s<h;s++){const a=n+s*o[2],u=Math.floor(s*k),y=Math.floor(u-N/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<I;a++){const u=a+r;if(u<0||u>=d)continue;const p=t+u*l[1],m=u*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<N;e++){const t=e+y;if(t<0||t>=f)continue;const r=p+t*l[2],a=t*w;s===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[r+n])}}m[a+n]=o}}}}return n.makeTensorInfo(r.shape,r.dtype,m)}},UA={kernelName:ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s;JS(r,"reverse");const i=r.shape.length,o=be(a,r.shape);if(0===i)return aT({inputs:{x:r},backend:n});const l=new Gr(r.shape,r.dtype),u=n.bufferSync(r);for(let e=0;e<l.size;e++){const t=l.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=r.shape[e]-1-n[e])),l.set(u.get(...n),...t)}return n.makeTensorInfo(l.shape,l.dtype,l.values)}},VA={kernelName:Qs,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=we(s.dtype,le(s.shape)),[u,c,h,p]=s.shape,[d,f]=Pd(i,c,h),m=Math.sin(r),g=Math.cos(r),y=o.data.get(s.dataId).values;for(let e=0;e<u;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let s=0;s<h;s++){const r=s*p;for(let i=0;i<p;i++){const o=[u,e,s,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*p)+w*p+i]),l[t+n+r+i]=k}}}}return{dataId:o.write(l,s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},GA=tT(ds,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),HA={kernelName:ds,backendName:"cpu",kernelFunc:GA},jA=yT((e=>1/Math.sqrt(e))),qA=nT(fs,jA),KA={kernelName:fs,backendName:"cpu",kernelFunc:qA};function XA(e,t,n,s,r,a,i,o,l,u){const c=[s/r,r],h=e.values,p=t.values;if(0===s)return Si(n,t.dtype);const d=Si(c,t.dtype);d.values.fill(l);for(let e=0;e<a;e++){const a=[];let l=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),l+=n*o[t]}if(l<0||l>=s/r)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<r;n++)u?d.values[l*r+n]+=p[e*r+n]:d.values[l*r+n]=0===t.rank?p[0]:p[e*r+n]}return d}const YA={kernelName:ms,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=lo(0,r,i),p=XA(n.bufferSync(r),n.bufferSync(a),i,h,u,l,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},ZA={kernelName:gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t;JS([s,r,a],"select");const i=s.shape.length,o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=sa(r.dtype,a.dtype),h=ze(le(r.shape),c);let p=0;const d=0===i||i>1||1===r.shape.length?1:le(r.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=l[e]:h[p++]=u[e];return n.makeTensorInfo(r.shape,c,h)}},JA=Hd,QA=jd,eR=tT(ys,(e=>e>=0?QA*e:JA*(Math.exp(e)-1))),tR={kernelName:ys,backendName:"cpu",kernelFunc:eR},nR=tT(vs,(e=>e<0?-1:e>0?1:0)),sR={kernelName:vs,backendName:"cpu",kernelFunc:nR},rR=tT(xs,(e=>Math.sin(e))),aR={kernelName:xs,backendName:"cpu",kernelFunc:rR},iR=tT(ws,(e=>Math.sinh(e))),oR={kernelName:ws,backendName:"cpu",kernelFunc:iR},lR=Math.log(1.1920928955078125e-7)+2,uR=tT(Is,(e=>{const t=e>-lR,n=e<lR,s=Math.exp(e);let r;return r=n?s:t?e:Math.log(1+s),r})),cR={kernelName:Is,backendName:"cpu",kernelFunc:uR},hR={kernelName:Ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;JS([r],"spaceToBatchND");const o=le(a),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=$A.kernelFunc({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),c=Bd(u.shape,a,o,!1),h=Wd(c.length,a.length,!1),p=Ud(u.shape,a,o,!1),d=OT({inputs:{x:u},backend:n,attrs:{shape:c}}),f=KT({inputs:{x:d},backend:n,attrs:{perm:h}}),m=OT({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function pR(e,t,n,s,r,a,i){const o=t[0],l=a[0],u=new Array(l),c=new Array(o),h=t[1];if(0===l){if(0!==o)throw new Error(gf(o));return[ve(n,0),[0,h],ve(r,0),u,c]}let p=!0,d=0;const f=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(yf(t,n));if(n>=l)throw new Error(bf(t,n,l));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<l;++e){const t=0===f[e];u[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=s;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,u,c]}{const t=f[l-1],a=ve(n,t*h),p=ve(r,t),d=new Array(l).fill(0);for(let t=0;t<o;++t){const n=e[t*h],r=d[n],i=(0===n?0:f[n-1])+r;d[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];p[i]=s[t],c[t]=i}for(let e=0;e<l;++e)if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}return[a,[t,h],p,u,c]}}const dR={kernelName:Es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n        ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(s.dataId).values,l=n.data.get(r.dataId).values,u=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=pR(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}};function fR(e,t,n,s,r){const a=le(s),i=t[0],o=r.length,l=[];let u=1,c=-1;for(let e=0;e<o;++e){const t=r[e];if(-1===t){if(-1!==c)throw new Error(xf(c,e));c=e,l.push(1)}else{if(t<0)throw new Error(wf(e,t));u*=t,l.push(t)}}if(-1!==c){if(u<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/u);if(u*e!==a)throw new Error(kf(s,l));l[c]=e}if(le(l)!==a)throw new Error(If(s,l));const h=s.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*s[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*l[e+1]}const f=ve(n,i*o);for(let t=0;t<i;++t){let n=0;for(let s=0;s<h;++s)n+=e[t*h+s]*p[s];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],l]}const mR={kernelName:As,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(r.dataId).values),o=n.data.get(s.dataId).values,l=Array.from(n.data.get(a.dataId).values),[u,c,h]=fR(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function gR(e,t,n,s,r,a=!1,i=0){const o=s.length,l=[t[0],e.length/t[0]],u=l[1],c=o>0?r[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=ve(n,h.reduce(((e,t)=>e*t),1));if(0===o)return c>0&&p.fill(i),[p,h];if(c<=0)throw new Error("segment ids must be >= 0");let d=0,f=1,m=0,g=r[d];for(;;){let t=0;if(f<o){if(t=r[f],g===t){++f;continue}if(g>=t)throw new Error("segment ids are not increasing")}if(g<0||g>=c)throw new Error(Tf(g,c));g>m&&p.fill(i,m*u,g*u);for(let t=d;t<f;++t){const n=s[t];if(n<0||n>=l[0])throw new Error(Cf(t,s[t],l[0]));for(let t=0;t<u;t++)p[g*u+t]+=e[n*u+t]}if(a)for(let e=0;e<u;e++)p[g*u+e]/=f-d;if(d=f,++f,m=g+1,g=t,f>o)break}return m<c&&p.fill(i,m*u,c*u),[p,h]}const yR={kernelName:Rs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=gR(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},bR={kernelName:Fs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(r.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values,l=n.data.get(a.dataId).values,[u,c]=gR(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},xR={kernelName:Ds,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,sliceSize:c,strides:h,outputSize:p}=lo(0,r,o),d=XA(n.bufferSync(r),n.bufferSync(a),o,p,c,u,l,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},wR={kernelName:Cs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=be(i,r.shape)[0],l=mf(r,a,o),u=new Array(r.shape.length).fill(0),c=r.shape.slice();return l.map((e=>{const t=[...c];t[o]=e;const s=wC({inputs:{x:r},backend:n,attrs:{begin:u,size:t}});return u[o]+=e,s}))}},vR=yT((e=>Math.sqrt(e))),kR=tT(Ns,(e=>Math.sqrt(e))),IR={kernelName:Ns,backendName:"cpu",kernelFunc:kR},NR={kernelName:Os,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,s=t;JS(n,"square");const r=s.data.get(n.dataId).values,a=new Float32Array(r.length);for(let e=0;e<r.length;++e){const t=r[e];a[e]=t*t}return{dataId:s.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},SR=uT(((e,t)=>{const n=e-t;return n*n})),TR=ET(_s,SR),CR={kernelName:_s,backendName:"cpu",kernelFunc:TR},$R=tT(Zs,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),ER={kernelName:Zs,backendName:"cpu",kernelFunc:$R};function AR(e,t,n,s){const r=Si(e,t.dtype);for(let e=0;e<r.size;e++){const a=r.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+s[e];r.set(t.get(...i),...a)}return r}const RR={kernelName:Ms,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s;JS(r,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=So(r.shape,a,i,o,l,u,c,h,p);let v;if(m)v=OT({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){re(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ho(b,x,w),t=wC({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=OT({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=AR(d,n.bufferSync(r),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class FR{constructor(e,t,n,s,r,a){this.separator=_r(e),this.nGramWidths=t,this.leftPad=_r(n),this.rightPad=_r(s),this.padWidth=r,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,s,r,a){for(let i=0;i<r;++i){const o=this.getPadWidth(a),l=Math.max(0,o-i),u=Math.max(0,o-(r-(i+1))),c=a-(l+u),h=t+(l>0?0:i-o);let p=0;p+=l*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=u*this.rightPad.length,p+=(l+u+c-1)*this.separator.length,n[s+i]=new Uint8Array(p);const d=n[s+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<l;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<u;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<u-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,s=t.length;if(s>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let r=1;r<s;++r){let s=t[r]>=e;if(s=s&&t[r]<=n,!s)throw new Error(`Invalid split value ${t[r]}, must be in [${e}, ${n}]`);e=t[r]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const r=s-1,a=ve("int32",s);if(0===n||0===s){const e=new Array(n);for(let e=0;e<=r;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=r;++e){const n=t[e]-t[e-1];let s=0;this.nGramWidths.forEach((e=>{s+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===s&&(s=1),a[e]=a[e-1]+s}const i=new Array(a[r]);for(let n=0;n<r;++n){const s=t[n];let r=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],l=this.getNumNGrams(o,a);this.createNGrams(e,s,i,r,l,a),r+=l})),this.preserveShort&&r===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,l=1;this.createNGrams(e,s,i,r,l,o)}}return[i,a]}}function DR(e,t,n,s,r,a,i,o){return new FR(n,s,r,a,i,o).compute(e,t)}const _R={kernelName:Ls,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=DR(p,d,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function OR(e,t,n,s){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)s.push(e.subarray(t,t+1));return}if(1===t.length){const r=t[0];let a=e.indexOf(r);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||s.push(t),a=(e=e.subarray(a+1)).indexOf(r)}return void(n&&0===e.length||s.push(e))}let r=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(r,a);n&&0===t.length||s.push(t),r=a+1}}function MR(e,t,n){const s=e.length,r=[];let a=0,i=0;const o=new Array(s);for(let l=0;l<s;++l){const s=r.length;OR(e[l],t,n,r);const u=r.length-s;o[l]=u,a+=u,i=Math.max(i,u)}const l=ve("int32",2*a),u=new Array(a),c=[s,i];let h=0;for(let e=0;e<s;++e)for(let t=0;t<o[e];++t)l[2*h]=e,l[2*h+1]=t,u[h]=r[h],++h;return[l,u,c]}const LR={kernelName:zs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,l=n.data.get(i.dataId).values[0],[u,c,h]=MR(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function zR(e,t){const n=ve("int32",e.length);for(let s=0;s<e.length;++s)n[s]=Er(e[s]).modulo(t).getLowBitsUnsigned();return n}const PR={kernelName:Ps,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=zR(n.data.get(a.dataId).values,r);return n.makeTensorInfo(a.shape,"int32",i)}},BR=tT(Ws,(e=>Math.tan(e))),WR={kernelName:Ws,backendName:"cpu",kernelFunc:BR},UR=tT(Us,(e=>Math.tanh(e)));function VR(e,t){const n=new Array(e.rank);for(let s=0;s<n.length;s++)n[s]=e.shape[s]*t[s];const s=Si(n,e.dtype);for(let t=0;t<s.values.length;++t){const n=s.indexToLoc(t),r=new Array(e.rank);for(let t=0;t<r.length;t++)r[t]=n[t]%e.shape[t];const a=e.locToIndex(r);s.values[t]=e.values[a]}return s}const GR=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function HR(e,t,n=0,s=e.length-1){for(;s>n;){if(s-n>600){const r=s-n+1,a=t-n+1,i=Math.log(r),o=.5*Math.exp(2*i/3),l=.5*Math.sqrt(i*o*(r-o)/r)*Math.sign(a-r/2);HR(e,t,Math.max(n,Math.floor(t-a*o/r+l)),Math.min(s,Math.floor(t+(r-a)*o/r+l)))}const r=e[t];let a=n,i=s;for(ee(e,n,t),GR(e[s],r)>0&&ee(e,n,s);a<i;){for(ee(e,a,i),a++,i--;GR(e[a],r)<0;)a+=1;for(;GR(e[i],r)>0;)i-=1}0===GR(e[n],r)?ee(e,n,i):(i+=1,ee(e,i,s)),i<=t&&(n=i+1),t<=i&&(s=i-1)}}function jR(e,t,n,s,r){const a=t[t.length-1],[i,o]=[e.length/a,a],l=we(n,i*s),u=we("int32",i*s);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),s<i.length&&(HR(i,s),i=i.slice(0,s)),r&&i.sort(GR);const c=t*s,h=l.subarray(c,c+s),p=u.subarray(c,c+s);for(let e=0;e<s;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=s,[Si(c,n,l),Si(c,"int32",u)]}const qR={kernelName:Hs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=n,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=[c,f,m,d],y=_e(r.shape),b=y[0],x=y[1],w=y[2],v=we(r.dtype,le(g));v.fill(l);const k=s.data.get(r.dataId).values,I=s.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?I:I.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let s=0;s<m;++s)for(let r=0;r<d;++r){let a;const u=t[6]*s+t[7]*n+1;if(0===u)continue;const c=(t[0]*s+t[1]*n+t[2])/u,d=(t[3]*s+t[4]*n+t[5])/u,f=KR(c,p,o),m=KR(d,h,o);switch(i){case"nearest":a=YR(k,h,p,b,x,w,e,m,f,r,l);break;case"bilinear":a=ZR(k,h,p,b,x,w,e,m,f,r,l);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*x+s*w+r]=a}return s.makeTensorInfo(g,r.dtype,v)}return{dataId:s.write(v,g,r.dtype),shape:r.shape,dtype:r.dtype}}};function KR(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return J(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return J(0,n,t-1)}(e,t);case"nearest":return function(e,t){return J(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function XR(e,t,n,s,r,a,i,o,l,u,c){return 0<=o&&o<t&&0<=l&&l<n?e[i*s+o*r+l*a+u]:c}function YR(e,t,n,s,r,a,i,o,l,u,c){return XR(e,t,n,s,r,a,i,Math.round(o),Math.round(l),u,c)}function ZR(e,t,n,s,r,a,i,o,l,u,c){const h=Math.floor(o),p=Math.floor(l),d=h+1,f=p+1;return(d-o)*((f-l)*XR(e,t,n,s,r,a,i,h,p,u,c)+(l-p)*XR(e,t,n,s,r,a,i,h,f,u,c))+(o-h)*((f-l)*XR(e,t,n,s,r,a,i,d,p,u,c)+(l-p)*XR(e,t,n,s,r,a,i,d,f,u,c))}function JR(e,t,n,s){const r=be(t,n)[0],a=[1,n[0],1];for(let e=0;e<r;e++)a[0]*=n[e];a[1]=n[r];for(let e=r+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[r]),l=new Gr(a,s,e),u=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[r];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)e.push(l.get(n,t,s));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,u.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new Gr(h,s);u.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let s=0;s<a[2];s++)p.set(l.get(n,e,s),n,t,s)}));const d=n.slice();return d[r]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const QR={kernelName:Xs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s;JS(r,"unsortedSegmentSum");const o=[],l=[],u=r.shape.length-a.shape.length;let c=a;for(let e=0;e<u;++e){const t=E$({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,l.push(t)}for(let e=0;e<i;++e){const t=Ar(e,"int32"),s=n.makeTensorInfo([],"int32",t),a=g$({inputs:{a:s,b:c},backend:n}),i=CT({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),u=u$({inputs:{a:i,b:r},backend:n}),h=h$({inputs:{x:u},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),l.push(s),l.push(a),l.push(i),l.push(u),l.push(h)}const h=TA({inputs:o,backend:n,attrs:{axis:0}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},eF=[PT,WT,VT,HT,_T,jT,YT,ZT,JT,QT,tC,sC,aC,lC,cC,fC,mC,gC,yC,zT,bC,kC,SC,TC,$T,EC,RC,IT,FC,LC,PC,BC,WC,UC,VC,GC,jC,KC,XC,YC,ZC,JC,e$,t$,n$,s$,r$,a$,i$,d$,rT,f$,y$,S$,$$,A$,D$,G$,j$,q$,Y$,Q$,eE,tE,sE,aE,lE,hE,iT,pE,OC,fE,gE,bE,lT,vE,NE,TE,EE,RE,_E,ME,PE,BE,WE,GE,qE,KE,XE,YE,ZE,JE,QE,eA,sA,rA,oA,cA,c$,pA,fA,gA,bA,vA,kA,SA,CA,$A,RA,pT,DA,OA,TT,M$,LA,fT,gT,MT,zA,PA,BA,WA,UA,VA,HA,KA,YA,ZA,tR,wT,sR,aR,oR,vC,uA,cR,hR,dR,mR,yR,bR,xR,wR,IR,NR,CR,ER,RR,_R,LR,PR,B$,p$,WR,{kernelName:Us,backendName:"cpu",kernelFunc:UR},{kernelName:Vs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;JS(r,"tile");const i=VR(n.bufferSync(r),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Gs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s;JS(r,"topk");const o=n.data.get(r.dataId).values,[l,u]=jR(o,r.shape,r.dtype,a,i);return[n.makeTensorInfo(l.shape,l.dtype,l.values),n.makeTensorInfo(u.shape,u.dtype,u.values)]}},qR,XT,{kernelName:qs,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;JS(a,"unique");const i=s.data.get(a.dataId).values,{outputValues:o,outputShape:l,indices:u}=JR(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},{kernelName:Ks,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r.shape.length,o=r.shape[a],l=new Array(i-1);let u=0;for(let e=0;e<i;e++)e!==a&&(l[u++]=r.shape[e]);const c=new Array(i).fill(0),h=r.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=wC({inputs:{x:r},backend:n,attrs:{begin:c,size:h}});p[e]=OT({inputs:{x:t},backend:n,attrs:{shape:l}}),n.disposeIntermediateTensorInfo(t)}return p}},QR,NA];for(const e of eF)cr(e);const tF={},nF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function sF(e,t){if(!(e in tF)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete tF[e]}),!1),1===e?n.getContext("webgl",nF)||n.getContext("experimental-webgl",nF):n.getContext("webgl2",nF)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;tF[e]=n}const n=tF[e];return null==n||n.isContextLost()?(delete tF[e],sF(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),tF[e])}var rF,aF,iF;function oF(e,t){return[t,e]}function lF(e){const t=le(e);return de(Math.ceil(t/4))}function uF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function cF(e,t){const n=e;let s,r,a,i,o,l,u,c,h,p;return 2===je().getNumber("WEBGL_VERSION")?(s=n.R32F,r=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,u=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,l=n.RGBA8):(s=e.RGBA,r=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,u=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,l=e.RGBA),{internalFormatFloat:s,internalFormatHalfFloat:r,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:l,downloadUnpackNumChannels:u,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function hF(e,t){const n=t();return je().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function pF(e){return!!(je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function dF(e,t){return vF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(rF||(rF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(aF||(aF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(iF||(iF={}));const fF=/ERROR: [0-9]+:([0-9]+):/g;function mF(e,t){if(hF(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function gF(e,t,n,s,r,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,s))),hF(e,(()=>e.vertexAttribPointer(o,r,e.FLOAT,!1,a,i))),hF(e,(()=>e.enableVertexAttribArray(o))),!0)}function yF(e,t,n,s){hF(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,s=t+e.TEXTURE0;if(s<e.TEXTURE0||s>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),hF(e,(()=>e.activeTexture(e.TEXTURE0+n))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,s))),hF(e,(()=>e.uniform1i(n,s)))}function bF(e,t,n){hF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),hF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function xF(e,t){hF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),hF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function wF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function vF(e,t,n){const s=hF(e,(()=>t()));if(null==s)throw new Error(n);return s}function kF(e,t=2){return le(e.slice(0,e.length-t))}function IF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function NF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[kF(e),...IF(e)]),t}function SF(e){return e%2==0}function TF(e,t){if(ce(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],s=t.slice(-1)[0];if(n===s)return!0;if(SF(n)&&SF(s)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&SF(e[0])&&SF(t[0])}let CF,$F;function EF(e,t){return null!=e.getExtension(t)}function AF(e){try{if(null!=sF(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function RF(e){const t=cF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const r=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(s),r}function FF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const DF=je();function _F(){let e,t,n,s,r,a,i,o,l,u;return 2===je().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",s="in",r="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",l="",u="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",s="varying",r="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",l="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",u="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:s,texture2D:r,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:l,defineRound:u}}function OF(e,t,n="index"){const s=_e(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${t}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${t}`:`index -= ${e[r]} * ${t}`};`)).join("")}function MF(e,t,n="index"){const s=_e(t);return s.map(((t,r)=>`int ${e[r]} = ${n} / outShapeStrides[${r}]; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * outShapeStrides[${r}]`:`index -= ${e[r]} * outShapeStrides[${r}]`};`)).join("")}function LF(e){const t=_e(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}DF.registerFlag("HAS_WEBGL",(()=>DF.getNumber("WEBGL_VERSION")>0)),DF.registerFlag("WEBGL_VERSION",(()=>AF(2)?2:AF(1)?1:0)),DF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),DF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===DF.get("WEBGL_VERSION"))),DF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),DF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),DF.registerFlag("WEBGL_PACK",(()=>DF.getBool("HAS_WEBGL"))),DF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_PACK_CLIP",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_PACK_REDUCE",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_CONV_IM2COL",(()=>DF.getBool("WEBGL_PACK"))),DF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==CF){const t=sF(e);CF=t.getParameter(t.MAX_TEXTURE_SIZE)}return CF}(DF.getNumber("WEBGL_VERSION")))),DF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==$F){const t=sF(e);$F=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,$F)}(DF.getNumber("WEBGL_VERSION")))),DF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=DF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=sF(e);return t=EF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:EF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),DF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>DF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ba())),DF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=sF(e);if(1===e){if(!EF(t,"OES_texture_float"))return!1}else if(!EF(t,"EXT_color_buffer_float"))return!1;return RF(t)}(DF.getNumber("WEBGL_VERSION")))),DF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!DF.getBool("WEBGL_FORCE_F16_TEXTURES")&&DF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),DF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=sF(e);if(1!==e){if(EF(t,"EXT_color_buffer_float"))return RF(t);const e="EXT_color_buffer_half_float";if(EF(t,e)){const n=t.getExtension(e);return function(e,t){const n=cF(e,t),s=e.createTexture();e.bindTexture(e.TEXTURE_2D,s),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,s,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(s),e.deleteFramebuffer(r),a}(t,n)}return!1}return!!EF(t,"OES_texture_float")&&!!EF(t,"WEBGL_color_buffer_float")&&RF(t)}(DF.getNumber("WEBGL_VERSION")))),DF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=DF.getNumber("WEBGL_VERSION"))&&null!=sF(e).fenceSync;var e})),DF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>DF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),DF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),DF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ba()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),DF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),DF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),DF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),DF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const zF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:PF}=m;function BF(e,t,n){const s=[];if(e.forEach((e=>{const t=le(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?s.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(s.push(`uniform sampler2D ${e.name};`),s.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=YF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:s.push(`uniform int ${e.name}Shape;`);break;case 2:s.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:s.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:s.push(`uniform ivec4 ${e.name}Shape;`)}s.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:s.push("uniform int outShape;");break;case 2:s.push("uniform ivec2 outShape;"),s.push("uniform int outShapeStrides;");break;case 3:s.push("uniform ivec3 outShape;"),s.push("uniform ivec2 outShapeStrides;");break;case 4:s.push("uniform ivec4 outShape;"),s.push("uniform ivec3 outShapeStrides;")}s.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{s.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const r=s.join("\n"),a=e.map((e=>function(e,t,n=!1,s){let r="";r+=n?UF(e,s):WF(e,s);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(r+=n?function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=PF(e.shapeInfo.logicalShape,t.logicalShape),l=XF(i),u=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+u]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+u]}`)).join(", ");let d="return outputValue;";const f=1===le(e.shapeInfo.logicalShape),m=1===le(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${r}() {\n      ${l} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${s}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,s=n.charAt(0).toUpperCase()+n.slice(1),r="get"+s+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,l=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===l&&null==e.shapeInfo.flatOffset&&ce(i,a))return`\n      float ${r}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const u=XF(l),c=PF(e.shapeInfo.logicalShape,t.logicalShape),h=l-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":l<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=l<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${r}() {\n      ${u} coords = getOutputCoords();\n      ${p}\n      return get${s}(${f});\n    }\n  `}(e,t)),r}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=_F(),l=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let u,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${VF}\n    ${GF}\n    ${HF}\n  `}(o);return t.isPacked?(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===s[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${s[1]}.0);\n      }\n    `:1===s[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${s[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      return 2 * (resTexRC.x * ${s[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(ce(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${s[0]}, ${s[1]}));\n      }\n    `;const r=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[2]/2),a=r*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const s=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],r=Math.ceil(e[e.length-1]/2),a=r*Math.ceil(e[e.length-2]/2);let i=a,o="",l="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,l=`b${t}, `+l;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${s[0]}, ${s[1]}));\n      int index = resTexRC.x * ${s[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${r});\n      int c = imod(index, ${r}) * 2;\n\n      return ivec${e.length}(${l});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(u=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return ce(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${MF(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const s=OF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${MF(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const s=OF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${s}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=OF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=OF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=jF),[h,l,c,r,u,a,n.userCode].join("\n")}function WF(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${s}() {return ${n};}`;const[r,a]=e.shapeInfo.texShape;if(1===r&&1===a)return`\n      float ${s}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=qF(n);if(t)return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,l]=e.shapeInfo.texShape;return`\n    float ${s}() {\n      vec2 uv = uvFromFlat(${o}, ${l}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${s}(int index) {\n        ${KF(e)}\n      }\n    `;const r=e.shapeInfo.texShape,a=r[0],i=r[1];if(1===i&&1===a)return`\n      float ${s}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=qF(n);return 1===i?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${s}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${s}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape;if(null!=a&&ce(n,a)){if(t)return`\n      float ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `;const e=a[0];return`\n    float ${r}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=xe(n),l=i;if(l.length<n.length){const n=["row","col"];return`\n      ${WF(ZF(e,l),t)}\n      float ${r}(int row, int col) {\n        return ${r}(${JF(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${KF(e)}\n      }\n    `;const u=a[0],c=a[1],h=qF(s);return 1===c?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${s}TexShape[0]));\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${u}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `:1===u?t?`\n      float ${r}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${s}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${s}TexShape[1]), 0.5);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${s}, uv);\n    }\n  `:t?`\n      float ${r}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${s}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n  float ${r}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${u}, ${c}, index);\n    return sampleTexture(${s}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:l}=xe(n),u=o;if(u.length<n.length){const n=["row","col","depth"];return`\n        ${WF(ZF(e,u),t)}\n        float ${r}(int row, int col, int depth) {\n          return ${r}(${JF(n,l)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${KF(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        int stride1 = ${s}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n        float ${r}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${s}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${r}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${s}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n    float ${r}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${s}, uv);\n    }\n  `;const f=qF(s);return t?`\n    float ${r}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${s}Shape[1] * ${s}Shape[2];\n      int stride1 = ${s}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index);\n      return sampleTexture(${s}, uv);\n    }\n    `:`\n      float ${r}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${s}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:l,keptDims:u}=xe(n);if(l.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${WF(ZF(e,l),t)}\n      float ${r}(int row, int col, int depth, int depth2) {\n        return ${r}(${JF(n,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${KF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${s}Shape[3];`,m=`int stride1 = ${s}Shape[2] * stride2;`,g=`int stride0 = ${s}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${s}Shape[1] * ${s}Shape[2], ${s}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${s}TexShape[1], ${s}TexShape[0]);\n        return sampleTexture(${s}, uv);\n      }\n    `:`\n      float ${r}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${s}, uv);\n      }\n    `;const y=qF(s);return t?`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${s}TexShape[0], ${s}TexShape[1], index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `:`\n    float ${r}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${s}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=t[4],a=t[3]*r,i=t[2]*a,o=t[1]*i,{newShape:l,keptDims:u}=xe(t);if(l.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${WF(ZF(e,l))}\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        return ${s}(${JF(t,u)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${r})) +\n          depth3;\n        ${KF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${r}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===r&&null==c)return`\n      float ${s}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${r} + depth3 + ${qF(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:r,keptDims:a}=xe(t);if(r.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${WF(ZF(e,r))}\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${s}(${JF(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,l=t[3]*o,u=t[2]*l,c=t[1]*u;if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${u}, ${l}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${KF(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${u}, ${l}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${s}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${s}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${u} + depth * ${l} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${qF(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function UF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${_F().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=e.shapeInfo.texShape,a=_F();if(t)return`\n    vec4 ${s}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(r[0]/2),Math.ceil(r[1]/2)];return`\n    vec4 ${s}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],l=_F();if(null!=a&&ce(n,a))return t?`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${s}TexShape[1], ${s}TexShape[0]);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `:`\n      vec4 ${r}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${l.texture2D}(${s}, uv);\n      }\n    `;if(t)return`\n    vec4 ${r}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `;const u=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${r}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${u[0]}, ${u[1]}, row, col);\n      return ${l.texture2D}(${s}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,s=e.name,r="get"+s.charAt(0).toUpperCase()+s.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const s=[1,2],a=["b","row","col"];return`\n        ${UF(ZF(e,n.slice(1)),t)}\n        vec4 ${r}(int b, int row, int col) {\n          return ${r}(${JF(a,s)});\n        }\n      `}const o=_F();if(t)return`\n    vec4 ${r}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${s}TexShape[0]) / 2.0), ceil(float(${s}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${s}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${s}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `;const l=i[0],u=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${r}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${l}, ${u}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${s}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,s="get"+n.charAt(0).toUpperCase()+n.slice(1),r=_F();if(t)return`\n    vec4 ${s}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${r.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,l=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],u=l[0],c=l[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${s}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${u});\n      return ${r.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const VF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",GF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",HF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",jF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function qF(e){return`offset${e}`}function KF(e){const t=e.name,n=le(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function XF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function YF(e,t,n){const{newShape:s,keptDims:r}=xe(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):s,l=!e&&a>1&&!ce(t,n)&&s.length<a||i;return{useSqueezeShape:l,uniformShape:l?o:t,keptDims:r}}function ZF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function JF(e,t){return t.map((t=>e[t])).join(", ")}function QF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const s=e.logicalShape,r=t[n],a=r.shape;if(!ce(s,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${s} and ${a} must match`);if(e.isUniform&&r.isUniform)return;const i=e.texShape,o=r.isUniform?null:r.texData.texShape;if(!ce(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function eD(e){return je().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class tD{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=rF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=_F();this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?MF(["r","c","d"],e):OF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class nD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=rF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=_F();this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?MF(["r","c","d"],e):OF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class sD{constructor(e){this.variableNames=["A"],this.outTexUsage=aF.DOWNLOAD;const t=_F();this.outputShape=e,this.userCode=`\n      ${zF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class rD{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aF.DOWNLOAD;const t=_F();this.outputShape=e,this.userCode=`\n      ${zF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class aD{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=_F();this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length);let s="result";t&&(s="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":LF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${s}, 0., 0., 0.);\n      }\n    `}}class iD{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=_F();this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length);let s="",r="result";t&&(r="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let r=0;r<=1;r++){const a=2*t+r;s+=`\n          localCoords = coords;\n          if(localCoords[2] + ${r} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${r};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":LF(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${s}\n\n          ${n.output} = ${r};\n        }\n    `}}function oD(e,t,n,s,r,a){!function(e,t){const n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return vF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return hF(e,(()=>e.bindTexture(o,i))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texImage2D(o,0,s,t,n,0,r,a,null))):hF(e,(()=>e.texStorage2D(o,1,s,t,n))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function lD(e){return e.internalFormatFloat}function uD(e){return e.internalFormatHalfFloat}function cD(e){return e.downloadTextureFormat}function hD(e){return e.internalFormatPackedFloat}function pD(e){return e.internalFormatPackedHalfFloat}class dD{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=je().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){tF[e]=t}(t,e)):this.gl=sF(t);let n="WEBGL_color_buffer_float";const s="EXT_color_buffer_half_float";if(1===je().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=dF(this.gl,e),EF(this.gl,t))this.textureHalfFloatExtension=dF(this.gl,t);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),EF(this.gl,s))this.colorBufferHalfFloatExtension=dF(this.gl,s);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",EF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!EF(this.gl,s))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(s)}this.vertexBuffer=function(e){return function(e,t){const n=vF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),hF(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=vF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return hF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),hF(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return vF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=cF(this.gl,this.textureHalfFloatExtension)}get debug(){return je().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;hF(e,(()=>e.finish())),hF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),hF(e,(()=>e.deleteFramebuffer(this.framebuffer))),hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),hF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),hF(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=oF(t,n);return oD(e,r,a,lD(s),s.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=oF(t,n);return oD(e,r,a,uD(s),s.textureFormatFloat,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=oF(t,n);return oD(e,r,a,cD(s),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){hF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):hF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):hF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,s){this.throwIfDisposed(),function(e,t,n,s,r,a){let i,o,l;hF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),r instanceof Uint8Array?(i=new Uint8Array(n*s*4),o=e.UNSIGNED_BYTE,l=e.RGBA):(i=new Float32Array(n*s*4),o=e.FLOAT,l=a.internalFormatPackedFloat),i.set(r),2===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,s,e.RGBA,o,i))):hF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,l,n,s,0,e.RGBA,o,i))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,s,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=uF(t,n);return oD(e,r,a,pD(s),e.RGBA,s.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,s){const[r,a]=uF(t,n);return oD(e,r,a,hD(s),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(xF(this.gl,this.framebuffer),this.outputTexture=null),hF(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,s){const[r,a]=oF(t,n),i=new Uint8Array(t*n*4);return hF(e,(()=>e.readPixels(0,0,r,a,s.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,s,r,a){return function(e,t,n,s,r,a,i,o){const l=e,u=new Float32Array(function(e,t){const[n,s]=uF(e,t);return n*s*4}(a,i));return l.bindBuffer(l.PIXEL_PACK_BUFFER,t),l.getBufferSubData(l.PIXEL_PACK_BUFFER,0,u),l.bindBuffer(l.PIXEL_PACK_BUFFER,null),u}(this.gl,e,0,0,0,r,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const s=e,r=new Float32Array(n);return s.bindBuffer(s.PIXEL_PACK_BUFFER,t),s.getBufferSubData(s.PIXEL_PACK_BUFFER,0,r),s.bindBuffer(s.PIXEL_PACK_BUFFER,null),r}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const s=function(e,t,n,s){const r=e.createBuffer();hF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,r)));const a=16*t*n;return hF(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),hF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),hF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),r}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),s}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(je().getBool("WEBGL_FENCE_API_ENABLED")){const s=e,r=s.fenceSync(s.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=s.clientWaitSync(r,0,0);return e===s.ALREADY_SIGNALED||e===s.CONDITION_SATISFIED},t=r}else je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const s=new Float32Array(t*n*4);return hF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,s))),s}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=_F();return function(e,t){const n=vF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(hF(e,(()=>e.shaderSource(n,t))),hF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return vF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return hF(t,(()=>t.attachShader(n,this.vertexShader))),hF(t,(()=>t.attachShader(n,e))),function(e,t){if(hF(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&mF(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),gF(e,t,"clipSpacePos",n,3,20,0)&&gF(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&hF(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&mF(this.gl,this.program),hF(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return vF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),hF(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),yF(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[s,r]=uF(t,n);this.setOutputMatrixTextureDriver(e,s,r)}setOutputMatrixWriteRegion(e,t,n,s){this.setOutputMatrixWriteRegionDriver(n,e,s,t)}setOutputPackedMatrixWriteRegion(e,t,n,s){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&mF(this.gl,this.program),wF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),hF(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),hF(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=dF(this.gl,2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await ge((()=>this.disposed||this.isQueryAvailable(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),s=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),s&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||ge((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bF(this.gl,e,this.framebuffer),this.debug&&wF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(bF(this.gl,this.outputTexture,this.framebuffer),this.debug&&wF(this.gl)):xF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const s=this.gl;bF(s,e,this.framebuffer),this.debug&&wF(s),this.outputTexture=e,hF(s,(()=>s.viewport(0,0,t,n))),hF(s,(()=>s.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,s){this.throwIfDisposed(),hF(this.gl,(()=>this.gl.scissor(e,t,n,s)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:fD,bincountImpl:mD,bincountReduceImpl:gD,ceilImpl:yD,concatImpl:bD,equalImpl:xD,expImpl:wD,expm1Impl:vD,floorImpl:kD,gatherNdImpl:ID,gatherV2Impl:ND,greaterImpl:SD,greaterEqualImpl:TD,lessImpl:CD,lessEqualImpl:$D,linSpaceImpl:ED,logImpl:AD,maxImpl:RD,maximumImpl:FD,minimumImpl:DD,multiplyImpl:_D,negImpl:OD,notEqualImpl:MD,prodImpl:LD,rangeImpl:zD,rsqrtImpl:PD,sigmoidImpl:BD,simpleAbsImpl:WD,sliceImpl:UD,sparseFillEmptyRowsImpl:VD,sparseReshapeImpl:GD,sparseSegmentReductionImpl:HD,sqrtImpl:jD,stridedSliceImpl:qD,stringNGramsImpl:KD,stringSplitImpl:XD,stringToHashBucketFastImpl:YD,subImpl:ZD,tileImpl:JD,topKImpl:QD,transposeImpl:e_,uniqueImpl:t_}=V;function n_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function s_(e,t){return 1===t?[e]:n_(e,t)}class r_{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=eD(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=s_("rc",this.rank),t=XF(this.rank),n=this.getOutOfBoundsCondition(e),s=this.getSetup(e),r=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${s}\n\n            setOutput(vec4(${r}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let s=0;s<=1;s++){let r=`${0===n?"r":"rp1"}, ${0===s?"c":"cp1"}`;for(let t=2;t<this.rank;t++)r=`${e[e.length-1-t]},`+r;t.push(r)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],s=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${s};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class a_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var s,r;this.userCode=`\n      ${s=t,r=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${r?function(e,t,n="index"){const s=function(e,t){const n=e.length,s=e.map((e=>`${t}[${e}]`)),r=new Array(n-1);r[n-2]=s[n-1];for(let e=n-3;e>=0;--e)r[e]=`(${r[e+1]} * ${s[e+1]})`;return r}(e.map(((e,t)=>t)),t);return s.map(((t,r)=>`int ${e[r]} = ${n} / ${s[r]}; ${r===s.length-1?`int ${e[r+1]} = ${n} - ${e[r]} * ${s[r]}`:`index -= ${e[r]} * ${s[r]}`};`)).join("")}(["r","c","d"],"inputShape"):OF(["r","c","d"],s)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":LF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class i_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const s=l_(t,n),r=u_(e,s,n);r in this.freeTextures||(this.freeTextures[r]=[]),r in this.usedTextures||(this.usedTextures[r]=[]);const a=o_(e,s,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[r].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[r].shift();return this.usedTextures[r].push(e),e}let i;return s===iF.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):s===iF.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):s===iF.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):s===iF.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):s===iF.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[r].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,s){if(null==this.freeTextures)return;const r=l_(n,s),a=u_(t,r,s);a in this.freeTextures||(this.freeTextures[a]=[]);const i=o_(t,r,this.gpgpu.gl,this.gpgpu.textureConfig,s),o=je().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const l=this.usedTextures[a],u=l.indexOf(e);if(u<0)throw new Error("Cannot release a texture that was never provided by this texture manager");l.splice(u,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function o_(e,t,n,s,r){const a=function(e,t){switch(e){case iF.PACKED_2X2_FLOAT32:return hD(t);case iF.PACKED_2X2_FLOAT16:return pD(t);case iF.UNPACKED_FLOAT32:return lD(t);case iF.UNPACKED_FLOAT16:return uD(t);case iF.PACKED_4X1_UNSIGNED_BYTE:return cD(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,s);let i;if(r){const[t,n]=uF(e[0],e[1]);i=t*n}else{const[t,n]=oF(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function l_(e,t){if(e===aF.UPLOAD)return iF.PACKED_2X2_FLOAT32;if(e===aF.RENDER||null==e)return function(e){return je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?iF.PACKED_2X2_FLOAT32:iF.UNPACKED_FLOAT32:e?iF.PACKED_2X2_FLOAT16:iF.UNPACKED_FLOAT16}(t);if(e===aF.DOWNLOAD||e===aF.PIXELS)return iF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function u_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class c_{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const h_="return abs(x);",p_="return x;";class d_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class f_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length);const t=e.length,n=s_("rc",t),s=XF(t),r=function(e,t){if(1===e)return"rc";let n="";for(let s=0;s<e;s++)n+=t[s],s<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${s} rc = getOutputCoords();\n        vec4 packedInput = getA(${r});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const m_=cp,g_={},y_=je().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class b_ extends K{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!je().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof dD)t=e;else{const n=sF(je().getNumber("WEBGL_VERSION"),e);t=new dD(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=sF(je().getNumber("WEBGL_VERSION"));t=new dD(e),this.binaryCache=((n=je().getNumber("WEBGL_VERSION"))in g_||(g_[n]={}),g_[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new i_(this.gpgpu),this.numMBBeforeWarning=null==je().global.screen?1024:je().global.screen.height*je().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new q(this,qo())}nextDataId(){return b_.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((je().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||je().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const s={id:this.nextDataId()};return this.texData.set(s,{shape:t,dtype:n,values:e,usage:aF.UPLOAD,refCount:1}),s}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,s,r){if(je().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===s)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:s,values:t,usage:aF.UPLOAD,refCount:r})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:s,complexTensorInfos:r,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new d_(i,p_):new c_(i,p_);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:s}],s),r=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===s)return n;const l=null!=this.activeTimers;let u,c;return l&&(u=Fr()),c="complex64"===s?Qd(this.readSync(r.real.dataId),this.readSync(r.imag.dataId)):this.getValuesFromTexture(e),l&&(this.downloadWaitMs+=Fr()-u),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:s,slice:r,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=r){let t;t=o?new d_(s,p_):new c_(s,p_);const n=this.runWebGLProgram(t,[{dataId:e,shape:s,dtype:a}],a),r=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),r}if(null!=n)return this.convertAndCacheOnCPU(e);if(je().getBool("DEBUG")&&!je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===je().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let l,u,c=null;if("complex64"!==a&&je().get("WEBGL_BUFFER_SUPPORTED")){l=this.decode(e);const t=this.texData.get(l.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...lF(s))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);u=Qd(e[0],e[1])}else if(null==c)u=this.getValuesFromTexture(e);else{const e=le(s);u=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=l&&this.disposeIntermediateTensorInfo(l),null!=c){const e=this.gpgpu.gl;hF(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,u),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&qo().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:s,shape:r,slice:a,dtype:i,isPacked:o,texture:l}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new d_(r,p_):new c_(r,p_);const s=this.runWebGLProgram(n,[{dataId:e,shape:r,dtype:i}],i),a=this.readToGPU(s,t);return this.disposeIntermediateTensorInfo(s),a}if(null==l)throw null!=s?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const u=this.decode(e,t.customTexShape),c=qo().makeTensorFromDataId(u.dataId,u.shape,u.dtype),h=this.texData.get(u.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>Or(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Si(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!pF(n)){if(je().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:s}=this.texData.get(e),r=le(t);if(je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),s=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(s.texture.texture,...lF(t)).subarray(0,r);return this.disposeIntermediateTensorInfo(n),a}const a=je().getBool("WEBGL_PACK")&&!0===s,i=a?NF(t):t,o=a?new rD(i):new sD(i),l=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),u=this.texData.get(l.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(u.texture.texture,u.texShape[0],u.texShape[1]).subarray(0,r);return this.disposeIntermediateTensorInfo(l),c}timerAvailable(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let s=!1;null==this.programTimersStack?(this.programTimersStack=n,s=!0):this.activeTimers.push(n),this.activeTimers=n,e();const r=oe(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=oe(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,s&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(r);i.kernelMs=te(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:Fr(),endMs:null}}endTimer(e){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=Fr(),e)}async getQueryTime(e){if(je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:s,usage:r,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,l=this.dataRefCount.get(o);l>1?this.dataRefCount.set(o,l-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(s,n),this.textureManager.releaseTexture(t,s,r,a)));const u=this.texData.get(e);u.texture=null,u.texShape=null,u.isPacked=!1,u.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=y_){return je().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&le(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){sr("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return m_(e.shape,t)}packedUnaryOp(e,t,n){const s=new d_(e.shape,t),r=this.compileAndRun(s,[e],n);return qo().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=WD(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(je().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,h_,e.dtype);const t=new c_(e.shape,h_),n=this.compileAndRun(t,[e]);return qo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let s;if("string"===t&&null!=n&&n.length>0&&$e(n[0])){const r=n.map((e=>_r(e)));s=this.write(r,e,t)}else s=this.write(n,e,t);return this.texData.get(s).usage=null,{dataId:s,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:s}=this.makeTensorInfo(e,t,n);return qo().makeTensorFromDataId(s,e,t,this)}unpackTensor(e){const t=new f_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new r_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[kF(e.shape),...IF(e.shape)],s={dtype:e.dtype,shape:n,dataId:e.dataId},r=[kF(t),...IF(t)],a=new a_(r,n),i=[n],o=this.runWebGLProgram(a,[s],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:s,shape:r,dtype:a}=n;null!=t&&re(le(r)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=NF(r);let o;o=s?new nD(i):new tD(i);const l=[null!=t?t:lF(i)];return{dtype:a,shape:r,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,l,!0,t).dataId}}runWebGLProgram(e,t,n,s,r=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===rF.DENSE){const t=null!=a?a:lF(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===le(i.shape))return o.values=we(i.dtype,0),i;const l=[],u=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&le(t.shape)<=je().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),l.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!TF(n.shape,t.shape)){const e=t,s=t.shape;t.shape=n.shape,t=this.packedReshape(t,s),l.push(t),n=this.texData.get(t.dataId),e.shape=s}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let s="";t.concat(n).forEach((t=>{const r=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:l}=YF(e.packedInputs,t.shape,a);let u="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];u=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=_e(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&ce(t.shape,a),f=1===le(t.shape),m=Yi(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&ce(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;s+=`${p}_${g}_${i?l:""}_${o.length}_${f}_${m}_${d}_${u}_${c}_${h}_${y}_${r}`}else{const e=t.isUniform?"uniform":t.texData.texShape;s+=`${t.shape}_${e}_${r}`}}));const r=e.userCode;let a=e.constructor.name;return a+="_"+s+"_"+r+`${je().getNumber("WEBGL_VERSION")}`,a}(e,u,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,s){const r=n.map(((e,n)=>{const s={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(s.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:s}})),a=r.map((e=>e.shapeInfo)),i={logicalShape:s.shape,texShape:s.texData.texShape,isUniform:!1,isPacked:s.texData.isPacked,flatOffset:null},o=BF(r,i,t),l=function(e,t){const n=vF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(hF(e,(()=>e.shaderSource(n,t))),hF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=fF.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const s=+n[1],r=e.split("\n"),a=r.length.toString().length+2,i=r.map(((e,t)=>me((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const l=i.slice(0,s-1),u=i.slice(s-1,s),c=i.slice(s);console.log(l.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${me(u[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),u=e.createProgram(l);let c=null;const h=e.getUniformLocation(u,"NAN",!1);1===je().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(u,"INFINITY",!1));const p=!1,d={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const s=t.variableNames[n];d[s]=e.getUniformLocation(u,s,p),d[`offset${s}`]=e.getUniformLocation(u,`offset${s}`,p),t.enableShapeUniforms&&(f[`${s}Shape`]=e.getUniformLocation(u,`${s}Shape`,p),m[`${s}TexShape`]=e.getUniformLocation(u,`${s}TexShape`,p))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(u,"outShape",p),b=e.getUniformLocation(u,"outShapeStrides",p),y=e.getUniformLocation(u,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(u,t.name,p)})),{program:t,fragmentShader:l,source:o,webGLProgram:u,uniformLocations:d,customUniformLocations:x,inShapeInfos:a,outShapeInfo:i,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,u,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),function(e,t,n,s,r){t.program.enableShapeUniforms||(QF(t.inShapeInfos,n),QF([t.outShapeInfo],[s]));const a=s.texData.texture,i=s.texData.texShape;s.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===je().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,s)=>{const r=t.program.variableNames[s],a=t.uniformLocations[r],i=t.uniformLocations[`offset${r}`],o=t.inShapesLocations[`${r}Shape`],l=t.inTexShapesLocations[`${r}TexShape`];if(o){const{uniformShape:s}=YF(t.program.packedInputs,n.shape,n.texData.texShape);switch(s.length){case 1:e.gl.uniform1iv(o,new Int32Array(s));break;case 2:e.gl.uniform2iv(o,new Int32Array(s));break;case 3:e.gl.uniform3iv(o,new Int32Array(s));break;case 4:e.gl.uniform4iv(o,new Int32Array(s))}}if(l&&e.gl.uniform2i(l,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(le(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,s)}));const o=t.outShapeLocation;if(o)switch(s.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(s.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(s.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(s.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(s.shape))}if(t.outShapeStridesLocation){const n=_e(s.shape);switch(s.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,s.texData.texShape[0],s.texData.texShape[1]),t.program.customUniforms&&r&&t.program.customUniforms.forEach(((n,s)=>{const a=t.customUniformLocations[s],i=r[s];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,p,u,c,s),l.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=je().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=Fr();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!je().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===r){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,s,r=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,s,r)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(je().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Yo((()=>{if(!je().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=je().getBool("DEBUG");je().set("DEBUG",!1);const t=this.abs(Il(1e-8)).dataSync()[0];if(je().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:s,values:r,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const l=null!=this.activeTimers;let u;l&&(u=Fr());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?Q(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=xe(e);e=t.newShape}let s=le(e);if(e.length<=1&&s<=n)return[1,s];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=kF(e);let n=2,r=2;return e.length&&([n,r]=IF(e)),s=t*(n/2)*(r/2),de(s).map((e=>2*e))}return de(s)}(n,o),t.texShape=c),null!=r){const e=NF(n);let a,i=c[1],h=c[0];const p=r instanceof Uint8Array||r instanceof Uint8ClampedArray;!o&&p||([i,h]=uF(c[0],c[1])),a=o?new iD(e,p):new aD(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,s),m=this.texData.get(f.dataId);m.usage=p?aF.PIXELS:aF.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,r);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],s,g,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,l&&(this.uploadWaitMs+=Fr()-u)}else{const e=this.acquireTexture(c,i,s,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:s}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,s)),n.values}acquireTexture(e,t,n,s){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,s)}computeBytes(e,t){return e[0]*e[1]*Te(t)}}b_.nextDataId=0,xa()&&il("webgl",(()=>new b_),2);class x_{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Ji(t,n),this.enableShapeUniforms=eD(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class w_{constructor(e,t,n,s=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Ji(t,n);const r=this.outputShape.length;this.enableShapeUniforms=eD(r);let a="";if(s)if(0===r||1===le(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${XF(r)} coords = getOutputCoords();\n        `,1===r)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=s_("coords",r);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= outShape[${r} - 2];\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= outShape[${r} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[r-2]} + 1) >= ${this.outputShape[r-2]};\n            bool nextColOutOfBounds =\n              (${e[r-1]} + 1) >= ${this.outputShape[r-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function v_(e){const{inputs:t,backend:n}=e,{x:s}=t;return n.incRef(s.dataId),{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}const k_={kernelName:hn,backendName:"webgl",kernelFunc:v_};function I_(e){const{inputs:t,backend:n}=e,{real:s,imag:r}=t,a=n.makeTensorInfo(s.shape,"complex64"),i=n.texData.get(a.dataId),o=v_({inputs:{x:s},backend:n}),l=v_({inputs:{x:r},backend:n});return i.complexTensorInfos={real:o,imag:l},a}const N_={kernelName:It,backendName:"webgl",kernelFunc:I_},S_="return (a < 0.) ? b * a : a;",T_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",C_={kernelName:yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{alpha:a}=s,i=n.makeTensorInfo([],"float32",Ar(a,"float32")),o=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_(T_,r.shape,i.shape):new x_(S_,r.shape,i.shape),l=n.runWebGLProgram(o,[r,i],"float32");return n.disposeIntermediateTensorInfo(i),l}},$_="return (a < 0.) ? b * a : a;",E_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",A_={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s,alpha:r}=t,a=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_(E_,s.shape,r.shape):new x_($_,s.shape,r.shape);return n.runWebGLProgram(a,[s,r],"float32")}};function R_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:s}){return({inputs:r,backend:a})=>{const{x:i}=r,o=a,l=s||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,l);return o.makeTensorInfo(i.shape,l,t)}let u;return u=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new d_(i.shape,t):new c_(i.shape,e),o.runWebGLProgram(u,[i],l)}}function F_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:s=!1,cpuKernelImpl:r,dtype:a}){return({inputs:i,backend:o})=>{const{a:l,b:u}=i,c=o;if(s&&"complex64"===l.dtype){const t=c.texData.get(l.dataId),n=c.texData.get(u.dataId),[s,r]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,s]=t,r={dataId:n.dataId,dtype:n.dtype,shape:l.shape},a={dataId:s.dataId,dtype:s.dtype,shape:u.shape},i=new x_(e,l.shape,u.shape);return c.runWebGLProgram(i,[r,a],sa(n.dtype,s.dtype))})),a=I_({inputs:{real:s,imag:r},backend:c});return c.disposeIntermediateTensorInfo(s),c.disposeIntermediateTensorInfo(r),a}const h=a||sa(l.dtype,u.dtype);if(("string"===l.dtype||"string"===u.dtype||c.shouldExecuteOnCPU([l,u]))&&null!=r){const e=c.texData.get(l.dataId).values,t=c.texData.get(u.dataId).values,n="string"===l.dtype?Rf(e):e,s="string"===l.dtype?Rf(t):t,[a,i]=r(l.shape,u.shape,n,s,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new w_(t,l.shape,u.shape,n):new x_(e,l.shape,u.shape),c.runWebGLProgram(p,[l,u],h)}}function D_(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?E_:$_;if("leakyrelu"===e)return t?T_:S_;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class __{constructor(e,t,n,s=!1,r=!1,a=!1,i=null,o=!1,l=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=eD(this.outputShape.length);const u=s?e[1]:e[2],c=Math.ceil(u/2),h=s?"i * 2, rc.y":"rc.y, i * 2",p=r?"rc.z, i * 2":"i * 2, rc.z",d=s?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=r?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:l?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),l&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class O_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Ji(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const M_="return a * b;";function L_(e){const{inputs:t,backend:n}=e,{a:s,b:r}=t,a=sa(s.dtype,r.dtype);if("complex64"===s.dtype){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),a=new O_("return areal * breal - aimag * bimag;",s.shape,r.shape),i=new O_("return areal * bimag + aimag * breal;",s.shape,r.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:s.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:s.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:r.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:r.shape}],l=n.runWebGLProgram(a,o,"float32"),u=n.runWebGLProgram(i,o,"float32"),c=I_({inputs:{real:l,imag:u},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(u),c}if(n.shouldExecuteOnCPU([s,r])){const e=n.texData.get(s.dataId),t=n.texData.get(r.dataId),[i,o]=_D(s.shape,r.shape,e.values,t.values,a),l=n.makeTensorInfo(o,a);return n.texData.get(l.dataId).values=i,l}let i;return i=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_(M_,s.shape,r.shape):new x_(M_,s.shape,r.shape),n.runWebGLProgram(i,[s,r],a)}const z_={kernelName:Un,backendName:"webgl",kernelFunc:L_};function P_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{shape:a}=s,i=n,o=le(r.shape),l=ye(a,o),u=le(l);re(o===u,(()=>`The new shape (${l}) has ${u} elements and the old shape (${r.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(r.dataId);return!c.isPacked||TF(r.shape,l)||null!==c.texture&&TF(c.shape,l)?(i.incRef(r.dataId),{dataId:r.dataId,shape:l,dtype:r.dtype}):function(e,t,n){const s=[kF(e.shape),...IF(e.shape)],r={dtype:e.dtype,shape:s,dataId:e.dataId},a=[kF(t),...IF(t)],i=new a_(a,s),o=[s],l=n.runWebGLProgram(i,[r],e.dtype,o,!0);return{dataId:l.dataId,shape:t,dtype:l.dtype}}(r,l,i)}const B_={kernelName:is,backendName:"webgl",kernelFunc:P_};class W_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];const i=4*Math.floor(n/4),o=n%4;let l="sumValue += dot(values, ones);";if(null!=t){const e=1/t;l=`sumValue += dot(values * ${he(e)?e.toPrecision(2):e}, ones);`}let u="";r%n>0&&(u=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${u}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${l}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${l}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}class U_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:s,inSize:r,outSize:a}=e;this.outputShape=[s,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let l=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?l="sumValue":"prod"===t?l="prodValue":"all"===t?l="allValue":"any"===t&&(l="anyValue");const u=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";r%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${u}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${u};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${l});\n      }\n    `}}function V_(e,t,n,s){const r=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],s=zd(n);t.push({inSize:n,windowSize:s,outSize:Math.ceil(n/s)})}return t}(e.shape);let a=e;for(let i=0;i<r.length;i++){const{inSize:o,windowSize:l,outSize:u}=r[i];let c,h;c="mean"===n?0===i?new W_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},o):new W_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u}):new U_({windowSize:l,inSize:o,batchSize:e.shape[0],outSize:u},n),h=a,a=s.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&s.disposeIntermediateTensorInfo(h)}return a}class G_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];this.outputShape=n,this.rank=n.length;const s=XF(this.rank),r=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],s=new Array(t);for(let t=0;t<e.length;t++)s[e[t]]=n[t];return s.join()}(t);this.userCode=`\n    void main() {\n      ${s} resRC = getOutputCoords();\n      setOutput(getA(${r}));\n    }\n    `}}class H_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[t[s]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const s=XF(this.rank),r=n_("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=r[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${r[this.rank-1]} < ${n[this.rank-1]}`,l=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${s} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${l};\n      if(${o}) {\n        result[1] = ${l};\n      }\n      --${r[this.rank-1]};\n      if(++${r[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${l};\n        if(${o}) {\n          result[3] = ${l};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function j_(e,t,n){const s=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new H_(e.shape,t):new G_(e.shape,t);return n.runWebGLProgram(s,[e],e.dtype)}function q_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s;return function(e,t,n,s){const r=t,a=e.shape.length,i=be(r,e.shape);let o=i;const l=Rc(o,a),u=null!=l;let c=e;u&&(c=j_(e,l,s),o=Dc(o.length,a)),Ac("sum",o,a);const[h,p]=$c(c.shape,o);let d=h;n&&(d=Ec(h,i));const f=le(p),m=P_({inputs:{x:c},attrs:{shape:[le(e.shape)/f,f]},backend:s}),g=V_(m,ra(e.dtype),"sum",s),y=P_({inputs:{x:g},attrs:{shape:d},backend:s});return s.disposeIntermediateTensorInfo(m),s.disposeIntermediateTensorInfo(g),u&&s.disposeIntermediateTensorInfo(c),y}(r,a,i,n)}const K_={kernelName:Ss,backendName:"webgl",kernelFunc:q_};function X_(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{perm:a}=s,i=n,o=r.shape.length,l=new Array(o);for(let e=0;e<l.length;e++)l[e]=r.shape[a[e]];let u;if(i.shouldExecuteOnCPU([r])){const e=i.texData.get(r.dataId).values,t=e_(e,r.shape,r.dtype,a,l);u=i.makeTensorInfo(l,r.dtype),i.texData.get(u.dataId).values=t}else u=j_(r,a,i);return u}const Y_={kernelName:js,backendName:"webgl",kernelFunc:X_};function Z_({a:e,b:t,transposeA:n,transposeB:s,backend:r,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:l=null}){const u=e.shape.length,c=t.shape.length,h=n?e.shape[u-2]:e.shape[u-1],p=s?t.shape[c-1]:t.shape[c-2],d=n?e.shape[u-1]:e.shape[u-2],f=s?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=le(m),b=le(g),x=Ji(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);re(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${s} must match.`));const w=n?[y,h,d]:[y,d,h],v=s?[b,f,p]:[b,p,f],k=P_({inputs:{x:e},backend:r,attrs:{shape:w}}),I=P_({inputs:{x:t},backend:r,attrs:{shape:v}}),N=[k,I],S=Math.max(y,b),T=n?k.shape[1]:k.shape[2],C=null!=a,$=null!=i,E="leakyrelu"===l,A=null!=l?D_(l,!0):null;let R;if((1===d||1===f)&&T>1e3&&!1===(C||$||E||null!=A)){let e=k,t=I;n&&(e=X_({inputs:{x:k},backend:r,attrs:{perm:[0,2,1]}}),N.push(e)),s&&(t=X_({inputs:{x:I},backend:r,attrs:{perm:[0,2,1]}}),N.push(t));const a=1===f;let i=e;1!==f&&(i=P_({inputs:{x:e},backend:r,attrs:{shape:[S,T,1]}}),N.push(i));const o=1===f?2:1;let l=t;a&&(l=P_({inputs:{x:t},backend:r,attrs:{shape:[S,1,T]}}),N.push(l));const u=L_({inputs:{a:i,b:l},backend:r});R=q_({inputs:{x:u},backend:r,attrs:{axis:o,keepDims:!0}}),N.push(u)}else{const l=sa(e.dtype,t.dtype),u=new __(w,v,[S,d,f],n,s,C,A,$,E),c=[k,I];if(null!=a&&c.push(a),$&&c.push(i),E){const e=r.makeTensorInfo([],"float32",Ar(o,"float32"));c.push(e),N.push(e)}R=r.runWebGLProgram(u,c,l)}const F=P_({inputs:{x:R},backend:r,attrs:{shape:x}});N.push(R);for(const e of N)r.disposeIntermediateTensorInfo(e);return F}const J_={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:l,transposeB:u,activation:c,leakyreluAlpha:h}=s;return Z_({a:r,b:a,transposeA:l,transposeB:u,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Q_="return abs(x);",eO={kernelName:Ze,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])&&"complex64"!==s.dtype){const e=n.texData.get(s.dataId),t=WD(e.values);return n.makeTensorInfo(s.shape,s.dtype,t)}let r;return r=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new d_(s.shape,Q_):new c_(s.shape,Q_),n.runWebGLProgram(r,[s],s.dtype)}},tO=R_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),nO={kernelName:Je,backendName:"webgl",kernelFunc:tO},sO=R_({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),rO={kernelName:Qe,backendName:"webgl",kernelFunc:sO},aO="return a + b;",iO=F_({opSnippet:aO,packedOpSnippet:aO,supportsComplex:!0,cpuKernelImpl:fD}),oO={kernelName:et,backendName:"webgl",kernelFunc:iO};class lO{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${s};\n        setOutput(result);\n      }\n    `}}class uO{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const s=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${s};\n        setOutput(result);\n      }\n    `}}const cO={kernelName:tt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,r=n;if(1===r.length)return v_({inputs:{x:r[0]},backend:s});if(r.length>je().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(r.length/2),n=e({inputs:r.slice(0,t),backend:s}),a=e({inputs:r.slice(t),backend:s});return e({inputs:[n,a],backend:s})}const a=r.map((e=>e.dtype)).reduce(((e,t)=>sa(e,t))),i=r.map((e=>e.shape)),o=je().getBool("WEBGL_PACK")?new uO(r[0].shape,i):new lO(r[0].shape,i);return s.runWebGLProgram(o,r,a)}},hO={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=be(a,r.shape);let u=l;const c=Rc(u,o);let h=r;null!=c&&(h=X_({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Dc(u.length,o)),Ac("all",u,o);const[p,d]=$c(h.shape,u),f=P_({inputs:{x:h},backend:n,attrs:{shape:[-1,le(d)]}}),m=V_(f,f.dtype,"all",n);let g;return g=P_(i?{inputs:{x:m},backend:n,attrs:{shape:Ec(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},pO={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=be(a,r.shape);let u=l;const c=Rc(u,o);let h=r;null!=c&&(h=X_({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Dc(u.length,o)),Ac("any",u,o);const[p,d]=$c(h.shape,u),f=P_({inputs:{x:h},backend:n,attrs:{shape:[-1,le(d)]}}),m=V_(f,f.dtype,"any",n);let g;return g=P_(i?{inputs:{x:m},backend:n,attrs:{shape:Ec(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class dO{constructor(e,t,n){this.variableNames=["A"];const{windowSize:s,batchSize:r,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[r,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${s};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${s}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class fO{constructor(e,t,n,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,re(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const r=e[e.length-1],a=Math.ceil(r/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),s||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,l=XF(o),u=s_("coords",o);let c,h;if(1===a){h=o+1;const e=XF(h);c=`\n        ${e} sourceLocR = ${e}(${u.join()}, 0);\n        ++${u[o-1]};\n        ${e} sourceLocG = ${e}(${u.join()}, 0);\n        ++${u[o-2]};\n        ${e} sourceLocA = ${e}(${u.join()}, 0);\n        --${u[o-1]};\n        ${e} sourceLocB = ${e}(${u.join()}, 0);\n        --${u[o-2]};`}else h=o,c=`\n        ${l} sourceLocR = coords;\n        ++${u[o-1]};\n        ${l} sourceLocG = coords;\n        ++${u[o-2]};\n        ${l} sourceLocA = coords;\n        --${u[o-1]};\n        ${l} sourceLocB = coords;\n        --${u[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=s_("sourceLocR",h-1).concat("inIdx.r"),g=s_("sourceLocG",h-1).concat("inIdx.g"),y=s_("sourceLocB",h-1).concat("inIdx.b"),b=s_("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=s?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=s?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${l} coords = getOutputCoords();\n        bool hasNextCol = ${u[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${u[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function mO(e,t,n,s=null){let r=t.shape[0],a=t.shape[1];null!=s&&(r=s.shape[0],a=s.shape[1]);const i=zd(a),o={windowSize:i,inSize:a,batchSize:r,outSize:Math.ceil(a/i)},l=new dO(o,n,null==s),u=[t];null!=s&&u.push(s);const c=e.runWebGLProgram(l,u,"int32");if(1===c.shape[1])return c;const h=mO(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function gO(e,t,n,s=null){const r=null!=s?s.shape:t.shape,a=zd(r[r.length-1]),i=new fO(r,a,n,null==s),o=null==s?[t]:[t,s],l=e.runWebGLProgram(i,o,"int32");if(l.shape.length===t.shape.length){const s=gO(e,t,n,l);return e.disposeIntermediateTensorInfo(l),s}return l}function yO(e,t,n,s){const r=[n];if(Ac("arg"+s.charAt(0).toUpperCase()+s.slice(1),r,t.shape.length),!je().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,l]=$c(i.shape,r),u=le(l),c=P_({inputs:{x:i},backend:e,attrs:{shape:[-1,u]}});n.push(c);const h=mO(e,c,s);n.push(h);const p=P_({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return gO(e,t,s)}const bO={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=be(a,r.shape);const o=Rc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=X_({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Dc(i.length,l.shape.length)),Ac("argMax",[i[0]],l.shape.length);const c=yO(n,l,i[0],"max");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},xO={kernelName:at,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a}=s;let i=be(a,r.shape);const o=Rc(i,r.shape.length);let l=r;const u=[];null!=o&&(l=X_({inputs:{x:r},backend:n,attrs:{perm:o}}),u.push(l),i=Dc(i.length,l.shape.length)),Ac("argMin",[i[0]],l.shape.length);const c=yO(n,l,i[0],"min");return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},wO=R_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),vO={kernelName:it,backendName:"webgl",kernelFunc:wO},kO=R_({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),IO={kernelName:ot,backendName:"webgl",kernelFunc:kO},NO=R_({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),SO={kernelName:lt,backendName:"webgl",kernelFunc:NO},TO=F_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),CO={kernelName:ct,backendName:"webgl",kernelFunc:TO},$O=R_({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),EO={kernelName:ut,backendName:"webgl",kernelFunc:$O};class AO{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${l}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${u}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${s?r?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${l}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${u};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              getValue(batch, xR, xC + 3 * ${u}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${u}, d),\n              getValue(batch, xR, xC + 2 * ${u}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class RO{constructor(e,t,n,s=!1,r=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,l=e.strideWidth,u=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${l});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${u}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${s?r?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,I=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${l});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${u}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${I}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${I}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${I}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const FO={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;FF(r,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;re(ou(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Zl(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))return v_({inputs:{x:r},backend:n});const c=new AO(u,"avg",!1);return n.runWebGLProgram(c,[r],"float32")}},DO={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:l,dataFormat:u}=s,c=Jl(r.shape,a,i,[1,1,1],o,l,u),h=new RO(c,"avg",!1);return n.runWebGLProgram(h,[r],"float32")}};class _O{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,l=e.effectiveFilterWidth,u=o-1-e.padInfo.top,c=l-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${u}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${l};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class OO{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*s);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${r}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${l}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${u}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const MO={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Jl(i.shape,o,l,[1,1,1],u,c),p=new OO(h);return n.runWebGLProgram(p,[r],i.dtype)}},LO={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a;FF([r,a],"avgPoolGrad");const{filterSize:o,strides:l,pad:u}=s,c=Zl(i.shape,o,l,1,u),h=new _O(c);return n.runWebGLProgram(h,[r],i.dtype)}},zO={kernelName:mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{a:r,b:a}=t,{transposeA:i,transposeB:o}=s;return Z_({a:r,b:a,transposeA:i,transposeB:o,backend:n})}};class PO{constructor(e,t,n,s,r,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Ji(e,t),Ji(e,n);let i="0.0";null!=s&&(Ji(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=r&&(Ji(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class BO{constructor(e,t,n,s,r,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Ji(e,t),Ji(e,n);let i="vec4(0.0)";null!=s&&(Ji(e,s),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=r&&(Ji(e,r),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const WO={kernelName:an,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s,mean:r,variance:a,offset:i,scale:o}=e;re(r.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==i||r.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==o||r.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:l}=n;null==l&&(l=.001);const u=[s,r,a];let c=null;null!=i&&(c=i.shape,u.push(i));let h=null;null!=o&&(h=o.shape,u.push(o));const p=je().getBool("WEBGL_PACK_NORMALIZATION")?new BO(s.shape,r.shape,a.shape,c,h,l):new PO(s.shape,r.shape,a.shape,c,h,l);return t.runWebGLProgram(p,u,u[0].dtype)}};class UO{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=XF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return VO.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let s;s=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${VO[t]} = start[${t}] + coords.${VO[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${s}\n        setOutput(getSource(${n}));\n      }\n    `}}const VO=["x","y","z","w","u","v"];class GO{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=XF(this.rank),n=s_("coords",this.rank),s=s_("sourceLoc",this.rank),r=1===this.rank?"sourceLoc":`vec2(${s.slice(-2).join()})`,a=`getChannel(getSource(${s.join()}), ${r})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${s[this.rank-1]};\n        result.y = ${a};\n        --${s[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${s[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${s[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,l=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${s[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${l}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function HO(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,size:i}=s,[o,l]=No(r,a,i);if(uo(r,o,l),0===le(l))return n.makeTensorInfo(l,r.dtype,[]);if(n.shouldExecuteOnCPU([r])||"string"===r.dtype){const e=n.texData.get(r.dataId),t=UD(e.values,o,l,r.shape,r.dtype);return n.makeTensorInfo(l,r.dtype,t)}const{isPacked:u}=n.texData.get(r.dataId),c=ko(r.shape,o,l);if(u||!c){const e=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GO(l):new UO(l),t=[o];return n.runWebGLProgram(e,[r],r.dtype,t)}return n.uploadToGPU(r.dataId),function(e,t,n,s){const r=s.texData.get(e.dataId),a=s.makeTensorInfo(n,e.dtype),i=s.texData.get(a.dataId);Object.assign(i,r),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=Io(t,_e(e.shape));r.slice&&(o+=r.slice.flatOffset),i.slice={flatOffset:o,origDataId:r.slice&&r.slice.origDataId||e.dataId};const l=s.dataRefCount.get(i.slice.origDataId)||1;return s.dataRefCount.set(i.slice.origDataId,l+1),a}(r,o,l,n)}const jO={kernelName:bs,backendName:"webgl",kernelFunc:HO},qO={kernelName:gt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,crops:i}=s;re(r.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=Bd(r.shape,a,o),u=Wd(l.length,a.length),c=Ud(r.shape,a,o),h=Vd(i,a.length),p=Gd(c,i,a.length),d=[],f=P_({inputs:{x:r},backend:n,attrs:{shape:l}}),m=X_({inputs:{x:f},backend:n,attrs:{perm:u}}),g=P_({inputs:{x:m},backend:n,attrs:{shape:c}}),y=HO({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},KO={kernelName:yt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i}=s,o=n.readSync(r.dataId),l=n.readSync(a.dataId),u=mD(o,l,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,u)}},XO={kernelName:xt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:s,s1:r}=t,a=n.readSync(s.dataId),i=n.readSync(r.dataId),o=Ji(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},YO=F_({opSnippet:"return float(a != b);",cpuKernelImpl:MD,dtype:"bool"}),ZO={kernelName:Gn,backendName:"webgl",kernelFunc:YO};function JO(e){const{inputs:t,backend:n}=e,{input:s}=t;return v_({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.real},backend:n})}const QO={kernelName:ss,backendName:"webgl",kernelFunc:JO},eM={kernelName:wt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s,attrs:r}=t,{x:a}=n,{dtype:i}=r;if("complex64"===i){if("complex64"===a.dtype)return v_({inputs:{x:a},backend:s});const t=Vc(a.shape),n=e({inputs:{x:a},backend:s,attrs:{dtype:"float32"}}),r=I_({inputs:{real:n,imag:t},backend:s});return t.dispose(),s.disposeIntermediateTensorInfo(n),r}if("complex64"===a.dtype){const t=JO({inputs:{input:a},backend:s}),n=e({inputs:{x:t},backend:s,attrs:{dtype:i}});return s.disposeIntermediateTensorInfo(t),n}if(!Ne(a.dtype,i)){const e=v_({inputs:{x:a},backend:s});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new c_(e.shape,"return float(int(x));"),s=t.runWebGLProgram(n,[e],"int32");return{dataId:s.dataId,shape:s.shape,dtype:s.dtype}}(a,s);if("bool"===i){const e=s.makeTensorInfo([],"bool",we("bool",1)),t=YO({inputs:{a,b:e},backend:s});return s.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},tM="return ceil(x);",nM=R_({opSnippet:tM,packedOpSnippet:tM,cpuKernelImpl:yD}),sM={kernelName:vt,backendName:"webgl",kernelFunc:nM};class rM{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class aM{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const iM={kernelName:kt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{clipValueMin:a,clipValueMax:i}=s;let o;o=je().getBool("WEBGL_PACK_CLIP")?new aM(r.shape):new rM(r.shape);const l=[[a],[i]];return n.runWebGLProgram(o,[r],r.dtype,l)}};class oM{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function lM(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const uM={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=n.texData.get(s.dataId),a=new oM(s.shape),i=[lM(s,r.complexTensorInfos.real),lM(s,r.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class cM{constructor(e){this.outputShape=[],this.outputShape=Md(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const s=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${s}));`)}const s=t.length,r=t[t.length-1];n.push(`else setOutput(getT${s}(yR, yC-${r}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class hM{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Md(e,t);const n=this.outputShape,s=n.length,r=XF(s),a=s_("coords",s),i=["x","y","z","w","u","v"].slice(0,s);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const l=i[t],u=i.slice(-2),c=i.join();let h=`if (${l} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${u.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${l} < ${o[e]}  && ${l} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${pM(i,l,t)}),\n            vec2(${pM(u,l,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${pM(i,l,d)}),\n          vec2(${pM(u,l,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${r} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[s-1]} = ${a[s-1]} + 1;\n        if (${a[s-1]} < ${n[s-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[s-2]} = ${a[s-2]} + 1;\n        if (${a[s-2]} < ${n[s-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[s-1]} = ${a[s-1]} - 1;\n        if (${a[s-2]} < ${n[s-2]} &&\n            ${a[s-1]} < ${n[s-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function pM(e,t,n){const s=e.indexOf(t);return e.map(((e,t)=>t===s?`${e} - ${n}`:e)).join()}function dM(e){const{inputs:t,backend:n}=e,{input:s}=t;return v_({inputs:{x:n.texData.get(s.dataId).complexTensorInfos.imag},backend:n})}const fM={kernelName:dn,backendName:"webgl",kernelFunc:dM};function mM(e,t,n){const s=e[0].dtype;if("complex64"===s){const s=e.map((e=>JO({inputs:{input:e},backend:n}))),r=e.map((e=>dM({inputs:{input:e},backend:n}))),a=mM(s,t,n),i=mM(r,t,n),o=I_({inputs:{real:a,imag:i},backend:n});return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),r.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let r=n.shouldExecuteOnCPU(e);if("string"===s&&(r=!0),r){const r=e.map((e=>{const s=le(e.shape.slice(t));return P_({inputs:{x:e},backend:n,attrs:{shape:[-1,s]}})})),a=r.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Md(r.map((e=>e.shape)),1),o=1===r[0].shape[0],l=bD(a,i,s,o),u=Md(e.map((e=>e.shape)),t),c=n.makeTensorInfo(u,s,l);return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>je().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const s=Math.floor(e.length/2),r=mM(e.slice(0,s),t,n),a=mM(e.slice(s),t,n),i=mM([r,a],t,n);return n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}if(je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const r=new hM(e.map((e=>e.shape)),t);return n.runWebGLProgram(r,e,s)}const{tensors2D:a,outShape:i}=function(e,t,n){const s=Md(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>P_({inputs:{x:e},attrs:{shape:[-1,le(e.shape.slice(t))]},backend:n}))),outShape:s}}(e,t,n),o=new cM(a.map((e=>e.shape))),l=n.runWebGLProgram(o,a,s);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const u=P_({inputs:{x:l},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(l),u}function gM(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s,a=be(r,t[0].shape)[0],i=Md(t.map((e=>e.shape)),a);if(0===le(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>le(e.shape)>0));return 1===o.length?v_({inputs:{x:o[0]},backend:n}):(Od(o.map((e=>e.shape)),a),mM(o,a,n))}const yM={kernelName:St,backendName:"webgl",kernelFunc:gM};class bM{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,l=e.strideWidth,u=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${l});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${u};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class xM{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,s=e.padInfo.left,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,l=e.dilationHeight,u=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${r}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${s});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${l};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${u};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wM{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=eD(this.outputShape.length);const{dataFormat:n}=t,s=_F(),r="channelsLast"===n,a=r?0:1,i=r?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let l="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)l+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${r}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${l}\n\n        ${s.output} = result;\n      }\n    `}}function vM({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const l=e.shape,u=s.texData.get(e.dataId),c=n.inChannels,h=l[0]*l[1]*l[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==p||!(c>1e3))&&u.isPacked&&d&&null!=u.texture&&l[2]%2!=0&&ce(u.shape.slice(-3),l.slice(-3))){const c=l[0]*l[1]*(l[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=u.shape;u.shape=u.shape.slice(),u.shape[u.shape.length-2]++,re(TF(u.shape,h.shape),(()=>`packed reshape ${u.shape} to ${h.shape} isn't free`));const d=P_({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=Z_({a:h,b:d,backend:s,transposeA:!1,transposeB:!1,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=s.texData.get(g.dataId);re(y.isPacked,(()=>"batchMatMul result is expected to be packed")),u.shape=p,y.shape=n.outShape,f=v_({inputs:{x:g},backend:s}),f.shape=n.outShape,m.push(g)}else{const u=P_({inputs:{x:e},backend:s,attrs:{shape:[1,d?l[0]*l[1]*l[2]:l[0]*l[2]*l[3],n.inChannels]}}),c=P_({inputs:{x:t},backend:s,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Z_({a:u,b:c,transposeA:!1,transposeB:!1,backend:s,bias:r,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=P_({inputs:{x:h},backend:s,attrs:{shape:n.outShape}}),m.push(u),m.push(c),m.push(h)}for(const e of m)s.disposeIntermediateTensorInfo(e);return f}function kM({x:e,filter:t,convInfo:n,backend:s,bias:r=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:l,filterHeight:u,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=l*u*c,g=p*h,y=[m,g],b=[],x=P_({inputs:{x:e},backend:s,attrs:{shape:e.shape.slice(1)}}),w=P_({inputs:{x:t},backend:s,attrs:{shape:[1,m,le(t.shape)/m]}});b.push(x),b.push(w);const v=new wM(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],I=s.runWebGLProgram(v,[x],"float32",k),N=P_({inputs:{x:I},backend:s,attrs:{shape:[1,y[0],y[1]]}});b.push(I),b.push(N);const S=null!=r,T=null!=a,C="leakyrelu"===o,$=o?D_(o,!0):null,E=new __(N.shape,w.shape,[1,g,n.outChannels],!0,!1,S,$,T,C),A=[N,w];if(r&&A.push(r),T&&A.push(a),C){const e=s.makeTensorInfo([],"float32",Ar(i,"float32"));A.push(e),b.push(e)}const R=s.runWebGLProgram(E,A,"float32"),F=P_({inputs:{x:R},backend:s,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push(R);for(const e of b)s.disposeIntermediateTensorInfo(e);return F}const IM={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dataFormat:l,dilations:u,dimRoundingMode:c}=s,h=lu(l),p=Ql(r.shape,a.shape,i,u,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])d=kM({x:r,filter:a,convInfo:p,backend:n});else{const e=new bM(p);d=n.runWebGLProgram(e,[r,a],"float32")}else d=vM({x:r,filter:a,convInfo:p,backend:n});const f=P_({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class NM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class SM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,l=a?1:2,u=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${l}], coords[${u}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class TM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${r};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${s} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,s=e.filterWidth,r=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,l=n-1-e.padInfo.top,u=s-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${l}, ${u});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${r}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${s}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${s} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const $M={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,dataFormat:l,dimRoundingMode:u,filterShape:c}=s,h=lu(l),p=Ql(r.shape,c,i,1,o,u,!1,h),d=new NM(p);return n.runWebGLProgram(d,[r,a],"float32")}},EM={kernelName:$t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{inputShape:i,strides:o,pad:l,dataFormat:u,dimRoundingMode:c}=s,h=lu(u),p=Ql(i,a.shape,o,1,l,c,!1,h),d=new SM(p);return n.runWebGLProgram(d,[r,a],"float32")}},AM={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=eu(r.shape,a.shape,i,l,o),c=new xM(u);return n.runWebGLProgram(c,[r,a],"float32")}},RM={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,pad:o,filterShape:l}=s,u=eu(r.shape,l,i,1,o),c=new TM(u);return n.runWebGLProgram(c,[r,a],"float32")}},FM={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{pad:i,strides:o,inputShape:l}=s,u=eu(l,a.shape,o,1,i),c=new CM(u);return n.runWebGLProgram(c,[r,a],"float32")}},DM=R_({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),_M={kernelName:Ft,backendName:"webgl",kernelFunc:DM},OM=R_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),MM={kernelName:Dt,backendName:"webgl",kernelFunc:OM};class LM{constructor(e,t,n,s,r){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,l]=e,[u]=t,[c,h]=n;this.outputShape=[u,c,h,l];const p="bilinear"===s?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${r}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${r}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const zM={kernelName:Ot,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{image:r,boxes:a,boxInd:i}=t,{cropSize:o,method:l,extrapolationValue:u}=s,c=new LM(r.shape,a.shape,o,l,u);return n.runWebGLProgram(c,[r,a,i],"float32")}};class PM{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const s=e.length,r=t?"0.0":`getX(${BM(s,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${XF(s)} coords = getOutputCoords();\n        int end = ${WM(s,"coords")};\n        float val = ${r};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${WM(s,"coords")} = idx;\n          val += getX(${BM(s,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function BM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function WM(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const UM={kernelName:_t,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,exclusive:i,reverse:o}=s,l=r.shape.length,u=Rc([a],l);let c=r;null!=u&&(c=X_({inputs:{x:r},backend:n,attrs:{perm:u}}));const h=Dc(1,l)[0];if(h!==l-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${r.shape.length-1} but got axis=${a}`);const p=c.shape[h];let d=v_({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new PM(c.shape,!1,o),s=[[e]],r=d;d=n.runWebGLProgram(t,[d],d.dtype,s),n.disposeIntermediateTensorInfo(r)}if(i){const e=new PM(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=u){const e=X_({inputs:{x:d},backend:n,attrs:{perm:Fc(u)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},VM={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,weights:a}=t,{size:i,binaryOutput:o}=s;if(1===r.shape.length){const e=n.readSync(r.dataId),t=n.readSync(a.dataId),s=mD(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,s)}if(2===r.shape.length){const e=n.bufferSync(r),t=n.bufferSync(a),s=gD(e,t,i,o);return n.makeTensorInfo(s.shape,a.dtype,s.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${r.shape.length}.`)}};class GM{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const HM={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockSize:a,dataFormat:i}=s,o=r.shape[0],l=("NHWC"===i?r.shape[1]:r.shape[2])*a,u=("NHWC"===i?r.shape[2]:r.shape[3])*a,c=("NHWC"===i?r.shape[3]:r.shape[1])/(a*a),h=new GM("NHWC"===i?[o,l,u,c]:[o,c,l,u],a,i);return n.runWebGLProgram(h,[r],r.dtype)}};class jM{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=eD(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let l="",u="";n&&(l=s?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,u="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${l}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${u}\n        setOutput(result);\n      }\n    `}}class qM{constructor(e,t=!1,n=null,s=!1,r=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=eD(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,l=e.dilationWidth,u=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${u}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*l};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===l&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?Q(l):l;l%2==0&&i%2==1||l%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,l>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=s?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:r?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),s&&this.variableNames.push("preluActivationWeights"),r&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const KM={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l,dimRoundingMode:u}=s;let c=l;null==c&&(c=[1,1]),re(ou(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Ql(r.shape,a.shape,i,c,o,u,!0);let p;p=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new qM(h):new jM(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[r,a],"float32",d)}};class XM{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,s=e.padInfo.top,r=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${s};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${r};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YM{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,s=e.strideHeight,r=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${s}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${r}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ZM={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,dy:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,filterShape:c}=s,h=Ql(r.shape,c,i,o,l,u,!0),p=new XM(h);return n.runWebGLProgram(p,[r,a],"float32")}},JM={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,filter:a}=t,{strides:i,dilations:o,pad:l,dimRoundingMode:u,inputShape:c}=s,h=Ql(c,a.shape,i,o,l,u,!0),p=new YM(h);return n.runWebGLProgram(p,[r,a],"float32")}};class QM{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const eL={kernelName:Wt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t,r=[...s.shape,...s.shape],a=le(s.shape),i=P_({inputs:{x:s},backend:n,attrs:{shape:[a]}}),o=new QM(a),l=n.runWebGLProgram(o,[i],i.dtype),u=P_({inputs:{x:l},backend:n,attrs:{shape:r}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(l),u}};class tL{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:s,strideHeight:r,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:l,dilationWidth:u}=e,{top:c,left:h}=s;this.userCode=`\n      const ivec2 strides = ivec2(${r}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${l};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${u};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const nL={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a}=t,{strides:i,pad:o,dilations:l}=s,u=Yl(r.shape,a.shape,i,o,"NHWC",l);let c;const h=new tL(u);c=n.runWebGLProgram(h,[r,a],"float32");const p=P_({inputs:{x:c},backend:n,attrs:{shape:u.outShape}});return n.disposeIntermediateTensorInfo(c),p}},sL={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{equation:r}=s,a=t,{allDims:i,summedDims:o,idDims:l}=uf(r,a.length);hf(i.length,l,a);const{path:u,steps:c}=pf(o,l),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:s}=cf(d,l[t]);let r;df(e)?r=a[t]:(r=X_({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(r));const i=r.shape.slice();for(let e=0;e<s.length;++e)i.splice(s[e],0,1);ce(r.shape,i)||(r=P_({inputs:{x:r},backend:n,attrs:{shape:i}}),f.push(r)),null===p?p=r:(p=L_({inputs:{a:r,b:p},backend:n}),f.push(p))}e<h-1&&(u[e]>=0&&(p=q_({inputs:{x:p},backend:n,attrs:{axis:u[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},rL=R_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),aL={kernelName:qt,backendName:"webgl",kernelFunc:rL},iL={kernelName:Kt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:s,y:r}=t,a=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",s.shape,r.shape):new x_("return (b >= 1.0) ? a : a * (b + 1.0);",s.shape,r.shape);return n.runWebGLProgram(a,[s,r],s.dtype)}},oL=F_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:xD}),lL={kernelName:Yt,backendName:"webgl",kernelFunc:oL},uL=R_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${qd};\n  float a1 = ${Kd};\n  float a2 = ${Xd};\n  float a3 = ${Yd};\n  float a4 = ${Zd};\n  float a5 = ${Jd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),cL={kernelName:Xt,backendName:"webgl",kernelFunc:uL},hL=R_({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:wD,dtype:"float32"}),pL={kernelName:Zt,backendName:"webgl",kernelFunc:hL};function dL(e){const{inputs:t,attrs:n,backend:s}=e,{dim:r}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let l=r;return r<0&&(re(-(i+1)<=r,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),l=i+r+1),o.splice(l,0,1),P_({inputs:{x:a},backend:s,attrs:{shape:o}})}const fL={kernelName:Jt,backendName:"webgl",kernelFunc:dL},mL="return exp(x) - 1.0;",gL=R_({opSnippet:mL,packedOpSnippet:mL,cpuKernelImpl:vD}),yL={kernelName:Qt,backendName:"webgl",kernelFunc:gL};class bL{constructor(e,t,n){this.variableNames=["real","imag"];const s=t[1];this.outputShape=t;const r=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${s}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${r};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${s});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${s}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function xL(e,t,n){const s=n.texData.get(e.dataId),r=le(e.shape),a=e.shape[e.shape.length-1],i=P_({inputs:{x:e},backend:n,attrs:{shape:[r/a,a]}}),o=i.shape,l=new bL("real",o,t),u=new bL("imag",o,t),c=[{dataId:s.complexTensorInfos.real.dataId,dtype:s.complexTensorInfos.real.dtype,shape:o},{dataId:s.complexTensorInfos.imag.dataId,dtype:s.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(l,c,"float32"),p=n.runWebGLProgram(u,c,"float32"),d=I_({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=P_({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const wL={kernelName:en,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return xL(s,!1,n)}};class vL{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function kL(e){const{backend:t,attrs:n}=e,{shape:s,value:r}=n;let{dtype:a}=n;if(a=a||Re(r),"string"===a){const e=ve(a,le(s));return e.fill(r),t.makeTensorInfo(s,a,e)}{const e=new vL(s,r),n=[[r]];return t.runWebGLProgram(e,[],a,n)}}const IL={kernelName:tn,backendName:"webgl",kernelFunc:kL};class NL{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const SL={kernelName:nn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,s=t,r=new NL(n.shape);return s.runWebGLProgram(r,[n],n.dtype)}},TL="return floor(x);",CL=R_({opSnippet:TL,packedOpSnippet:TL,cpuKernelImpl:kD}),$L={kernelName:sn,backendName:"webgl",kernelFunc:CL},EL=F_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),AL={kernelName:rn,backendName:"webgl",kernelFunc:EL};class RL{constructor(e){this.variableNames=["A"];const t=_F(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${s}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class FL{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=_F(),[n,s]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${s}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const DL={kernelName:Js,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e;let{pixels:r}=t;const{numChannels:a}=s,i="undefined"!=typeof HTMLVideoElement&&r instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&r instanceof HTMLImageElement,[l,u]=i?[r.videoWidth,r.videoHeight]:[r.width,r.height],c=[u,l],h=[u,l,a];(o||i)&&(null==_L&&(_L=document.createElement("canvas").getContext("2d")),_L.canvas.width=l,_L.canvas.height=u,_L.drawImage(r,0,0,l,u),r=_L.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=aF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),r);const d=je().getBool("WEBGL_PACK")?new FL(h):new RL(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let _L;const OL={kernelName:tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=s,m=lu(c),g=Ql(r.shape,a.shape,l,h,u,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===r.shape[0])y=kM({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,s="leakyrelu"===d,l=d?D_(d,!1):null,u=new bM(g,e,l,t,s),c=[r,a];if(i&&c.push(i),o&&c.push(o),s){const e=n.makeTensorInfo([],"float32",Ar(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(u,c,"float32")}else y=vM({x:r,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=P_({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},ML={kernelName:nr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,filter:a,bias:i,preluActivationWeights:o}=t,{strides:l,pad:u,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=s,f=[];let m=c;null==m&&(m=[1,1]),re(ou(l,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${l} and dilations '${m}'`));const g=Ql(r.shape,a.shape,l,m,u,h,!0),y=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?D_(p,y):null,x=[r,a],w=null!=i,v=null!=o,k="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Ar(d,"float32"));x.push(e),f.push(e)}let I;I=y?new qM(g,w,b,v,k):new jM(g,w,b,v,k);const N=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],S=n.runWebGLProgram(I,x,"float32",N);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),S}};class LL{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const s=XF(t.length),r=XF(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${s} strides = ${s}(${this.strides});\n         void main() {\n          ${r} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const zL={kernelName:ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:s,indices:r}=t,a=r.shape,i=a[a.length-1],o=le(s.shape),[l,u,c,h]=ao(s,r),p=P_({inputs:{x:r},backend:n,attrs:{shape:[u,i]}}),d=P_({inputs:{x:s},backend:n,attrs:{shape:[le(s.shape)/c,c]}});if(n.shouldExecuteOnCPU([s,r])||"string"===s.dtype){const e=n.readSync(r.dataId),t=n.bufferSync(s),a=ID(e,t,s.dtype,u,i,c,h,s.shape,o);return n.makeTensorInfo(l,s.dtype,a.values)}const f=new LL(i,h,[u,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=P_({inputs:{x:m},backend:n,attrs:{shape:l}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class PL{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=XF(this.rank),s=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],s=[];for(let t=0;t<e.length;t++)2===t?s.push("index"):s.push(`${n[t]}`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${s}));\n      }\n    `}}function BL(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,indices:a}=t,{axis:i,batchDims:o}=s,l=be(i,r.shape)[0];if(je().get("DEBUG")){const e=n.readSync(a.dataId),t=r.shape[l];for(let n=0;n<e.length;++n){const s=e[n];re(s<=t-1&&s>=0,(()=>`GatherV2: the index value ${s} is not in [0, ${t-1}]`))}}const u=Af(r,a,l,o),c=le(a.shape),h=[],p=P_({inputs:{x:r},backend:n,attrs:{shape:[u.batchSize,u.outerSize,u.dimSize,u.sliceSize]}}),d=P_({inputs:{x:a},backend:n,attrs:{shape:[u.batchSize,c/u.batchSize]}});h.push(p),h.push(d);const f=[u.batchSize,u.outerSize,c/u.batchSize,u.sliceSize];if(n.shouldExecuteOnCPU([r,a])||"string"===r.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),s=ND(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(u.outputShape,s.dtype,s.values)}const m=new PL(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=P_({inputs:{x:g},backend:n,attrs:{shape:u.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const WL={kernelName:on,backendName:"webgl",kernelFunc:BL},UL=F_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:SD,dtype:"bool"}),VL={kernelName:un,backendName:"webgl",kernelFunc:UL},GL=F_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:TD}),HL={kernelName:cn,backendName:"webgl",kernelFunc:GL},jL={kernelName:pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:s}=t;return xL(s,!0,n)}},qL=R_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),KL={kernelName:fn,backendName:"webgl",kernelFunc:qL},XL=R_({opSnippet:"return float(isinf(x));",dtype:"bool"}),YL={kernelName:mn,backendName:"webgl",kernelFunc:XL},ZL=R_({opSnippet:"return float(isnan(x));",dtype:"bool"}),JL={kernelName:gn,backendName:"webgl",kernelFunc:ZL},QL=F_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:CD,dtype:"bool"}),ez={kernelName:bn,backendName:"webgl",kernelFunc:QL},tz=F_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:$D,dtype:"bool"}),nz={kernelName:xn,backendName:"webgl",kernelFunc:tz},sz={kernelName:wn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:s,stop:r,num:a}=n,i=ED(s,r,a);return t.makeTensorInfo([i.length],"float32",i)}},rz=R_({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:AD}),az={kernelName:vn,backendName:"webgl",kernelFunc:rz},iz=R_({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),oz={kernelName:kn,backendName:"webgl",kernelFunc:iz},lz=F_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),uz={kernelName:In,backendName:"webgl",kernelFunc:lz},cz=R_({opSnippet:"return float(!(x >= 1.0));"}),hz={kernelName:Nn,backendName:"webgl",kernelFunc:cz},pz=F_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),dz={kernelName:Sn,backendName:"webgl",kernelFunc:pz};class fz{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class mz{constructor(e,t,n,s,r){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const l=`float(${n}) + float(${s}) * sum`;o=.5===r?`inversesqrt(${l})`:1===r?`1.0/(${l})`:`exp(log(${l}) * float(-${r}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const gz={kernelName:Cn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{depthRadius:a,bias:i,alpha:o,beta:l}=s,u=je().getBool("WEBGL_PACK_NORMALIZATION")?new mz(r.shape,a,i,o,l):new fz(r.shape,a,i,o,l);return n.runWebGLProgram(u,[r],r.dtype)}};class yz{constructor(e,t,n,s,r){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=s,this.beta=r,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${s}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${s})\n                * float(${r})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${r});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const bz={kernelName:$n,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r,y:a,dy:i}=t,{depthRadius:o,bias:l,alpha:u,beta:c}=s,h=new yz(r.shape,o,l,u,c);return n.runWebGLProgram(h,[r,a,i],r.dtype)}};function xz(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reductionIndices:a,keepDims:i}=s,o=r.shape.length,l=be(a,r.shape);let u=l;const c=Rc(u,o),h=null!=c,p=n.shouldExecuteOnCPU([r]);let d=r;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const s=e_(e,r.shape,r.dtype,c,t);d=n.makeTensorInfo(t,r.dtype),n.texData.get(d.dataId).values=s}else d=j_(r,c,n);u=Dc(u.length,o)}Ac("max",u,o);const[f,m]=$c(d.shape,u);let g,y=f;if(i&&(y=Ec(f,l)),p){const e=n.texData.get(d.dataId).values,t=RD(e,le(m),y,r.dtype);g=n.makeTensorInfo(y,r.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,s){const r=le(t),a=P_({inputs:{x:e},attrs:{shape:[le(e.shape)/r,r]},backend:s}),i=V_(a,e.dtype,"max",s),o=P_({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const wz={kernelName:En,backendName:"webgl",kernelFunc:xz},vz=F_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:FD}),kz={kernelName:An,backendName:"webgl",kernelFunc:vz},Iz={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t;FF(r,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:l}=s;re(ou(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const u=Zl(r.shape,a,i,1,o,l);if(1===u.filterWidth&&1===u.filterHeight&&ce(u.inShape,u.outShape))return v_({inputs:{x:r},backend:n});const c=new AO(u,"max",!1);return n.runWebGLProgram(c,[r],r.dtype)}},Nz={kernelName:Dn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{filterSize:a,strides:i,pad:o,dataFormat:l,dimRoundingMode:u}=s,c=Jl(r.shape,a,i,[1,1,1],o,u,l),h=new RO(c,"max",!1);return n.runWebGLProgram(h,[r],r.dtype)}};class Sz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,s=e.dilationHeight,r=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=r-1-e.padInfo.top,o=a-1-e.padInfo.left,l=r*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${r};\n          wR += ${s}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${l} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Tz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,s=e.strideWidth,r=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,l=e.effectiveFilterHeight,u=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=l-1-e.padInfo.top,p=u-1-e.padInfo.left,d=o*l*u-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${r}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${l};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${u};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${s}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${l} * ${u} +\n                  wR * ${u} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Cz={kernelName:_n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a}=t,i=a,{filterSize:o,strides:l,pad:u,dimRoundingMode:c}=s,h=Jl(i.shape,o,l,[1,1,1],u,c),p=new RO(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new Tz(h),m=n.runWebGLProgram(f,[r,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},$z={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{dy:r,input:a,output:i}=t,o=a;FF([a,i],"maxPoolGrad");const{filterSize:l,strides:u,pad:c,dimRoundingMode:h}=s,p=Zl(o.shape,l,u,1,c,h),d=new AO(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new Sz(p),g=n.runWebGLProgram(m,[r,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Ez={kernelName:On,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{filterSize:r,strides:a,pad:i,includeBatchInIndex:o}=t,l=n;re(4===s.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${s.shape.length}.`));const u=[1,1];re(ou(a,u),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${u}'`));const c=Zl(s.shape,r,a,u,i),[h,p]=function(e,t,n,s){let r=new AO(n,"max",!1);const a=s.runWebGLProgram(r,[e],"float32");return r=new AO(n,"max",!0,!0,t),[a,s.runWebGLProgram(r,[e],"float32")]}(s,o,c,l);return[h,p]}},Az={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:s}=e,{keepDims:r,axis:a}=t,i=n,o=s.shape.length,l=be(a,s.shape);let u=l;const c=Rc(u,o),h=null!=c,p=i.shouldExecuteOnCPU([s]),d=[];let f=s;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const n=e_(e,s.shape,s.dtype,c,t);f=i.makeTensorInfo(t,s.dtype),i.texData.get(f.dataId).values=n}else f=j_(s,c,i);d.push(f),u=Dc(u.length,o)}Ac("sum",u,o);const[m,g]=$c(f.shape,u);let y=m;r&&(y=Ec(m,l));const b=function(e,t,n,s){const r=le(t),a=P_({inputs:{x:e},attrs:{shape:[le(e.shape)/r,r]},backend:s}),i=V_(a,"float32","mean",s),o=P_({inputs:{x:i},attrs:{shape:n},backend:s});return s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},Rz={kernelName:Ln,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=be(a,r.shape);let u=l;const c=Rc(u,o);let h=r;null!=c&&(h=X_({inputs:{x:r},backend:n,attrs:{perm:c}}),u=Dc(u.length,r.shape.length)),Ac("min",u,o);const[p,d]=$c(h.shape,u),f=P_({inputs:{x:h},backend:n,attrs:{shape:[-1,le(d)]}}),m=V_(f,f.dtype,"min",n);let g;return g=P_(i?{inputs:{x:m},backend:n,attrs:{shape:Ec(p,l)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Fz=F_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:DD}),Dz={kernelName:zn,backendName:"webgl",kernelFunc:Fz};class _z{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=XF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s),l="reflect"===n?0:1;this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        for (int i = 0; i < ${s}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${l};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${l};\n          }\n        }\n        ${r} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${l};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${l};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Oz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=XF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=s_("rc",s),l=s_("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===s){const e=`\n        ${r} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n      `}else{const e=`\n        ${r} source = rc;\n        ${r} lt = ${r}(lessThan(source, start));\n        ${r} gte = ${r}(greaterThanEqual(source, end));\n        ${r} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${r} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${l.join()}), ${c});\n        ${o[s-1]} += 1;\n        if(${u}) {\n          ${e}\n          result[1] = getChannel(getX(${l.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[s-2]} += 1;\n        if(${o[s-2]} < ${this.outputShape[s-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${l.join()}), ${c});\n          ${o[s-1]} += 1;\n          if(${u}) {\n            ${e}\n            result[3] = getChannel(getX(${l.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Mz={kernelName:Pn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:s}=e,{paddings:r,mode:a}=n,i=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Oz(s.shape,r,a):new _z(s.shape,r,a);return t.runWebGLProgram(i,[s],s.dtype)}},Lz=F_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zz={kernelName:Bn,backendName:"webgl",kernelFunc:Lz};class Pz{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Bz=F_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Wz={kernelName:Ht,backendName:"webgl",kernelFunc:Bz},Uz="return a - b;",Vz=F_({opSnippet:Uz,packedOpSnippet:Uz,supportsComplex:!0,cpuKernelImpl:ZD}),Gz={kernelName:Bs,backendName:"webgl",kernelFunc:Vz};function Hz(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{dim:a}=s,i=be([a],r.shape),o=xz({inputs:{x:r},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),l=Ec(o.shape,i),u=P_({inputs:{x:o},backend:n,attrs:{shape:l}}),c=Vz({inputs:{a:r,b:u},backend:n}),h=hL({inputs:{x:c},backend:n}),p=q_({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=P_({inputs:{x:p},backend:n,attrs:{shape:l}}),f=Bz({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const jz={kernelName:$s,backendName:"webgl",kernelFunc:Hz},qz={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{logits:r}=t,{numSamples:a,seed:i,normalized:o}=s,l=o?r:Hz({inputs:{logits:r},backend:n,attrs:{dim:r.shape.length-1}}),u=l.shape[0],c=l.shape[1],h=new Pz(u,c,a),p=[[i]],d=n.runWebGLProgram(h,[l],"int32",p);return o||n.disposeIntermediateTensorInfo(l),d}},Kz={kernelName:Vn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:s}=t;if(n.shouldExecuteOnCPU([s])){const e=n.texData.get(s.dataId),[t,r]=OD(e.values,s.shape,s.dtype);return n.makeTensorInfo(r,s.dtype,t)}let r;return r=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new d_(s.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new c_(s.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(r,[s],s.dtype)}},Xz=Hp,Yz={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){sr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l}=s,u=n.readSync(r.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=Xz(u,c,i,o,l);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Zz=jp,Jz={kernelName:jn,backendName:"webgl",kernelFunc:function(e){sr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,padToMaxOutputSize:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=Zz(c,h,i,o,l,u);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Qz=qp,eP={kernelName:qn,backendName:"webgl",kernelFunc:function(e){sr("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:s}=e,{boxes:r,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:l,softNmsSigma:u}=s,c=n.readSync(r.dataId),h=n.readSync(a.dataId),p=i,d=o,f=l,m=u,{selectedIndices:g,selectedScores:y}=Qz(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class tP{constructor(e,t,n,s){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${s}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const nP={kernelName:Xn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{indices:r}=t,{depth:a,onValue:i,offValue:o}=s,l=le(r.shape),u=new tP(l,a,i,o),c=P_({inputs:{x:r},backend:n,attrs:{shape:[l]}}),h=n.runWebGLProgram(u,[c],r.dtype);n.disposeIntermediateTensorInfo(c);const p=P_({inputs:{x:h},backend:n,attrs:{shape:[...r.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function sP(e){const{inputs:t,backend:n}=e,{x:s}=t;if("complex64"===s.dtype){const e=JO({inputs:{input:s},backend:n}),t=sP({inputs:{x:e},backend:n}),r=dM({inputs:{input:s},backend:n}),a=sP({inputs:{x:r},backend:n}),i=I_({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(a),i}return kL({attrs:{shape:s.shape,dtype:s.dtype,value:"string"===s.dtype?"":0},backend:n})}const rP={kernelName:Ys,backendName:"webgl",kernelFunc:sP},aP={kernelName:Kn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:s}=t,{x:r}=n;if("string"===r.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===r.dtype){const t=JO({inputs:{input:r},backend:s}),n=e({inputs:{x:t},backend:s}),a=dM({inputs:{input:r},backend:s}),i=sP({inputs:{x:a},backend:s}),o=I_({inputs:{real:n,imag:i},backend:s});return s.disposeIntermediateTensorInfo(t),s.disposeIntermediateTensorInfo(n),s.disposeIntermediateTensorInfo(a),s.disposeIntermediateTensorInfo(i),o}return kL({attrs:{shape:r.shape,dtype:r.dtype,value:1},backend:s})}},iP={kernelName:Yn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{axis:r}=s;if(1===t.length)return dL({inputs:{input:t[0]},backend:n,attrs:{dim:r}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{ae(a,e.shape,"All tensors passed to stack must have matching shapes"),re(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],l=gM({inputs:t.map((e=>{const t=dL({inputs:{input:e},backend:n,attrs:{dim:r}});return o.push(t),t})),backend:n,attrs:{axis:r}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),l}};class oP{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=XF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,s);this.userCode=1!==s?`\n      ${r} start = ${r}(${a});\n      ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${r} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class lP{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const s=e.length,r=XF(s),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=s_("rc",s),l=s_("source",s),u=`${o[s-1]} < ${this.outputShape[s-1]}`,c=1===s?"source":`vec2(${l.slice(-2).join()})`,h=[`${r} rc = outputLoc;`,`${o[s-1]} += 1;\n       if(${u}) {\n      `,1===s?"":`}\n       rc = outputLoc;\n       ${o[s-2]} += 1;\n       if(${o[s-2]} < ${this.outputShape[s-2]}) {`,1===s?"":`  ${o[s-1]} += 1;\n         if(${u}) {`],p=1===s?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===s?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${r} source = rc - start;\n          result[${e}] = getChannel(getX(${l.join()}), ${c});\n        }\n      `;d+=1===s?"} ":"}}",this.userCode=`\n      const ${r} start = ${r}(${a});\n      const ${r} end = ${r}(${i});\n\n      void main() {\n        ${r} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const uP=e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{paddings:a,constantValue:i}=s;if(0===le(r.shape)){const e=a.map(((e,t)=>e[0]+r.shape[t]+e[1]));return kL({backend:n,attrs:{shape:e,value:i,dtype:r.dtype}})}const o=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new lP(r.shape,a,i):new oP(r.shape,a,i),l=[[i]];return n.runWebGLProgram(o,[r],r.dtype,l)},cP={kernelName:Zn,backendName:"webgl",kernelFunc:uP},hP=F_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),pP={kernelName:Qn,backendName:"webgl",kernelFunc:hP},dP={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{axis:a,keepDims:i}=s,o=r.shape.length,l=[],u=be(a,r.shape);let c=u;const h=Rc(c,o);let p,d=r;if(null!=h&&(d=X_({inputs:{x:r},backend:n,attrs:{perm:h}}),c=Dc(c.length,o),l.push(d)),Ac("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:s,outDtype:r}=LD(d.shape,d.dtype,e,c);p=n.makeTensorInfo(s,r,t)}else{const[e,t]=$c(d.shape,c),s=le(t),a=P_({inputs:{x:d},backend:n,attrs:{shape:[-1,s]}}),i=V_(a,ra(r.dtype),"prod",n);p=P_({inputs:{x:i},backend:n,attrs:{shape:e}}),l.push(a),l.push(i)}if(i){l.push(p);const e=Ec(p.shape,u);p=P_({inputs:{x:p},backend:n,attrs:{shape:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},fP=e=>{const{backend:t,attrs:n}=e,{start:s,stop:r,step:a,dtype:i}=n,o=zD(s,r,a,i);return t.makeTensorInfo([o.length],i,o)},mP={kernelName:ns,backendName:"webgl",kernelFunc:fP},gP=R_({opSnippet:"return 1.0 / x;"}),yP={kernelName:rs,backendName:"webgl",kernelFunc:gP},bP=R_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xP={kernelName:as,backendName:"webgl",kernelFunc:bP},wP=R_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vP={kernelName:hs,backendName:"webgl",kernelFunc:wP};class kP{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class IP{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n];let h;h=r?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const NP={kernelName:us,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new IP(r.shape,l,u,a,i):new kP(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],"float32")}};class SP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${s-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${r-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const TP={kernelName:cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new SP(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class CP{constructor(e,t,n,s,r){this.variableNames=["A"],this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class $P{constructor(e,t,n,s,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,l]=e;this.outputShape=[a,t,n,l];const u=[s&&t>1?i-1:i,s&&n>1?o-1:o],c=[s&&t>1?t-1:t,s&&n>1?n-1:n],h=s?"0.5":"0.0";let p;p=r?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${u[0]/c[0]},\n          ${u[1]/c[1]},\n          ${u[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${l-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const EP={kernelName:os,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r}=t,{alignCorners:a,halfPixelCenters:i,size:o}=s,[l,u]=o,c=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new $P(r.shape,l,u,a,i):new CP(r.shape,l,u,a,i);return n.runWebGLProgram(c,[r],r.dtype)}};class AP{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,s,r]=t,[,a,i]=e,o=[n&&a>1?s-1:s,n&&i>1?r-1:r],l=[n&&a>1?a-1:a,n&&i>1?i-1:i],u=o[0]/l[0],c=o[1]/l[1],h=1/u,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${u});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${l[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${l[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const RP={kernelName:ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{images:r,dy:a}=t,{alignCorners:i}=s,o=new AP(a.shape,r.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class FP{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const s=e.map(((n,s)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(s))).join(","),r=XF(n);this.userCode=`\n      void main() {\n        ${r} coords = getOutputCoords();\n        setOutput(getX(${s}));\n      }\n    `}}class DP{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const s=s_("rc",n),r=`${s[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${s[n-2]} + 1 < ${this.outputShape[n-2]}`,i=XF(n);function o(n){const s=e.map(((s,r)=>function(n,s){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${s[n]} - 1`:`${s[n]}`}(r,n)));return`getChannel(getX(${s.join(",")}), vec2(${s.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${r}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(s.slice())};\n          if(${r}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(s.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            if(${r}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(s.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const _P={kernelName:ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{dims:a}=s,i=r.shape.length,o=be(a,r.shape);if(0===i)return v_({inputs:{x:r},backend:n});const l=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new DP(r.shape,o):new FP(r.shape,o);return n.runWebGLProgram(l,[r],r.dtype)}};class OP{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],s=e[2];this.outputShape=e;let r="";r="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${r}\n          if(coordX >= 0 && coordX < ${s} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const MP={kernelName:Qs,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:s}=e,{radians:r,fillValue:a,center:i}=t,o=n,l=new OP(s.shape,a),[u,c]=Pd(i,s.shape[1],s.shape[2]),h=[[u,c,Math.sin(r),Math.cos(r)]];return o.runWebGLProgram(l,[s],s.dtype,h)}},LP=R_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),zP={kernelName:ds,backendName:"webgl",kernelFunc:LP},PP=R_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:PD}),BP={kernelName:fs,backendName:"webgl",kernelFunc:PP};class WP{constructor(e,t,n,s,r,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=XF(r.length),l=XF(a.length);let u="";1===n?u="i":2===n&&(u="i, j");const c=`getIndices(${u})`;let h="";1===s?h="i":2===s&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${r});\n\n        void main() {\n          ${l} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const UP={kernelName:ms,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{indices:r,updates:a}=t,{shape:i}=s,{sliceRank:o,numUpdates:l,sliceSize:u,strides:c,outputSize:h}=lo(0,r,i),p=[h/u,u];if(0===h)return n.makeTensorInfo(i,r.dtype);const d=P_({inputs:{x:r},backend:n,attrs:{shape:[l,o]}}),f=P_({inputs:{x:a},backend:n,attrs:{shape:[l,u]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new WP(l,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=P_({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class VP{constructor(e,t,n){let s,r;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)r="resRC",s="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let s=0;s<t.length;s++)i.push(`${n[s]}`),s<e&&a.push(`${n[s]}`);s=a.join(),r=i.join()}const a=XF(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${s});\n        if (cVal >= 1.0) {\n          setOutput(getA(${r}));\n        } else {\n          setOutput(getB(${r}));\n        }\n      }\n    `}}const GP={kernelName:gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:s,t:r,e:a}=t,i=new VP(s.shape.length,r.shape,r.shape.length);return n.runWebGLProgram(i,[s,r,a],sa(r.dtype,a.dtype))}},HP=R_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Hd};\n  float scale = ${jd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),jP={kernelName:ys,backendName:"webgl",kernelFunc:HP},qP=R_({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:BD}),KP={kernelName:ks,backendName:"webgl",kernelFunc:qP},XP=R_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),YP={kernelName:vs,backendName:"webgl",kernelFunc:XP},ZP=R_({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),JP={kernelName:xs,backendName:"webgl",kernelFunc:ZP},QP=R_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),eB={kernelName:ws,backendName:"webgl",kernelFunc:QP},tB=R_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),nB={kernelName:Is,backendName:"webgl",kernelFunc:tB},sB={kernelName:Ts,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{blockShape:a,paddings:i}=s;re(r.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),l=[[0,0]];l.push(...i);for(let e=1+a.length;e<r.shape.length;++e)l.push([0,0]);const u=[],c=uP({inputs:{x:r},backend:n,attrs:{paddings:l,constantValue:0}}),h=Bd(c.shape,a,o,!1),p=Wd(h.length,a.length,!1),d=Ud(c.shape,a,o,!1),f=P_({inputs:{x:c},backend:n,attrs:{shape:h}}),m=X_({inputs:{x:f},backend:n,attrs:{perm:p}}),g=P_({inputs:{x:m},backend:n,attrs:{shape:d}});return u.push(c),u.push(f),u.push(m),u.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},rB={kernelName:Es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:s,values:r,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==s.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${s.shape}`);if(1!==r.shape.length)throw new Error(`Values must be a vector, saw:\n         ${r.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(s.dataId),l=n.readSync(r.dataId),u=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=VD(o,s.shape,s.dtype,l,r.dtype,u,c);return[n.makeTensorInfo(p,s.dtype,h),n.makeTensorInfo([p[0]],r.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],s.dtype,new Int32Array(m))]}},aB={kernelName:As,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:s,inputShape:r,newShape:a}=t;if(2!==s.shape.length)throw new Error(`Input indices should be a matrix but received shape ${s.shape}`);if(1!==r.shape.length)throw new Error(`Input shape should be a vector but received shape ${r.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(r.dataId)),o=n.readSync(s.dataId),l=Array.from(n.readSync(a.dataId)),[u,c,h]=GD(o,s.shape,s.dtype,i,l);return[n.makeTensorInfo(c,s.dtype,u),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},iB={kernelName:Rs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=HD(i,s.shape,s.dtype,o,l,!0);return n.makeTensorInfo(c,s.dtype,u)}},oB={kernelName:Fs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:s,indices:r,segmentIds:a}=t;if(s.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==r.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${r.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(s.dataId),o=n.readSync(r.dataId),l=n.readSync(a.dataId),[u,c]=HD(i,s.shape,s.dtype,o,l);return n.makeTensorInfo(c,s.dtype,u)}},lB={kernelName:Ds,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{sparseIndices:r,sparseValues:a,defaultValue:i}=t,{outputShape:o}=s,{sliceRank:l,numUpdates:u,strides:c,outputSize:h}=lo(0,r,o),p=new WP(u,l,r.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,r,i],a.dtype),f=P_({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},uB={kernelName:Cs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{numOrSizeSplits:a,axis:i}=s,o=be(i,r.shape)[0],l=mf(r,a,o),u=r.shape.length,c=new Array(u).fill(0),h=r.shape.slice();return l.map((e=>{const t=[...h];t[o]=e;const s=HO({inputs:{x:r},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,s}))}},cB="return sqrt(x);",hB=R_({opSnippet:cB,packedOpSnippet:cB,cpuKernelImpl:jD}),pB={kernelName:Ns,backendName:"webgl",kernelFunc:hB},dB=R_({opSnippet:"return x * x;"}),fB={kernelName:Os,backendName:"webgl",kernelFunc:dB},mB="return (a - b) * (a - b);",gB=F_({opSnippet:mB,packedOpSnippet:mB}),yB={kernelName:_s,backendName:"webgl",kernelFunc:gB},bB={kernelName:Zs,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:s}=e,r=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new c_(s.shape,r);return n.runWebGLProgram(a,[s],s.dtype)}};class xB{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const s=n.length,r=XF(n.length),a=XF(n.length);let i="";if(1===s)i="coords * strides + begin";else{let e=0;i=n.map(((t,s)=>(e++,1===n.length?`coords * strides[${s}] + begin[${s}]`:`coords[${e-1}] * strides[${s}] + begin[${s}]`))).join(",")}this.userCode=`\n      ${r} begin = ${r}(${e});\n      ${r} strides = ${r}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const wB={kernelName:Ms,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{begin:a,end:i,strides:o,beginMask:l,endMask:u,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=s,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=So(r.shape,a,i,o,l,u,c,h,p);let v;if(m)v=P_({inputs:{x:r},backend:n,attrs:{shape:f}});else if(g||y){re(r.shape.length>=1,(()=>`Input must have rank at least 1, got: ${r.shape.length}`));const e=ho(b,x,w),t=HO({inputs:{x:r},backend:n,attrs:{begin:b,size:e}});v=P_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([r])){const e=n.readSync(r.dataId),t=Si(r.shape,r.dtype,e),s=qD(d,t,w,b);v=n.makeTensorInfo(f,r.dtype,s.values)}else{const e=new xB(b,w,d);v=n.runWebGLProgram(e,[r],r.dtype)}const k=P_({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},vB={kernelName:Ls,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{separator:r,nGramWidths:a,leftPad:i,rightPad:o,padWidth:l,preserveShortSequences:u}=s,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=KD(p,d,r,a,i,o,l,u);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},kB={kernelName:zs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{skipEmpty:r}=s,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),l=n.readSync(i.dataId)[0],[u,c,h]=XD(o,l,r),p=c.length;return[n.makeTensorInfo([p,2],"int32",u),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},IB={kernelName:Ps,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{numBuckets:r}=s,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(r<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=YD(i,r);return n.makeTensorInfo(a.shape,"int32",o)}},NB=R_({opSnippet:"return tan(x);"}),SB={kernelName:Ws,backendName:"webgl",kernelFunc:NB},TB=R_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),CB={kernelName:Us,backendName:"webgl",kernelFunc:TB};class $B{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let s=0;s<n.length;s++)n[s]=e[s]*t[s];this.outputShape=n,this.rank=n.length;const s=XF(this.rank),r=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],s=[];for(let t=0;t<e.length;t++)s.push(`imod(${n[t]}, ${e[t]})`);return s.join()}(e);this.userCode=`\n      void main() {\n        ${s} resRC = getOutputCoords();\n        setOutput(getA(${r}));\n      }\n    `}}function EB(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{reps:a}=s;if("string"===r.dtype||r.shape.length>5){const e=n.readSync(r.dataId),t="string"===r.dtype?e.map((e=>Or(e))):e,s=Si(r.shape,r.dtype,t),i=JD(s,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new $B(r.shape,a);return n.runWebGLProgram(i,[r],r.dtype)}const AB={kernelName:Vs,backendName:"webgl",kernelFunc:EB};class RB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class FB{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function DB(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function _B(e){let t=1;for(;t<e;)t*=2;return t}const OB={kernelName:Gs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r}=t,{k:a,sorted:i}=s,o=je().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),l=je().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),u=r.shape,c=u[u.length-1];if(n.shouldExecuteOnCPU([r])||c<o||a>l){const e=n.readSync(r.dataId),[t,s]=QD(e,u,r.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(s.shape,s.dtype,s.values)]}if(0===a)return u[u.length-1]=0,[n.makeTensorInfo(u,r.dtype,[]),n.makeTensorInfo(u,"int32",[])];if(1===c)return[r,kL({attrs:{shape:u,dtype:"int32",value:0},backend:n})];const h=n.texData.get(r.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(r):r,f=le(u)/c,m=P_({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&DB(n,d);const g=_B(a),y=_B(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,s)=>{const r=x(),a=new RB(s),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,r,"int32",i),DB(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),s=new FB([f,e/2]),r=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(s,t,"int32",r),DB(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=HO({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),DB(n,v);let k=BL({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});DB(n,m);const I=u.slice(0,-1);I.push(a),v=b,b=P_({inputs:{x:b},attrs:{shape:I},backend:n}),DB(n,v);const N=k;return k=P_({inputs:{x:k},attrs:{shape:I},backend:n}),DB(n,N),[k,b]}};class MB{constructor(e,t,n,s,r,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(s){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${r});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${r});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const LB={kernelName:Hs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{image:r,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:l,outputShape:u}=s,[c,h,p,d]=r.shape,[f,m]=null!=u?u:[h,p],g=new MB(h,p,i,o,l,[c,f,m,d]);return n.runWebGLProgram(g,[r,a],"float32")}},zB={kernelName:qs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:s}=e,{axis:r}=n,{x:a}=t;FF(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=s.readSync(a.dataId),{outputValues:o,outputShape:l,indices:u}=t_(i,r,a.shape,a.dtype);return[s.makeTensorInfo(l,a.dtype,o),s.makeTensorInfo([u.length],"int32",u)]}},PB={kernelName:Ks,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{value:r}=t;let{axis:a}=s;a<0&&(a+=r.shape.length);const i=r,o=i.shape.length,l=r.shape[a],u=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(u[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(l);for(let e=0;e<f.length;e++){p[a]=e;const t=HO({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),s=P_({inputs:{x:t},backend:n,attrs:{shape:u}});f[e]=s,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class BB{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,s=e.batchSize,r=e.inSize,a=e.numSegments,i=a*Math.ceil(r/n);this.outputShape=[s,i];const o=4*Math.floor(n/4),l=n%4,u="\n        sumValue += dot(values, segFilter);\n    ";let c="";r%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return initializationValue;\n        }\n      `);let h="";r%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${r}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${u}\n        } else if (${2===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${u}\n        } else if (${3===l}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}const WB=[J_,eO,nO,rO,oO,cO,hO,pO,bO,xO,vO,IO,SO,CO,EO,FO,DO,MO,LO,zO,WO,qO,KO,XO,eM,sM,iM,N_,uM,yM,IM,$M,EM,AM,RM,FM,_M,MM,zM,UM,VM,HM,KM,ZM,JM,eL,nL,sL,aL,iL,lL,cL,pL,fL,yL,wL,IL,SL,$L,AL,DL,OL,ML,zL,WL,VL,HL,k_,jL,fM,KL,YL,JL,C_,ez,nz,sz,az,oz,uz,hz,dz,gz,bz,wz,kz,Iz,Nz,Cz,$z,Ez,Az,Rz,Dz,Mz,zz,qz,z_,Kz,Yz,Jz,eP,ZO,nP,aP,iP,cP,pP,A_,dP,mP,QO,Wz,yP,xP,vP,B_,NP,TP,EP,RP,_P,MP,zP,BP,UP,GP,jP,KP,YP,JP,eB,jO,jz,nB,sB,rB,aB,iB,oB,lB,uB,pB,fB,yB,bB,wB,vB,kB,IB,Gz,K_,SB,CB,AB,OB,LB,Y_,zB,PB,{kernelName:Xs,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:s}=e,{x:r,segmentIds:a}=t,{numSegments:i}=s,o=r.shape.length,l=[];let u=0;const c=Rc([u],o);let h=r;null!=c&&(h=X_({inputs:{x:r},backend:n,attrs:{perm:c}}),l.push(h),u=Dc(1,o)[0]);const p=Ef(h.shape,u,i),d=le([h.shape[u]]),f=P_({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});l.push(f);const m=ra(r.dtype),g=(e,t,s,r,a)=>{const i=e.shape[0],o=e.shape[1],u=$f(o,a),c=new BB({windowSize:u,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,s],r);if(l.push(h),h.shape[1]===a)return h;const p=fP({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=EB({inputs:{x:p},backend:n,attrs:{reps:[o/u]}});return l.push(p),l.push(d),g(h,t,d,r,a)},y=P_({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){l.push(y);const e=Fc(c);b=X_({inputs:{x:b},backend:n,attrs:{perm:e}})}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},rP];for(const e of WB)cr(e);const UB={"tfjs-core":Wo,"tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-data":ZS,"tfjs-layers":ix,"tfjs-converter":GN,tfjs:"3.13.0"},VB=new H.Vector3,GB=new H.Quaternion,HB=new H.Vector3;class jB extends H.Object3D{constructor(e=document.createElement("div")){super(),this.element=e,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",(function(){this.traverse((function(e){e.element instanceof Element&&null!==e.element.parentNode&&e.element.parentNode.removeChild(e.element)}))}))}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this}}jB.prototype.isCSS3DObject=!0,class extends jB{constructor(e){super(e),this.rotation2D=0}copy(e,t){return super.copy(e,t),this.rotation2D=e.rotation2D,this}}.prototype.isCSS3DSprite=!0;const qB=new H.Matrix4,KB=new H.Matrix4;class XB{constructor(e={}){const t=this;let n,s,r,a;const i={camera:{fov:0,style:""},objects:new WeakMap},o=void 0!==e.element?e.element:document.createElement("div");o.style.overflow="hidden",this.domElement=o;const l=document.createElement("div");function u(e){return Math.abs(e)<1e-10?0:e}function c(e){const t=e.elements;return"matrix3d("+u(t[0])+","+u(-t[1])+","+u(t[2])+","+u(t[3])+","+u(t[4])+","+u(-t[5])+","+u(t[6])+","+u(t[7])+","+u(t[8])+","+u(-t[9])+","+u(t[10])+","+u(t[11])+","+u(t[12])+","+u(-t[13])+","+u(t[14])+","+u(t[15])+")"}function h(e){const t=e.elements;return"translate(-50%,-50%)matrix3d("+u(t[0])+","+u(t[1])+","+u(t[2])+","+u(t[3])+","+u(-t[4])+","+u(-t[5])+","+u(-t[6])+","+u(-t[7])+","+u(t[8])+","+u(t[9])+","+u(t[10])+","+u(t[11])+","+u(t[12])+","+u(t[13])+","+u(t[14])+","+u(t[15])+")"}function p(e,n,s,r){if(e.isCSS3DObject){let r;e.onBeforeRender(t,n,s),e.isCSS3DSprite?(qB.copy(s.matrixWorldInverse),qB.transpose(),0!==e.rotation2D&&qB.multiply(KB.makeRotationZ(e.rotation2D)),e.matrixWorld.decompose(VB,GB,HB),qB.setPosition(VB),qB.scale(HB),qB.elements[3]=0,qB.elements[7]=0,qB.elements[11]=0,qB.elements[15]=1,r=h(qB)):r=h(e.matrixWorld);const a=e.element,o=i.objects.get(e);if(void 0===o||o.style!==r){a.style.transform=r;const t={style:r};i.objects.set(e,t)}a.style.display=e.visible?"":"none",a.parentNode!==l&&l.appendChild(a),e.onAfterRender(t,n,s)}for(let t=0,a=e.children.length;t<a;t++)p(e.children[t],n,s,r)}l.style.transformStyle="preserve-3d",l.style.pointerEvents="none",o.appendChild(l),this.getSize=function(){return{width:n,height:s}},this.render=function(e,t){const n=t.projectionMatrix.elements[5]*a;let s,h;i.camera.fov!==n&&(o.style.perspective=t.isPerspectiveCamera?n+"px":"",i.camera.fov=n),!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),t.isOrthographicCamera&&(s=-(t.right+t.left)/2,h=(t.top+t.bottom)/2);const d=t.isOrthographicCamera?"scale("+n+")translate("+u(s)+"px,"+u(h)+"px)"+c(t.matrixWorldInverse):"translateZ("+n+"px)"+c(t.matrixWorldInverse),f=d+"translate("+r+"px,"+a+"px)";i.camera.style!==f&&(l.style.transform=f,i.camera.style=f),p(e,e,t,d)},this.setSize=function(e,t){n=e,s=t,r=n/2,a=s/2,o.style.width=e+"px",o.style.height=t+"px",l.style.width=e+"px",l.style.height=t+"px"}}}const YB=(e,t,n,s)=>{const{x:r,y:a,z:i}=((e,t,n,s)=>({x:e[0][0]*t+e[0][1]*n+e[0][3],y:e[1][0]*t+e[1][1]*n+e[1][3],z:e[2][0]*t+e[2][1]*n+e[2][3]}))(e,t,n);return{x:r/i,y:a/i}};class ZB{constructor(e,t,n,s,r,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=n,this.debugMode=a,this.trackingKeyframeList=[];for(let e=0;e<t.length;e++)this.trackingKeyframeList.push(t[e][1]);let i=0;for(let e=0;e<this.trackingKeyframeList.length;e++)i=Math.max(i,this.trackingKeyframeList[e].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let e=0;e<this.trackingKeyframeList.length;e++){const{featurePoints:t,imagePixels:n,imageProperties:s}=this._prebuild(this.trackingKeyframeList[e],i);this.featurePointsListT[e]=t,this.imagePixelsListT[e]=n,this.imagePropertiesListT[e]=s}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(e,t,n)}track(e,t,n){let s={};const r=(i=t,[[(a=this.projectionTransform)[0][0]*i[0][0]+a[0][2]*i[2][0],a[0][0]*i[0][1]+a[0][2]*i[2][1],a[0][0]*i[0][2]+a[0][2]*i[2][2],a[0][0]*i[0][3]+a[0][2]*i[2][3]],[a[1][1]*i[1][0]+a[1][2]*i[2][0],a[1][1]*i[1][1]+a[1][2]*i[2][1],a[1][1]*i[1][2]+a[1][2]*i[2][2],a[1][1]*i[1][3]+a[1][2]*i[2][3]],[i[2][0],i[2][1],i[2][2],i[2][3]]]);var a,i;const o=this._buildAdjustedModelViewTransform(r),l=(this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height,this.featurePointsListT[n]),u=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(o,e,n),{matchingPointsT:p,simT:d}=this._computeMatching(l,u,c,h),f=p.arraySync(),m=d.arraySync(),g=this.trackingKeyframeList[n],y=[],b=[],x=[];for(let e=0;e<f.length;e++)if(m[e]>.8&&e<g.points.length){x.push(e);const t=YB(r,f[e][0],f[e][1]);b.push(t),y.push({x:g.points[e].x/g.scale,y:g.points[e].y/g.scale,z:0})}return this.debugMode&&(s={projectedImage:h.arraySync(),matchingPoints:p.arraySync(),goodTrack:x,trackedPoints:b}),o.dispose(),h.dispose(),p.dispose(),d.dispose(),{worldCoords:y,screenCoords:b,debugExtra:s}}_computeMatching(e,t,n,s){const r=s.shape[0],a=s.shape[1],i=e.shape[0];if(!this.kernelCaches.computeMatching){const e={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[i,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${a} - 6) || sy < 6 || sy >= (${r} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},t={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[i,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[i],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[e,t,n]}return Yo((()=>{const r=this.kernelCaches.computeMatching,a=this._compileAndRun(r[0],[e,t,n,s]),i=a.argMax(1);return{matchingPointsT:this._compileAndRun(r[1],[e,n,i]),simT:this._compileAndRun(r[2],[a,i])}}))}_computeProjection(e,t,n){const s=this.trackingKeyframeList[n].width,r=this.trackingKeyframeList[n].height,a=this.trackingKeyframeList[n].scale,i=s+"-"+r+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const e={variableNames:["M","pixel"],outputShape:[r,s],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${a});\n\t      float x = float(coords[1]) / float(${a});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=e}return Yo((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[e,t])}))}_buildAdjustedModelViewTransform(e){return Yo((()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let s=0;s<e[n].length;s++)t[n].push(e[n][s]/1e3)}return Aa(t,[3,4])}))}_prebuild(e,t){return Yo((()=>{const n=e.scale,s=[];for(let r=0;r<t;r++)r<e.points.length?s.push([e.points[r].x/n,e.points[r].y/n]):s.push([-1,-1]);const r=Aa(e.data,[e.width*e.height]),a=Aa([e.width,e.height,e.scale],[3]);return{featurePoints:Aa(s,[s.length,2],"float32"),imagePixels:r,imageProperties:a}}))}_compileAndRun(e,t){const n=ol().compileAndRun(e,t);return qo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}const JB=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],QB=[];for(let e=0;e<JB.length;e++){const t=JB[e].sigma;for(let n=0;n<JB[e].points.length;n++){const s=JB[e].points[n];QB.push([t,s[0],s[1]])}}const eW=(QB.length-1)*QB.length/2;class tW{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let s=0;for(;e>=8&&t>=8&&(e/=2,t/=2,s++,5!==s););this.numOctaves=s,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let n=0;n<e.length;n++)t[4*n]=e[n],t[4*n+1]=e[n],t[4*n+2]=e[n],t[4*n+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){let t=null;const n=[];for(let t=0;t<this.numOctaves;t++){let s,r;s=0===t?this._applyFilter(e):this._downsampleBilinear(n[t-1][n[t-1].length-1]),r=this._applyFilter(s),n.push([s,r])}const s=[];for(let e=0;e<this.numOctaves;e++){let t=this._differenceImageBinomial(n[e][0],n[e][1]);s.push(t)}const r=[];for(let e=1;e<this.numOctaves-1;e++){const t=this._buildExtremas(s[e-1],s[e],s[e+1]);r.push(t)}const a=this._applyPrune(r),i=this._computeLocalization(a,s),o=this._computeOrientationHistograms(i,n),l=this._smoothHistograms(o),u=this._computeExtremaAngles(l),c=this._computeExtremaFreak(n,i,u),h=this._computeFreakDescriptors(c),p=i.arraySync(),d=u.arraySync(),f=h.arraySync();this.debugMode&&(t={pyramidImages:n.map((e=>e.map((e=>e.arraySync())))),dogPyramidImages:s.map((e=>e?e.arraySync():null)),extremasResults:r.map((e=>e.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:a,localizedExtremas:i.arraySync()}),n.forEach((e=>e.forEach((e=>e.dispose())))),s.forEach((e=>e&&e.dispose())),r.forEach((e=>e.dispose())),i.dispose(),o.dispose(),l.dispose(),u.dispose(),c.dispose(),h.dispose();const m=[];for(let e=0;e<p.length;e++){if(0==p[e][0])continue;const t=[];for(let n=0;n<f[e].length;n+=4){let s=16777216*f[e][n]+65536*f[e][n+1]+256*f[e][n+2]+f[e][n+3];t.push(s)}const n=p[e][1],s=p[e][2],r=p[e][3]*Math.pow(2,n)+Math.pow(2,n-1)-.5,a=s*Math.pow(2,n)+Math.pow(2,n-1)-.5,i=Math.pow(2,n);m.push({maxima:p[e][0]>0,x:r,y:a,scale:i,angle:d[e],descriptors:t})}return{featurePoints:m,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let s=0;s<e.shape[1];s++)for(let r=s+1;r<e.shape[1];r++)t.push(s),n.push(r);const s=Aa(t,[t.length]).cast("int32"),r=Aa(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Jo(Xh([s,r],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors,n=Math.ceil(eW/8);if(!this.kernelCaches.computeFreakDescriptors){const t={variableNames:["freak","p"],outputShape:[e.shape[0],n],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int descIndex = coords[1] * 8;\n\n\t    int sum = 0;\n\t    for (int i = 0; i < 8; i++) {\n\t      if (descIndex + i >= ${eW}) {\n\t\tcontinue;\n\t      }\n\n\t      int p1 = int(getP(descIndex + i, 0));\n\t      int p2 = int(getP(descIndex + i, 1));\n\n\t      float v1 = getFreak(featureIndex, p1);\n\t      float v2 = getFreak(featureIndex, p2);\n\n\t      if (v1 < v2 + 0.01) {\n\t        sum += int(pow(2.0, float(7 - i)));\n\t      }\n\t    }\n\t    setOutput(float(sum));\n\t  }\n\t`};this.kernelCaches.computeFreakDescriptors=[t]}return Yo((()=>{const[n]=this.kernelCaches.computeFreakDescriptors;return this._runWebGLProgram(n,[e,t],"int32")}))}_computeExtremaFreak(e,t,n){this.tensorCaches._computeExtremaFreak||Yo((()=>{const e=Aa(QB);this.tensorCaches._computeExtremaFreak={freakPointsT:Jo(e)}}));const{freakPointsT:s}=this.tensorCaches._computeExtremaFreak,r=[];for(let t=1;t<e.length;t++)r.push(e[t][1]);if(!this.kernelCaches._computeExtremaFreak){const n=[];for(let t=1;t<e.length;t++)n.push("image"+t);let s="float getPixel(int octave, int y, int x) {";for(let t=1;t<e.length;t++)s+=`\n\t  if (octave == ${t}) {\n\t    return getImage${t}(y, x);\n\t  }\n\t`;s+="}";const r={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[t.shape[0],QB.length],userCode:`\n\t  ${s}\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int freakIndex = coords[1];\n\n\t    float freakSigma = getFreakPoints(freakIndex, 0);\n\t    float freakX = getFreakPoints(freakIndex, 1);\n\t    float freakY = getFreakPoints(freakIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    float inputY = getExtrema(featureIndex, 2);\n\t    float inputX = getExtrema(featureIndex, 3);\n\t    float inputAngle = getAngles(featureIndex);\n            float cos = 7. * cos(inputAngle);\n            float sin = 7. * sin(inputAngle);\n\n\t    float yp = inputY + freakX * sin + freakY * cos;\n\t    float xp = inputX + freakX * cos + freakY * -sin;\n\n\t    int x0 = int(floor(xp));\n\t    int x1 = x0 + 1;\n\t    int y0 = int(floor(yp));\n\t    int y1 = y0 + 1;\n\n\t    float f1 = getPixel(octave, y0, x0);\n\t    float f2 = getPixel(octave, y0, x1);\n\t    float f3 = getPixel(octave, y1, x0);\n\t    float f4 = getPixel(octave, y1, x1);\n\n\t    float x1f = float(x1);\n\t    float y1f = float(y1);\n\t    float x0f = float(x0);\n\t    float y0f = float(y0);\n\n\t    // ratio for interpolation between four neighbouring points\n\t    float value = (x1f - xp) * (y1f - yp) * f1\n\t\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\t    setOutput(value);\n\t  }\n\t`};this.kernelCaches._computeExtremaFreak=[r]}return Yo((()=>{const[e]=this.kernelCaches._computeExtremaFreak;return this._compileAndRun(e,[...r,t,n,s])}))}_computeExtremaAngles(e){if(!this.kernelCaches.computeExtremaAngles){const t={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\n\t    int maxIndex = 0;\n\t    for (int i = 1; i < 36; i++) {\n\t      if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n\t\tmaxIndex = i;\n\t      }\n\t    }\n\n\t    int prev = imod(maxIndex - 1 + 36, 36);\n\t    int next = imod(maxIndex + 1, 36);\n\n\t    /**\n\t     * Fit a quatratic to 3 points. The system of equations is:\n\t     *\n\t     * y0 = A*x0^2 + B*x0 + C\n\t     * y1 = A*x1^2 + B*x1 + C\n\t     * y2 = A*x2^2 + B*x2 + C\n\t     *\n\t     * This system of equations is solved for A,B,C.\n\t     */\n\t    float p10 = float(maxIndex - 1);\n\t    float p11 = getHistogram(featureIndex, prev); \n\t    float p20 = float(maxIndex);\n\t    float p21 = getHistogram(featureIndex, maxIndex); \n\t    float p30 = float(maxIndex + 1);\n\t    float p31 = getHistogram(featureIndex, next); \n\n\t    float d1 = (p30-p20)*(p30-p10);\n\t    float d2 = (p10-p20)*(p30-p10);\n\t    float d3 = p10-p20;\n\n\t    // If any of the denominators are zero then, just use maxIndex.\n            float fbin = float(maxIndex);\n\t    if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n\t      float a = p10*p10;\n\t      float b = p20*p20;\n\n\t      // Solve for the coefficients A,B,C\n\t      float A = ((p31-p21)/d1)-((p11-p21)/d2);\n\t      float B = ((p11-p21)+(A*(b-a)))/d3;\n\t      float C = p11-(A*a)-(B*p10);\n\t      fbin = -B / (2. * A);\n\t    }\n\n\t    float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n\t    setOutput(an);\n\t  }\n\t`};this.kernelCaches.computeExtremaAngles=t}return Yo((()=>{const t=this.kernelCaches.computeExtremaAngles;return this._compileAndRun(t,[e])}))}_computeOrientationHistograms(e,t){const n=[];for(let e=1;e<t.length;e++)n.push(t[e][1]);this.tensorCaches.orientationHistograms||Yo((()=>{const e=Math.ceil(4.5),t=[];for(let n=-e;n<=e;n++)for(let s=-e;s<=e;s++){const e=s*s+n*n;if(e<=20.25){const r=-.05555555555555555*e;let a=.0013888888*(720+r*(720+r*(360+r*(120+r*(30+r*(6+r))))));t.push([n,s,a])}}this.tensorCaches.orientationHistograms={radialPropertiesT:Jo(Aa(t,[t.length,3]))}}));const{radialPropertiesT:s}=this.tensorCaches.orientationHistograms;if(!this.kernelCaches.computeOrientationHistograms){const n=[];for(let e=1;e<t.length;e++)n.push("image"+e);let r="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)r+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n\t`;r+="}";const a={variableNames:[...n,"extrema","radial"],outputShape:[e.shape[0],s.shape[0],2],userCode:`\n\t  ${r}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int radialIndex = coords[1];\n\t    int propertyIndex = coords[2];\n\n\t    int radialY = int(getRadial(radialIndex, 0));\n\t    int radialX = int(getRadial(radialIndex, 1));\n\t    float radialW = getRadial(radialIndex, 2);\n\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\n\t    int xp = x + radialX;\n\t    int yp = y + radialY;\n\n\t    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n\t    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n\t    if (propertyIndex == 0) {\n\t      // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n\t      \n\t      float angle = atan(dy, dx) + ${Math.PI};\n\t      float fbin = angle * 36. * 0.159154943091895;\n\t      setOutput(fbin);\n\t      return;\n\t    }\n\n\t    if (propertyIndex == 1) {\n\t      float mag = sqrt(dx * dx + dy * dy);\n\t      float magnitude = radialW * mag;\n\t      setOutput(magnitude);\n\t      return;\n\t    }\n\t  }\n\n\t`},i={variableNames:["fbinMag"],outputShape:[e.shape[0],36],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    float sum = 0.;\n\t    for (int i = 0; i < ${s.shape[0]}; i++) {\n\t      float fbin = getFbinMag(featureIndex, i, 0);\n\t      int bin = int(floor(fbin - 0.5));\n\t      int b1 = imod(bin + 36, 36);\n\t      int b2 = imod(bin + 1 + 36, 36);\n\n\t      if (b1 == binIndex || b2 == binIndex) {\n\t\tfloat magnitude = getFbinMag(featureIndex, i, 1);\n\t\tfloat w2 = fbin - float(bin) - 0.5;\n\t\tfloat w1 = w2 * -1. + 1.;\n\n\t\tif (b1 == binIndex) {\n\t\t  sum += w1 * magnitude;\n\t\t}\n\t\tif (b2 == binIndex) {\n\t\t  sum += w2 * magnitude;\n\t\t}\n\t      }\n\t    }\n\t    setOutput(sum);\n\t  }\n\t`};this.kernelCaches.computeOrientationHistograms=[a,i]}return Yo((()=>{const[t,r]=this.kernelCaches.computeOrientationHistograms,a=this._compileAndRun(t,[...n,e,s]);return this._compileAndRun(r,[a])}))}_smoothHistograms(e){if(!this.kernelCaches.smoothHistograms){const t={variableNames:["histogram"],outputShape:[e.shape[0],36],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int binIndex = coords[1];\n\n\t    int prevBin = imod(binIndex - 1 + 36, 36);\n\t    int nextBin = imod(binIndex + 1, 36);\n\n            float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n\t    setOutput(result);\n\t  }\n\t"};this.kernelCaches.smoothHistograms=t}return Yo((()=>{const t=this.kernelCaches.smoothHistograms;for(let n=0;n<5;n++)e=this._compileAndRun(t,[e]);return e}))}_computeLocalization(e,t){if(!this.kernelCaches.computeLocalization){const n=[];let s="float getPixel(int octave, int y, int x) {";for(let e=1;e<t.length;e++)n.push("image"+e),s+=`\n\t  if (octave == ${e}) {\n\t    return getImage${e}(y, x);\n\t  }\n \t`;s+="}";const r={variableNames:[...n,"extrema"],outputShape:[e.length,3,3],userCode:`\n\t  ${s}\n\n\t  void main() {\n\t    ivec3 coords = getOutputCoords();\n\t    int featureIndex = coords[0];\n\t    float score = getExtrema(featureIndex, 0);\n\t    if (score == 0.0) {\n\t      return;\n\t    }\n\n\t    int dy = coords[1]-1;\n\t    int dx = coords[2]-1;\n\t    int octave = int(getExtrema(featureIndex, 1));\n\t    int y = int(getExtrema(featureIndex, 2));\n\t    int x = int(getExtrema(featureIndex, 3));\n\t    setOutput(getPixel(octave, y+dy, x+dx));\n\t  }\n\t`};this.kernelCaches.computeLocalization=[r]}return Yo((()=>{const n=this.kernelCaches.computeLocalization[0],s=Aa(e,[e.length,e[0].length],"int32"),r=this._compileAndRun(n,[...t.slice(1),s]).arraySync(),a=[];for(let e=0;e<r.length;e++){a.push([]);for(let t=0;t<r[e].length;t++)a[e].push([])}const i=[];for(let t=0;t<e.length;t++)i[t]=[e[t][0],e[t][1],e[t][2],e[t][3]];for(let e=0;e<i.length;e++){if(0===i[e][0])continue;const t=r[e],n=.5*(t[1][2]-t[1][0]),s=.5*(t[2][1]-t[0][1]),a=t[1][2]+t[1][0]-2*t[1][1],o=t[2][1]+t[0][1]-2*t[1][1],l=.25*(t[0][0]+t[2][2]-t[0][2]-t[2][0]),u=a*o-l*l,c=(o*-n+-l*-s)/u,h=(-l*-n+a*-s)/u,p=i[e][2]+h,d=i[e][3]+c;Math.abs(u)<1e-4||(i[e][2]=p,i[e][3]=d)}return Aa(i,[i.length,i[0].length],"float32")}))}_applyPrune(e){if(!this.kernelCaches.applyPrune){const t=[];for(let n=0;n<e.length;n++){const s=e[n].shape[0],r=e[n].shape[1],a={variableNames:["extrema"],outputShape:[Math.floor(s/2),Math.floor(r/2)],userCode:"\n\t    void main() {\n\t      ivec2 coords = getOutputCoords();\n\t      int y = coords[0] * 2;\n\t      int x = coords[1] * 2;\n\n\t      float location = 0.0;\n\t      float values = getExtrema(y, x);\n\n\t      if (getExtrema(y+1, x) != 0.0) {\n\t        location = 1.0;\n\t\tvalues = getExtrema(y+1, x);\n\t      }\n\t      else if (getExtrema(y, x+1) != 0.0) {\n\t        location = 2.0;\n\t\tvalues = getExtrema(y, x+1);\n\t      }\n\t      else if (getExtrema(y+1, x+1) != 0.0) {\n\t        location = 3.0;\n\t\tvalues = getExtrema(y+1, x+1);\n\t      }\n\n\t      if (values < 0.0) {\n\t        setOutput(location * -1000.0 + values);\n\t      } else {\n\t        setOutput(location * 1000.0 + values);\n\t      }\n\t    }\n\t  "};t.push(a)}this.kernelCaches.applyPrune={reductionKernels:t}}const t=[],n=[];for(let e=0;e<100;e++){n.push([]),t.push([]);for(let s=0;s<5;s++)n[e].push([0,0,0,0]),t[e].push(0)}Yo((()=>{const{reductionKernels:s}=this.kernelCaches.applyPrune;for(let r=0;r<e.length;r++){const a=s[r],i=this._compileAndRun(a,[e[r]]),o=r+1,l=i.arraySync(),u=i.shape[0],c=i.shape[1],h=2*c/10,p=2*u/10;for(let e=0;e<u;e++)for(let s=0;s<c;s++){const r=l[e][s];if(0==r)continue;const a=r%1e3,i=Math.floor(Math.abs(r)/1e3),u=2*s+(2===i||3===i?1:0),c=2*e+(1===i||3===i?1:0),d=Math.floor(u/h),f=10*Math.floor(c/p)+d,m=Math.abs(a);let g=5;for(;g>=1&&m>t[f][g-1];)g-=1;if(g<5){for(let e=4;e>=g+1;e--)t[f][e]=t[f][e-1],n[f][e][0]=n[f][e-1][0],n[f][e][1]=n[f][e-1][1],n[f][e][2]=n[f][e-1][2],n[f][e][3]=n[f][e-1][3];t[f][g]=m,n[f][g][0]=a,n[f][g][1]=o,n[f][g][2]=c,n[f][g][3]=u}}}}));const s=[];for(let e=0;e<100;e++)for(let t=0;t<5;t++)s.push(n[e][t]);return s}_buildExtremas(e,t,n){const s=t.shape[0],r=t.shape[1],a="w"+r;if(this.kernelCaches.buildExtremas||(this.kernelCaches.buildExtremas={}),!this.kernelCaches.buildExtremas[a]){const e={variableNames:["image0","image1","image2"],outputShape:[s,r],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int y = coords[0];\n\t    int x = coords[1];\n\n\t    float value = getImage1(y, x);\n\n\t    // Step 1: find local maxima/minima\n\t    if (value * value < 9.) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (y < 7 || y > ${s-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    if (x < 7 || x > ${r-1-7}) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    bool isMax = true;\n\t    bool isMin = true;\n\t    for (int dy = -1; dy <= 1; dy++) {\n\t      for (int dx = -1; dx <= 1; dx++) {\n\t        float value0 = getImage0(y+dy, x+dx);\n\t        float value1 = getImage1(y+dy, x+dx);\n\t        float value2 = getImage2(y+dy, x+dx);\n\n\t\tif (value < value0 || value < value1 || value < value2) {\n\t\t  isMax = false;\n\t\t}\n\t\tif (value > value0 || value > value1 || value > value2) {\n\t\t  isMin = false;\n\t\t}\n\t      }\n\t    }\n\n\t    if (!isMax && !isMin) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    // compute edge score and reject based on threshold\n\t    float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n\t    float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n\t    float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n\n\t    float det = (dxx * dyy) - (dxy * dxy);\n\n\t    if (abs(det) < 0.0001) { // determinant undefined. no solution\n\t      setOutput(0.);\n\t      return;\n\t    }\n\n\t    float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n\n\t    if (abs(edgeScore) >= 6.25 ) {\n\t      setOutput(0.);\n\t      return;\n\t    }\n\t    setOutput(getImage1(y,x));\n\t  }\n\t`};this.kernelCaches.buildExtremas[a]=e}return Yo((()=>{const s=this.kernelCaches.buildExtremas[a];return e=this._downsampleBilinear(e),n=this._upsampleBilinear(n,t),this._compileAndRun(s,[e,t,n])}))}_differenceImageBinomial(e,t){return Yo((()=>e.sub(t)))}_applyFilter(e){const t=e.shape[0],n=e.shape[1],s="w"+n;if(this.kernelCaches.applyFilter||(this.kernelCaches.applyFilter={}),!this.kernelCaches.applyFilter[s]){const e={variableNames:["p"],outputShape:[t,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0], coords[1]-2);\n\t    sum += getP(coords[0], coords[1]-1) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0], coords[1]+1) * 4.;\n\t    sum += getP(coords[0], coords[1]+2);\n\t    setOutput(sum);\n\t  }\n\t"},r={variableNames:["p"],outputShape:[t,n],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float sum = getP(coords[0]-2, coords[1]);\n\t    sum += getP(coords[0]-1, coords[1]) * 4.;\n\t    sum += getP(coords[0], coords[1]) * 6.;\n\t    sum += getP(coords[0]+1, coords[1]) * 4.;\n\t    sum += getP(coords[0]+2, coords[1]);\n\t    sum /= 256.;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.applyFilter[s]=[e,r]}return Yo((()=>{const[t,n]=this.kernelCaches.applyFilter[s],r=this._compileAndRun(t,[e]);return this._compileAndRun(n,[r])}))}_upsampleBilinear(e,t){e.shape[0];const n="w"+e.shape[1];if(this.kernelCaches.upsampleBilinear||(this.kernelCaches.upsampleBilinear={}),!this.kernelCaches.upsampleBilinear[n]){const e={variableNames:["p"],outputShape:[t.shape[0],t.shape[1]],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int j = coords[0];\n\t    int i = coords[1];\n\n\t    float sj = 0.5 * float(j) - 0.25; \n\t    float si = 0.5 * float(i) - 0.25;\n\n\t    float sj0 = floor(sj);\n\t    float sj1 = ceil(sj);\n\t    float si0 = floor(si);\n\t    float si1 = ceil(si);\n\n\t    int sj0I = int(sj0);\n\t    int sj1I = int(sj1);\n\t    int si0I = int(si0);\n\t    int si1I = int(si1);\n\n\t    float sum = 0.0;\n\t    sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n\t    sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n\t    sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n\t    sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.upsampleBilinear[n]=e}return Yo((()=>{const t=this.kernelCaches.upsampleBilinear[n];return this._compileAndRun(t,[e])}))}_downsampleBilinear(e){const t=e.shape[0],n=e.shape[1],s="w"+n;if(this.kernelCaches.downsampleBilinear||(this.kernelCaches.downsampleBilinear={}),!this.kernelCaches.downsampleBilinear[s]){const e={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(n/2)],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\t    int y = coords[0] * 2;\n\t    int x = coords[1] * 2;\n\n\t    float sum = getP(y, x) * 0.25;\n\t    sum += getP(y+1,x) * 0.25; \n\t    sum += getP(y, x+1) * 0.25; \n\t    sum += getP(y+1,x+1) * 0.25;\n\t    setOutput(sum);\n\t  }\n\t"};this.kernelCaches.downsampleBilinear[s]=e}return Yo((()=>{const t=this.kernelCaches.downsampleBilinear[s];return this._compileAndRun(t,[e])}))}_compileAndRun(e,t){const n=ol().compileAndRun(e,t);return qo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=ol().runWebGLProgram(e,t,n);return qo().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}class nW{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let s=Math.min(e,t)/2,r=Math.pow(2,Math.round(Math.log(s)/Math.log(2)));this.cropSize=r,this.detector=new tW(r,r,n),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),s=this._detect(e,n,t);return this.debugMode&&(s.debugExtra.crop={startX:n,startY:t,cropSize:this.cropSize}),s}detectMoving(e){const t=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let s=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),r=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return r<0&&(r=0),s<0&&(s=0),r>=this.width-this.cropSize&&(r=this.width-this.cropSize-1),s>=this.height-this.cropSize&&(s=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,r,s)}_detect(e,t,n){const s=e.slice([n,t],[this.cropSize,this.cropSize]),{featurePoints:r,debugExtra:a}=this.detector.detect(s);return r.forEach((e=>{e.x+=t,e.y+=n})),this.debugMode&&(a.projectedImage=s.arraySync()),s.dispose(),{featurePoints:r,debugExtra:a}}}const sW=({image:e,ratio:t})=>{const n=Math.round(e.width*t),s=Math.round(e.height*t),r=new Uint8Array(n*s);for(let a=0;a<n;a++){let i=Math.round(1*a/t),o=Math.round(1*(a+1)/t)-1;o>=e.width&&(o=e.width-1);for(let l=0;l<s;l++){let s=Math.round(1*l/t),u=Math.round(1*(l+1)/t)-1;u>=e.height&&(u=e.height-1);let c=0,h=0;for(let t=i;t<=o;t++)for(let n=s;n<=u;n++)c+=1*e.data[n*e.width+t],h+=1;r[l*n+a]=Math.floor(c/h)}}return{data:r,width:n,height:s}},rW=e=>{const t=[];let n=100/Math.min(e.width,e.height);for(;;)if(t.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}t.push(n),t.reverse();const s=[];for(let n=0;n<t.length;n++)e.width,t[n],e.height,t[n],s.push(Object.assign(sW({image:e,ratio:t[n]}),{scale:t[n]}));return s},aW=e=>{const t=Math.min(e.width,e.height),n=[],s=[];n.push(256/t),n.push(128/t);for(let t=0;t<n.length;t++)s.push(Object.assign(sW({image:e,ratio:n[t]}),{scale:n[t]}));return s},iW=e=>{const{v1:t,v2:n}=e;let s=0;for(let e=0;e<t.length;e++){let r=(t[e]^n[e])>>>0;s+=oW(r)}return s},oW=e=>{var t=e-(e>>1&1431655765);return((t=((t=((t=(t>>2&858993459)+(858993459&t))>>4)+t&252645135)>>8)+t&16711935)>>16)+t&65535},lW=()=>({seed:1234,arrayShuffle(e){const{arr:t,sampleSize:n}=e;for(let e=0;e<n;e++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=t.length;let s=t[e];t[e]=t[n],t[n]=s}},nextInt(e){this.seed=(214013*this.seed+2531011)%(1<<31);let t=this.seed>>16&32767;return t%=e,t}}),uW=({points:e})=>{const t=[];for(let n=0;n<e.length;n++)t.push(n);const n=lW();return{rootNode:cW({points:e,pointIndexes:t,centerPointIndex:null,randomizer:n})}},cW=e=>{const{points:t,pointIndexes:n,centerPointIndex:s,randomizer:r}=e;let a=!1;(n.length<=8||n.length<=16)&&(a=!0);const i={};if(!a){const e=(e=>{const{points:t,pointIndexes:n,randomizer:s}=e,r=[];for(let e=0;e<n.length;e++)r.push(e);let a=Number.MAX_SAFE_INTEGER,i=-1;const o=[];for(let e=0;e<128;e++){s.arrayShuffle({arr:r,sampleSize:8});let l=0;const u=[];for(let e=0;e<n.length;e++){let s=Number.MAX_SAFE_INTEGER;for(let a=0;a<8;a++){const i=n[r[a]],o=iW({v1:t[n[e]].descriptors,v2:t[i].descriptors});o<s&&(u[e]=r[a],s=o)}l+=s}o.push(u),l<a&&(a=l,i=e)}return o[i]})({points:t,pointIndexes:n,randomizer:r});for(let t=0;t<e.length;t++)void 0===i[n[e[t]]]&&(i[n[e[t]]]=[]),i[n[e[t]]].push(n[t])}1===Object.keys(i).length&&(a=!0);const o={centerPointIndex:s};if(a){o.leaf=!0,o.pointIndexes=[];for(let e=0;e<n.length;e++)o.pointIndexes.push(n[e]);return o}return o.leaf=!1,o.children=[],Object.keys(i).forEach((e=>{o.children.push(cW({points:t,pointIndexes:i[e],centerPointIndex:e,randomizer:r}))})),o};var hW=r(113);class pW{constructor(){this.data=null}compileImageTargets(e,t){return new Promise((async(n,s)=>{const a=[];for(let t=0;t<e.length;t++){const n=e[t],s=document.createElement("canvas");s.width=n.width,s.height=n.height;const r=s.getContext("2d");r.drawImage(n,0,0,n.width,n.height);const i=r.getImageData(0,0,n.width,n.height),o=new Uint8Array(n.width*n.height);for(let e=0;e<o.length;e++){const t=4*e;o[e]=Math.floor((i.data[t]+i.data[t+1]+i.data[t+2])/3)}const l={data:o,height:n.height,width:n.width};a.push(l)}const i=50/a.length;let o=0;this.data=[];for(let e=0;e<a.length;e++){const n=a[e],s=rW(n),r=i/s.length,l=await dW(s,(()=>{o+=r,t(o)}));this.data.push({targetImage:n,imageList:s,matchingData:l})}for(let e=0;e<a.length;e++){const t=aW(a[e]);this.data[e].trackingImageList=t}const l=await new Promise(((e,n)=>{const s=new Worker(new URL(r.p+r.u(137),r.b));s.onmessage=n=>{"progress"===n.data.type?t(50+n.data.percent):"compileDone"===n.data.type&&e(n.data.list)},s.postMessage({type:"compile",targetImages:a})}));for(let e=0;e<a.length;e++)this.data[e].trackingData=l[e];n(this.data)}))}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return hW.encode({v:2,dataList:e})}importData(e){const t=hW.decode(new Uint8Array(e));if(!t.v||2!==t.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=t;this.data=[];for(let e=0;e<n.length;e++)this.data.push({targetImage:n[e].targetImage,trackingData:n[e].trackingData,matchingData:n[e].matchingData});return this.data}}const dW=async(e,t)=>{const n=[];for(let s=0;s<e.length;s++){const r=e[s],a=new tW(r.width,r.height);await _d(),Yo((()=>{const e=Aa(r.data,[r.data.length],"float32").reshape([r.height,r.width]),{featurePoints:i}=a.detect(e),o=i.filter((e=>e.maxima)),l=i.filter((e=>!e.maxima)),u=uW({points:o}),c=uW({points:l});n.push({maximaPoints:o,minimaPoints:l,maximaPointsCluster:u,minimaPointsCluster:c,width:r.width,height:r.height,scale:r.scale}),t(s)}))}return n};class fW{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);const s=ol();this.tempPixelHandle=s.makeTensorInfo(this.texShape,"float32"),s.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return Yo((()=>{let t=ro(e);return t=t.mean(2),t}))}loadInput(e){this.context.drawImage(e,0,0,this.width,this.height);const t=ol();return t.gpgpu.uploadPixelDataToTexture(t.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const n=2===je().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(e,t){const n=ol().compileAndRun(e,t);return qo().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const s=ol().runWebGLProgram(e,t,n);return qo().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}}const mW=(e,t)=>{const n=2*Math.PI*t*e;return n/(n+1)},gW=(e,t,n)=>e*t+(1-e)*n;class yW{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map((()=>0)),this.tPrev=e,t;const{xPrev:n,tPrev:s,dxPrev:r}=this,a=e-s,i=mW(a,this.dCutOff),o=[],l=[],u=[];for(let e=0;e<t.length;e++){o[e]=(t[e]-n[e])/a,l[e]=gW(i,o[e],r[e]);const s=this.minCutOff+this.beta*Math.abs(l[e]),c=mW(a,s);u[e]=gW(c,t[e],n[e])}return this.xPrev=u,this.dxPrev=l,this.tPrev=e,u}}class bW{constructor({inputWidth:e,inputHeight:t,onUpdate:n=null,debugMode:s=!1,maxTrack:a=1,warmupTolerance:i=null,missTolerance:o=null,filterMinCF:l=null,filterBeta:u=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=a,this.filterMinCF=null===l?.001:l,this.filterBeta=null===u?1e3:u,this.warmupTolerance=null===i?5:i,this.missTolerance=null===o?5:o,this.cropDetector=new nW(this.inputWidth,this.inputHeight,s),this.inputLoader=new fW(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=n,this.debugMode=s,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const c=45*Math.PI/180,h=this.inputHeight/2/Math.tan(c/2);this.projectionTransform=[[h,0,this.inputWidth/2],[0,h,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new Worker(new URL(r.p+r.u(928),r.b)),this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(Ko().numTensors),console.table(Ko())}addImageTargets(e){return new Promise((async(t,n)=>{const s=await fetch(e),r=await s.arrayBuffer();t(this.addImageTargetsFromBuffer(r))}))}addImageTargetsFromBuffer(e){const t=(new pW).importData(e),n=[],s=[],r=[];for(let e=0;e<t.length;e++)s.push(t[e].matchingData),n.push(t[e].trackingData),r.push([t[e].targetImage.width,t[e].targetImage.height]);return this.tracker=new ZB(r,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:s}),this.markerDimensions=r,{dimensions:r,matchingDataList:s,trackingDataList:n}}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:n}=this.cropDetector.detectMoving(e),{targetIndex:s,modelViewTransform:r}=await this._workerMatch(n,t);return{targetIndex:s,modelViewTransform:r}}async _trackAndUpdate(e,t,n){const{worldCoords:s,screenCoords:r}=this.tracker.track(e,t,n);return s.length<4?null:await this._workerTrackUpdate(t,{worldCoords:s,screenCoords:r})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let e=0;e<this.markerDimensions.length;e++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new yW({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce(((e,t)=>e+(t.isTracking?1:0)),0)<this.maxTrack){const e=[];for(let t=0;t<this.trackingStates.length;t++)!0!==this.trackingStates[t].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||e.push(t));const{targetIndex:n,modelViewTransform:s}=await this._detectAndMatch(t,e);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=s)}for(let e=0;e<this.trackingStates.length;e++){const n=this.trackingStates[e];if(n.isTracking){let s=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null===s?n.isTracking=!1:n.currentModelViewTransform=s}if(n.showing||n.isTracking&&(n.trackMiss=0,n.trackCount+=1,n.trackCount>this.warmupTolerance&&(n.showing=!0,n.trackingMatrix=null,n.filter.reset())),n.showing&&(n.isTracking?n.trackMiss=0:(n.trackCount=0,n.trackMiss+=1,n.trackMiss>this.missTolerance&&(n.showing=!1,n.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:null})))),n.showing){const t=this._glModelViewMatrix(n.currentModelViewTransform,e);n.trackingMatrix=n.filter.filter(Date.now(),t);const s=[];for(let e=0;e<n.trackingMatrix.length;e++)s[e]=n.trackingMatrix[e];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:s})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await _d()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:n,debugExtra:s}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:n,debugExtra:s}}async match(e,t){const{modelViewTransform:n,debugExtra:s}=await this._workerMatch(e,[t]);return{modelViewTransform:n,debugExtra:s}}async track(e,t,n){const s=this.inputLoader.loadInput(e),r=this.tracker.track(s,t,n);return s.dispose(),r}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise((async(n,s)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtra:e.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})}))}_workerTrackUpdate(e,t){return new Promise((async(n,s)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};const{worldCoords:r,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:r,screenCoords:a})}))}_glModelViewMatrix(e,t){const n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:s,far:r}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(r+s)/(r-s),-2*r*s/(r-s)],[0,0,-1,0]],i=[];for(let e=0;e<4;e++)for(let t=0;t<4;t++)i.push(a[t][e]);return i}}var xW=r(439);const wW=new H.Matrix4;wW.compose(new H.Vector3,new H.Quaternion,new H.Vector3(.001,.001,.001)),window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE={}),window.MINDAR.IMAGE.MindARThree=class{constructor({container:e,imageTargetSrc:t,maxTrack:n,uiLoading:s="yes",uiScanning:r="yes",uiError:a="yes",filterMinCF:i=null,filterBeta:o=null,warmupTolerance:l=null,missTolerance:u=null}){this.container=e,this.imageTargetSrc=t,this.maxTrack=n,this.filterMinCF=i,this.filterBeta=o,this.warmupTolerance=l,this.missTolerance=u,this.ui=new xW.UI({uiLoading:s,uiScanning:r,uiError:a}),this.scene=new H.Scene,this.cssScene=new H.Scene,this.renderer=new H.WebGLRenderer({antialias:!0,alpha:!0}),this.cssRenderer=new XB({antialias:!0}),this.renderer.outputEncoding=H.sRGBEncoding,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new H.PerspectiveCamera,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach((function(e){e.stop()})),this.video.remove()}addAnchor(e){const t=new H.Group;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,css:!1,visible:!1};return this.anchors.push(n),this.scene.add(t),n}addCSSAnchor(e){const t=new H.Group;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,css:!0,visible:!1};return this.anchors.push(n),this.cssScene.add(t),n}_startVideo(){return new Promise(((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void t();navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then((t=>{this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()})),this.video.srcObject=t})).catch((e=>{console.log("getUserMedia error",e),t()}))}))}_startAR(){return new Promise((async(e,t)=>{const n=this.video;this.container,this.controller=new bW({inputWidth:n.videoWidth,inputHeight:n.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:e=>{if("updateMatrix"===e.type){const{targetIndex:t,worldMatrix:n}=e;for(let e=0;e<this.anchors.length;e++)if(this.anchors[e].targetIndex===t){if(this.anchors[e].css?this.anchors[e].group.children.forEach((e=>{e.element.style.visibility=null===n?"hidden":"visible"})):this.anchors[e].group.visible=null!==n,null!==n){let s=new H.Matrix4;s.elements=[...n],s.multiply(this.postMatrixs[t]),this.anchors[e].css&&s.multiply(wW),this.anchors[e].group.matrix=s}this.anchors[e].visible&&null===n&&(this.anchors[e].visible=!1,this.anchors[e].onTargetLost&&this.anchors[e].onTargetLost()),this.anchors[e].visible||null===n||(this.anchors[e].visible=!0,this.anchors[e].onTargetFound&&this.anchors[e].onTargetFound()),null!==n&&this.ui.hideScanning()}}}}),this.resize();const{dimensions:s}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let e=0;e<s.length;e++){const t=new H.Vector3,n=new H.Quaternion,r=new H.Vector3,[a,i]=s[e];t.x=a/2,t.y=a/2+(i-a)/2,r.x=a,r.y=a,r.z=a;const o=new H.Matrix4;o.compose(t,n,r),this.postMatrixs.push(o)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()}))}resize(){const{renderer:e,cssRenderer:t,camera:n,container:s,video:r}=this;if(!r)return;let a,i;const o=r.videoWidth/r.videoHeight;o>s.clientWidth/s.clientHeight?(i=s.clientHeight,a=i*o):(a=s.clientWidth,i=a/o);const l=this.controller.getProjectionMatrix(),u=2*Math.atan(1/l[5]/i*s.clientHeight)*180/Math.PI,c=l[14]/(l[10]-1),h=l[14]/(l[10]+1);l[5],l[0],n.fov=u,n.near=c,n.far=h,n.aspect=s.clientWidth/s.clientHeight,n.updateProjectionMatrix(),r.style.top=-(i-s.clientHeight)/2+"px",r.style.left=-(a-s.clientWidth)/2+"px",r.style.width=a+"px",r.style.height=i+"px";const p=e.domElement,d=t.domElement;p.style.position="absolute",p.style.left=0,p.style.top=0,p.style.width=s.clientWidth+"px",p.style.height=s.clientHeight+"px",d.style.position="absolute",d.style.left=0,d.style.top=0,d.style.width=s.clientWidth+"px",d.style.height=s.clientHeight+"px",e.setSize(s.clientWidth,s.clientHeight),t.setSize(s.clientWidth,s.clientHeight)}},window.MINDAR.IMAGE.THREE=j,window.MINDAR.IMAGE.tf=G})()})();
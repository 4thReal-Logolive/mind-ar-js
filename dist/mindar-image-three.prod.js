/*! For license information please see mindar-image-three.prod.js.LICENSE.txt */
(()=>{var e={113:function(e){e.exports=function(e){var t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={i:r,l:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.l=!0,s.exports}return n.m=e,n.c=t,n.d=function(e,t,r){n.o(e,t)||Object.defineProperty(e,t,{enumerable:!0,get:r})},n.r=function(e){"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.t=function(e,t){if(1&t&&(e=n(e)),8&t)return e;if(4&t&&"object"==typeof e&&e&&e.__esModule)return e;var r=Object.create(null);if(n.r(r),Object.defineProperty(r,"default",{enumerable:!0,value:e}),2&t&&"string"!=typeof e)for(var s in e)n.d(r,s,function(t){return e[t]}.bind(null,s));return r},n.n=function(e){var t=e&&e.__esModule?function(){return e.default}:function(){return e};return n.d(t,"a",t),t},n.o=function(e,t){return Object.prototype.hasOwnProperty.call(e,t)},n.p="",n(n.s=0)}([function(e,t,n){"use strict";n.r(t),n.d(t,"encode",(function(){return S})),n.d(t,"decode",(function(){return W})),n.d(t,"decodeAsync",(function(){return K})),n.d(t,"decodeArrayStream",(function(){return X})),n.d(t,"decodeStream",(function(){return Y})),n.d(t,"Decoder",(function(){return P})),n.d(t,"Encoder",(function(){return D})),n.d(t,"ExtensionCodec",(function(){return N})),n.d(t,"ExtData",(function(){return d})),n.d(t,"EXT_TIMESTAMP",(function(){return g})),n.d(t,"encodeDateToTimeSpec",(function(){return b})),n.d(t,"encodeTimeSpecToTimestamp",(function(){return y})),n.d(t,"decodeTimestampToTimeSpec",(function(){return w})),n.d(t,"encodeTimestampExtension",(function(){return x})),n.d(t,"decodeTimestampExtension",(function(){return v}));var r=function(e,t){var n="function"==typeof Symbol&&e[Symbol.iterator];if(!n)return e;var r,s,a=n.call(e),i=[];try{for(;(void 0===t||t-- >0)&&!(r=a.next()).done;)i.push(r.value)}catch(e){s={error:e}}finally{try{r&&!r.done&&(n=a.return)&&n.call(a)}finally{if(s)throw s.error}}return i},s=function(){for(var e=[],t=0;t<arguments.length;t++)e=e.concat(r(arguments[t]));return e},a="undefined"!=typeof process&&"undefined"!=typeof TextEncoder&&"undefined"!=typeof TextDecoder;function i(e){for(var t=e.length,n=0,r=0;r<t;){var s=e.charCodeAt(r++);if(0!=(4294967168&s))if(0==(4294965248&s))n+=2;else{if(s>=55296&&s<=56319&&r<t){var a=e.charCodeAt(r);56320==(64512&a)&&(++r,s=((1023&s)<<10)+(1023&a)+65536)}n+=0==(4294901760&s)?3:4}else n++}return n}var o=a?new TextEncoder:void 0,u="undefined"!=typeof process?200:0,l=(null==o?void 0:o.encodeInto)?function(e,t,n){o.encodeInto(e,t.subarray(n))}:function(e,t,n){t.set(o.encode(e),n)};function c(e,t,n){for(var r=t,a=r+n,i=[],o="";r<a;){var u=e[r++];if(0==(128&u))i.push(u);else if(192==(224&u)){var l=63&e[r++];i.push((31&u)<<6|l)}else if(224==(240&u)){l=63&e[r++];var c=63&e[r++];i.push((31&u)<<12|l<<6|c)}else if(240==(248&u)){var h=(7&u)<<18|(l=63&e[r++])<<12|(c=63&e[r++])<<6|63&e[r++];h>65535&&(h-=65536,i.push(h>>>10&1023|55296),h=56320|1023&h),i.push(h)}else i.push(u);i.length>=4096&&(o+=String.fromCharCode.apply(String,s(i)),i.length=0)}return i.length>0&&(o+=String.fromCharCode.apply(String,s(i))),o}var h=a?new TextDecoder:null,p="undefined"!=typeof process?200:0,d=function(e,t){this.type=e,this.data=t};function f(e,t,n){var r=Math.floor(n/4294967296),s=n;e.setUint32(t,r),e.setUint32(t+4,s)}function m(e,t){return 4294967296*e.getInt32(t)+e.getUint32(t+4)}var g=-1;function y(e){var t,n=e.sec,r=e.nsec;if(n>=0&&r>=0&&n<=17179869183){if(0===r&&n<=4294967295){var s=new Uint8Array(4);return(t=new DataView(s.buffer)).setUint32(0,n),s}var a=n/4294967296,i=4294967295&n;return s=new Uint8Array(8),(t=new DataView(s.buffer)).setUint32(0,r<<2|3&a),t.setUint32(4,i),s}return s=new Uint8Array(12),(t=new DataView(s.buffer)).setUint32(0,r),f(t,4,n),s}function b(e){var t=e.getTime(),n=Math.floor(t/1e3),r=1e6*(t-1e3*n),s=Math.floor(r/1e9);return{sec:n+s,nsec:r-1e9*s}}function x(e){return e instanceof Date?y(b(e)):null}function w(e){var t=new DataView(e.buffer,e.byteOffset,e.byteLength);switch(e.byteLength){case 4:return{sec:t.getUint32(0),nsec:0};case 8:var n=t.getUint32(0);return{sec:4294967296*(3&n)+t.getUint32(4),nsec:n>>>2};case 12:return{sec:m(t,4),nsec:t.getUint32(0)};default:throw new Error("Unrecognized data size for timestamp: "+e.length)}}function v(e){var t=w(e);return new Date(1e3*t.sec+t.nsec/1e6)}var k={type:g,encode:x,decode:v},N=function(){function e(){this.builtInEncoders=[],this.builtInDecoders=[],this.encoders=[],this.decoders=[],this.register(k)}return e.prototype.register=function(e){var t=e.type,n=e.encode,r=e.decode;if(t>=0)this.encoders[t]=n,this.decoders[t]=r;else{var s=1+t;this.builtInEncoders[s]=n,this.builtInDecoders[s]=r}},e.prototype.tryToEncode=function(e,t){for(var n=0;n<this.builtInEncoders.length;n++)if(null!=(r=this.builtInEncoders[n])&&null!=(s=r(e,t)))return new d(-1-n,s);for(n=0;n<this.encoders.length;n++){var r,s;if(null!=(r=this.encoders[n])&&null!=(s=r(e,t)))return new d(n,s)}return e instanceof d?e:null},e.prototype.decode=function(e,t,n){var r=t<0?this.builtInDecoders[-1-t]:this.decoders[t];return r?r(e,t,n):new d(t,e)},e.defaultCodec=new e,e}();function I(e){return e instanceof Uint8Array?e:ArrayBuffer.isView(e)?new Uint8Array(e.buffer,e.byteOffset,e.byteLength):e instanceof ArrayBuffer?new Uint8Array(e):Uint8Array.from(e)}var C=function(e){var t="function"==typeof Symbol&&Symbol.iterator,n=t&&e[t],r=0;if(n)return n.call(e);if(e&&"number"==typeof e.length)return{next:function(){return e&&r>=e.length&&(e=void 0),{value:e&&e[r++],done:!e}}};throw new TypeError(t?"Object is not iterable.":"Symbol.iterator is not defined.")},D=function(){function e(e,t,n,r,s,a,i){void 0===e&&(e=N.defaultCodec),void 0===n&&(n=100),void 0===r&&(r=2048),void 0===s&&(s=!1),void 0===a&&(a=!1),void 0===i&&(i=!1),this.extensionCodec=e,this.context=t,this.maxDepth=n,this.initialBufferSize=r,this.sortKeys=s,this.forceFloat32=a,this.ignoreUndefined=i,this.pos=0,this.view=new DataView(new ArrayBuffer(this.initialBufferSize)),this.bytes=new Uint8Array(this.view.buffer)}return e.prototype.encode=function(e,t){if(t>this.maxDepth)throw new Error("Too deep objects in depth "+t);null==e?this.encodeNil():"boolean"==typeof e?this.encodeBoolean(e):"number"==typeof e?this.encodeNumber(e):"string"==typeof e?this.encodeString(e):this.encodeObject(e,t)},e.prototype.getUint8Array=function(){return this.bytes.subarray(0,this.pos)},e.prototype.ensureBufferSizeToWrite=function(e){var t=this.pos+e;this.view.byteLength<t&&this.resizeBuffer(2*t)},e.prototype.resizeBuffer=function(e){var t=new ArrayBuffer(e),n=new Uint8Array(t),r=new DataView(t);n.set(this.bytes),this.view=r,this.bytes=n},e.prototype.encodeNil=function(){this.writeU8(192)},e.prototype.encodeBoolean=function(e){!1===e?this.writeU8(194):this.writeU8(195)},e.prototype.encodeNumber=function(e){Number.isSafeInteger(e)?e>=0?e<128?this.writeU8(e):e<256?(this.writeU8(204),this.writeU8(e)):e<65536?(this.writeU8(205),this.writeU16(e)):e<4294967296?(this.writeU8(206),this.writeU32(e)):(this.writeU8(207),this.writeU64(e)):e>=-32?this.writeU8(224|e+32):e>=-128?(this.writeU8(208),this.writeI8(e)):e>=-32768?(this.writeU8(209),this.writeI16(e)):e>=-2147483648?(this.writeU8(210),this.writeI32(e)):(this.writeU8(211),this.writeI64(e)):this.forceFloat32?(this.writeU8(202),this.writeF32(e)):(this.writeU8(203),this.writeF64(e))},e.prototype.writeStringHeader=function(e){if(e<32)this.writeU8(160+e);else if(e<256)this.writeU8(217),this.writeU8(e);else if(e<65536)this.writeU8(218),this.writeU16(e);else{if(!(e<4294967296))throw new Error("Too long string: "+e+" bytes in UTF-8");this.writeU8(219),this.writeU32(e)}},e.prototype.encodeString=function(e){var t=e.length;if(a&&t>u){var n=i(e);this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),l(e,this.bytes,this.pos),this.pos+=n}else n=i(e),this.ensureBufferSizeToWrite(5+n),this.writeStringHeader(n),function(e,t,n){for(var r=e.length,s=n,a=0;a<r;){var i=e.charCodeAt(a++);if(0!=(4294967168&i)){if(0==(4294965248&i))t[s++]=i>>6&31|192;else{if(i>=55296&&i<=56319&&a<r){var o=e.charCodeAt(a);56320==(64512&o)&&(++a,i=((1023&i)<<10)+(1023&o)+65536)}0==(4294901760&i)?(t[s++]=i>>12&15|224,t[s++]=i>>6&63|128):(t[s++]=i>>18&7|240,t[s++]=i>>12&63|128,t[s++]=i>>6&63|128)}t[s++]=63&i|128}else t[s++]=i}}(e,this.bytes,this.pos),this.pos+=n},e.prototype.encodeObject=function(e,t){var n=this.extensionCodec.tryToEncode(e,this.context);if(null!=n)this.encodeExtension(n);else if(Array.isArray(e))this.encodeArray(e,t);else if(ArrayBuffer.isView(e))this.encodeBinary(e);else{if("object"!=typeof e)throw new Error("Unrecognized object: "+Object.prototype.toString.apply(e));this.encodeMap(e,t)}},e.prototype.encodeBinary=function(e){var t=e.byteLength;if(t<256)this.writeU8(196),this.writeU8(t);else if(t<65536)this.writeU8(197),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large binary: "+t);this.writeU8(198),this.writeU32(t)}var n=I(e);this.writeU8a(n)},e.prototype.encodeArray=function(e,t){var n,r,s=e.length;if(s<16)this.writeU8(144+s);else if(s<65536)this.writeU8(220),this.writeU16(s);else{if(!(s<4294967296))throw new Error("Too large array: "+s);this.writeU8(221),this.writeU32(s)}try{for(var a=C(e),i=a.next();!i.done;i=a.next()){var o=i.value;this.encode(o,t+1)}}catch(e){n={error:e}}finally{try{i&&!i.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}},e.prototype.countWithoutUndefined=function(e,t){var n,r,s=0;try{for(var a=C(t),i=a.next();!i.done;i=a.next())void 0!==e[i.value]&&s++}catch(e){n={error:e}}finally{try{i&&!i.done&&(r=a.return)&&r.call(a)}finally{if(n)throw n.error}}return s},e.prototype.encodeMap=function(e,t){var n,r,s=Object.keys(e);this.sortKeys&&s.sort();var a=this.ignoreUndefined?this.countWithoutUndefined(e,s):s.length;if(a<16)this.writeU8(128+a);else if(a<65536)this.writeU8(222),this.writeU16(a);else{if(!(a<4294967296))throw new Error("Too large map object: "+a);this.writeU8(223),this.writeU32(a)}try{for(var i=C(s),o=i.next();!o.done;o=i.next()){var u=o.value,l=e[u];this.ignoreUndefined&&void 0===l||(this.encodeString(u),this.encode(l,t+1))}}catch(e){n={error:e}}finally{try{o&&!o.done&&(r=i.return)&&r.call(i)}finally{if(n)throw n.error}}},e.prototype.encodeExtension=function(e){var t=e.data.length;if(1===t)this.writeU8(212);else if(2===t)this.writeU8(213);else if(4===t)this.writeU8(214);else if(8===t)this.writeU8(215);else if(16===t)this.writeU8(216);else if(t<256)this.writeU8(199),this.writeU8(t);else if(t<65536)this.writeU8(200),this.writeU16(t);else{if(!(t<4294967296))throw new Error("Too large extension object: "+t);this.writeU8(201),this.writeU32(t)}this.writeI8(e.type),this.writeU8a(e.data)},e.prototype.writeU8=function(e){this.ensureBufferSizeToWrite(1),this.view.setUint8(this.pos,e),this.pos++},e.prototype.writeU8a=function(e){var t=e.length;this.ensureBufferSizeToWrite(t),this.bytes.set(e,this.pos),this.pos+=t},e.prototype.writeI8=function(e){this.ensureBufferSizeToWrite(1),this.view.setInt8(this.pos,e),this.pos++},e.prototype.writeU16=function(e){this.ensureBufferSizeToWrite(2),this.view.setUint16(this.pos,e),this.pos+=2},e.prototype.writeI16=function(e){this.ensureBufferSizeToWrite(2),this.view.setInt16(this.pos,e),this.pos+=2},e.prototype.writeU32=function(e){this.ensureBufferSizeToWrite(4),this.view.setUint32(this.pos,e),this.pos+=4},e.prototype.writeI32=function(e){this.ensureBufferSizeToWrite(4),this.view.setInt32(this.pos,e),this.pos+=4},e.prototype.writeF32=function(e){this.ensureBufferSizeToWrite(4),this.view.setFloat32(this.pos,e),this.pos+=4},e.prototype.writeF64=function(e){this.ensureBufferSizeToWrite(8),this.view.setFloat64(this.pos,e),this.pos+=8},e.prototype.writeU64=function(e){this.ensureBufferSizeToWrite(8),function(e,t,n){var r=n/4294967296,s=n;e.setUint32(t,r),e.setUint32(t+4,s)}(this.view,this.pos,e),this.pos+=8},e.prototype.writeI64=function(e){this.ensureBufferSizeToWrite(8),f(this.view,this.pos,e),this.pos+=8},e}(),E={};function S(e,t){void 0===t&&(t=E);var n=new D(t.extensionCodec,t.context,t.maxDepth,t.initialBufferSize,t.sortKeys,t.forceFloat32,t.ignoreUndefined);return n.encode(e,1),n.getUint8Array()}function T(e){return(e<0?"-":"")+"0x"+Math.abs(e).toString(16).padStart(2,"0")}var A=function(){function e(e,t){void 0===e&&(e=16),void 0===t&&(t=16),this.maxKeyLength=e,this.maxLengthPerKey=t,this.caches=[];for(var n=0;n<this.maxKeyLength;n++)this.caches.push([])}return e.prototype.canBeCached=function(e){return e>0&&e<=this.maxKeyLength},e.prototype.get=function(e,t,n){var r=this.caches[n-1],s=r.length;e:for(var a=0;a<s;a++){for(var i=r[a],o=i.bytes,u=0;u<n;u++)if(o[u]!==e[t+u])continue e;return i.value}return null},e.prototype.store=function(e,t){var n=this.caches[e.length-1],r={bytes:e,value:t};n.length>=this.maxLengthPerKey?n[Math.random()*n.length|0]=r:n.push(r)},e.prototype.decode=function(e,t,n){var r=this.get(e,t,n);if(null!=r)return r;var s=c(e,t,n),a=Uint8Array.prototype.slice.call(e,t,t+n);return this.store(a,s),s},e}(),$=function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},F=function(e){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var t,n=e[Symbol.asyncIterator];return n?n.call(e):(e="function"==typeof __values?__values(e):e[Symbol.iterator](),t={},r("next"),r("throw"),r("return"),t[Symbol.asyncIterator]=function(){return this},t);function r(n){t[n]=e[n]&&function(t){return new Promise((function(r,s){!function(e,t,n,r){Promise.resolve(r).then((function(t){e({value:t,done:n})}),t)}(r,s,(t=e[n](t)).done,t.value)}))}}},R=function(e){return this instanceof R?(this.v=e,this):new R(e)},_=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),a=[];return r={},i("next"),i("throw"),i("return"),r[Symbol.asyncIterator]=function(){return this},r;function i(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){a.push([e,t,n,r])>1||o(e,t)}))})}function o(e,t){try{(n=s[e](t)).value instanceof R?Promise.resolve(n.value.v).then(u,l):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function u(e){o("next",e)}function l(e){o("throw",e)}function c(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}},M=new DataView(new ArrayBuffer(0)),O=new Uint8Array(M.buffer),B=function(){try{M.getInt8(0)}catch(e){return e.constructor}throw new Error("never reached")}(),z=new B("Insufficient data"),L=new A,P=function(){function e(e,t,n,r,s,a,i,o){void 0===e&&(e=N.defaultCodec),void 0===n&&(n=4294967295),void 0===r&&(r=4294967295),void 0===s&&(s=4294967295),void 0===a&&(a=4294967295),void 0===i&&(i=4294967295),void 0===o&&(o=L),this.extensionCodec=e,this.context=t,this.maxStrLength=n,this.maxBinLength=r,this.maxArrayLength=s,this.maxMapLength=a,this.maxExtLength=i,this.cachedKeyDecoder=o,this.totalPos=0,this.pos=0,this.view=M,this.bytes=O,this.headByte=-1,this.stack=[]}return e.prototype.setBuffer=function(e){this.bytes=I(e),this.view=function(e){if(e instanceof ArrayBuffer)return new DataView(e);var t=I(e);return new DataView(t.buffer,t.byteOffset,t.byteLength)}(this.bytes),this.pos=0},e.prototype.appendBuffer=function(e){if(-1!==this.headByte||this.hasRemaining()){var t=this.bytes.subarray(this.pos),n=I(e),r=new Uint8Array(t.length+n.length);r.set(t),r.set(n,t.length),this.setBuffer(r)}else this.setBuffer(e)},e.prototype.hasRemaining=function(e){return void 0===e&&(e=1),this.view.byteLength-this.pos>=e},e.prototype.createNoExtraBytesError=function(e){var t=this.view,n=this.pos;return new RangeError("Extra "+(t.byteLength-n)+" byte(s) found at buffer["+e+"]")},e.prototype.decodeSingleSync=function(){var e=this.decodeSync();if(this.hasRemaining())throw this.createNoExtraBytesError(this.pos);return e},e.prototype.decodeSingleAsync=function(e){var t,n,r,s;return function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var a,i,o,u,l,c,h,p;return $(this,(function(d){switch(d.label){case 0:a=!1,d.label=1;case 1:d.trys.push([1,6,7,12]),t=F(e),d.label=2;case 2:return[4,t.next()];case 3:if((n=d.sent()).done)return[3,5];if(o=n.value,a)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(o);try{i=this.decodeSync(),a=!0}catch(e){if(!(e instanceof B))throw e}this.totalPos+=this.pos,d.label=4;case 4:return[3,2];case 5:return[3,12];case 6:return u=d.sent(),r={error:u},[3,12];case 7:return d.trys.push([7,,10,11]),n&&!n.done&&(s=t.return)?[4,s.call(t)]:[3,9];case 8:d.sent(),d.label=9;case 9:return[3,11];case 10:if(r)throw r.error;return[7];case 11:return[7];case 12:if(a){if(this.hasRemaining())throw this.createNoExtraBytesError(this.totalPos);return[2,i]}throw c=(l=this).headByte,h=l.pos,p=l.totalPos,new RangeError("Insufficient data in parcing "+T(c)+" at "+p+" ("+h+" in the current buffer)")}}))}))},e.prototype.decodeArrayStream=function(e){return this.decodeMultiAsync(e,!0)},e.prototype.decodeStream=function(e){return this.decodeMultiAsync(e,!1)},e.prototype.decodeMultiAsync=function(e,t){return _(this,arguments,(function(){var n,r,s,a,i,o,u,l,c;return $(this,(function(h){switch(h.label){case 0:n=t,r=-1,h.label=1;case 1:h.trys.push([1,13,14,19]),s=F(e),h.label=2;case 2:return[4,R(s.next())];case 3:if((a=h.sent()).done)return[3,12];if(i=a.value,t&&0===r)throw this.createNoExtraBytesError(this.totalPos);this.appendBuffer(i),n&&(r=this.readArraySize(),n=!1,this.complete()),h.label=4;case 4:h.trys.push([4,9,,10]),h.label=5;case 5:return[4,R(this.decodeSync())];case 6:return[4,h.sent()];case 7:return h.sent(),0==--r?[3,8]:[3,5];case 8:return[3,10];case 9:if(!((o=h.sent())instanceof B))throw o;return[3,10];case 10:this.totalPos+=this.pos,h.label=11;case 11:return[3,2];case 12:return[3,19];case 13:return u=h.sent(),l={error:u},[3,19];case 14:return h.trys.push([14,,17,18]),a&&!a.done&&(c=s.return)?[4,R(c.call(s))]:[3,16];case 15:h.sent(),h.label=16;case 16:return[3,18];case 17:if(l)throw l.error;return[7];case 18:return[7];case 19:return[2]}}))}))},e.prototype.decodeSync=function(){e:for(;;){var e=this.readHeadByte(),t=void 0;if(e>=224)t=e-256;else if(e<192)if(e<128)t=e;else if(e<144){if(0!=(r=e-128)){this.pushMapState(r),this.complete();continue e}t={}}else if(e<160){if(0!=(r=e-144)){this.pushArrayState(r),this.complete();continue e}t=[]}else{var n=e-160;t=this.decodeUtf8String(n,0)}else if(192===e)t=null;else if(194===e)t=!1;else if(195===e)t=!0;else if(202===e)t=this.readF32();else if(203===e)t=this.readF64();else if(204===e)t=this.readU8();else if(205===e)t=this.readU16();else if(206===e)t=this.readU32();else if(207===e)t=this.readU64();else if(208===e)t=this.readI8();else if(209===e)t=this.readI16();else if(210===e)t=this.readI32();else if(211===e)t=this.readI64();else if(217===e)n=this.lookU8(),t=this.decodeUtf8String(n,1);else if(218===e)n=this.lookU16(),t=this.decodeUtf8String(n,2);else if(219===e)n=this.lookU32(),t=this.decodeUtf8String(n,4);else if(220===e){if(0!==(r=this.readU16())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(221===e){if(0!==(r=this.readU32())){this.pushArrayState(r),this.complete();continue e}t=[]}else if(222===e){if(0!==(r=this.readU16())){this.pushMapState(r),this.complete();continue e}t={}}else if(223===e){if(0!==(r=this.readU32())){this.pushMapState(r),this.complete();continue e}t={}}else if(196===e){var r=this.lookU8();t=this.decodeBinary(r,1)}else if(197===e)r=this.lookU16(),t=this.decodeBinary(r,2);else if(198===e)r=this.lookU32(),t=this.decodeBinary(r,4);else if(212===e)t=this.decodeExtension(1,0);else if(213===e)t=this.decodeExtension(2,0);else if(214===e)t=this.decodeExtension(4,0);else if(215===e)t=this.decodeExtension(8,0);else if(216===e)t=this.decodeExtension(16,0);else if(199===e)r=this.lookU8(),t=this.decodeExtension(r,1);else if(200===e)r=this.lookU16(),t=this.decodeExtension(r,2);else{if(201!==e)throw new Error("Unrecognized type byte: "+T(e));r=this.lookU32(),t=this.decodeExtension(r,4)}this.complete();for(var s=this.stack;s.length>0;){var a=s[s.length-1];if(0===a.type){if(a.array[a.position]=t,a.position++,a.position!==a.size)continue e;s.pop(),t=a.array}else{if(1===a.type){if(void 0,"string"!=(i=typeof t)&&"number"!==i)throw new Error("The type of key must be string or number but "+typeof t);a.key=t,a.type=2;continue e}if(a.map[a.key]=t,a.readCount++,a.readCount!==a.size){a.key=null,a.type=1;continue e}s.pop(),t=a.map}}return t}var i},e.prototype.readHeadByte=function(){return-1===this.headByte&&(this.headByte=this.readU8()),this.headByte},e.prototype.complete=function(){this.headByte=-1},e.prototype.readArraySize=function(){var e=this.readHeadByte();switch(e){case 220:return this.readU16();case 221:return this.readU32();default:if(e<160)return e-144;throw new Error("Unrecognized array type byte: "+T(e))}},e.prototype.pushMapState=function(e){if(e>this.maxMapLength)throw new Error("Max length exceeded: map length ("+e+") > maxMapLengthLength ("+this.maxMapLength+")");this.stack.push({type:1,size:e,key:null,readCount:0,map:{}})},e.prototype.pushArrayState=function(e){if(e>this.maxArrayLength)throw new Error("Max length exceeded: array length ("+e+") > maxArrayLength ("+this.maxArrayLength+")");this.stack.push({type:0,size:e,array:new Array(e),position:0})},e.prototype.decodeUtf8String=function(e,t){var n;if(e>this.maxStrLength)throw new Error("Max length exceeded: UTF-8 byte length ("+e+") > maxStrLength ("+this.maxStrLength+")");if(this.bytes.byteLength<this.pos+t+e)throw z;var r,s=this.pos+t;return r=this.stateIsMapKey()&&(null===(n=this.cachedKeyDecoder)||void 0===n?void 0:n.canBeCached(e))?this.cachedKeyDecoder.decode(this.bytes,s,e):a&&e>p?function(e,t,n){var r=e.subarray(t,t+n);return h.decode(r)}(this.bytes,s,e):c(this.bytes,s,e),this.pos+=t+e,r},e.prototype.stateIsMapKey=function(){return this.stack.length>0&&1===this.stack[this.stack.length-1].type},e.prototype.decodeBinary=function(e,t){if(e>this.maxBinLength)throw new Error("Max length exceeded: bin length ("+e+") > maxBinLength ("+this.maxBinLength+")");if(!this.hasRemaining(e+t))throw z;var n=this.pos+t,r=this.bytes.subarray(n,n+e);return this.pos+=t+e,r},e.prototype.decodeExtension=function(e,t){if(e>this.maxExtLength)throw new Error("Max length exceeded: ext length ("+e+") > maxExtLength ("+this.maxExtLength+")");var n=this.view.getInt8(this.pos+t),r=this.decodeBinary(e,t+1);return this.extensionCodec.decode(r,n,this.context)},e.prototype.lookU8=function(){return this.view.getUint8(this.pos)},e.prototype.lookU16=function(){return this.view.getUint16(this.pos)},e.prototype.lookU32=function(){return this.view.getUint32(this.pos)},e.prototype.readU8=function(){var e=this.view.getUint8(this.pos);return this.pos++,e},e.prototype.readI8=function(){var e=this.view.getInt8(this.pos);return this.pos++,e},e.prototype.readU16=function(){var e=this.view.getUint16(this.pos);return this.pos+=2,e},e.prototype.readI16=function(){var e=this.view.getInt16(this.pos);return this.pos+=2,e},e.prototype.readU32=function(){var e=this.view.getUint32(this.pos);return this.pos+=4,e},e.prototype.readI32=function(){var e=this.view.getInt32(this.pos);return this.pos+=4,e},e.prototype.readU64=function(){var e,t,n=(e=this.view,t=this.pos,4294967296*e.getUint32(t)+e.getUint32(t+4));return this.pos+=8,n},e.prototype.readI64=function(){var e=m(this.view,this.pos);return this.pos+=8,e},e.prototype.readF32=function(){var e=this.view.getFloat32(this.pos);return this.pos+=4,e},e.prototype.readF64=function(){var e=this.view.getFloat64(this.pos);return this.pos+=8,e},e}(),U={};function W(e,t){void 0===t&&(t=U);var n=new P(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength);return n.setBuffer(e),n.decodeSingleSync()}var V=function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}},G=function(e){return this instanceof G?(this.v=e,this):new G(e)},j=function(e,t,n){if(!Symbol.asyncIterator)throw new TypeError("Symbol.asyncIterator is not defined.");var r,s=n.apply(e,t||[]),a=[];return r={},i("next"),i("throw"),i("return"),r[Symbol.asyncIterator]=function(){return this},r;function i(e){s[e]&&(r[e]=function(t){return new Promise((function(n,r){a.push([e,t,n,r])>1||o(e,t)}))})}function o(e,t){try{(n=s[e](t)).value instanceof G?Promise.resolve(n.value.v).then(u,l):c(a[0][2],n)}catch(e){c(a[0][3],e)}var n}function u(e){o("next",e)}function l(e){o("throw",e)}function c(e,t){e(t),a.shift(),a.length&&o(a[0][0],a[0][1])}};function H(e){if(null==e)throw new Error("Assertion Failure: value must not be null nor undefined")}function q(e){return null!=e[Symbol.asyncIterator]?e:function(e){return j(this,arguments,(function(){var t,n,r,s;return V(this,(function(a){switch(a.label){case 0:t=e.getReader(),a.label=1;case 1:a.trys.push([1,,9,10]),a.label=2;case 2:return[4,G(t.read())];case 3:return n=a.sent(),r=n.done,s=n.value,r?[4,G(void 0)]:[3,5];case 4:return[2,a.sent()];case 5:return H(s),[4,G(s)];case 6:return[4,a.sent()];case 7:return a.sent(),[3,2];case 8:return[3,10];case 9:return t.releaseLock(),[7];case 10:return[2]}}))}))}(e)}function K(e,t){return void 0===t&&(t=U),function(e,t,n,r){return new(n||(n=Promise))((function(s,a){function i(e){try{u(r.next(e))}catch(e){a(e)}}function o(e){try{u(r.throw(e))}catch(e){a(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(i,o)}u((r=r.apply(e,t||[])).next())}))}(this,void 0,void 0,(function(){var n;return function(e,t){var n,r,s,a,i={label:0,sent:function(){if(1&s[0])throw s[1];return s[1]},trys:[],ops:[]};return a={next:o(0),throw:o(1),return:o(2)},"function"==typeof Symbol&&(a[Symbol.iterator]=function(){return this}),a;function o(a){return function(o){return function(a){if(n)throw new TypeError("Generator is already executing.");for(;i;)try{if(n=1,r&&(s=2&a[0]?r.return:a[0]?r.throw||((s=r.return)&&s.call(r),0):r.next)&&!(s=s.call(r,a[1])).done)return s;switch(r=0,s&&(a=[2&a[0],s.value]),a[0]){case 0:case 1:s=a;break;case 4:return i.label++,{value:a[1],done:!1};case 5:i.label++,r=a[1],a=[0];continue;case 7:a=i.ops.pop(),i.trys.pop();continue;default:if(!((s=(s=i.trys).length>0&&s[s.length-1])||6!==a[0]&&2!==a[0])){i=0;continue}if(3===a[0]&&(!s||a[1]>s[0]&&a[1]<s[3])){i.label=a[1];break}if(6===a[0]&&i.label<s[1]){i.label=s[1],s=a;break}if(s&&i.label<s[2]){i.label=s[2],i.ops.push(a);break}s[2]&&i.ops.pop(),i.trys.pop();continue}a=t.call(e,i)}catch(e){a=[6,e],r=0}finally{n=s=0}if(5&a[0])throw a[1];return{value:a[0]?a[1]:void 0,done:!0}}([a,o])}}}(this,(function(r){return n=q(e),[2,new P(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeSingleAsync(n)]}))}))}function X(e,t){void 0===t&&(t=U);var n=q(e);return new P(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeArrayStream(n)}function Y(e,t){void 0===t&&(t=U);var n=q(e);return new P(t.extensionCodec,t.context,t.maxStrLength,t.maxBinLength,t.maxArrayLength,t.maxMapLength,t.maxExtLength).decodeStream(n)}}])},292:(e,t,n)=>{n(850),t.vL=function(e,t){return Object.assign(document.createElement("canvas"),{width:e,height:t})}},850:e=>{"use strict";const t="'([^']+)'|\"([^\"]+)\"|[\\w\\s-]+",n=new RegExp("(bold|bolder|lighter|[1-9]00) +","i"),r=new RegExp("(italic|oblique) +","i"),s=new RegExp("(small-caps) +","i"),a=new RegExp("(ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded) +","i"),i=new RegExp(`([\\d\\.]+)(px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q) *((?:${t})( *, *(?:${t}))*)`),o={};e.exports=e=>{if(o[e])return o[e];const t=i.exec(e);if(!t)return;const u={weight:"normal",style:"normal",stretch:"normal",variant:"normal",size:parseFloat(t[1]),unit:t[2],family:t[3].replace(/["']/g,"").replace(/ *, */g,",")};let l,c,h,p;const d=e.substring(0,t.index);switch((l=n.exec(d))&&(u.weight=l[1]),(c=r.exec(d))&&(u.style=c[1]),(h=s.exec(d))&&(u.variant=h[1]),(p=a.exec(d))&&(u.stretch=p[1]),u.unit){case"pt":u.size/=.75;break;case"pc":u.size*=16;break;case"in":u.size*=96;break;case"cm":u.size*=96/2.54;break;case"mm":u.size*=96/25.4;break;case"%":break;case"em":case"rem":u.size*=16/.75;break;case"q":u.size*=96/25.4/4}return o[e]=u}},977:function(e,t){var n;!function(r){"use strict";var s=Math.cosh||function(e){return Math.abs(e)<1e-9?1-e:.5*(Math.exp(e)+Math.exp(-e))},a=Math.sinh||function(e){return Math.abs(e)<1e-9?e:.5*(Math.exp(e)-Math.exp(-e))},i=function(){throw SyntaxError("Invalid Param")};function o(e,t){var n=Math.abs(e),r=Math.abs(t);return 0===e?Math.log(r):0===t?Math.log(n):n<3e3&&r<3e3?.5*Math.log(e*e+t*t):(e/=2,t/=2,.5*Math.log(e*e+t*t)+Math.LN2)}function u(e,t){if(!(this instanceof u))return new u(e,t);var n=function(e,t){var n={re:0,im:0};if(null==e)n.re=n.im=0;else if(void 0!==t)n.re=e,n.im=t;else switch(typeof e){case"object":if("im"in e&&"re"in e)n.re=e.re,n.im=e.im;else if("abs"in e&&"arg"in e){if(!Number.isFinite(e.abs)&&Number.isFinite(e.arg))return u.INFINITY;n.re=e.abs*Math.cos(e.arg),n.im=e.abs*Math.sin(e.arg)}else if("r"in e&&"phi"in e){if(!Number.isFinite(e.r)&&Number.isFinite(e.phi))return u.INFINITY;n.re=e.r*Math.cos(e.phi),n.im=e.r*Math.sin(e.phi)}else 2===e.length?(n.re=e[0],n.im=e[1]):i();break;case"string":n.im=n.re=0;var r=e.match(/\d+\.?\d*e[+-]?\d+|\d+\.?\d*|\.\d+|./g),s=1,a=0;null===r&&i();for(var o=0;o<r.length;o++){var l=r[o];" "===l||"\t"===l||"\n"===l||("+"===l?s++:"-"===l?a++:"i"===l||"I"===l?(s+a===0&&i()," "===r[o+1]||isNaN(r[o+1])?n.im+=parseFloat((a%2?"-":"")+"1"):(n.im+=parseFloat((a%2?"-":"")+r[o+1]),o++),s=a=0):((s+a===0||isNaN(l))&&i(),"i"===r[o+1]||"I"===r[o+1]?(n.im+=parseFloat((a%2?"-":"")+l),o++):n.re+=parseFloat((a%2?"-":"")+l),s=a=0))}s+a>0&&i();break;case"number":n.im=0,n.re=e;break;default:i()}return isNaN(n.re)||isNaN(n.im),n}(e,t);this.re=n.re,this.im=n.im}u.prototype={re:0,im:0,sign:function(){var e=this.abs();return new u(this.re/e,this.im/e)},add:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:new u(this.re+n.re,this.im+n.im)},sub:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:new u(this.re-n.re,this.im-n.im)},mul:function(e,t){var n=new u(e,t);return this.isInfinite()&&n.isZero()||this.isZero()&&n.isInfinite()?u.NAN:this.isInfinite()||n.isInfinite()?u.INFINITY:0===n.im&&0===this.im?new u(this.re*n.re,0):new u(this.re*n.re-this.im*n.im,this.re*n.im+this.im*n.re)},div:function(e,t){var n=new u(e,t);if(this.isZero()&&n.isZero()||this.isInfinite()&&n.isInfinite())return u.NAN;if(this.isInfinite()||n.isZero())return u.INFINITY;if(this.isZero()||n.isInfinite())return u.ZERO;e=this.re,t=this.im;var r,s,a=n.re,i=n.im;return 0===i?new u(e/a,t/a):Math.abs(a)<Math.abs(i)?new u((e*(s=a/i)+t)/(r=a*s+i),(t*s-e)/r):new u((e+t*(s=i/a))/(r=i*s+a),(t-e*s)/r)},pow:function(e,t){var n=new u(e,t);if(e=this.re,t=this.im,n.isZero())return u.ONE;if(0===n.im){if(0===t&&e>0)return new u(Math.pow(e,n.re),0);if(0===e)switch((n.re%4+4)%4){case 0:return new u(Math.pow(t,n.re),0);case 1:return new u(0,Math.pow(t,n.re));case 2:return new u(-Math.pow(t,n.re),0);case 3:return new u(0,-Math.pow(t,n.re))}}if(0===e&&0===t&&n.re>0&&n.im>=0)return u.ZERO;var r=Math.atan2(t,e),s=o(e,t);return e=Math.exp(n.re*s-n.im*r),t=n.im*s+n.re*r,new u(e*Math.cos(t),e*Math.sin(t))},sqrt:function(){var e,t,n=this.re,r=this.im,s=this.abs();if(n>=0){if(0===r)return new u(Math.sqrt(n),0);e=.5*Math.sqrt(2*(s+n))}else e=Math.abs(r)/Math.sqrt(2*(s-n));return t=n<=0?.5*Math.sqrt(2*(s-n)):Math.abs(r)/Math.sqrt(2*(s+n)),new u(e,r<0?-t:t)},exp:function(){var e=Math.exp(this.re);return this.im,new u(e*Math.cos(this.im),e*Math.sin(this.im))},expm1:function(){var e=this.re,t=this.im;return new u(Math.expm1(e)*Math.cos(t)+function(e){var t=Math.PI/4;if(-t>e||e>t)return Math.cos(e)-1;var n=e*e;return n*(n*(n*(n*(n*(n*(n*(n/20922789888e3-1/87178291200)+1/479001600)-1/3628800)+1/40320)-1/720)+1/24)-.5)}(t),Math.exp(e)*Math.sin(t))},log:function(){var e=this.re,t=this.im;return new u(o(e,t),Math.atan2(t,e))},abs:function(){return e=this.re,t=this.im,n=Math.abs(e),r=Math.abs(t),n<3e3&&r<3e3?Math.sqrt(n*n+r*r):(n<r?(n=r,r=e/t):r=t/e,n*Math.sqrt(1+r*r));var e,t,n,r},arg:function(){return Math.atan2(this.im,this.re)},sin:function(){var e=this.re,t=this.im;return new u(Math.sin(e)*s(t),Math.cos(e)*a(t))},cos:function(){var e=this.re,t=this.im;return new u(Math.cos(e)*s(t),-Math.sin(e)*a(t))},tan:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)+s(t);return new u(Math.sin(e)/n,a(t)/n)},cot:function(){var e=2*this.re,t=2*this.im,n=Math.cos(e)-s(t);return new u(-Math.sin(e)/n,a(t)/n)},sec:function(){var e=this.re,t=this.im,n=.5*s(2*t)+.5*Math.cos(2*e);return new u(Math.cos(e)*s(t)/n,Math.sin(e)*a(t)/n)},csc:function(){var e=this.re,t=this.im,n=.5*s(2*t)-.5*Math.cos(2*e);return new u(Math.sin(e)*s(t)/n,-Math.cos(e)*a(t)/n)},asin:function(){var e=this.re,t=this.im,n=new u(t*t-e*e+1,-2*e*t).sqrt(),r=new u(n.re-t,n.im+e).log();return new u(r.im,-r.re)},acos:function(){var e=this.re,t=this.im,n=new u(t*t-e*e+1,-2*e*t).sqrt(),r=new u(n.re-t,n.im+e).log();return new u(Math.PI/2-r.im,r.re)},atan:function(){var e=this.re,t=this.im;if(0===e){if(1===t)return new u(0,1/0);if(-1===t)return new u(0,-1/0)}var n=e*e+(1-t)*(1-t),r=new u((1-t*t-e*e)/n,-2*e/n).log();return new u(-.5*r.im,.5*r.re)},acot:function(){var e=this.re,t=this.im;if(0===t)return new u(Math.atan2(1,e),0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).atan():new u(0!==e?e/0:0,0!==t?-t/0:0).atan()},asec:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(0,1/0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).acos():new u(0!==e?e/0:0,0!==t?-t/0:0).acos()},acsc:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(Math.PI/2,1/0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).asin():new u(0!==e?e/0:0,0!==t?-t/0:0).asin()},sinh:function(){var e=this.re,t=this.im;return new u(a(e)*Math.cos(t),s(e)*Math.sin(t))},cosh:function(){var e=this.re,t=this.im;return new u(s(e)*Math.cos(t),a(e)*Math.sin(t))},tanh:function(){var e=2*this.re,t=2*this.im,n=s(e)+Math.cos(t);return new u(a(e)/n,Math.sin(t)/n)},coth:function(){var e=2*this.re,t=2*this.im,n=s(e)-Math.cos(t);return new u(a(e)/n,-Math.sin(t)/n)},csch:function(){var e=this.re,t=this.im,n=Math.cos(2*t)-s(2*e);return new u(-2*a(e)*Math.cos(t)/n,2*s(e)*Math.sin(t)/n)},sech:function(){var e=this.re,t=this.im,n=Math.cos(2*t)+s(2*e);return new u(2*s(e)*Math.cos(t)/n,-2*a(e)*Math.sin(t)/n)},asinh:function(){var e=this.im;this.im=-this.re,this.re=e;var t=this.asin();return this.re=-this.im,this.im=e,e=t.re,t.re=-t.im,t.im=e,t},acosh:function(){var e=this.acos();if(e.im<=0){var t=e.re;e.re=-e.im,e.im=t}else t=e.im,e.im=-e.re,e.re=t;return e},atanh:function(){var e=this.re,t=this.im,n=e>1&&0===t,r=1-e,s=1+e,a=r*r+t*t,i=0!==a?new u((s*r-t*t)/a,(t*r+s*t)/a):new u(-1!==e?e/0:0,0!==t?t/0:0),l=i.re;return i.re=o(i.re,i.im)/2,i.im=Math.atan2(i.im,l)/2,n&&(i.im=-i.im),i},acoth:function(){var e=this.re,t=this.im;if(0===e&&0===t)return new u(0,Math.PI/2);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).atanh():new u(0!==e?e/0:0,0!==t?-t/0:0).atanh()},acsch:function(){var e=this.re,t=this.im;if(0===t)return new u(0!==e?Math.log(e+Math.sqrt(e*e+1)):1/0,0);var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).asinh():new u(0!==e?e/0:0,0!==t?-t/0:0).asinh()},asech:function(){var e=this.re,t=this.im;if(this.isZero())return u.INFINITY;var n=e*e+t*t;return 0!==n?new u(e/n,-t/n).acosh():new u(0!==e?e/0:0,0!==t?-t/0:0).acosh()},inverse:function(){if(this.isZero())return u.INFINITY;if(this.isInfinite())return u.ZERO;var e=this.re,t=this.im,n=e*e+t*t;return new u(e/n,-t/n)},conjugate:function(){return new u(this.re,-this.im)},neg:function(){return new u(-this.re,-this.im)},ceil:function(e){return e=Math.pow(10,e||0),new u(Math.ceil(this.re*e)/e,Math.ceil(this.im*e)/e)},floor:function(e){return e=Math.pow(10,e||0),new u(Math.floor(this.re*e)/e,Math.floor(this.im*e)/e)},round:function(e){return e=Math.pow(10,e||0),new u(Math.round(this.re*e)/e,Math.round(this.im*e)/e)},equals:function(e,t){var n=new u(e,t);return Math.abs(n.re-this.re)<=u.EPSILON&&Math.abs(n.im-this.im)<=u.EPSILON},clone:function(){return new u(this.re,this.im)},toString:function(){var e=this.re,t=this.im,n="";return this.isNaN()?"NaN":this.isInfinite()?"Infinity":(Math.abs(e)<u.EPSILON&&(e=0),Math.abs(t)<u.EPSILON&&(t=0),0===t?n+e:(0!==e?(n+=e,n+=" ",t<0?(t=-t,n+="-"):n+="+",n+=" "):t<0&&(t=-t,n+="-"),1!==t&&(n+=t),n+"i"))},toVector:function(){return[this.re,this.im]},valueOf:function(){return 0===this.im?this.re:null},isNaN:function(){return isNaN(this.re)||isNaN(this.im)},isZero:function(){return 0===this.im&&0===this.re},isFinite:function(){return isFinite(this.re)&&isFinite(this.im)},isInfinite:function(){return!(this.isNaN()||this.isFinite())}},u.ZERO=new u(0,0),u.ONE=new u(1,0),u.I=new u(0,1),u.PI=new u(Math.PI,0),u.E=new u(Math.E,0),u.INFINITY=new u(1/0,1/0),u.NAN=new u(NaN,NaN),u.EPSILON=1e-15,void 0===(n=function(){return u}.apply(t,[]))||(e.exports=n)}()},485:(e,t,n)=>{"use strict";n.d(t,{Z:()=>a});var r=n(645),s=n.n(r)()((function(e){return e[1]}));s.push([e.id,".mindar-ui-overlay{display:flex;align-items:center;justify-content:center;position:absolute;left:0;right:0;top:0;bottom:0;background:rgba(0,0,0,0);z-index:2}.mindar-ui-overlay.hidden{display:none}.mindar-ui-loading .loader{border:16px solid #222;border-top:16px solid #fff;opacity:.8;border-radius:50%;width:120px;height:120px;animation:spin 2s linear infinite}@keyframes spin{0%{transform:rotate(0deg)}100%{transform:rotate(360deg)}}.mindar-ui-compatibility .content{background:#000;color:#fff;opacity:.8;text-align:center;margin:20px;padding:20px;min-height:50vh}@media(min-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:50vh;height:50vh}}@media(max-aspect-ratio: 1/1){.mindar-ui-scanning .scanning{width:80vw;height:80vw}}.mindar-ui-scanning .scanning .inner{position:relative;width:100%;height:100%;opacity:.8;background:linear-gradient(to right, white 10px, transparent 10px) 0 0,linear-gradient(to right, white 10px, transparent 10px) 0 100%,linear-gradient(to left, white 10px, transparent 10px) 100% 0,linear-gradient(to left, white 10px, transparent 10px) 100% 100%,linear-gradient(to bottom, white 10px, transparent 10px) 0 0,linear-gradient(to bottom, white 10px, transparent 10px) 100% 0,linear-gradient(to top, white 10px, transparent 10px) 0 100%,linear-gradient(to top, white 10px, transparent 10px) 100% 100%;background-repeat:no-repeat;background-size:40px 40px}.mindar-ui-scanning .scanning .inner .scanline{position:absolute;width:100%;height:10px;background:#fff;animation:move 2s linear infinite}@keyframes move{0%,100%{top:0%}50%{top:calc(100% - 10px)}}",""]);const a=s},645:e=>{"use strict";e.exports=function(e){var t=[];return t.toString=function(){return this.map((function(t){var n=e(t);return t[2]?"@media ".concat(t[2]," {").concat(n,"}"):n})).join("")},t.i=function(e,n,r){"string"==typeof e&&(e=[[null,e,""]]);var s={};if(r)for(var a=0;a<this.length;a++){var i=this[a][0];null!=i&&(s[i]=!0)}for(var o=0;o<e.length;o++){var u=[].concat(e[o]);r&&s[u[0]]||(n&&(u[2]?u[2]="".concat(n," and ").concat(u[2]):u[2]=n),t.push(u))}},t}},628:function(e,t){var n;!function(r){"use strict";var s={s:1,n:0,d:1};function a(e,t){if(isNaN(e=parseInt(e,10)))throw c.InvalidParameter;return e*t}function i(e,t){if(0===t)throw c.DivisionByZero;var n=Object.create(c.prototype);n.s=e<0?-1:1;var r=l(e=e<0?-e:e,t);return n.n=e/r,n.d=t/r,n}function o(e){for(var t={},n=e,r=2,s=4;s<=n;){for(;n%r==0;)n/=r,t[r]=(t[r]||0)+1;s+=1+2*r++}return n!==e?n>1&&(t[n]=(t[n]||0)+1):t[e]=(t[e]||0)+1,t}var u=function(e,t){var n,r=0,i=1,o=1,u=0,l=0,h=0,p=1,d=1,f=0,m=1,g=1,y=1,b=1e7;if(null==e);else if(void 0!==t){if(o=(r=e)*(i=t),r%1!=0||i%1!=0)throw c.NonIntegerParameter}else switch(typeof e){case"object":if("d"in e&&"n"in e)r=e.n,i=e.d,"s"in e&&(r*=e.s);else{if(!(0 in e))throw c.InvalidParameter;r=e[0],1 in e&&(i=e[1])}o=r*i;break;case"number":if(e<0&&(o=e,e=-e),e%1==0)r=e;else if(e>0){for(e>=1&&(e/=d=Math.pow(10,Math.floor(1+Math.log(e)/Math.LN10)));m<=b&&y<=b;){if(e===(n=(f+g)/(m+y))){m+y<=b?(r=f+g,i=m+y):y>m?(r=g,i=y):(r=f,i=m);break}e>n?(f+=g,m+=y):(g+=f,y+=m),m>b?(r=g,i=y):(r=f,i=m)}r*=d}else(isNaN(e)||isNaN(t))&&(i=r=NaN);break;case"string":if(null===(m=e.match(/\d+|./g)))throw c.InvalidParameter;if("-"===m[f]?(o=-1,f++):"+"===m[f]&&f++,m.length===f+1?l=a(m[f++],o):"."===m[f+1]||"."===m[f]?("."!==m[f]&&(u=a(m[f++],o)),(1+ ++f===m.length||"("===m[f+1]&&")"===m[f+3]||"'"===m[f+1]&&"'"===m[f+3])&&(l=a(m[f],o),p=Math.pow(10,m[f].length),f++),("("===m[f]&&")"===m[f+2]||"'"===m[f]&&"'"===m[f+2])&&(h=a(m[f+1],o),d=Math.pow(10,m[f+1].length)-1,f+=3)):"/"===m[f+1]||":"===m[f+1]?(l=a(m[f],o),p=a(m[f+2],1),f+=3):"/"===m[f+3]&&" "===m[f+1]&&(u=a(m[f],o),l=a(m[f+2],o),p=a(m[f+4],1),f+=5),m.length<=f){o=r=h+(i=p*d)*u+d*l;break}default:throw c.InvalidParameter}if(0===i)throw c.DivisionByZero;s.s=o<0?-1:1,s.n=Math.abs(r),s.d=Math.abs(i)};function l(e,t){if(!e)return t;if(!t)return e;for(;;){if(!(e%=t))return t;if(!(t%=e))return e}}function c(e,t){if(u(e,t),!(this instanceof c))return i(s.s*s.n,s.d);e=l(s.d,s.n),this.s=s.s,this.n=s.n/e,this.d=s.d/e}c.DivisionByZero=new Error("Division by Zero"),c.InvalidParameter=new Error("Invalid argument"),c.NonIntegerParameter=new Error("Parameters must be integer"),c.prototype={s:1,n:0,d:1,abs:function(){return i(this.n,this.d)},neg:function(){return i(-this.s*this.n,this.d)},add:function(e,t){return u(e,t),i(this.s*this.n*s.d+s.s*this.d*s.n,this.d*s.d)},sub:function(e,t){return u(e,t),i(this.s*this.n*s.d-s.s*this.d*s.n,this.d*s.d)},mul:function(e,t){return u(e,t),i(this.s*s.s*this.n*s.n,this.d*s.d)},div:function(e,t){return u(e,t),i(this.s*s.s*this.n*s.d,this.d*s.n)},clone:function(){return i(this.s*this.n,this.d)},mod:function(e,t){if(isNaN(this.n)||isNaN(this.d))return new c(NaN);if(void 0===e)return i(this.s*this.n%this.d,1);if(u(e,t),0===s.n&&0===this.d)throw c.DivisionByZero;return i(this.s*(s.d*this.n)%(s.n*this.d),s.d*this.d)},gcd:function(e,t){return u(e,t),i(l(s.n,this.n)*l(s.d,this.d),s.d*this.d)},lcm:function(e,t){return u(e,t),0===s.n&&0===this.n?i(0,1):i(s.n*this.n,l(s.n,this.n)*l(s.d,this.d))},ceil:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new c(NaN):i(Math.ceil(e*this.s*this.n/this.d),e)},floor:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new c(NaN):i(Math.floor(e*this.s*this.n/this.d),e)},round:function(e){return e=Math.pow(10,e||0),isNaN(this.n)||isNaN(this.d)?new c(NaN):i(Math.round(e*this.s*this.n/this.d),e)},inverse:function(){return i(this.s*this.d,this.n)},pow:function(e,t){if(u(e,t),1===s.d)return s.s<0?i(Math.pow(this.s*this.d,s.n),Math.pow(this.n,s.n)):i(Math.pow(this.s*this.n,s.n),Math.pow(this.d,s.n));if(this.s<0)return null;var n=o(this.n),r=o(this.d),a=1,l=1;for(var c in n)if("1"!==c){if("0"===c){a=0;break}if(n[c]*=s.n,n[c]%s.d!=0)return null;n[c]/=s.d,a*=Math.pow(c,n[c])}for(var c in r)if("1"!==c){if(r[c]*=s.n,r[c]%s.d!=0)return null;r[c]/=s.d,l*=Math.pow(c,r[c])}return s.s<0?i(l,a):i(a,l)},equals:function(e,t){return u(e,t),this.s*this.n*s.d==s.s*s.n*this.d},compare:function(e,t){u(e,t);var n=this.s*this.n*s.d-s.s*s.n*this.d;return(0<n)-(n<0)},simplify:function(e){if(isNaN(this.n)||isNaN(this.d))return this;e=e||.001;for(var t=this.abs(),n=t.toContinued(),r=1;r<n.length;r++){for(var s=i(n[r-1],1),a=r-2;a>=0;a--)s=s.inverse().add(n[a]);if(s.sub(t).abs().valueOf()<e)return s.mul(this.s)}return this},divisible:function(e,t){return u(e,t),!(!(s.n*this.d)||this.n*s.d%(s.n*this.d))},valueOf:function(){return this.s*this.n/this.d},toFraction:function(e){var t,n="",r=this.n,s=this.d;return this.s<0&&(n+="-"),1===s?n+=r:(e&&(t=Math.floor(r/s))>0&&(n+=t,n+=" ",r%=s),n+=r,n+="/",n+=s),n},toLatex:function(e){var t,n="",r=this.n,s=this.d;return this.s<0&&(n+="-"),1===s?n+=r:(e&&(t=Math.floor(r/s))>0&&(n+=t,r%=s),n+="\\frac{",n+=r,n+="}{",n+=s,n+="}"),n},toContinued:function(){var e,t=this.n,n=this.d,r=[];if(isNaN(t)||isNaN(n))return r;do{r.push(Math.floor(t/n)),e=t%n,t=n,n=e}while(1!==t);return r},toString:function(e){var t=this.n,n=this.d;if(isNaN(t)||isNaN(n))return"NaN";e=e||15;var r=function(e,t){for(;t%2==0;t/=2);for(;t%5==0;t/=5);if(1===t)return 0;for(var n=10%t,r=1;1!==n;r++)if(n=10*n%t,r>2e3)return 0;return r}(0,n),s=function(e,t,n){for(var r=1,s=function(e,t,n){for(var r=1;t>0;e=e*e%n,t>>=1)1&t&&(r=r*e%n);return r}(10,n,t),a=0;a<300;a++){if(r===s)return a;r=10*r%t,s=10*s%t}return 0}(0,n,r),a=this.s<0?"-":"";if(a+=t/n|0,t%=n,(t*=10)&&(a+="."),r){for(var i=s;i--;)a+=t/n|0,t%=n,t*=10;for(a+="(",i=r;i--;)a+=t/n|0,t%=n,t*=10;a+=")"}else for(i=e;t&&i--;)a+=t/n|0,t%=n,t*=10;return a}},void 0===(n=function(){return c}.apply(t,[]))||(e.exports=n)}()},345:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-compatibility"> <div class="content"> <h1>Failed to launch :(</h1> <p> Looks like your device/browser is not compatible. </p> <br/> <br/> <p> Please try the following recommended browsers: </p> <p> For Android device - Chrome </p> <p> For iOS device - Safari </p> </div> </div> '},894:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-loading"> <div class="loader"/> </div> '},810:(e,t,n)=>{"use strict";n.d(t,{Z:()=>r});const r='<div class="mindar-ui-overlay mindar-ui-scanning"> <div class="scanning"> <div class="inner"> <div class="scanline"/> </div> </div> </div> '},228:e=>{e.exports=function e(t,n){"use strict";var r,s,a=/(^([+\-]?(?:0|[1-9]\d*)(?:\.\d*)?(?:[eE][+\-]?\d+)?)?$|^0x[0-9a-f]+$|\d+)/gi,i=/(^[ ]*|[ ]*$)/g,o=/(^([\w ]+,?[\w ]+)?[\w ]+,?[\w ]+\d+:\d+(:\d+)?[\w ]?|^\d{1,4}[\/\-]\d{1,4}[\/\-]\d{1,4}|^\w+, \w+ \d+, \d{4})/,u=/^0x[0-9a-f]+$/i,l=/^0/,c=function(t){return e.insensitive&&(""+t).toLowerCase()||""+t},h=c(t).replace(i,"")||"",p=c(n).replace(i,"")||"",d=h.replace(a,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),f=p.replace(a,"\0$1\0").replace(/\0$/,"").replace(/^\0/,"").split("\0"),m=parseInt(h.match(u),16)||1!==d.length&&h.match(o)&&Date.parse(h),g=parseInt(p.match(u),16)||m&&p.match(o)&&Date.parse(p)||null;if(g){if(m<g)return-1;if(m>g)return 1}for(var y=0,b=Math.max(d.length,f.length);y<b;y++){if(r=!(d[y]||"").match(l)&&parseFloat(d[y])||d[y]||0,s=!(f[y]||"").match(l)&&parseFloat(f[y])||f[y]||0,isNaN(r)!==isNaN(s))return isNaN(r)?1:-1;if(typeof r!=typeof s&&(r+="",s+=""),r<s)return-1;if(r>s)return 1}return 0}},720:e=>{e.exports=n;var t=null;try{t=new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([0,97,115,109,1,0,0,0,1,13,2,96,0,1,127,96,4,127,127,127,127,1,127,3,7,6,0,1,1,1,1,1,6,6,1,127,1,65,0,11,7,50,6,3,109,117,108,0,1,5,100,105,118,95,115,0,2,5,100,105,118,95,117,0,3,5,114,101,109,95,115,0,4,5,114,101,109,95,117,0,5,8,103,101,116,95,104,105,103,104,0,0,10,191,1,6,4,0,35,0,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,126,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,127,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,128,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,129,34,4,66,32,135,167,36,0,32,4,167,11,36,1,1,126,32,0,173,32,1,173,66,32,134,132,32,2,173,32,3,173,66,32,134,132,130,34,4,66,32,135,167,36,0,32,4,167,11])),{}).exports}catch(e){}function n(e,t,n){this.low=0|e,this.high=0|t,this.unsigned=!!n}function r(e){return!0===(e&&e.__isLong__)}n.prototype.__isLong__,Object.defineProperty(n.prototype,"__isLong__",{value:!0}),n.isLong=r;var s={},a={};function i(e,t){var n,r,i;return t?(i=0<=(e>>>=0)&&e<256)&&(r=a[e])?r:(n=u(e,(0|e)<0?-1:0,!0),i&&(a[e]=n),n):(i=-128<=(e|=0)&&e<128)&&(r=s[e])?r:(n=u(e,e<0?-1:0,!1),i&&(s[e]=n),n)}function o(e,t){if(isNaN(e))return t?y:g;if(t){if(e<0)return y;if(e>=d)return k}else{if(e<=-f)return N;if(e+1>=f)return v}return e<0?o(-e,t).neg():u(e%p|0,e/p|0,t)}function u(e,t,r){return new n(e,t,r)}n.fromInt=i,n.fromNumber=o,n.fromBits=u;var l=Math.pow;function c(e,t,n){if(0===e.length)throw Error("empty string");if("NaN"===e||"Infinity"===e||"+Infinity"===e||"-Infinity"===e)return g;if("number"==typeof t?(n=t,t=!1):t=!!t,(n=n||10)<2||36<n)throw RangeError("radix");var r;if((r=e.indexOf("-"))>0)throw Error("interior hyphen");if(0===r)return c(e.substring(1),t,n).neg();for(var s=o(l(n,8)),a=g,i=0;i<e.length;i+=8){var u=Math.min(8,e.length-i),h=parseInt(e.substring(i,i+u),n);if(u<8){var p=o(l(n,u));a=a.mul(p).add(o(h))}else a=(a=a.mul(s)).add(o(h))}return a.unsigned=t,a}function h(e,t){return"number"==typeof e?o(e,t):"string"==typeof e?c(e,t):u(e.low,e.high,"boolean"==typeof t?t:e.unsigned)}n.fromString=c,n.fromValue=h;var p=4294967296,d=p*p,f=d/2,m=i(1<<24),g=i(0);n.ZERO=g;var y=i(0,!0);n.UZERO=y;var b=i(1);n.ONE=b;var x=i(1,!0);n.UONE=x;var w=i(-1);n.NEG_ONE=w;var v=u(-1,2147483647,!1);n.MAX_VALUE=v;var k=u(-1,-1,!0);n.MAX_UNSIGNED_VALUE=k;var N=u(0,-2147483648,!1);n.MIN_VALUE=N;var I=n.prototype;I.toInt=function(){return this.unsigned?this.low>>>0:this.low},I.toNumber=function(){return this.unsigned?(this.high>>>0)*p+(this.low>>>0):this.high*p+(this.low>>>0)},I.toString=function(e){if((e=e||10)<2||36<e)throw RangeError("radix");if(this.isZero())return"0";if(this.isNegative()){if(this.eq(N)){var t=o(e),n=this.div(t),r=n.mul(t).sub(this);return n.toString(e)+r.toInt().toString(e)}return"-"+this.neg().toString(e)}for(var s=o(l(e,6),this.unsigned),a=this,i="";;){var u=a.div(s),c=(a.sub(u.mul(s)).toInt()>>>0).toString(e);if((a=u).isZero())return c+i;for(;c.length<6;)c="0"+c;i=""+c+i}},I.getHighBits=function(){return this.high},I.getHighBitsUnsigned=function(){return this.high>>>0},I.getLowBits=function(){return this.low},I.getLowBitsUnsigned=function(){return this.low>>>0},I.getNumBitsAbs=function(){if(this.isNegative())return this.eq(N)?64:this.neg().getNumBitsAbs();for(var e=0!=this.high?this.high:this.low,t=31;t>0&&0==(e&1<<t);t--);return 0!=this.high?t+33:t+1},I.isZero=function(){return 0===this.high&&0===this.low},I.eqz=I.isZero,I.isNegative=function(){return!this.unsigned&&this.high<0},I.isPositive=function(){return this.unsigned||this.high>=0},I.isOdd=function(){return 1==(1&this.low)},I.isEven=function(){return 0==(1&this.low)},I.equals=function(e){return r(e)||(e=h(e)),(this.unsigned===e.unsigned||this.high>>>31!=1||e.high>>>31!=1)&&this.high===e.high&&this.low===e.low},I.eq=I.equals,I.notEquals=function(e){return!this.eq(e)},I.neq=I.notEquals,I.ne=I.notEquals,I.lessThan=function(e){return this.comp(e)<0},I.lt=I.lessThan,I.lessThanOrEqual=function(e){return this.comp(e)<=0},I.lte=I.lessThanOrEqual,I.le=I.lessThanOrEqual,I.greaterThan=function(e){return this.comp(e)>0},I.gt=I.greaterThan,I.greaterThanOrEqual=function(e){return this.comp(e)>=0},I.gte=I.greaterThanOrEqual,I.ge=I.greaterThanOrEqual,I.compare=function(e){if(r(e)||(e=h(e)),this.eq(e))return 0;var t=this.isNegative(),n=e.isNegative();return t&&!n?-1:!t&&n?1:this.unsigned?e.high>>>0>this.high>>>0||e.high===this.high&&e.low>>>0>this.low>>>0?-1:1:this.sub(e).isNegative()?-1:1},I.comp=I.compare,I.negate=function(){return!this.unsigned&&this.eq(N)?N:this.not().add(b)},I.neg=I.negate,I.add=function(e){r(e)||(e=h(e));var t=this.high>>>16,n=65535&this.high,s=this.low>>>16,a=65535&this.low,i=e.high>>>16,o=65535&e.high,l=e.low>>>16,c=0,p=0,d=0,f=0;return d+=(f+=a+(65535&e.low))>>>16,p+=(d+=s+l)>>>16,c+=(p+=n+o)>>>16,c+=t+i,u((d&=65535)<<16|(f&=65535),(c&=65535)<<16|(p&=65535),this.unsigned)},I.subtract=function(e){return r(e)||(e=h(e)),this.add(e.neg())},I.sub=I.subtract,I.multiply=function(e){if(this.isZero())return g;if(r(e)||(e=h(e)),t)return u(t.mul(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned);if(e.isZero())return g;if(this.eq(N))return e.isOdd()?N:g;if(e.eq(N))return this.isOdd()?N:g;if(this.isNegative())return e.isNegative()?this.neg().mul(e.neg()):this.neg().mul(e).neg();if(e.isNegative())return this.mul(e.neg()).neg();if(this.lt(m)&&e.lt(m))return o(this.toNumber()*e.toNumber(),this.unsigned);var n=this.high>>>16,s=65535&this.high,a=this.low>>>16,i=65535&this.low,l=e.high>>>16,c=65535&e.high,p=e.low>>>16,d=65535&e.low,f=0,y=0,b=0,x=0;return b+=(x+=i*d)>>>16,y+=(b+=a*d)>>>16,b&=65535,y+=(b+=i*p)>>>16,f+=(y+=s*d)>>>16,y&=65535,f+=(y+=a*p)>>>16,y&=65535,f+=(y+=i*c)>>>16,f+=n*d+s*p+a*c+i*l,u((b&=65535)<<16|(x&=65535),(f&=65535)<<16|(y&=65535),this.unsigned)},I.mul=I.multiply,I.divide=function(e){if(r(e)||(e=h(e)),e.isZero())throw Error("division by zero");var n,s,a;if(t)return this.unsigned||-2147483648!==this.high||-1!==e.low||-1!==e.high?u((this.unsigned?t.div_u:t.div_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this;if(this.isZero())return this.unsigned?y:g;if(this.unsigned){if(e.unsigned||(e=e.toUnsigned()),e.gt(this))return y;if(e.gt(this.shru(1)))return x;a=y}else{if(this.eq(N))return e.eq(b)||e.eq(w)?N:e.eq(N)?b:(n=this.shr(1).div(e).shl(1)).eq(g)?e.isNegative()?b:w:(s=this.sub(e.mul(n)),a=n.add(s.div(e)));if(e.eq(N))return this.unsigned?y:g;if(this.isNegative())return e.isNegative()?this.neg().div(e.neg()):this.neg().div(e).neg();if(e.isNegative())return this.div(e.neg()).neg();a=g}for(s=this;s.gte(e);){n=Math.max(1,Math.floor(s.toNumber()/e.toNumber()));for(var i=Math.ceil(Math.log(n)/Math.LN2),c=i<=48?1:l(2,i-48),p=o(n),d=p.mul(e);d.isNegative()||d.gt(s);)d=(p=o(n-=c,this.unsigned)).mul(e);p.isZero()&&(p=b),a=a.add(p),s=s.sub(d)}return a},I.div=I.divide,I.modulo=function(e){return r(e)||(e=h(e)),t?u((this.unsigned?t.rem_u:t.rem_s)(this.low,this.high,e.low,e.high),t.get_high(),this.unsigned):this.sub(this.div(e).mul(e))},I.mod=I.modulo,I.rem=I.modulo,I.not=function(){return u(~this.low,~this.high,this.unsigned)},I.and=function(e){return r(e)||(e=h(e)),u(this.low&e.low,this.high&e.high,this.unsigned)},I.or=function(e){return r(e)||(e=h(e)),u(this.low|e.low,this.high|e.high,this.unsigned)},I.xor=function(e){return r(e)||(e=h(e)),u(this.low^e.low,this.high^e.high,this.unsigned)},I.shiftLeft=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low<<e,this.high<<e|this.low>>>32-e,this.unsigned):u(0,this.low<<e-32,this.unsigned)},I.shl=I.shiftLeft,I.shiftRight=function(e){return r(e)&&(e=e.toInt()),0==(e&=63)?this:e<32?u(this.low>>>e|this.high<<32-e,this.high>>e,this.unsigned):u(this.high>>e-32,this.high>=0?0:-1,this.unsigned)},I.shr=I.shiftRight,I.shiftRightUnsigned=function(e){if(r(e)&&(e=e.toInt()),0==(e&=63))return this;var t=this.high;return e<32?u(this.low>>>e|t<<32-e,t>>>e,this.unsigned):u(32===e?t:t>>>e-32,0,this.unsigned)},I.shru=I.shiftRightUnsigned,I.shr_u=I.shiftRightUnsigned,I.toSigned=function(){return this.unsigned?u(this.low,this.high,!1):this},I.toUnsigned=function(){return this.unsigned?this:u(this.low,this.high,!0)},I.toBytes=function(e){return e?this.toBytesLE():this.toBytesBE()},I.toBytesLE=function(){var e=this.high,t=this.low;return[255&t,t>>>8&255,t>>>16&255,t>>>24,255&e,e>>>8&255,e>>>16&255,e>>>24]},I.toBytesBE=function(){var e=this.high,t=this.low;return[e>>>24,e>>>16&255,e>>>8&255,255&e,t>>>24,t>>>16&255,t>>>8&255,255&t]},n.fromBytes=function(e,t,r){return r?n.fromBytesLE(e,t):n.fromBytesBE(e,t)},n.fromBytesLE=function(e,t){return new n(e[0]|e[1]<<8|e[2]<<16|e[3]<<24,e[4]|e[5]<<8|e[6]<<16|e[7]<<24,t)},n.fromBytesBE=function(e,t){return new n(e[4]<<24|e[5]<<16|e[6]<<8|e[7],e[0]<<24|e[1]<<16|e[2]<<8|e[3],t)}},676:(e,t,n)=>{var r=n(522),s=n(520),a=n(865),i=n(775),o=n(709),u=n(515),l=n(566);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},522:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=String(e);for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},515:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},520:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},709:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},775:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},865:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},566:function(e,t,n){var r;!function(s,a,i){var o,u=256,l=i.pow(u,6),c=i.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(a)]:null==e?function(){try{var e;return o&&(e=o.randomBytes)?e=e(u):(e=new Uint8Array(u),(s.crypto||s.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=s.navigator,n=t&&t.plugins;return[+new Date,s,n,s.screen,b(a)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),a),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(i.random=e,t):e})(x,p,"global"in t?t.global:this==i,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*u+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(y(i.random(),a),e.exports){e.exports=d;try{o=n(906)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}("undefined"!=typeof self?self:this,[],Math)},377:(e,t,n)=>{var r=n(832),s=n(652),a=n(801),i=n(30),o=n(618),u=n(49),l=n(971);l.alea=r,l.xor128=s,l.xorwow=a,l.xorshift7=i,l.xor4096=o,l.tychei=u,e.exports=l},832:function(e,t,n){var r;!function(e,s,a){function i(e){var t,n=this,r=(t=4022871197,function(e){e=e.toString();for(var n=0;n<e.length;n++){var r=.02519603282416938*(t+=e.charCodeAt(n));r-=t=r>>>0,t=(r*=t)>>>0,t+=4294967296*(r-=t)}return 2.3283064365386963e-10*(t>>>0)});n.next=function(){var e=2091639*n.s0+2.3283064365386963e-10*n.c;return n.s0=n.s1,n.s1=n.s2,n.s2=e-(n.c=0|e)},n.c=1,n.s0=r(" "),n.s1=r(" "),n.s2=r(" "),n.s0-=r(e),n.s0<0&&(n.s0+=1),n.s1-=r(e),n.s1<0&&(n.s1+=1),n.s2-=r(e),n.s2<0&&(n.s2+=1),r=null}function o(e,t){return t.c=e.c,t.s0=e.s0,t.s1=e.s1,t.s2=e.s2,t}function u(e,t){var n=new i(e),r=t&&t.state,s=n.next;return s.int32=function(){return 4294967296*n.next()|0},s.double=function(){return s()+11102230246251565e-32*(2097152*s()|0)},s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.alea=u}(0,e=n.nmd(e),n.amdD)},49:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.b,n=t.c,r=t.d,s=t.a;return e=e<<25^e>>>7^n,n=n-r|0,r=r<<24^r>>>8^s,s=s-e|0,t.b=e=e<<20^e>>>12^n,t.c=n=n-r|0,t.d=r<<16^n>>>16^s,t.a=s-e|0},t.a=0,t.b=0,t.c=-1640531527,t.d=1367130551,e===Math.floor(e)?(t.a=e/4294967296|0,t.b=0|e):n+=e;for(var r=0;r<n.length+20;r++)t.b^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.a=e.a,t.b=e.b,t.c=e.c,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.tychei=u}(0,e=n.nmd(e),n.amdD)},652:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.x=0,t.y=0,t.z=0,t.w=0,t.next=function(){var e=t.x^t.x<<11;return t.x=t.y,t.y=t.z,t.z=t.w,t.w^=t.w>>>19^e^e>>>8},e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor128=u}(0,e=n.nmd(e),n.amdD)},618:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.w,s=t.X,a=t.i;return t.w=r=r+1640531527|0,n=s[a+34&127],e=s[a=a+1&127],n^=n<<13,e^=e<<17,n^=n>>>15,e^=e>>>12,n=s[a]=n^e,t.i=a,n+(r^r>>>16)|0},function(e,t){var n,r,s,a,i,o=[],u=128;for(t===(0|t)?(r=t,t=null):(t+="\0",r=0,u=Math.max(u,t.length)),s=0,a=-32;a<u;++a)t&&(r^=t.charCodeAt((a+32)%t.length)),0===a&&(i=r),r^=r<<10,r^=r>>>15,r^=r<<4,r^=r>>>13,a>=0&&(i=i+1640531527|0,s=0==(n=o[127&a]^=r+i)?s+1:0);for(s>=128&&(o[127&(t&&t.length||0)]=-1),s=127,a=512;a>0;--a)r=o[s+34&127],n=o[s=s+1&127],r^=r<<13,n^=n<<17,r^=r>>>15,n^=n>>>12,o[s]=r^n;e.w=i,e.X=o,e.i=s}(t,e)}function o(e,t){return t.i=e.i,t.w=e.w,t.X=e.X.slice(),t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.X&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xor4096=u}(0,e=n.nmd(e),n.amdD)},30:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this;t.next=function(){var e,n,r=t.x,s=t.i;return e=r[s],n=(e^=e>>>7)^e<<24,n^=(e=r[s+1&7])^e>>>10,n^=(e=r[s+3&7])^e>>>3,n^=(e=r[s+4&7])^e<<7,e=r[s+7&7],n^=(e^=e<<13)^e<<9,r[s]=n,t.i=s+1&7,n},function(e,t){var n,r=[];if(t===(0|t))r[0]=t;else for(t=""+t,n=0;n<t.length;++n)r[7&n]=r[7&n]<<15^t.charCodeAt(n)+r[n+1&7]<<13;for(;r.length<8;)r.push(0);for(n=0;n<8&&0===r[n];++n);for(8==n?r[7]=-1:r[n],e.x=r,e.i=0,n=256;n>0;--n)e.next()}(t,e)}function o(e,t){return t.x=e.x.slice(),t.i=e.i,t}function u(e,t){null==e&&(e=+new Date);var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&(r.x&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorshift7=u}(0,e=n.nmd(e),n.amdD)},801:function(e,t,n){var r;!function(e,s,a){function i(e){var t=this,n="";t.next=function(){var e=t.x^t.x>>>2;return t.x=t.y,t.y=t.z,t.z=t.w,t.w=t.v,(t.d=t.d+362437|0)+(t.v=t.v^t.v<<4^e^e<<1)|0},t.x=0,t.y=0,t.z=0,t.w=0,t.v=0,e===(0|e)?t.x=e:n+=e;for(var r=0;r<n.length+64;r++)t.x^=0|n.charCodeAt(r),r==n.length&&(t.d=t.x<<10^t.x>>>4),t.next()}function o(e,t){return t.x=e.x,t.y=e.y,t.z=e.z,t.w=e.w,t.v=e.v,t.d=e.d,t}function u(e,t){var n=new i(e),r=t&&t.state,s=function(){return(n.next()>>>0)/4294967296};return s.double=function(){do{var e=((n.next()>>>11)+(n.next()>>>0)/4294967296)/(1<<21)}while(0===e);return e},s.int32=n.next,s.quick=s,r&&("object"==typeof r&&o(r,n),s.state=function(){return o(n,{})}),s}s&&s.exports?s.exports=u:n.amdD&&n.amdO?void 0===(r=function(){return u}.call(t,n,t,s))||(s.exports=r):this.xorwow=u}(0,e=n.nmd(e),n.amdD)},971:(e,t,n)=>{var r;!function(s,a){var i,o=this,u=256,l=a.pow(u,6),c=a.pow(2,52),h=2*c,p=255;function d(e,t,n){var r=[],p=y(g((t=1==t?{entropy:!0}:t||{}).entropy?[e,b(s)]:null==e?function(){try{var e;return i&&(e=i.randomBytes)?e=e(u):(e=new Uint8Array(u),(o.crypto||o.msCrypto).getRandomValues(e)),b(e)}catch(e){var t=o.navigator,n=t&&t.plugins;return[+new Date,o,n,o.screen,b(s)]}}():e,3),r),d=new f(r),x=function(){for(var e=d.g(6),t=l,n=0;e<c;)e=(e+n)*u,t*=u,n=d.g(1);for(;e>=h;)e/=2,t/=2,n>>>=1;return(e+n)/t};return x.int32=function(){return 0|d.g(4)},x.quick=function(){return d.g(4)/4294967296},x.double=x,y(b(d.S),s),(t.pass||n||function(e,t,n,r){return r&&(r.S&&m(r,d),e.state=function(){return m(d,{})}),n?(a.random=e,t):e})(x,p,"global"in t?t.global:this==a,t.state)}function f(e){var t,n=e.length,r=this,s=0,a=r.i=r.j=0,i=r.S=[];for(n||(e=[n++]);s<u;)i[s]=s++;for(s=0;s<u;s++)i[s]=i[a=p&a+e[s%n]+(t=i[s])],i[a]=t;(r.g=function(e){for(var t,n=0,s=r.i,a=r.j,i=r.S;e--;)t=i[s=p&s+1],n=n*u+i[p&(i[s]=i[a=p&a+t])+(i[a]=t)];return r.i=s,r.j=a,n})(u)}function m(e,t){return t.i=e.i,t.j=e.j,t.S=e.S.slice(),t}function g(e,t){var n,r=[],s=typeof e;if(t&&"object"==s)for(n in e)try{r.push(g(e[n],t-1))}catch(e){}return r.length?r:"string"==s?e:e+"\0"}function y(e,t){for(var n,r=e+"",s=0;s<r.length;)t[p&s]=p&(n^=19*t[p&s])+r.charCodeAt(s++);return b(t)}function b(e){return String.fromCharCode.apply(0,e)}if(a.seedrandom=d,y(a.random(),s),e.exports){e.exports=d;try{i=n(906)}catch(e){}}else void 0===(r=function(){return d}.call(t,n,t,e))||(e.exports=r)}([],Math)},412:(e,t,n)=>{"use strict";n.r(t),n.d(t,{default:()=>i});var r=n(379),s=n.n(r),a=n(485);s()(a.Z,{insert:"head",singleton:!1});const i=a.Z.locals||{}},379:(e,t,n)=>{"use strict";var r,s=function(){var e={};return function(t){if(void 0===e[t]){var n=document.querySelector(t);if(window.HTMLIFrameElement&&n instanceof window.HTMLIFrameElement)try{n=n.contentDocument.head}catch(e){n=null}e[t]=n}return e[t]}}(),a=[];function i(e){for(var t=-1,n=0;n<a.length;n++)if(a[n].identifier===e){t=n;break}return t}function o(e,t){for(var n={},r=[],s=0;s<e.length;s++){var o=e[s],u=t.base?o[0]+t.base:o[0],l=n[u]||0,c="".concat(u," ").concat(l);n[u]=l+1;var h=i(c),p={css:o[1],media:o[2],sourceMap:o[3]};-1!==h?(a[h].references++,a[h].updater(p)):a.push({identifier:c,updater:m(p,t),references:1}),r.push(c)}return r}function u(e){var t=document.createElement("style"),r=e.attributes||{};if(void 0===r.nonce){var a=n.nc;a&&(r.nonce=a)}if(Object.keys(r).forEach((function(e){t.setAttribute(e,r[e])})),"function"==typeof e.insert)e.insert(t);else{var i=s(e.insert||"head");if(!i)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");i.appendChild(t)}return t}var l,c=(l=[],function(e,t){return l[e]=t,l.filter(Boolean).join("\n")});function h(e,t,n,r){var s=n?"":r.media?"@media ".concat(r.media," {").concat(r.css,"}"):r.css;if(e.styleSheet)e.styleSheet.cssText=c(t,s);else{var a=document.createTextNode(s),i=e.childNodes;i[t]&&e.removeChild(i[t]),i.length?e.insertBefore(a,i[t]):e.appendChild(a)}}function p(e,t,n){var r=n.css,s=n.media,a=n.sourceMap;if(s?e.setAttribute("media",s):e.removeAttribute("media"),a&&"undefined"!=typeof btoa&&(r+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleSheet)e.styleSheet.cssText=r;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(r))}}var d=null,f=0;function m(e,t){var n,r,s;if(t.singleton){var a=f++;n=d||(d=u(t)),r=h.bind(null,n,a,!1),s=h.bind(null,n,a,!0)}else n=u(t),r=p.bind(null,n,t),s=function(){!function(e){if(null===e.parentNode)return!1;e.parentNode.removeChild(e)}(n)};return r(e),function(t){if(t){if(t.css===e.css&&t.media===e.media&&t.sourceMap===e.sourceMap)return;r(e=t)}else s()}}e.exports=function(e,t){(t=t||{}).singleton||"boolean"==typeof t.singleton||(t.singleton=(void 0===r&&(r=Boolean(window&&document&&document.all&&!window.atob)),r));var n=o(e=e||[],t);return function(e){if(e=e||[],"[object Array]"===Object.prototype.toString.call(e)){for(var r=0;r<n.length;r++){var s=i(n[r]);a[s].references--}for(var u=o(e,t),l=0;l<n.length;l++){var c=i(n[l]);0===a[c].references&&(a[c].updater(),a.splice(c,1))}n=u}}}},616:function(e){e.exports=function(){"use strict";function e(e,n){var r="undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(!r){if(Array.isArray(e)||(r=function(e,n){if(e){if("string"==typeof e)return t(e,n);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?t(e,n):void 0}}(e))||n&&e&&"number"==typeof e.length){r&&(e=r);var s=0,a=function(){};return{s:a,n:function(){return s>=e.length?{done:!0}:{done:!1,value:e[s++]}},e:function(e){throw e},f:a}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var i,o=!0,u=!1;return{s:function(){r=r.call(e)},n:function(){var e=r.next();return o=e.done,e},e:function(e){u=!0,i=e},f:function(){try{o||null==r.return||r.return()}finally{if(u)throw i}}}}function t(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function n(e){return n="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},n(e)}function r(){return!0}function s(){return!1}function a(){}var i="Argument is not a typed-function.";return function t(){function o(e){return"object"===n(e)&&null!==e&&e.constructor===Object}var u,l,c=[{name:"number",test:function(e){return"number"==typeof e}},{name:"string",test:function(e){return"string"==typeof e}},{name:"boolean",test:function(e){return"boolean"==typeof e}},{name:"Function",test:function(e){return"function"==typeof e}},{name:"Array",test:Array.isArray},{name:"Date",test:function(e){return e instanceof Date}},{name:"RegExp",test:function(e){return e instanceof RegExp}},{name:"Object",test:o},{name:"null",test:function(e){return null===e}},{name:"undefined",test:function(e){return void 0===e}}],h={name:"any",test:r,isAny:!0},p=0,d={createCount:0};function f(t){var n=u.get(t);if(n)return n;var r,s,a='Unknown type "'+t+'"',i=t.toLowerCase(),o=e(l);try{for(o.s();!(s=o.n()).done;)if((r=s.value).toLowerCase()===i){a+='. Did you mean "'+r+'" ?';break}}catch(e){o.e(e)}finally{o.f()}throw new TypeError(a)}function m(e){for(var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"any",n=t?f(t).index:l.length,r=[],s=0;s<e.length;++s){if(!e[s]||"string"!=typeof e[s].name||"function"!=typeof e[s].test)throw new TypeError("Object with properties {name: string, test: function} expected");var a=e[s].name;if(u.has(a))throw new TypeError('Duplicate type name "'+a+'"');r.push(a),u.set(a,{name:a,test:e[s].test,isAny:e[s].isAny,index:n+s,conversionsTo:[]})}var i=l.slice(n);l=l.slice(0,n).concat(r).concat(i);for(var o=n+r.length;o<l.length;++o)u.get(l[o]).index=o}function g(){u=new Map,l=[],p=0,m([h],!1)}function y(e){var t=l.filter((function(t){var n=u.get(t);return!n.isAny&&n.test(e)}));return t.length?t:["any"]}function b(e){return e&&"function"==typeof e&&"_typedFunctionData"in e}function x(t,n,r){if(!b(t))throw new TypeError(i);var s=r&&r.exact,a=I(Array.isArray(n)?n.join(","):n),o=w(a);if(!s||o in t.signatures){var u=t._typedFunctionData.signatureMap.get(o);if(u)return u}var l,c,h,p=a.length;if(s)for(c in l=[],t.signatures)l.push(t._typedFunctionData.signatureMap.get(c));else l=t._typedFunctionData.signatures;for(var d=0;d<p;++d){var f,m=a[d],g=[],y=void 0,x=e(l);try{for(x.s();!(f=x.n()).done;){var v=S((y=f.value).params,d);if(v&&(!m.restParam||v.restParam)){if(!v.hasAny&&"continue"===function(){var e=N(v);if(m.types.some((function(t){return!e.has(t.name)})))return"continue"}())continue;g.push(y)}}}catch(e){x.e(e)}finally{x.f()}if(0===(l=g).length)break}var k,C=e(l);try{for(C.s();!(k=C.n()).done;)if((h=k.value).params.length<=p)return h}catch(e){C.e(e)}finally{C.f()}throw new TypeError("Signature not found (signature: "+(t.name||"unnamed")+"("+w(a,", ")+"))")}function w(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:",";return e.map((function(e){return e.name})).join(t)}function v(e){var t=0===e.indexOf("..."),n=(t?e.length>3?e.slice(3):"any":e).split("|").map((function(e){return f(e.trim())})),r=!1,s=t?"...":"";return{types:n.map((function(e){return r=e.isAny||r,s+=e.name+"|",{name:e.name,typeIndex:e.index,test:e.test,isAny:e.isAny,conversion:null,conversionIndex:-1}})),name:s.slice(0,-1),hasAny:r,hasConversion:!1,restParam:t}}function k(t){var n=function(t){if(0===t.length)return[];var n=t.map(f);t.length>1&&n.sort((function(e,t){return e.index-t.index}));var r=n[0].conversionsTo;if(1===t.length)return r;r=r.concat([]);for(var s=new Set(t),a=1;a<n.length;++a){var i,o=void 0,u=e(n[a].conversionsTo);try{for(u.s();!(i=u.n()).done;)o=i.value,s.has(o.from)||(r.push(o),s.add(o.from))}catch(e){u.e(e)}finally{u.f()}}return r}(t.types.map((function(e){return e.name}))),r=t.hasAny,s=t.name,a=n.map((function(e){var t=f(e.from);return r=t.isAny||r,s+="|"+e.from,{name:e.from,typeIndex:t.index,test:t.test,isAny:t.isAny,conversion:e,conversionIndex:e.index}}));return{types:t.types.concat(a),name:s,hasAny:r,hasConversion:a.length>0,restParam:t.restParam}}function N(e){return e.typeSet||(e.typeSet=new Set,e.types.forEach((function(t){return e.typeSet.add(t.name)}))),e.typeSet}function I(e){var t=[];if("string"!=typeof e)throw new TypeError("Signatures must be strings");var n=e.trim();if(""===n)return t;for(var r=n.split(","),s=0;s<r.length;++s){var a=v(r[s].trim());if(a.restParam&&s!==r.length-1)throw new SyntaxError('Unexpected rest parameter "'+r[s]+'": only allowed for the last parameter');if(0===a.types.length)return null;t.push(a)}return t}function C(e){var t=j(e);return!!t&&t.restParam}function D(e){if(e&&0!==e.types.length){if(1===e.types.length)return f(e.types[0].name).test;if(2===e.types.length){var t=f(e.types[0].name).test,n=f(e.types[1].name).test;return function(e){return t(e)||n(e)}}var s=e.types.map((function(e){return f(e.name).test}));return function(e){for(var t=0;t<s.length;t++)if(s[t](e))return!0;return!1}}return r}function E(e){var t,n,r;if(C(e)){var s=(t=G(e).map(D)).length,a=D(j(e));return function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return function(e){for(var t=s;t<e.length;t++)if(!a(e[t]))return!1;return!0}(e)&&e.length>=s+1}}return 0===e.length?function(e){return 0===e.length}:1===e.length?(n=D(e[0]),function(e){return n(e[0])&&1===e.length}):2===e.length?(n=D(e[0]),r=D(e[1]),function(e){return n(e[0])&&r(e[1])&&2===e.length}):(t=e.map(D),function(e){for(var n=0;n<t.length;n++)if(!t[n](e[n]))return!1;return e.length===t.length})}function S(e,t){return t<e.length?e[t]:C(e)?j(e):null}function T(e,t){var n=S(e,t);return n?N(n):new Set}function A(e){return null===e.conversion||void 0===e.conversion}function $(t,n){var r=new Set;return t.forEach((function(t){var s,a,i=e(T(t.params,n));try{for(i.s();!(a=i.n()).done;)s=a.value,r.add(s)}catch(e){i.e(e)}finally{i.f()}})),r.has("any")?["any"]:Array.from(r)}function F(e,t,r){var s,a,i,o=e||"unnamed",u=r,l=function(){var e=[];if(u.forEach((function(n){var r=D(S(n.params,i));(i<n.params.length||C(n.params))&&r(t[i])&&e.push(n)})),0===e.length){if((a=$(u,i)).length>0){var n=y(t[i]);return(s=new TypeError("Unexpected type of argument in function "+o+" (expected: "+a.join(" or ")+", actual: "+n.join(" | ")+", index: "+i+")")).data={category:"wrongType",fn:o,index:i,actual:n,expected:a},{v:s}}}else u=e};for(i=0;i<t.length;i++){var c=l();if("object"===n(c))return c.v}var h=u.map((function(e){return C(e.params)?1/0:e.params.length}));if(t.length<Math.min.apply(null,h))return a=$(u,i),(s=new TypeError("Too few arguments in function "+o+" (expected: "+a.join(" or ")+", index: "+t.length+")")).data={category:"tooFewArgs",fn:o,index:t.length,expected:a},s;var p=Math.max.apply(null,h);if(t.length>p)return(s=new TypeError("Too many arguments in function "+o+" (expected: "+p+", actual: "+t.length+")")).data={category:"tooManyArgs",fn:o,index:t.length,expectedLength:p},s;for(var d=[],f=0;f<t.length;++f)d.push(y(t[f]).join("|"));return(s=new TypeError('Arguments of type "'+d.join(", ")+'" do not match any of the defined signatures of function '+o+".")).data={category:"mismatch",actual:d},s}function R(e){for(var t=l.length+1,n=0;n<e.types.length;n++)A(e.types[n])&&(t=Math.min(t,e.types[n].typeIndex));return t}function _(e){for(var t=p+1,n=0;n<e.types.length;n++)A(e.types[n])||(t=Math.min(t,e.types[n].conversionIndex));return t}function M(e,t){if(e.hasAny){if(!t.hasAny)return 1}else if(t.hasAny)return-1;if(e.restParam){if(!t.restParam)return 1}else if(t.restParam)return-1;if(e.hasConversion){if(!t.hasConversion)return 1}else if(t.hasConversion)return-1;var n=R(e)-R(t);if(n<0)return-1;if(n>0)return 1;var r=_(e)-_(t);return r<0?-1:r>0?1:0}function O(t,n){var r=t.params,s=n.params,a=j(r),i=j(s),o=C(r),u=C(s);if(o&&a.hasAny){if(!u||!i.hasAny)return 1}else if(u&&i.hasAny)return-1;var l,c,h=0,p=0,d=e(r);try{for(d.s();!(c=d.n()).done;)(l=c.value).hasAny&&++h,l.hasConversion&&++p}catch(e){d.e(e)}finally{d.f()}var f,m=0,g=0,y=e(s);try{for(y.s();!(f=y.n()).done;)(l=f.value).hasAny&&++m,l.hasConversion&&++g}catch(e){y.e(e)}finally{y.f()}if(h!==m)return h-m;if(o&&a.hasConversion){if(!u||!i.hasConversion)return 1}else if(u&&i.hasConversion)return-1;if(p!==g)return p-g;if(o){if(!u)return 1}else if(u)return-1;var b=(r.length-s.length)*(o?-1:1);if(0!==b)return b;for(var x,w=[],v=0,k=0;k<r.length;++k){var N=M(r[k],s[k]);w.push(N),v+=N}if(0!==v)return v;for(var I=0,D=w;I<D.length;I++)if(0!==(x=D[I]))return x;return 0}function B(e,t){var n=t;if(e.some((function(e){return e.hasConversion}))){var r=C(e),s=e.map(z);n=function(){for(var e=[],n=r?arguments.length-1:arguments.length,a=0;a<n;a++)e[a]=s[a](arguments[a]);return r&&(e[n]=arguments[n].map(s[n])),t.apply(this,e)}}var a=n;if(C(e)){var i=e.length-1;a=function(){return n.apply(this,H(arguments,0,i).concat([H(arguments,i)]))}}return a}function z(e){var t,n,r,s,a=[],i=[];switch(e.types.forEach((function(e){e.conversion&&(a.push(f(e.conversion.from).test),i.push(e.conversion.convert))})),i.length){case 0:return function(e){return e};case 1:return t=a[0],r=i[0],function(e){return t(e)?r(e):e};case 2:return t=a[0],n=a[1],r=i[0],s=i[1],function(e){return t(e)?r(e):n(e)?s(e):e};default:return function(e){for(var t=0;t<i.length;t++)if(a[t](e))return i[t](e);return e}}}function L(e){return function e(t,n,r){if(n<t.length){var s=t[n],a=[];if(s.restParam){var i=s.types.filter(A);i.length<s.types.length&&a.push({types:i,name:"..."+i.map((function(e){return e.name})).join("|"),hasAny:i.some((function(e){return e.isAny})),hasConversion:!1,restParam:!0}),a.push(s)}else a=s.types.map((function(e){return{types:[e],name:e.name,hasAny:e.isAny,hasConversion:e.conversion,restParam:!1}}));return o=a,u=function(s){return e(t,n+1,r.concat([s]))},Array.prototype.concat.apply([],o.map(u))}var o,u;return[r]}(e,0,[])}function P(t,n,r){var s,a,i=[],o=e(t);try{for(o.s();!(a=o.n()).done;){var u=r[s=a.value];if("number"!=typeof u)throw new TypeError('No definition for referenced signature "'+s+'"');if("function"!=typeof(u=n[u]))return!1;i.push(u)}}catch(e){o.e(e)}finally{o.f()}return i}function U(e,t,n){for(var r=function(e){return e.map((function(e){return Y(e)?K(e.referToSelf.callback):X(e)?q(e.referTo.references,e.referTo.callback):e}))}(e),s=new Array(r.length).fill(!1),a=!0;a;){a=!1;for(var i=!0,o=0;o<r.length;++o)if(!s[o]){var u=r[o];if(Y(u))r[o]=u.referToSelf.callback(n),r[o].referToSelf=u.referToSelf,s[o]=!0,i=!1;else if(X(u)){var l=P(u.referTo.references,r,t);l?(r[o]=u.referTo.callback.apply(this,l),r[o].referTo=u.referTo,s[o]=!0,i=!1):a=!0}}if(i&&a)throw new SyntaxError("Circular reference detected in resolving typed.referTo")}return r}function W(t,n){if(d.createCount++,0===Object.keys(n).length)throw new SyntaxError("No signatures provided");d.warnAgainstDeprecatedThis&&function(e){var t=/\bthis(\(|\.signatures\b)/;Object.keys(e).forEach((function(n){var r=e[n];if(t.test(r.toString()))throw new SyntaxError("Using `this` to self-reference a function is deprecated since typed-function@3. Use typed.referTo and typed.referToSelf instead.")}))}(n);var r,i=[],o=[],u={},l=[],c=function(){if(!Object.prototype.hasOwnProperty.call(n,r))return"continue";var t=I(r);if(!t)return"continue";i.forEach((function(n){if(function(t,n){for(var r=Math.max(t.length,n.length),s=0;s<r;s++){var a,i=T(t,s),o=!1,u=void 0,l=e(T(n,s));try{for(l.s();!(a=l.n()).done;)if(u=a.value,i.has(u)){o=!0;break}}catch(e){l.e(e)}finally{l.f()}if(!o)return!1}var c=t.length,h=n.length,p=C(t),d=C(n);return p?d?c===h:h>=c:d?c>=h:c===h}(n,t))throw new TypeError('Conflicting signatures "'+w(n)+'" and "'+w(t)+'".')})),i.push(t);var s=o.length;o.push(n[r]);var a,c=void 0,h=e(L(t.map(k)));try{for(h.s();!(a=h.n()).done;){var p=w(c=a.value);l.push({params:c,name:p,fn:s}),c.every((function(e){return!e.hasConversion}))&&(u[p]=s)}}catch(e){h.e(e)}finally{h.f()}};for(r in n)c();l.sort(O);var h,p=U(o,u,de);for(h in u)Object.prototype.hasOwnProperty.call(u,h)&&(u[h]=p[u[h]]);for(var f=[],m=new Map,g=0,y=l;g<y.length;g++)h=y[g],m.has(h.name)||(h.fn=p[h.fn],f.push(h),m.set(h.name,h));for(var b=f[0]&&f[0].params.length<=2&&!C(f[0].params),x=f[1]&&f[1].params.length<=2&&!C(f[1].params),v=f[2]&&f[2].params.length<=2&&!C(f[2].params),N=f[3]&&f[3].params.length<=2&&!C(f[3].params),S=f[4]&&f[4].params.length<=2&&!C(f[4].params),A=f[5]&&f[5].params.length<=2&&!C(f[5].params),$=b&&x&&v&&N&&S&&A,F=0;F<f.length;++F)f[F].test=E(f[F].params);for(var R=b?D(f[0].params[0]):s,_=x?D(f[1].params[0]):s,M=v?D(f[2].params[0]):s,z=N?D(f[3].params[0]):s,P=S?D(f[4].params[0]):s,W=A?D(f[5].params[0]):s,V=b?D(f[0].params[1]):s,G=x?D(f[1].params[1]):s,j=v?D(f[2].params[1]):s,H=N?D(f[3].params[1]):s,q=S?D(f[4].params[1]):s,K=A?D(f[5].params[1]):s,X=0;X<f.length;++X)f[X].implementation=B(f[X].params,f[X].fn);var Y=b?f[0].implementation:a,Z=x?f[1].implementation:a,J=v?f[2].implementation:a,Q=N?f[3].implementation:a,ee=S?f[4].implementation:a,te=A?f[5].implementation:a,ne=b?f[0].params.length:-1,re=x?f[1].params.length:-1,se=v?f[2].params.length:-1,ae=N?f[3].params.length:-1,ie=S?f[4].params.length:-1,oe=A?f[5].params.length:-1,ue=$?6:0,le=f.length,ce=f.map((function(e){return e.test})),he=f.map((function(e){return e.implementation})),pe=function(){for(var e=ue;e<le;e++)if(ce[e](arguments))return he[e].apply(this,arguments);return d.onMismatch(t,arguments,f)};function de(e,t){return arguments.length===ne&&R(e)&&V(t)?Y.apply(this,arguments):arguments.length===re&&_(e)&&G(t)?Z.apply(this,arguments):arguments.length===se&&M(e)&&j(t)?J.apply(this,arguments):arguments.length===ae&&z(e)&&H(t)?Q.apply(this,arguments):arguments.length===ie&&P(e)&&q(t)?ee.apply(this,arguments):arguments.length===oe&&W(e)&&K(t)?te.apply(this,arguments):pe.apply(this,arguments)}try{Object.defineProperty(de,"name",{value:t})}catch(e){}return de.signatures=u,de._typedFunctionData={signatures:f,signatureMap:m},de}function V(e,t,n){throw F(e,t,n)}function G(e){return H(e,0,e.length-1)}function j(e){return e[e.length-1]}function H(e,t,n){return Array.prototype.slice.call(e,t,n)}function q(e,t){return{referTo:{references:e,callback:t}}}function K(e){if("function"!=typeof e)throw new TypeError("Callback function expected as first argument");return{referToSelf:{callback:e}}}function X(e){return e&&"object"===n(e.referTo)&&Array.isArray(e.referTo.references)&&"function"==typeof e.referTo.callback}function Y(e){return e&&"object"===n(e.referToSelf)&&"function"==typeof e.referToSelf.callback}function Z(e,t){if(!e)return t;if(t&&t!==e){var n=new Error("Function names do not match (expected: "+e+", actual: "+t+")");throw n.data={actual:t,expected:e},n}return e}function J(e){var t;for(var n in e)Object.prototype.hasOwnProperty.call(e,n)&&(b(e[n])||"string"==typeof e[n].signature)&&(t=Z(t,e[n].name));return t}function Q(e,t){var n;for(n in t)if(Object.prototype.hasOwnProperty.call(t,n)){if(n in e&&t[n]!==e[n]){var r=new Error('Signature "'+n+'" is defined twice');throw r.data={signature:n,sourceFunction:t[n],destFunction:e[n]},r}e[n]=t[n]}}g(),m(c);var ee=d;function te(e){if(!e||"string"!=typeof e.from||"string"!=typeof e.to||"function"!=typeof e.convert)throw new TypeError("Object with properties {from: string, to: string, convert: function} expected");if(e.to===e.from)throw new SyntaxError('Illegal to define conversion from "'+e.from+'" to itself.')}return d=function(e){for(var t="string"==typeof e,n=t?e:"",r={},s=t?1:0;s<arguments.length;++s){var a=arguments[s],i={},u=void 0;if("function"==typeof a?(u=a.name,"string"==typeof a.signature?i[a.signature]=a:b(a)&&(i=a.signatures)):o(a)&&(i=a,t||(u=J(a))),0===Object.keys(i).length){var l=new TypeError("Argument to 'typed' at index "+s+" is not a (typed) function, nor an object with signatures as keys and functions as values.");throw l.data={index:s,argument:a},l}t||(n=Z(n,u)),Q(r,i)}return W(n||"",r)},d.create=t,d.createCount=ee.createCount,d.onMismatch=V,d.throwMismatchError=V,d.createError=F,d.clear=g,d.clearConversions=function(){var t,n,r=e(l);try{for(r.s();!(n=r.n()).done;)t=n.value,u.get(t).conversionsTo=[]}catch(e){r.e(e)}finally{r.f()}p=0},d.addTypes=m,d._findType=f,d.referTo=function(){var e=G(arguments).map((function(e){return w(I(e))})),t=j(arguments);if("function"!=typeof t)throw new TypeError("Callback function expected as last argument");return q(e,t)},d.referToSelf=K,d.convert=function(e,t){var n=f(t);if(n.test(e))return e;var r=n.conversionsTo;if(0===r.length)throw new Error("There are no conversions to "+t+" defined.");for(var s=0;s<r.length;s++)if(f(r[s].from).test(e))return r[s].convert(e);throw new Error("Cannot convert "+e+" to "+t)},d.findSignature=x,d.find=function(e,t,n){return x(e,t,n).implementation},d.isTypedFunction=b,d.warnAgainstDeprecatedThis=!0,d.addType=function(e,t){var n="any";!1!==t&&u.has("Object")&&(n="Object"),d.addTypes([e],n)},d.addConversion=function(e){te(e);var t=f(e.to);if(!t.conversionsTo.every((function(t){return t.from!==e.from})))throw new Error('There is already a conversion from "'+e.from+'" to "'+t.name+'"');t.conversionsTo.push({from:e.from,convert:e.convert,index:p++})},d.addConversions=function(e){e.forEach(d.addConversion)},d.removeConversion=function(e){te(e);var t=f(e.to),n=function(e,t){for(var n=0;n<e.length;n++)if(t(e[n]))return e[n]}(t.conversionsTo,(function(t){return t.from===e.from}));if(!n)throw new Error("Attempt to remove nonexistent conversion from "+e.from+" to "+e.to);if(n.convert!==e.convert)throw new Error("Conversion to remove does not match existing conversion");var r=t.conversionsTo.indexOf(n);t.conversionsTo.splice(r,1)},d.resolve=function(e,t){if(!b(e))throw new TypeError(i);for(var n=e._typedFunctionData.signatures,r=0;r<n.length;++r)if(n[r].test(t))return n[r];return null},d}()}()},439:(e,t,n)=>{n(412);const r=n(894).Z,s=n(345).Z,a=n(810).Z;e.exports={UI:class{constructor({uiLoading:e,uiScanning:t,uiError:n}){"yes"===e?this.loadingModal=this._loadHTML(r):"no"!==e&&(this.loadingModal=document.querySelector(e)),"yes"===n?this.compatibilityModal=this._loadHTML(s):"no"!==n&&(this.compatibilityModal=document.querySelector(n)),"yes"===t?this.scanningMask=this._loadHTML(a):"no"!==t&&(this.scanningMask=document.querySelector(t)),this.hideLoading(),this.hideCompatibility(),this.hideScanning()}showLoading(){this.loadingModal&&this.loadingModal.classList.remove("hidden")}hideLoading(){this.loadingModal&&this.loadingModal.classList.add("hidden")}showCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.remove("hidden")}hideCompatibility(){this.compatibilityModal&&this.compatibilityModal.classList.add("hidden")}showScanning(){this.scanningMask&&this.scanningMask.classList.remove("hidden")}hideScanning(){this.scanningMask&&this.scanningMask.classList.add("hidden")}_loadHTML(e){const t=document.createElement("template");t.innerHTML=e.trim();const n=t.content.firstChild;return document.getElementsByTagName("body")[0].appendChild(n),n}}}},906:()=>{},993:()=>{},352:()=>{},589:()=>{},758:()=>{}},t={};function n(r){if(t[r])return t[r].exports;var s=t[r]={id:r,loaded:!1,exports:{}};return e[r].call(s.exports,s,s.exports,n),s.loaded=!0,s.exports}n.m=e,n.amdD=function(){throw new Error("define cannot be used indirect")},n.amdO={},n.n=e=>{var t=e&&e.__esModule?()=>e.default:()=>e;return n.d(t,{a:t}),t},n.d=(e,t)=>{for(var r in t)n.o(t,r)&&!n.o(e,r)&&Object.defineProperty(e,r,{enumerable:!0,get:t[r]})},n.u=e=>e+".prod.js",n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,t)=>Object.prototype.hasOwnProperty.call(e,t),n.r=e=>{"undefined"!=typeof Symbol&&Symbol.toStringTag&&Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}),Object.defineProperty(e,"__esModule",{value:!0})},n.nmd=e=>(e.paths=[],e.children||(e.children=[]),e),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var t=n.g.document;if(!e&&t&&(t.currentScript&&(e=t.currentScript.src),!e)){var r=t.getElementsByTagName("script");r.length&&(e=r[r.length-1].src)}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),n.b=document.baseURI||self.location.href,(()=>{"use strict";var e={};n.r(e),n.d(e,{arraysEqual:()=>le,assert:()=>re,assertNonNegativeIntegerDimensions:()=>Le,assertNonNull:()=>ae,assertShapesMatch:()=>se,bytesFromStringArray:()=>De,bytesPerElement:()=>Ce,checkConversionForErrors:()=>ve,clamp:()=>Z,computeStrides:()=>Re,createScalarValue:()=>Ts,createShuffledIndices:()=>de,decodeString:()=>_s,distSquared:()=>ne,encodeString:()=>Rs,fetch:()=>Fs,fingerPrint64:()=>Ss,flatten:()=>ie,getArrayFromDType:()=>we,getTypedArrayFromDType:()=>xe,hasEncodingLoss:()=>Ne,hexToLong:()=>ys,indexToLoc:()=>Ue,inferDtype:()=>Ae,inferFromImplicitShape:()=>ge,isBoolean:()=>Se,isFunction:()=>$e,isInt:()=>ce,isNumber:()=>Te,isPromise:()=>We,isScalarShape:()=>ue,isString:()=>Ee,isTypedArray:()=>Ie,isValidDtype:()=>ke,locToIndex:()=>Pe,makeOnesTypedArray:()=>Oe,makeZerosNestedTypedArray:()=>ze,makeZerosTypedArray:()=>Be,nearestDivisor:()=>Fe,nearestLargerEven:()=>J,now:()=>$s,parseAxisParam:()=>ye,randUniform:()=>te,repeatedTry:()=>me,rightPad:()=>fe,shuffle:()=>X,shuffleCombo:()=>Y,sizeFromShape:()=>oe,sizeToSquarishShape:()=>pe,squeezeShape:()=>be,sum:()=>ee,swap:()=>Q,tanh:()=>he,toNestedArray:()=>Me,toTypedArray:()=>As});var t={};n.r(t),n.d(t,{assertTypesMatch:()=>aa,getTensorsInContainer:()=>oa,isTensorInList:()=>ia,makeTypesMatch:()=>sa});var r={};n.r(r),n.d(r,{isBrowser:()=>ba,isMobile:()=>ya,mockIsMobile:()=>ga});var s={};n.r(s),n.d(s,{browserFiles:()=>$i,browserHTTPRequest:()=>Pi,concatenateArrayBuffers:()=>Oa,copyModel:()=>wi,decodeWeights:()=>Fa,encodeWeights:()=>$a,fromMemory:()=>Vi,getLoadHandlers:()=>Ha,getModelArtifactsForJSON:()=>La,getModelArtifactsInfoForJSON:()=>Pa,getSaveHandlers:()=>ja,http:()=>Li,isHTTPScheme:()=>Bi,listModels:()=>bi,loadWeights:()=>_i,moveModel:()=>vi,registerLoadRouter:()=>Ga,registerSaveRouter:()=>Va,removeModel:()=>xi,weightsLoaderFactory:()=>Mi,withSaveHandler:()=>Gi});var a={};n.r(a),n.d(a,{confusionMatrix:()=>Ki});var i={};n.r(i),n.d(i,{assertAndGetBroadcastShape:()=>Zi,getBroadcastDims:()=>Xi,getReductionAxes:()=>Yi});var o={};n.r(o),n.d(o,{fromPixels:()=>ro,fromPixelsAsync:()=>to,toPixels:()=>no});var u={};n.r(u),n.d(u,{prepareAndValidate:()=>so});var l={};n.r(l),n.d(l,{calculateShapes:()=>oo,validateInput:()=>io,validateUpdateShape:()=>ao});var c={};n.r(c),n.d(c,{assertParamsValid:()=>uo,computeFlatOffset:()=>ko,computeOutShape:()=>co,getNormalizedAxes:()=>mo,isSliceContinous:()=>vo,maskToAxes:()=>lo,parseSliceParams:()=>No,sliceInfo:()=>Io,startForAxis:()=>xo,startIndicesWithElidedDims:()=>go,stopForAxis:()=>wo,stopIndicesWithElidedDims:()=>yo,stridesForAxis:()=>bo,stridesWithElidedDims:()=>ho});var h={};n.r(h),n.d(h,{Serializable:()=>Do,SerializationMap:()=>Eo,registerClass:()=>So});var p={};n.r(p),n.d(p,{TEST_EPSILON_FLOAT16:()=>To,encodeStrings:()=>Lo,expectArrayBuffersEqual:()=>zo,expectArraysClose:()=>Ao,expectArraysEqual:()=>_o,expectNumbersClose:()=>Mo,expectPromiseToFail:()=>Ro,expectValuesInRange:()=>Bo,testEpsilon:()=>$o});var d={};n.r(d),n.d(d,{conv2d:()=>Ep,depthwiseConv2d:()=>Ap,matMul:()=>$p});var f={};n.r(f),n.d(f,{collectGatherOpShapeInfo:()=>Af,computeOutShape:()=>Tf,segOpComputeOptimalWindowSize:()=>Sf});var m={};n.r(m),n.d(m,{ERF_A1:()=>qd,ERF_A2:()=>Kd,ERF_A3:()=>Xd,ERF_A4:()=>Yd,ERF_A5:()=>Zd,ERF_P:()=>Hd,PARALLELIZE_THRESHOLD:()=>Od,SELU_SCALE:()=>jd,SELU_SCALEALPHA:()=>Gd,applyActivation:()=>Cp,assertAndGetBroadcastShape:()=>Zi,assertAxesAreInnerMostDims:()=>Tc,assertParamsConsistent:()=>_d,assignToTypedArray:()=>sf,axesAreInnerMostDims:()=>Cc,calculateShapes:()=>oo,checkEinsumDimSizes:()=>hf,checkPadOnDimRoundingMode:()=>ul,combineLocations:()=>Dc,complexWithEvenIndex:()=>ef,complexWithOddIndex:()=>nf,computeConv2DInfo:()=>Ju,computeConv3DInfo:()=>Qu,computeDefaultPad:()=>el,computeDilation2DInfo:()=>Xu,computeOptimalWindowSize:()=>Bd,computeOutAndReduceShapes:()=>Ec,computeOutShape:()=>Md,computePool2DInfo:()=>Yu,computePool3DInfo:()=>Zu,convertConv2DDataFormat:()=>ol,decodeEinsumEquation:()=>lf,eitherStridesOrDilationsAreOne:()=>il,expandShapeToKeepDim:()=>Sc,exponent:()=>of,exponents:()=>af,fromStringArrayToUint8:()=>Ff,fromUint8ToStringArray:()=>$f,getAxesPermutation:()=>Ac,getBroadcastDims:()=>Xi,getComplexWithIndex:()=>rf,getEinsumComputePath:()=>pf,getEinsumPermutation:()=>cf,getFusedBiasGradient:()=>Ip,getFusedDyActivation:()=>Np,getImageCenter:()=>zd,getInnerMostAxes:()=>Fc,getPermuted:()=>Pd,getReductionAxes:()=>Yi,getReshaped:()=>Ld,getReshapedPermuted:()=>Ud,getSliceBeginCoords:()=>Wd,getSliceSize:()=>Vd,getSparseFillEmptyRowsIndicesDenseShapeMismatch:()=>gf,getSparseFillEmptyRowsNegativeIndexErrorMessage:()=>yf,getSparseFillEmptyRowsOutOfRangeIndexErrorMessage:()=>bf,getSparseReshapeEmptyTensorZeroOutputDimErrorMessage:()=>vf,getSparseReshapeInputOutputMismatchErrorMessage:()=>Nf,getSparseReshapeInputOutputMultipleErrorMessage:()=>kf,getSparseReshapeMultipleNegativeOneOutputDimErrorMessage:()=>xf,getSparseReshapeNegativeOutputDimErrorMessage:()=>wf,getSparseSegmentReductionIndicesOutOfRangeErrorMessage:()=>Ef,getSparseSegmentReductionNegativeSegmentIdsErrorMessage:()=>If,getSparseSegmentReductionNonIncreasingSegmentIdsErrorMessage:()=>Cf,getSparseSegmentReductionSegmentIdOutOfRangeErrorMessage:()=>Df,getUndoAxesPermutation:()=>$c,isIdentityPermutation:()=>df,log:()=>rs,mergeRealAndImagArrays:()=>Jd,prepareAndValidate:()=>so,prepareSplitSize:()=>mf,segment_util:()=>f,shouldFuse:()=>Dp,slice_util:()=>c,splitRealAndImagArrays:()=>Qd,tupleValuesAreOne:()=>al,upcastType:()=>na,validateInput:()=>io,validateUpdateShape:()=>ao,warn:()=>ns});var g={};n.r(g),n.d(g,{nonMaxSuppressionV3Impl:()=>Gp,nonMaxSuppressionV4Impl:()=>jp,nonMaxSuppressionV5Impl:()=>Hp,whereImpl:()=>lp});var y={};n.r(y),n.d(y,{maxNorm:()=>Ag,minMaxNorm:()=>Rg,nonNeg:()=>Fg,unitNorm:()=>$g});var b={};n.r(b),n.d(b,{constant:()=>Ly,glorotNormal:()=>Hy,glorotUniform:()=>jy,heNormal:()=>qy,heUniform:()=>Ky,identity:()=>Vy,leCunNormal:()=>Xy,leCunUniform:()=>Yy,ones:()=>zy,orthogonal:()=>Zy,randomNormal:()=>Uy,randomUniform:()=>Py,truncatedNormal:()=>Wy,varianceScaling:()=>Gy,zeros:()=>By});var x={};n.r(x),n.d(x,{Layer:()=>mb,RNN:()=>Bw,RNNCell:()=>zw,activation:()=>sk,add:()=>dk,alphaDropout:()=>rN,average:()=>fk,averagePooling1d:()=>Nk,averagePooling2d:()=>Dk,averagePooling3d:()=>Tk,avgPool1d:()=>Ik,avgPool2d:()=>Ek,avgPool3d:()=>Ak,avgPooling1d:()=>Ck,avgPooling2d:()=>Sk,avgPooling3d:()=>$k,batchNormalization:()=>wk,bidirectional:()=>Xk,concatenate:()=>mk,conv1d:()=>Xv,conv2d:()=>Yv,conv2dTranspose:()=>Zv,conv3d:()=>Jv,conv3dTranspose:()=>Qv,convLstm2d:()=>jk,convLstm2dCell:()=>Hk,cropping2D:()=>tk,dense:()=>ak,depthwiseConv2d:()=>rk,dot:()=>xk,dropout:()=>ik,elu:()=>Vv,embedding:()=>pk,flatten:()=>uk,gaussianDropout:()=>nN,gaussianNoise:()=>tN,globalAveragePooling1d:()=>Fk,globalAveragePooling2d:()=>Rk,globalMaxPool1d:()=>Zk,globalMaxPool2d:()=>Jk,globalMaxPooling1d:()=>_k,globalMaxPooling2d:()=>Mk,gru:()=>Lk,gruCell:()=>Pk,input:()=>zx,inputLayer:()=>Wv,layerNormalization:()=>vk,leakyReLU:()=>jv,lstm:()=>Uk,lstmCell:()=>Wk,masking:()=>sN,maxPool1d:()=>Qk,maxPool2d:()=>eN,maxPooling1d:()=>Ok,maxPooling2d:()=>Bk,maxPooling3d:()=>zk,maximum:()=>gk,minimum:()=>yk,multiply:()=>bk,permute:()=>hk,prelu:()=>Hv,reLU:()=>Gv,repeatVector:()=>lk,reshape:()=>ck,rnn:()=>qk,separableConv2d:()=>ek,simpleRNN:()=>Vk,simpleRNNCell:()=>Gk,softmax:()=>qv,spatialDropout1d:()=>ok,stackedRNNCells:()=>Kk,thresholdedReLU:()=>Kv,timeDistributed:()=>Yk,upSampling2d:()=>nk,zeroPadding2d:()=>kk});var w={};n.r(w),n.d(w,{MAPE:()=>mN,MSE:()=>bN,binaryAccuracy:()=>aN,binaryCrossentropy:()=>iN,categoricalAccuracy:()=>uN,categoricalCrossentropy:()=>lN,cosineProximity:()=>pN,mape:()=>gN,meanAbsoluteError:()=>dN,meanAbsolutePercentageError:()=>fN,meanSquaredError:()=>yN,mse:()=>xN,precision:()=>cN,recall:()=>hN,sparseCategoricalAccuracy:()=>oN});var v={};n.r(v),n.d(v,{modelFromJSON:()=>Rx});var k={};n.r(k),n.d(k,{l1:()=>vN,l1l2:()=>wN,l2:()=>kN});var N={};n.r(N),n.d(N,{json:()=>UN});var I={};n.r(I),n.d(I,{json:()=>WN});var C={};n.r(C),n.d(C,{json:()=>VN});var D={};n.r(D),n.d(D,{json:()=>GN});var E={};n.r(E),n.d(E,{json:()=>jN});var S={};n.r(S),n.d(S,{json:()=>HN});var T={};n.r(T),n.d(T,{json:()=>qN});var A={};n.r(A),n.d(A,{json:()=>KN});var $={};n.r($),n.d($,{json:()=>XN});var F={};n.r(F),n.d(F,{json:()=>YN});var R={};n.r(R),n.d(R,{json:()=>ZN});var _={};n.r(_),n.d(_,{json:()=>JN});var M={};n.r(M),n.d(M,{json:()=>QN});var O={};n.r(O),n.d(O,{json:()=>eI});var B={};n.r(B),n.d(B,{json:()=>tI});var z={};n.r(z),n.d(z,{json:()=>nI});var L={};n.r(L),n.d(L,{json:()=>rI});var P={};n.r(P),n.d(P,{json:()=>sI});var U={};n.r(U),n.d(U,{json:()=>aI});var W={};n.r(W),n.d(W,{CSVDataset:()=>FC,Dataset:()=>wC,FileDataSource:()=>GC,TextLineDataset:()=>CC,URLDataSource:()=>jC,array:()=>kC,csv:()=>HC,func:()=>qC,generator:()=>KC,microphone:()=>YC,version_data:()=>ZC,webcam:()=>XC,zip:()=>NC});var V={};n.r(V),n.d(V,{addImpl:()=>$D,bincountImpl:()=>NE,bincountReduceImpl:()=>IE,ceilImpl:()=>EE,concatImpl:()=>RE,equalImpl:()=>mS,expImpl:()=>DS,expm1Impl:()=>$S,floorImpl:()=>KS,gatherNdImpl:()=>nT,gatherV2Impl:()=>sT,greaterEqualImpl:()=>lT,greaterImpl:()=>iT,lessEqualImpl:()=>kT,lessImpl:()=>xT,linSpaceImpl:()=>CT,logImpl:()=>ET,maxImpl:()=>WT,maximumImpl:()=>jT,minimumImpl:()=>tA,multiplyImpl:()=>oS,negImpl:()=>hA,notEqualImpl:()=>xA,prodImpl:()=>FA,rangeImpl:()=>_A,rsqrtImpl:()=>HA,sigmoidImpl:()=>bD,simpleAbsImpl:()=>PD,sliceImpl:()=>xE,sparseFillEmptyRowsImpl:()=>p$,sparseReshapeImpl:()=>f$,sparseSegmentReductionImpl:()=>g$,sqrtImpl:()=>v$,squaredDifferenceImpl:()=>C$,stridedSliceImpl:()=>A$,stringNGramsImpl:()=>R$,stringSplitImpl:()=>O$,stringToHashBucketFastImpl:()=>z$,subImpl:()=>BS,tileImpl:()=>V$,topKImpl:()=>H$,transposeImpl:()=>qD,uniqueImpl:()=>J$});var G={};n.r(G),n.d(G,{Abs:()=>Ye,Acos:()=>Ze,Acosh:()=>Je,AdadeltaOptimizer:()=>Iu,AdagradOptimizer:()=>Du,AdamOptimizer:()=>Tu,AdamaxOptimizer:()=>Fu,Add:()=>Qe,AddN:()=>et,All:()=>tt,Any:()=>nt,ArgMax:()=>rt,ArgMin:()=>st,Asin:()=>at,Asinh:()=>it,Atan:()=>ot,Atan2:()=>lt,Atanh:()=>ut,AvgPool:()=>ct,AvgPool3D:()=>pt,AvgPool3DGrad:()=>dt,AvgPoolGrad:()=>ht,BatchMatMul:()=>ft,BatchToSpaceND:()=>mt,Bincount:()=>gt,BroadcastArgs:()=>bt,BroadcastTo:()=>yt,Callback:()=>NN,CallbackList:()=>Nb,Cast:()=>xt,Ceil:()=>wt,ClipByValue:()=>vt,Complex:()=>kt,ComplexAbs:()=>Nt,Concat:()=>It,Conv2D:()=>Ct,Conv2DBackpropFilter:()=>Dt,Conv2DBackpropInput:()=>Et,Conv3D:()=>St,Conv3DBackpropFilterV2:()=>Tt,Conv3DBackpropInputV2:()=>At,Cos:()=>$t,Cosh:()=>Ft,CropAndResize:()=>_t,Cumsum:()=>Rt,CustomCallback:()=>Db,DataStorage:()=>H,DenseBincount:()=>Mt,DepthToSpace:()=>Ot,DepthwiseConv2dNative:()=>Bt,DepthwiseConv2dNativeBackpropFilter:()=>zt,DepthwiseConv2dNativeBackpropInput:()=>Lt,Diag:()=>Pt,Dilation2D:()=>Ut,Dilation2DBackpropFilter:()=>Vt,Dilation2DBackpropInput:()=>Wt,ENV:()=>qe,EarlyStopping:()=>DN,Einsum:()=>jt,Elu:()=>Ht,EluGrad:()=>qt,Environment:()=>Ve,Equal:()=>Xt,Erf:()=>Kt,Exp:()=>Yt,ExpandDims:()=>Zt,Expm1:()=>Jt,FFT:()=>Qt,Fill:()=>en,FlipLeftRight:()=>tn,Floor:()=>nn,FloorDiv:()=>rn,FromPixels:()=>Zr,FusedBatchNorm:()=>sn,FusedConv2D:()=>es,FusedDepthwiseConv2D:()=>ts,GatherNd:()=>on,GatherV2:()=>an,GraphModel:()=>WI,Greater:()=>un,GreaterEqual:()=>ln,History:()=>Cb,IFFT:()=>hn,Identity:()=>cn,Imag:()=>pn,InputSpec:()=>cb,IsFinite:()=>dn,IsInf:()=>fn,IsNan:()=>mn,KernelBackend:()=>q,LRN:()=>Dn,LRNGrad:()=>En,LayerVariable:()=>ob,LayersModel:()=>$x,LeakyRelu:()=>gn,Less:()=>yn,LessEqual:()=>bn,LinSpace:()=>xn,Log:()=>wn,Log1p:()=>vn,LogSoftmax:()=>Cn,LogicalAnd:()=>kn,LogicalNot:()=>Nn,LogicalOr:()=>In,Max:()=>Sn,MaxPool:()=>An,MaxPool3D:()=>Fn,MaxPool3DGrad:()=>Rn,MaxPoolGrad:()=>$n,MaxPoolWithArgmax:()=>_n,Maximum:()=>Tn,Mean:()=>Mn,Min:()=>On,Minimum:()=>Bn,MirrorPad:()=>zn,Mod:()=>Ln,MomentumOptimizer:()=>_u,Multinomial:()=>Pn,Multiply:()=>Un,Neg:()=>Wn,NonMaxSuppressionV3:()=>Gn,NonMaxSuppressionV4:()=>jn,NonMaxSuppressionV5:()=>Hn,NotEqual:()=>Vn,OP_SCOPE_SUFFIX:()=>Ca,OneHot:()=>Kn,OnesLike:()=>qn,Optimizer:()=>Nu,OptimizerConstructors:()=>Ou,Pack:()=>Xn,PadV2:()=>Yn,Pool:()=>Zn,Pow:()=>Jn,Prelu:()=>Qn,Prod:()=>er,RMSPropOptimizer:()=>Mu,RNN:()=>Bw,Range:()=>tr,Rank:()=>Ys,Real:()=>nr,RealDiv:()=>Gt,Reciprocal:()=>rr,Reduction:()=>od,Relu:()=>sr,Relu6:()=>cr,Reshape:()=>ar,ResizeBilinear:()=>ur,ResizeBilinearGrad:()=>lr,ResizeNearestNeighbor:()=>ir,ResizeNearestNeighborGrad:()=>or,Reverse:()=>hr,RotateWithOffset:()=>Jr,Round:()=>pr,Rsqrt:()=>dr,SGDOptimizer:()=>Ru,ScatterNd:()=>fr,Select:()=>mr,Selu:()=>gr,Sequential:()=>_x,Sigmoid:()=>vr,Sign:()=>wr,Sin:()=>br,Sinh:()=>xr,Slice:()=>yr,Softmax:()=>Er,Softplus:()=>kr,SpaceToBatchND:()=>Cr,SparseFillEmptyRows:()=>Sr,SparseReshape:()=>Tr,SparseSegmentMean:()=>Ar,SparseSegmentSum:()=>$r,SparseToDense:()=>Fr,SplitV:()=>Dr,Sqrt:()=>Nr,Square:()=>_r,SquaredDifference:()=>Rr,Step:()=>Yr,StridedSlice:()=>Mr,StringNGrams:()=>Or,StringSplit:()=>Br,StringToHashBucketFast:()=>zr,Sub:()=>Lr,Sum:()=>Ir,SymbolicTensor:()=>hb,Tan:()=>Pr,Tanh:()=>Ur,Tensor:()=>qs,TensorBuffer:()=>Vs,Tile:()=>Wr,TopK:()=>Vr,Transform:()=>Gr,Transpose:()=>jr,Unique:()=>Hr,Unpack:()=>qr,UnsortedSegmentSum:()=>Kr,Variable:()=>Xs,ZerosLike:()=>Xr,_FusedMatMul:()=>Qr,abs:()=>Au,acos:()=>Bu,acosh:()=>zu,add:()=>uu,addN:()=>Lu,all:()=>Pu,any:()=>Uu,argMax:()=>Wu,argMin:()=>Vu,asin:()=>Gu,asinh:()=>ju,atan:()=>Hu,atan2:()=>qu,atanh:()=>Ku,avgPool:()=>cl,avgPool3d:()=>hl,backend:()=>iu,backend_util:()=>m,basicLSTMCell:()=>gl,batchNorm:()=>bl,batchNorm2d:()=>xl,batchNorm3d:()=>wl,batchNorm4d:()=>vl,batchToSpaceND:()=>yl,bincount:()=>kl,booleanMaskAsync:()=>hp,broadcastArgs:()=>Nl,broadcastTo:()=>Il,broadcast_util:()=>i,browser:()=>o,buffer:()=>Ii,callbacks:()=>EN,cast:()=>Ci,ceil:()=>Cl,clipByValue:()=>Dl,clone:()=>Di,complex:()=>Ea,concat:()=>pl,concat1d:()=>El,concat2d:()=>Sl,concat3d:()=>Tl,concat4d:()=>Al,constraints:()=>y,conv1d:()=>Fl,conv2d:()=>$l,conv2dTranspose:()=>_l,conv3d:()=>Ml,conv3dTranspose:()=>Bl,copyRegisteredKernels:()=>ds,cos:()=>zl,cosh:()=>Ll,cosineWindow:()=>wp,cumsum:()=>Pl,customGrad:()=>wu,data:()=>W,denseBincount:()=>Ul,deprecationWarn:()=>Go,depthToSpace:()=>Wl,depthwiseConv2d:()=>Vl,deregisterOp:()=>RN,device_util:()=>r,diag:()=>Gl,dilation2d:()=>jl,disableDeprecationWarnings:()=>Vo,dispose:()=>Yo,disposeVariables:()=>jo,div:()=>cu,divNoNan:()=>Kl,dot:()=>Xl,dropout:()=>bp,einsum:()=>Yl,elu:()=>Zl,enableDebugMode:()=>Wo,enableProdMode:()=>Uo,enclosingPowerOfTwo:()=>xp,engine:()=>Ho,env:()=>je,equal:()=>Hl,erf:()=>Jl,exp:()=>Ql,expandDims:()=>ec,expm1:()=>tc,eye:()=>rc,fft:()=>Uh,fill:()=>Cu,findBackend:()=>ru,findBackendFactory:()=>su,floor:()=>sc,floorDiv:()=>lu,fused:()=>d,gather:()=>ac,gatherND:()=>yp,gather_util:()=>u,getBackend:()=>tu,getGradient:()=>os,getKernel:()=>is,getKernelsForBackend:()=>us,grad:()=>mu,grads:()=>gu,greater:()=>ic,greaterEqual:()=>oc,ifft:()=>Wh,imag:()=>uc,image:()=>Dd,inTopKAsync:()=>vp,initializers:()=>b,input:()=>zx,io:()=>s,irfft:()=>Vh,isFinite:()=>lc,isInf:()=>cc,isNaN:()=>hc,keep:()=>Zo,kernel_impls:()=>g,layers:()=>x,leakyRelu:()=>pc,less:()=>dc,lessEqual:()=>fc,linalg:()=>Ed,linspace:()=>mc,loadGraphModel:()=>VI,loadLayersModel:()=>Bx,localResponseNormalization:()=>gc,log:()=>yc,log1p:()=>bc,logSigmoid:()=>vc,logSoftmax:()=>Ic,logSumExp:()=>Rc,logicalAnd:()=>_c,logicalNot:()=>Mc,logicalOr:()=>Oc,logicalXor:()=>Bc,losses:()=>Sd,matMul:()=>ji,math:()=>a,max:()=>kc,maxPool:()=>zc,maxPool3d:()=>Lc,maxPoolWithArgmax:()=>Pc,maximum:()=>$u,mean:()=>Uc,memory:()=>qo,meshgrid:()=>Gc,metrics:()=>w,min:()=>jc,minimum:()=>Hc,mirrorPad:()=>qc,mod:()=>Kc,model:()=>Mx,models:()=>v,moments:()=>Xc,movingAverage:()=>fp,mul:()=>hu,multiRNNCell:()=>Yc,multinomial:()=>Zc,neg:()=>xc,nextFrame:()=>Rd,norm:()=>dp,notEqual:()=>Jc,oneHot:()=>Hi,ones:()=>Vc,onesLike:()=>Qc,op:()=>Da,outerProduct:()=>eh,pad:()=>th,pad1d:()=>nh,pad2d:()=>rh,pad3d:()=>sh,pad4d:()=>ah,pool:()=>oh,pow:()=>Eu,prelu:()=>uh,print:()=>Ei,prod:()=>lh,profile:()=>Ko,rand:()=>ch,randomGamma:()=>mh,randomNormal:()=>gh,randomUniform:()=>yh,range:()=>bh,ready:()=>eu,real:()=>xh,reciprocal:()=>wh,registerBackend:()=>au,registerCallbackConstructor:()=>Lx,registerGradient:()=>cs,registerKernel:()=>ls,registerOp:()=>$N,regularizers:()=>k,relu:()=>vh,relu6:()=>kh,removeBackend:()=>nu,reshape:()=>ll,reverse:()=>Nh,reverse1d:()=>Ih,reverse2d:()=>Ch,reverse3d:()=>Dh,reverse4d:()=>Eh,rfft:()=>jh,round:()=>Sh,rsqrt:()=>Th,scalar:()=>ku,scatterND:()=>mp,scatter_util:()=>l,selu:()=>Ah,separableConv2d:()=>$h,sequential:()=>Ox,serialization:()=>h,setBackend:()=>Qo,setPlatform:()=>ou,setdiff1dAsync:()=>Fh,sigmoid:()=>dl,sign:()=>Rh,signal:()=>Cd,sin:()=>_h,sinh:()=>Mh,slice:()=>fl,slice1d:()=>Oh,slice2d:()=>Bh,slice3d:()=>zh,slice4d:()=>Lh,slice_util:()=>c,softmax:()=>Ph,softplus:()=>wc,spaceToBatchND:()=>ih,sparse:()=>Td,sparseToDense:()=>gp,spectral:()=>Id,split:()=>Gh,sqrt:()=>pu,square:()=>du,squaredDifference:()=>Hh,squeeze:()=>qh,stack:()=>Kh,step:()=>Xh,stridedSlice:()=>Yh,string:()=>Ad,sub:()=>Su,sum:()=>Nc,sumOutType:()=>ra,tan:()=>Zh,tanh:()=>ml,tensor:()=>Ta,tensor1d:()=>Jh,tensor2d:()=>Qh,tensor3d:()=>Ji,tensor4d:()=>ep,tensor5d:()=>tp,tensor6d:()=>np,tensor_util:()=>t,test_util:()=>p,tidy:()=>Xo,tile:()=>nc,time:()=>Jo,topk:()=>rp,train:()=>$d,transpose:()=>qi,truncatedNormal:()=>sp,unique:()=>ap,unregisterGradient:()=>ps,unregisterKernel:()=>hs,unsortedSegmentSum:()=>ip,unstack:()=>op,upcastType:()=>na,util:()=>e,valueAndGrad:()=>yu,valueAndGrads:()=>bu,variable:()=>up,variableGrads:()=>xu,version:()=>WP,version_converter:()=>GI,version_core:()=>Po,version_layers:()=>ix,where:()=>ql,whereAsync:()=>cp,zeros:()=>Wc,zerosLike:()=>fu});const j=three;class H{constructor(e,t){this.backend=e,this.dataMover=t,this.data=new WeakMap,this.dataIdsCount=0}get(e){return this.data.has(e)||this.dataMover.moveData(this.backend,e),this.data.get(e)}set(e,t){this.dataIdsCount++,this.data.set(e,t)}has(e){return this.data.has(e)}delete(e){return this.dataIdsCount--,this.data.delete(e)}numDataIds(){return this.dataIdsCount}}class q{refCount(e){return K("refCount")}incRef(e){return K("incRef")}timerAvailable(){return!0}time(e){return K("time")}read(e){return K("read")}readSync(e){return K("readSync")}readToGPU(e,t){return K("readToGPU")}numDataIds(){return K("numDataIds")}disposeData(e,t){return K("disposeData")}write(e,t,n){return K("write")}move(e,t,n,r,s){return K("move")}memory(){return K("memory")}floatPrecision(){return K("floatPrecision")}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}dispose(){return K("dispose")}}function K(e){throw new Error(`'${e}' not yet implemented or not found in the registry. This kernel may not be supported by the tfjs backend you have chosen`)}function X(e){let t=e.length,n=0;for(;t>0;)n=Math.random()*t|0,t--,Q(e,t,n)}function Y(e,t){if(e.length!==t.length)throw new Error(`Array sizes must match to be shuffled together First array length was ${e.length}Second array length was ${t.length}`);let n=e.length,r=0;for(;n>0;)r=Math.random()*n|0,n--,Q(e,n,r),Q(t,n,r)}function Z(e,t,n){return Math.max(e,Math.min(t,n))}function J(e){return e%2==0?e:e+1}function Q(e,t,n){const r=e[t];e[t]=e[n],e[n]=r}function ee(e){let t=0;for(let n=0;n<e.length;n++)t+=e[n];return t}function te(e,t){const n=Math.random();return t*n+(1-n)*e}function ne(e,t){let n=0;for(let r=0;r<e.length;r++){const s=Number(e[r])-Number(t[r]);n+=s*s}return n}function re(e,t){if(!e)throw new Error("string"==typeof t?t:t())}function se(e,t,n=""){re(le(e,t),(()=>n+` Shapes ${e} and ${t} must match`))}function ae(e){re(null!=e,(()=>"The input to the tensor constructor must be a non-null value."))}function ie(e,t=[],n=!1){if(null==t&&(t=[]),Array.isArray(e)||Ie(e)&&!n)for(let r=0;r<e.length;++r)ie(e[r],t,n);else t.push(e);return t}function oe(e){if(0===e.length)return 1;let t=e[0];for(let n=1;n<e.length;n++)t*=e[n];return t}function ue(e){return 0===e.length}function le(e,t){if(e===t)return!0;if(null==e||null==t)return!1;if(e.length!==t.length)return!1;for(let n=0;n<e.length;n++)if(e[n]!==t[n])return!1;return!0}function ce(e){return e%1==0}function he(e){if(null!=Math.tanh)return Math.tanh(e);if(e===1/0)return 1;if(e===-1/0)return-1;{const t=Math.exp(2*e);return(t-1)/(t+1)}}function pe(e){const t=Math.ceil(Math.sqrt(e));return[t,Math.ceil(e/t)]}function de(e){const t=new Uint32Array(e);for(let n=0;n<e;++n)t[n]=n;return X(t),t}function fe(e,t){return t<=e.length?e:e+" ".repeat(t-e.length)}function me(e,t=(e=>0),n){return new Promise(((r,s)=>{let a=0;const i=()=>{if(e())return void r();a++;const o=t(a);null!=n&&a>=n?s():setTimeout(i,o)};i()}))}function ge(e,t){let n=1,r=-1;for(let t=0;t<e.length;++t)if(e[t]>=0)n*=e[t];else if(-1===e[t]){if(-1!==r)throw Error(`Shapes can only have 1 implicit size. Found -1 at dim ${r} and dim ${t}`);r=t}else if(e[t]<0)throw Error(`Shapes can not be < 0. Found ${e[t]} at dim ${t}`);if(-1===r){if(t>0&&t!==n)throw Error(`Size(${t}) must match the product of shape ${e}`);return e}if(0===n)throw Error(`Cannot infer the missing size in [${e}] when there are 0 elements`);if(t%n!=0)throw Error(`The implicit shape can't be a fractional number. Got ${t} / ${n}`);const s=e.slice();return s[r]=t/n,s}function ye(e,t){const n=t.length;return re((e=null==e?t.map(((e,t)=>t)):[].concat(e)).every((e=>e>=-n&&e<n)),(()=>`All values in axis param must be in range [-${n}, ${n}) but got axis ${e}`)),re(e.every((e=>ce(e))),(()=>`All values in axis param must be integers but got axis ${e}`)),e.map((e=>e<0?n+e:e))}function be(e,t){const n=[],r=[],s=null!=t&&Array.isArray(t)&&0===t.length,a=null==t||s?null:ye(t,e).sort();let i=0;for(let t=0;t<e.length;++t){if(null!=a){if(a[i]===t&&1!==e[t])throw new Error(`Can't squeeze axis ${t} since its dim '${e[t]}' is not 1`);(null==a[i]||a[i]>t)&&1===e[t]&&(n.push(e[t]),r.push(t)),a[i]<=t&&i++}1!==e[t]&&(n.push(e[t]),r.push(t))}return{newShape:n,keptDims:r}}function xe(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else{if("bool"!==e)throw new Error(`Unknown data type ${e}`);n=new Uint8Array(t)}return n}function we(e,t){let n=null;if(null==e||"float32"===e)n=new Float32Array(t);else if("int32"===e)n=new Int32Array(t);else if("bool"===e)n=new Uint8Array(t);else{if("string"!==e)throw new Error(`Unknown data type ${e}`);n=new Array(t)}return n}function ve(e,t){for(let n=0;n<e.length;n++){const r=e[n];if(isNaN(r)||!isFinite(r))throw Error(`A tensor of type ${t} being uploaded contains ${r}.`)}}function ke(e){return"bool"===e||"complex64"===e||"float32"===e||"int32"===e||"string"===e}function Ne(e,t){return!("complex64"===t||"float32"===t&&"complex64"!==e||"int32"===t&&"float32"!==e&&"complex64"!==e||"bool"===t&&"bool"===e)}function Ie(e){return e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray}function Ce(e){if("float32"===e||"int32"===e)return 4;if("complex64"===e)return 8;if("bool"===e)return 1;throw new Error(`Unknown dtype ${e}`)}function De(e){if(null==e)return 0;let t=0;return e.forEach((e=>t+=e.length)),t}function Ee(e){return"string"==typeof e||e instanceof String}function Se(e){return"boolean"==typeof e}function Te(e){return"number"==typeof e}function Ae(e){return Array.isArray(e)?Ae(e[0]):e instanceof Float32Array?"float32":e instanceof Int32Array||e instanceof Uint8Array||e instanceof Uint8ClampedArray?"int32":Te(e)?"float32":Ee(e)?"string":Se(e)?"bool":"float32"}function $e(e){return!!(e&&e.constructor&&e.call&&e.apply)}function Fe(e,t){for(let n=t;n<e;++n)if(e%n==0)return n;return e}function Re(e){const t=e.length;if(t<2)return[];const n=new Array(t-1);n[t-2]=e[t-1];for(let r=t-3;r>=0;--r)n[r]=n[r+1]*e[r+1];return n}function _e(e,t,n,r=!1){const s=new Array;if(1===t.length){const a=t[0]*(r?2:1);for(let t=0;t<a;t++)s[t]=n[e+t]}else{const a=t[0],i=t.slice(1),o=i.reduce(((e,t)=>e*t))*(r?2:1);for(let t=0;t<a;t++)s[t]=_e(e+t*o,i,n,r)}return s}function Me(e,t,n=!1){if(0===e.length)return t[0];const r=e.reduce(((e,t)=>e*t))*(n?2:1);if(0===r)return[];if(r!==t.length)throw new Error(`[${e}] does not match the input size ${t.length}${n?" for a complex tensor":""}.`);return _e(0,e,t,n)}function Oe(e,t){const n=Be(e,t);for(let e=0;e<n.length;e++)n[e]=1;return n}function Be(e,t){if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t)return new Uint8Array(e);throw new Error(`Unknown data type ${t}`)}function ze(e,t){const n=e.reduce(((e,t)=>e*t),1);if(null==t||"float32"===t)return Me(e,new Float32Array(n));if("int32"===t)return Me(e,new Int32Array(n));if("bool"===t)return Me(e,new Uint8Array(n));throw new Error(`Unknown data type ${t}`)}function Le(e){e.forEach((t=>{re(Number.isInteger(t)&&t>=0,(()=>`Tensor must have a shape comprised of positive integers but got shape [${e}].`))}))}function Pe(e,t,n){if(0===t)return 0;if(1===t)return e[0];let r=e[e.length-1];for(let t=0;t<e.length-1;++t)r+=n[t]*e[t];return r}function Ue(e,t,n){if(0===t)return[];if(1===t)return[e];const r=new Array(t);for(let t=0;t<r.length-1;++t)r[t]=Math.floor(e/n[t]),e-=r[t]*n[t];return r[r.length-1]=e,r}function We(e){return e&&e.then&&"function"==typeof e.then}class Ve{constructor(e){this.global=e,this.flags={},this.flagRegistry={},this.urlFlags={},this.getQueryParams=Ge,this.populateURLFlags()}setPlatform(e,t){null!=this.platform&&(je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(`Platform ${this.platformName} has already been set. Overwriting the platform with ${t}.`)),this.platformName=e,this.platform=t}registerFlag(e,t,n){if(this.flagRegistry[e]={evaluationFn:t,setHook:n},null!=this.urlFlags[e]){const t=this.urlFlags[e];je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(`Setting feature override from URL ${e}: ${t}.`),this.set(e,t)}}async getAsync(e){return e in this.flags||(this.flags[e]=await this.evaluateFlag(e)),this.flags[e]}get(e){if(e in this.flags)return this.flags[e];const t=this.evaluateFlag(e);if(We(t))throw new Error(`Flag ${e} cannot be synchronously evaluated. Please use getAsync() instead.`);return this.flags[e]=t,this.flags[e]}getNumber(e){return this.get(e)}getBool(e){return this.get(e)}getFlags(){return this.flags}get features(){return this.flags}set(e,t){if(null==this.flagRegistry[e])throw new Error(`Cannot set flag ${e} as it has not been registered.`);this.flags[e]=t,null!=this.flagRegistry[e].setHook&&this.flagRegistry[e].setHook(t)}evaluateFlag(e){if(null==this.flagRegistry[e])throw new Error(`Cannot evaluate flag '${e}': no evaluation function found.`);return this.flagRegistry[e].evaluationFn()}setFlags(e){this.flags=Object.assign({},e)}reset(){this.flags={},this.urlFlags={},this.populateURLFlags()}populateURLFlags(){if(void 0===this.global||void 0===this.global.location||void 0===this.global.location.search)return;const e=this.getQueryParams(this.global.location.search);"tfjsflags"in e&&e.tfjsflags.split(",").forEach((e=>{const[t,n]=e.split(":");this.urlFlags[t]=function(e,t){if("true"===(t=t.toLowerCase())||"false"===t)return"true"===t;if(""+ +t===t)return+t;throw new Error(`Could not parse value flag value ${t} for flag ${e}.`)}(t,n)}))}}function Ge(e){const t={};return e.replace(/[?&]([^=?&]+)(?:=([^&]*))?/g,((e,...n)=>(function(e,t,n){e[decodeURIComponent(t)]=decodeURIComponent(n||"")}(t,n[0],n[1]),n.join("=")))),t}function je(){return qe}let He,qe=null;function Ke(){if(null==He){let e;if("undefined"!=typeof window)e=window;else if(void 0!==n.g)e=n.g;else if("undefined"!=typeof process)e=process;else{if("undefined"==typeof self)throw new Error("Could not find a global object");e=self}He=e}return He}function Xe(e,t){const n=function(){const e=Ke();return null==e._tfGlobals&&(e._tfGlobals=new Map),e._tfGlobals}();if(n.has(e))return n.get(e);{const r=t();return n.set(e,r),n.get(e)}}const Ye="Abs",Ze="Acos",Je="Acosh",Qe="Add",et="AddN",tt="All",nt="Any",rt="ArgMax",st="ArgMin",at="Asin",it="Asinh",ot="Atan",ut="Atanh",lt="Atan2",ct="AvgPool",ht="AvgPoolGrad",pt="AvgPool3D",dt="AvgPool3DGrad",ft="BatchMatMul",mt="BatchToSpaceND",gt="Bincount",yt="BroadcastTo",bt="BroadcastArgs",xt="Cast",wt="Ceil",vt="ClipByValue",kt="Complex",Nt="ComplexAbs",It="Concat",Ct="Conv2D",Dt="Conv2DBackpropFilter",Et="Conv2DBackpropInput",St="Conv3D",Tt="Conv3DBackpropFilterV2",At="Conv3DBackpropInputV2",$t="Cos",Ft="Cosh",Rt="Cumsum",_t="CropAndResize",Mt="DenseBincount",Ot="DepthToSpace",Bt="DepthwiseConv2dNative",zt="DepthwiseConv2dNativeBackpropFilter",Lt="DepthwiseConv2dNativeBackpropInput",Pt="Diag",Ut="Dilation2D",Wt="Dilation2DBackpropInput",Vt="Dilation2DBackpropFilter",Gt="RealDiv",jt="Einsum",Ht="Elu",qt="EluGrad",Kt="Erf",Xt="Equal",Yt="Exp",Zt="ExpandDims",Jt="Expm1",Qt="FFT",en="Fill",tn="FlipLeftRight",nn="Floor",rn="FloorDiv",sn="FusedBatchNorm",an="GatherV2",on="GatherNd",un="Greater",ln="GreaterEqual",cn="Identity",hn="IFFT",pn="Imag",dn="IsFinite",fn="IsInf",mn="IsNan",gn="LeakyRelu",yn="Less",bn="LessEqual",xn="LinSpace",wn="Log",vn="Log1p",kn="LogicalAnd",Nn="LogicalNot",In="LogicalOr",Cn="LogSoftmax",Dn="LRN",En="LRNGrad",Sn="Max",Tn="Maximum",An="MaxPool",$n="MaxPoolGrad",Fn="MaxPool3D",Rn="MaxPool3DGrad",_n="MaxPoolWithArgmax",Mn="Mean",On="Min",Bn="Minimum",zn="MirrorPad",Ln="Mod",Pn="Multinomial",Un="Multiply",Wn="Neg",Vn="NotEqual",Gn="NonMaxSuppressionV3",jn="NonMaxSuppressionV4",Hn="NonMaxSuppressionV5",qn="OnesLike",Kn="OneHot",Xn="Pack",Yn="PadV2",Zn="Pool",Jn="Pow",Qn="Prelu",er="Prod",tr="Range",nr="Real",rr="Reciprocal",sr="Relu",ar="Reshape",ir="ResizeNearestNeighbor",or="ResizeNearestNeighborGrad",ur="ResizeBilinear",lr="ResizeBilinearGrad",cr="Relu6",hr="Reverse",pr="Round",dr="Rsqrt",fr="ScatterNd",mr="Select",gr="Selu",yr="Slice",br="Sin",xr="Sinh",wr="Sign",vr="Sigmoid",kr="Softplus",Nr="Sqrt",Ir="Sum",Cr="SpaceToBatchND",Dr="SplitV",Er="Softmax",Sr="SparseFillEmptyRows",Tr="SparseReshape",Ar="SparseSegmentMean",$r="SparseSegmentSum",Fr="SparseToDense",Rr="SquaredDifference",_r="Square",Mr="StridedSlice",Or="StringNGrams",Br="StringSplit",zr="StringToHashBucketFast",Lr="Sub",Pr="Tan",Ur="Tanh",Wr="Tile",Vr="TopK",Gr="Transform",jr="Transpose",Hr="Unique",qr="Unpack",Kr="UnsortedSegmentSum",Xr="ZerosLike",Yr="Step",Zr="FromPixels",Jr="RotateWithOffset",Qr="_FusedMatMul",es="FusedConv2D",ts="FusedDepthwiseConv2D";function ns(...e){je().getBool("IS_TEST")||je().getBool("PROD")||console.warn(...e)}function rs(...e){je().getBool("IS_TEST")||je().getBool("PROD")||console.log(...e)}const ss=Xe("kernelRegistry",(()=>new Map)),as=Xe("gradRegistry",(()=>new Map));function is(e,t){const n=fs(e,t);return ss.get(n)}function os(e){return as.get(e)}function us(e){const t=ss.entries(),n=[];for(;;){const{done:r,value:s}=t.next();if(r)break;const[a,i]=s,[o]=a.split("_");o===e&&n.push(i)}return n}function ls(e){const{kernelName:t,backendName:n}=e,r=fs(t,n);ss.has(r)&&ns(`The kernel '${t}' for backend '${n}' is already registered`),ss.set(r,e)}function cs(e){const{kernelName:t}=e;as.has(t)&&je().getBool("DEBUG")&&ns(`Overriding the gradient for '${t}'`),as.set(t,e)}function hs(e,t){const n=fs(e,t);if(!ss.has(n))throw new Error(`The kernel '${e}' for backend '${t}' is not registered`);ss.delete(n)}function ps(e){if(!as.has(e))throw new Error(`The gradient '${e}' for backend is not registered`);as.delete(e)}function ds(e,t){us(e).forEach((e=>{ls(Object.assign({},e,{backendName:t}))}))}function fs(e,t){return`${t}_${e}`}var ms=n(720);const gs=n.n(ms)()||ms;function ys(e){return gs.fromString(e,!0,16)}const bs=ys("c3a5c85c97cb3127"),xs=ys("b492b66fbe98f273"),ws=ys("9ae16a3b2f90404f");function vs(e){return e.xor(e.shru(47))}function ks(e,t,n){const r=e.slice(t,t+n);return gs.fromBytes(Array.from(r),!0,!0)}function Ns(e,t){return ks(e,t,8)}function Is(e,t){return ks(e,t,4)}function Cs(e,t){return 0===t?e:e.shru(t).or(e.shl(64-t))}function Ds(e,t,n=ys("9ddfea08eb382d69")){let r=e.xor(t).mul(n);r=r.xor(r.shru(47));let s=t.xor(r).mul(n);return s=s.xor(s.shru(47)),s=s.mul(n),s}function Es(e,t,n,r){return function(e,t,n,r,s,a){s=s.add(e),a=Cs(a.add(s).add(r),21);const i=s;return s=(s=s.add(t)).add(n),a=a.add(Cs(s,44)),[s.add(r),a.add(i)]}(Ns(e,t),Ns(e,t+8),Ns(e,t+16),Ns(e,t+24),n,r)}function Ss(e,t=e.length){const n=gs.fromNumber(81,!0);if(t<=32)return t<=16?function(e,t=e.length){if(t>=8){const n=ws.add(2*t),r=Ns(e,0).add(ws),s=Ns(e,t-8);return Ds(Cs(s,37).mul(n).add(r),Cs(r,25).add(s).mul(n),n)}if(t>=4){const n=ws.add(2*t);return Ds(Is(e,0).shl(3).add(t),Is(e,t-4),n)}if(t>0){const n=e[0]+(e[t>>1]<<8),r=t+(e[t-1]<<2);return vs(ws.mul(n).xor(bs.mul(r))).mul(ws)}return ws}(e,t):function(e,t=e.length){const n=ws.add(2*t),r=Ns(e,0).mul(xs),s=Ns(e,8),a=Ns(e,t-8).mul(n),i=Ns(e,t-16).mul(ws);return Ds(Cs(r.add(s),43).add(Cs(a,30)).add(i),r.add(Cs(s.add(ws),18)).add(a),n)}(e,t);if(t<=64)return function(e,t=e.length){const n=ws.add(2*t),r=Ns(e,0).mul(ws),s=Ns(e,8),a=Ns(e,t-8).mul(n),i=Ns(e,t-16).mul(ws),o=Cs(r.add(s),43).add(Cs(a,30)).add(i),u=Ds(o,r.add(Cs(s.add(ws),18)).add(a),n),l=Ns(e,16).mul(n),c=Ns(e,24),h=o.add(Ns(e,t-32)).mul(n),p=u.add(Ns(e,t-24)).mul(n);return Ds(Cs(l.add(c),43).add(Cs(h,30)).add(p),l.add(Cs(c.add(r),18)).add(h),n)}(e,t);let r=n,s=n.mul(xs).add(113),a=vs(s.mul(ws).add(113)).mul(ws),i=[gs.UZERO,gs.UZERO],o=[gs.UZERO,gs.UZERO];r=r.mul(ws).add(Ns(e,0));let u=0;const l=64*(t-1>>6),c=l+(t-1&63)-63;do{r=Cs(r.add(s).add(i[0]).add(Ns(e,u+8)),37).mul(xs),s=Cs(s.add(i[1]).add(Ns(e,u+48)),42).mul(xs),r=r.xor(o[1]),s=s.add(i[0]).add(Ns(e,u+40)),a=Cs(a.add(o[0]),33).mul(xs),i=Es(e,u,i[1].mul(xs),r.add(o[0])),o=Es(e,u+32,a.add(o[1]),s.add(Ns(e,u+16))),[a,r]=[r,a],u+=64}while(u!==l);const h=xs.add(a.and(255).shl(1));return u=c,o[0]=o[0].add(t-1&63),i[0]=i[0].add(o[0]),o[0]=o[0].add(i[0]),r=Cs(r.add(s).add(i[0]).add(Ns(e,u+8)),37).mul(h),s=Cs(s.add(i[1]).add(Ns(e,u+48)),42).mul(h),r=r.xor(o[1].mul(9)),s=s.add(i[0].mul(9).add(Ns(e,u+40))),a=Cs(a.add(o[0]),33).mul(h),i=Es(e,u,i[1].mul(h),r.add(o[0])),o=Es(e,u+32,a.add(o[1]),s.add(Ns(e,u+16))),[a,r]=[r,a],Ds(Ds(i[0],o[0],h).add(vs(s).mul(bs)).add(a),Ds(i[1],o[1],h).add(r),h)}function Ts(e,t){return"string"===t?Rs(e):As([e],t)}function As(e,t){if("string"===t)throw new Error("Cannot convert a string[] to a TypedArray");if(Array.isArray(e)&&(e=ie(e)),je().getBool("DEBUG")&&ve(e,t),function(e,t){return e instanceof Float32Array&&"float32"===t||e instanceof Int32Array&&"int32"===t||e instanceof Uint8Array&&"bool"===t}(e,t))return e;if(null==t||"float32"===t||"complex64"===t)return new Float32Array(e);if("int32"===t)return new Int32Array(e);if("bool"===t){const t=new Uint8Array(e.length);for(let n=0;n<t.length;++n)0!==Math.round(e[n])&&(t[n]=1);return t}throw new Error(`Unknown data type ${t}`)}function $s(){return je().platform.now()}function Fs(e,t){return je().platform.fetch(e,t)}function Rs(e,t="utf-8"){return t=t||"utf-8",je().platform.encode(e,t)}function _s(e,t="utf-8"){return t=t||"utf-8",je().platform.decode(e,t)}class Ms{constructor(e,t){this.backendTimer=e,this.logger=t,null==t&&(this.logger=new Bs)}profileKernel(e,t,n){let r;const s=()=>{r=n()};let a;const i=$s();if(this.backendTimer.timerAvailable())a=this.backendTimer.time(s);else{s();for(const e of r)e.dataSync();a=Promise.resolve({kernelMs:$s()-i})}if(je().getBool("CHECK_COMPUTATION_FOR_ERRORS"))for(let t=0;t<r.length;t++){const n=r[t];n.data().then((t=>{Os(t,n.dtype,e)}))}return{kernelName:e,outputs:r,inputs:t,timeMs:a.then((e=>e.kernelMs)),extraInfo:a.then((e=>null!=e.getExtraProfileInfo?e.getExtraProfileInfo():""))}}logKernelProfile(e){const{kernelName:t,outputs:n,timeMs:r,inputs:s,extraInfo:a}=e;n.forEach((e=>{Promise.all([e.data(),r,a]).then((n=>{this.logger.logKernelProfile(t,e,n[0],n[1],s,n[2])}))}))}}function Os(e,t,n){if("float32"!==t)return!1;for(let t=0;t<e.length;t++){const r=e[t];if(isNaN(r)||!isFinite(r))return console.warn(`Found ${r} in the result of '${n}'`),!0}return!1}class Bs{logKernelProfile(e,t,n,r,s,a){const i="number"==typeof r?fe(`${r}ms`,9):r.error,o=fe(e,25),u=t.rank,l=t.size,c=fe(t.shape.toString(),14);let h="";for(const e in s){const n=s[e];if(null!=n){const r=n.shape||t.shape,s=r.length;h+=`${e}: ${s}D ${s>0?r:""} `}}console.log(`%c${o}\t%c${i}\t%c${u}D ${c}\t%c${l}\t%c${h}\t%c${a}`,"font-weight:bold","color:red","color:blue","color: orange","color: green","color: steelblue")}}function zs(e,t,n,r){const s=Re(t),a=function(e,t,n,r){const s=oe(t),a=r[r.length-1],i=new Array(a).fill(0),o=t.length,u="complex64"===n?Ws(e):e;if(o>1)for(let e=0;e<s/a;e++){const t=e*a;for(let e=0;e<a;e++)i[e]=Math.max(i[e],Ls(u[t+e],0,n).length)}return i}(e,t,n,s),i=t.length,o=Us(e,t,n,s,a),u=["Tensor"];return r&&(u.push(`  dtype: ${n}`),u.push(`  rank: ${i}`),u.push(`  shape: [${t}]`),u.push("  values:")),u.push(o.map((e=>"    "+e)).join("\n")),u.join("\n")}function Ls(e,t,n){let r;return r=Array.isArray(e)?`${parseFloat(e[0].toFixed(7))} + ${parseFloat(e[1].toFixed(7))}j`:Ee(e)?`'${e}'`:"bool"===n?Ps(e):parseFloat(e.toFixed(7)).toString(),fe(r,t)}function Ps(e){return 0===e?"false":"true"}function Us(e,t,n,r,s,a=!0){const i="complex64"===n?2:1,o=t[0],u=t.length;if(0===u)return"complex64"===n?[Ls(Ws(e)[0],0,n)]:"bool"===n?[Ps(e[0])]:[e[0].toString()];if(1===u){if(o>20){const t=3*i;let r=Array.from(e.slice(0,t)),a=Array.from(e.slice((o-3)*i,o*i));return"complex64"===n&&(r=Ws(r),a=Ws(a)),["["+r.map(((e,t)=>Ls(e,s[t],n))).join(", ")+", ..., "+a.map(((e,t)=>Ls(e,s[o-3+t],n))).join(", ")+"]"]}return["["+("complex64"===n?Ws(e):Array.from(e)).map(((e,t)=>Ls(e,s[t],n))).join(", ")+"]"]}const l=t.slice(1),c=r.slice(1),h=r[0]*i,p=[];if(o>20){for(let t=0;t<3;t++){const r=t*h,a=r+h;p.push(...Us(e.slice(r,a),l,n,c,s,!1))}p.push("...");for(let t=o-3;t<o;t++){const r=t*h,a=r+h;p.push(...Us(e.slice(r,a),l,n,c,s,t===o-1))}}else for(let t=0;t<o;t++){const r=t*h,a=r+h;p.push(...Us(e.slice(r,a),l,n,c,s,t===o-1))}const d=2===u?",":"";p[0]="["+p[0]+d;for(let e=1;e<p.length-1;e++)p[e]=" "+p[e]+d;let f=",\n";for(let e=2;e<u;e++)f+="\n";return p[p.length-1]=" "+p[p.length-1]+"]"+(a?"":f),p}function Ws(e){const t=[];for(let n=0;n<e.length;n+=2)t.push([e[n],e[n+1]]);return t}class Vs{constructor(e,t,n){if(this.dtype=t,this.shape=e.slice(),this.size=oe(e),null!=n){const e=n.length;re(e===this.size,(()=>`Length of values '${e}' does not match the size inferred by the shape '${this.size}'.`))}if("complex64"===t)throw new Error("complex64 dtype TensorBuffers are not supported. Please create a TensorBuffer for the real and imaginary parts separately and call tf.complex(real, imag).");this.values=n||we(t,this.size),this.strides=Re(e)}set(e,...t){0===t.length&&(t=[0]),re(t.length===this.rank,(()=>`The number of provided coordinates (${t.length}) must match the rank (${this.rank})`));const n=this.locToIndex(t);this.values[n]=e}get(...e){0===e.length&&(e=[0]);let t=0;for(const n of e){if(n<0||n>=this.shape[t]){const t=`Requested out of range element at ${e}.   Buffer shape=${this.shape}`;throw new Error(t)}t++}let n=e[e.length-1];for(let t=0;t<e.length-1;++t)n+=this.strides[t]*e[t];return this.values[n]}locToIndex(e){if(0===this.rank)return 0;if(1===this.rank)return e[0];let t=e[e.length-1];for(let n=0;n<e.length-1;++n)t+=this.strides[n]*e[n];return t}indexToLoc(e){if(0===this.rank)return[];if(1===this.rank)return[e];const t=new Array(this.shape.length);for(let n=0;n<t.length-1;++n)t[n]=Math.floor(e/this.strides[n]),e-=t[n]*this.strides[n];return t[t.length-1]=e,t}get rank(){return this.shape.length}toTensor(){return Gs().makeTensor(this.values,this.shape,this.dtype)}}let Gs=null,js=null,Hs=null;class qs{constructor(e,t,n,r){this.kept=!1,this.isDisposedInternal=!1,this.shape=e.slice(),this.dtype=t||"float32",this.size=oe(e),this.strides=Re(e),this.dataId=n,this.id=r,this.rankType=this.rank<5?this.rank.toString():"higher"}get rank(){return this.shape.length}async buffer(){const e=await this.data();return js.buffer(this.shape,this.dtype,e)}bufferSync(){return js.buffer(this.shape,this.dtype,this.dataSync())}async array(){const e=await this.data();return Me(this.shape,e,"complex64"===this.dtype)}arraySync(){return Me(this.shape,this.dataSync(),"complex64"===this.dtype)}async data(){this.throwIfDisposed();const e=Gs().read(this.dataId);if("string"===this.dtype){const t=await e;try{return t.map((e=>_s(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}}return e}dataToGPU(e){return this.throwIfDisposed(),Gs().readToGPU(this.dataId,e)}dataSync(){this.throwIfDisposed();const e=Gs().readSync(this.dataId);if("string"===this.dtype)try{return e.map((e=>_s(e)))}catch(e){throw new Error("Failed to decode the string bytes into utf-8. To get the original bytes, call tensor.bytes().")}return e}async bytes(){this.throwIfDisposed();const e=await Gs().read(this.dataId);return"string"===this.dtype?e:new Uint8Array(e.buffer)}dispose(){this.isDisposed||(Gs().disposeTensor(this),this.isDisposedInternal=!0)}get isDisposed(){return this.isDisposedInternal}throwIfDisposed(){if(this.isDisposed)throw new Error("Tensor is disposed.")}print(e=!1){return js.print(this,e)}clone(){return this.throwIfDisposed(),js.clone(this)}toString(e=!1){return zs(this.dataSync(),this.shape,this.dtype,e)}cast(e){return this.throwIfDisposed(),js.cast(this,e)}variable(e=!0,t,n){return this.throwIfDisposed(),Gs().makeVariable(this,e,t,n)}}function Ks(){return Xe("Tensor",(()=>qs))}Object.defineProperty(qs,Symbol.hasInstance,{value:e=>!!e&&null!=e.data&&null!=e.dataSync&&null!=e.throwIfDisposed}),Ks();class Xs extends qs{constructor(e,t,n,r){super(e.shape,e.dtype,e.dataId,r),this.trainable=t,this.name=n}assign(e){if(e.dtype!==this.dtype)throw new Error(`dtype of the new value (${e.dtype}) and previous value (${this.dtype}) must match`);if(!le(e.shape,this.shape))throw new Error(`shape of the new value (${e.shape}) and previous value (${this.shape}) must match`);Gs().disposeTensor(this),this.dataId=e.dataId,Gs().incRef(this,null)}dispose(){Gs().disposeVariable(this),this.isDisposedInternal=!0}}var Ys,Zs,Js,Qs,ea;Object.defineProperty(Xs,Symbol.hasInstance,{value:e=>e instanceof qs&&null!=e.assign&&e.assign instanceof Function}),function(e){e.R0="R0",e.R1="R1",e.R2="R2",e.R3="R3",e.R4="R4",e.R5="R5",e.R6="R6"}(Ys||(Ys={})),function(e){e.float32="float32",e.int32="int32",e.bool="int32",e.complex64="complex64"}(Zs||(Zs={})),function(e){e.float32="float32",e.int32="int32",e.bool="bool",e.complex64="complex64"}(Js||(Js={})),function(e){e.float32="float32",e.int32="float32",e.bool="float32",e.complex64="complex64"}(Qs||(Qs={})),function(e){e.float32="complex64",e.int32="complex64",e.bool="complex64",e.complex64="complex64"}(ea||(ea={}));const ta={float32:Qs,int32:Zs,bool:Js,complex64:ea};function na(e,t){if("string"===e||"string"===t){if("string"===e&&"string"===t)return"string";throw new Error(`Can not upcast ${e} with ${t}`)}return ta[e][t]}function ra(e){return na(e,"int32")}function sa(e,t){if(e.dtype===t.dtype)return[e,t];const n=na(e.dtype,t.dtype);return[e.cast(n),t.cast(n)]}function aa(e,t){re(e.dtype===t.dtype,(()=>`The dtypes of the first(${e.dtype}) and second(${t.dtype}) input must match`))}function ia(e,t){return t.some((t=>t.id===e.id))}function oa(e){const t=[];return ua(e,t,new Set),t}function ua(e,t,n){if(null==e)return;if(e instanceof qs)return void t.push(e);if(r=e,!Array.isArray(r)&&"object"!=typeof r)return;var r;const s=e;for(const e in s){const r=s[e];n.has(r)||(n.add(r),ua(r,t,n))}}function la(e){return null!=e.kernelName}class ca{constructor(){this.registeredVariables={},this.nextTapeNodeId=0,this.numBytes=0,this.numTensors=0,this.numStringTensors=0,this.numDataBuffers=0,this.gradientDepth=0,this.kernelDepth=0,this.scopeStack=[],this.numDataMovesStack=[],this.nextScopeId=0,this.tensorInfo=new WeakMap,this.profiling=!1,this.activeProfile={newBytes:0,newTensors:0,peakBytes:0,kernels:[],result:null,get kernelNames(){return Array.from(new Set(this.kernels.map((e=>e.name))))}}}dispose(){for(const e in this.registeredVariables)this.registeredVariables[e].dispose()}}class ha{constructor(e){this.ENV=e,this.registry={},this.registryFactory={},this.pendingBackendInitId=0,this.state=new ca}async ready(){if(null!=this.pendingBackendInit)return this.pendingBackendInit.then((()=>{}));if(null!=this.backendInstance)return;const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t];if(await this.initializeBackend(n).success)return void await this.setBackend(n)}throw new Error("Could not initialize any backends, all backend initializations failed.")}get backend(){if(null!=this.pendingBackendInit)throw new Error(`Backend '${this.backendName}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);if(null==this.backendInstance){const{name:e,asyncInit:t}=this.initializeBackendsAndReturnBest();if(t)throw new Error(`The highest priority backend '${e}' has not yet been initialized. Make sure to await tf.ready() or await tf.setBackend() before calling other methods`);this.setBackend(e)}return this.backendInstance}backendNames(){return Object.keys(this.registryFactory)}findBackend(e){if(!(e in this.registry)){if(!(e in this.registryFactory))return null;{const{asyncInit:t}=this.initializeBackend(e);if(t)return null}}return this.registry[e]}findBackendFactory(e){return e in this.registryFactory?this.registryFactory[e].factory:null}registerBackend(e,t,n=1){return e in this.registryFactory?(ns(`${e} backend was already registered. Reusing existing backend factory.`),!1):(this.registryFactory[e]={factory:t,priority:n},!0)}async setBackend(e){if(null==this.registryFactory[e])throw new Error(`Backend name '${e}' not found in registry`);if(this.backendName=e,null==this.registry[e]){this.backendInstance=null;const{success:t,asyncInit:n}=this.initializeBackend(e);if(!(n?await t:t))return!1}return this.backendInstance=this.registry[e],this.setupRegisteredKernels(),this.profiler=new Ms(this.backendInstance),!0}setupRegisteredKernels(){us(this.backendName).forEach((e=>{null!=e.setupFunc&&e.setupFunc(this.backendInstance)}))}disposeRegisteredKernels(e){us(e).forEach((t=>{null!=t.disposeFunc&&t.disposeFunc(this.registry[e])}))}initializeBackend(e){const t=this.registryFactory[e];if(null==t)throw new Error(`Cannot initialize backend ${e}, no registration found.`);try{const n=t.factory();if(!n||n instanceof q||"function"!=typeof n.then)return this.registry[e]=n,{success:!0,asyncInit:!1};{const t=++this.pendingBackendInitId,r=n.then((n=>!(t<this.pendingBackendInitId||(this.registry[e]=n,this.pendingBackendInit=null,0)))).catch((n=>(t<this.pendingBackendInitId||(this.pendingBackendInit=null,ns(`Initialization of backend ${e} failed`),ns(n.stack||n.message)),!1)));return this.pendingBackendInit=r,{success:r,asyncInit:!0}}}catch(t){return ns(`Initialization of backend ${e} failed`),ns(t.stack||t.message),{success:!1,asyncInit:!1}}}removeBackend(e){if(!(e in this.registryFactory))throw new Error(`${e} backend not found in registry`);this.backendName===e&&null!=this.pendingBackendInit&&this.pendingBackendInitId++,e in this.registry&&(this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e]),delete this.registryFactory[e],this.backendName===e&&(this.pendingBackendInit=null,this.backendName=null,this.backendInstance=null)}getSortedBackends(){if(0===Object.keys(this.registryFactory).length)throw new Error("No backend found in registry.");return Object.keys(this.registryFactory).sort(((e,t)=>this.registryFactory[t].priority-this.registryFactory[e].priority))}initializeBackendsAndReturnBest(){const e=this.getSortedBackends();for(let t=0;t<e.length;t++){const n=e[t],{success:r,asyncInit:s}=this.initializeBackend(n);if(s||r)return{name:n,asyncInit:s}}throw new Error("Could not initialize any backends, all backend initializations failed.")}moveData(e,t){const n=this.state.tensorInfo.get(t),r=n.backend,s=this.readSync(t),a=r.refCount(t);r.disposeData(t,!0),n.backend=e,e.move(t,s,n.shape,n.dtype,a),this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack[this.state.numDataMovesStack.length-1]++}tidy(e,t){let n,r=null;if(null==t){if("function"!=typeof e)throw new Error("Please provide a function to tidy()");t=e}else{if("string"!=typeof e&&!(e instanceof String))throw new Error("When calling with two arguments, the first argument to tidy() must be a string");if("function"!=typeof t)throw new Error("When calling with two arguments, the 2nd argument to tidy() must be a function");r=e}return this.scopedRun((()=>this.startScope(r)),(()=>this.endScope(n)),(()=>(n=t(),n instanceof Promise&&console.error("Cannot return a Promise inside of tidy."),n)))}scopedRun(e,t,n){e();try{const e=n();return t(),e}catch(e){throw t(),e}}nextTensorId(){return ha.nextTensorId++}nextVariableId(){return ha.nextVariableId++}clone(e){const t=da.runKernel(cn,{x:e}),n={x:e};return this.addTapeNode(this.state.activeScope.name,n,[t],(e=>({x:()=>{const t={x:e};return da.runKernel(xt,t,{dtype:"float32"})}})),[],{}),t}runKernel(e,t,n){if(null==this.backendName&&this.backend,null==is(e,this.backendName))throw new Error(`Kernel '${e}' not registered for backend '${this.backendName}'`);return this.runKernelFunc({kernelName:e,inputs:t,attrs:n})}shouldCheckForMemLeaks(){return this.ENV.getBool("IS_TEST")}checkKernelForMemLeak(e,t,n){const r=this.backend.numDataIds();let s=0;n.forEach((e=>{s+="complex64"===e.dtype?3:1}));const a=this.state.numDataMovesStack[this.state.numDataMovesStack.length-1],i=r-t-s-a;if(i>0)throw new Error(`Backend '${this.backendName}' has an internal memory leak (${i} data ids) after running '${e}'`)}runKernelFunc(e){let t,n=[];const r=this.isTapeOn(),s=this.state.numBytes,a=this.state.numTensors;let i,o;this.shouldCheckForMemLeaks()&&this.state.numDataMovesStack.push(0),null==this.backendName&&this.backend;const u=la(e)?e.kernelName:null!=this.state.activeScope?this.state.activeScope.name:"";if(la(e)){const{kernelName:t,inputs:s,attrs:a}=e;null==this.backendName&&this.backend;const u=is(t,this.backendName);re(null!=u,(()=>`Cannot find registered kernel '${t}' for backend '${this.backendName}'`)),i=()=>{const e=this.backend.numDataIds();o=u.kernelFunc({inputs:s,attrs:a,backend:this.backend});const i=Array.isArray(o)?o:[o];this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(t,e,i);const l=i.map((e=>{if(null!=e.rank)return e;const{dataId:t,shape:n,dtype:r}=e;return this.makeTensorFromDataId(t,n,r)}));if(r){const e=this.getTensorsForGradient(t,s,l);n=this.saveTensorsForBackwardMode(e)}return l}}else{const{forwardFunc:t}=e,s=e=>{r&&(n=e.map((e=>this.keep(this.clone(e)))))};i=()=>{const e=this.backend.numDataIds();o=this.tidy((()=>t(this.backend,s)));const n=Array.isArray(o)?o:[o];return this.shouldCheckForMemLeaks()&&this.checkKernelForMemLeak(u,e,n),n}}const{inputs:l,attrs:c}=e,h=la(e)?null:e.backwardsFunc;let p;return this.scopedRun((()=>this.state.kernelDepth++),(()=>this.state.kernelDepth--),(()=>{this.ENV.getBool("DEBUG")||this.state.profiling?(p=this.profiler.profileKernel(u,l,(()=>i())),this.ENV.getBool("DEBUG")&&this.profiler.logKernelProfile(p),t=p.outputs):t=i()})),r&&this.addTapeNode(u,l,t,h,n,c),this.state.profiling&&this.state.activeProfile.kernels.push({name:u,bytesAdded:this.state.numBytes-s,totalBytesSnapshot:this.state.numBytes,tensorsAdded:this.state.numTensors-a,totalTensorsSnapshot:this.state.numTensors,inputShapes:Object.keys(l).map((e=>null!=l[e]?l[e].shape:null)),outputShapes:t.map((e=>e.shape)),kernelTimeMs:p.timeMs,extraInfo:p.extraInfo}),Array.isArray(o)?t:t[0]}saveTensorsForBackwardMode(e){const t=e.map((e=>this.keep(this.clone(e))));return t}getTensorsForGradient(e,t,n){const r=os(e);if(null!=r){const e=r.inputsToSave||[],s=r.outputsToSave||[];let a;r.saveAllInputs?(re(Array.isArray(t),(()=>"saveAllInputs is true, expected inputs to be an array.")),a=Object.keys(t).map((e=>t[e]))):a=e.map((e=>t[e]));const i=n.filter(((e,t)=>s[t]));return a.concat(i)}return[]}makeTensor(e,t,n,r){if(null==e)throw new Error("Values passed to engine.makeTensor() are null");n=n||"float32",r=r||this.backend;let s=e;"string"===n&&Ee(e[0])&&(s=e.map((e=>Rs(e))));const a=r.write(s,t,n),i=new qs(t,n,a,this.nextTensorId());if(this.trackTensor(i,r),"string"===n){const e=this.state.tensorInfo.get(a),t=De(s);this.state.numBytes+=t-e.bytes,e.bytes=t}return i}makeTensorFromDataId(e,t,n,r){const s=new qs(t,n=n||"float32",e,this.nextTensorId());return this.trackTensor(s,r),s}makeVariable(e,t=!0,n,r){n=n||this.nextVariableId().toString(),null!=r&&r!==e.dtype&&(e=e.cast(r));const s=new Xs(e,t,n,this.nextTensorId());if(null!=this.state.registeredVariables[s.name])throw new Error(`Variable with name ${s.name} was already registered`);return this.state.registeredVariables[s.name]=s,this.incRef(s,this.backend),s}trackTensor(e,t){this.state.numTensors++,"string"===e.dtype&&this.state.numStringTensors++;let n=0;"complex64"!==e.dtype&&"string"!==e.dtype&&(n=e.size*Ce(e.dtype)),this.state.numBytes+=n,this.state.tensorInfo.has(e.dataId)||(this.state.numDataBuffers++,this.state.tensorInfo.set(e.dataId,{backend:t||this.backend,dtype:e.dtype,shape:e.shape,bytes:n})),e instanceof Xs||this.track(e)}incRef(e,t){this.trackTensor(e,t),this.backend.incRef(e.dataId)}removeDataId(e,t){this.state.tensorInfo.has(e)&&this.state.tensorInfo.get(e).backend===t&&(this.state.tensorInfo.delete(e),this.state.numDataBuffers--)}disposeTensor(e){if(!this.state.tensorInfo.has(e.dataId))return;const t=this.state.tensorInfo.get(e.dataId);if(this.state.numTensors--,"string"===e.dtype&&(this.state.numStringTensors--,this.state.numBytes-=t.bytes),"complex64"!==e.dtype&&"string"!==e.dtype){const t=e.size*Ce(e.dtype);this.state.numBytes-=t}t.backend.disposeData(e.dataId)&&this.removeDataId(e.dataId,t.backend)}disposeVariables(){for(const e in this.state.registeredVariables){const t=this.state.registeredVariables[e];this.disposeVariable(t)}}disposeVariable(e){this.disposeTensor(e),null!=this.state.registeredVariables[e.name]&&delete this.state.registeredVariables[e.name]}memory(){const e=this.backend.memory();return e.numTensors=this.state.numTensors,e.numDataBuffers=this.state.numDataBuffers,e.numBytes=this.state.numBytes,this.state.numStringTensors>0&&(e.unreliable=!0,null==e.reasons&&(e.reasons=[]),e.reasons.push("Memory usage by string tensors is approximate (2 bytes per character)")),e}async profile(e){this.state.profiling=!0;const t=this.state.numBytes,n=this.state.numTensors;this.state.activeProfile.kernels=[],this.state.activeProfile.result=await e(),this.state.profiling=!1,this.state.activeProfile.peakBytes=Math.max(...this.state.activeProfile.kernels.map((e=>e.totalBytesSnapshot))),this.state.activeProfile.newBytes=this.state.numBytes-t,this.state.activeProfile.newTensors=this.state.numTensors-n;for(const e of this.state.activeProfile.kernels)e.kernelTimeMs=await e.kernelTimeMs,e.extraInfo=await e.extraInfo;return this.state.activeProfile}isTapeOn(){return this.state.gradientDepth>0&&0===this.state.kernelDepth}addTapeNode(e,t,n,r,s,a){const i={id:this.state.nextTapeNodeId++,kernelName:e,inputs:t,outputs:n,saved:s},o=os(e);null!=o&&(r=o.gradFunc),null!=r&&(i.gradient=e=>(e=e.map(((e,t)=>{if(null==e){const e=n[t],r=Be(e.size,e.dtype);return this.makeTensor(r,e.shape,e.dtype)}return e})),r(e.length>1?e:e[0],s,a))),this.state.activeTape.push(i)}keep(e){return e.kept=!0,e}startTape(){0===this.state.gradientDepth&&(this.state.activeTape=[]),this.state.gradientDepth++}endTape(){this.state.gradientDepth--}startScope(e){const t={track:[],name:"unnamed scope",id:this.state.nextScopeId++};e&&(t.name=e),this.state.scopeStack.push(t),this.state.activeScope=t}endScope(e){const t=oa(e),n=new Set(t.map((e=>e.id)));for(let e=0;e<this.state.activeScope.track.length;e++){const t=this.state.activeScope.track[e];t.kept||n.has(t.id)||t.dispose()}const r=this.state.scopeStack.pop();this.state.activeScope=0===this.state.scopeStack.length?null:this.state.scopeStack[this.state.scopeStack.length-1],t.forEach((e=>{e.kept||e.scopeId!==r.id||this.track(e)}))}gradients(e,t,n,r=!1){if(re(t.length>0,(()=>"gradients() received an empty list of xs.")),null!=n&&"float32"!==n.dtype)throw new Error(`dy must have 'float32' dtype, but has '${n.dtype}'`);const s=this.scopedRun((()=>this.startTape()),(()=>this.endTape()),(()=>this.tidy("forward",e)));re(s instanceof qs,(()=>"The result y returned by f() must be a tensor."));const a=function(e,t,n){const r={},s={};for(let e=0;e<t.length;e++)r[t[e].id]=!0;for(let n=0;n<e.length;n++){const a=e[n],i=a.inputs;for(const e in i){const n=i[e];let o=!1;for(let e=0;e<t.length;e++)if(r[n.id]){a.outputs.forEach((e=>r[e.id]=!0)),o=!0,s[a.id]=!0;break}if(o)break}}const a={};a[n.id]=!0;const i={};for(let t=e.length-1;t>=0;t--){const n=e[t],r=n.inputs;for(let e=0;e<n.outputs.length;e++)if(a[n.outputs[e].id]){for(const e in r)a[r[e].id]=!0,i[n.id]=!0;break}}const o=[];for(let t=0;t<e.length;t++){const n=e[t];if(s[n.id]&&i[n.id]){const e={};for(const t in n.inputs){const s=n.inputs[t];r[s.id]&&(e[t]=s)}const t=Object.assign({},n);t.inputs=e,t.outputs=n.outputs,o.push(t)}}return o}(this.state.activeTape,t,s);if(!r&&0===a.length&&t.length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that the f you passed encloses all operations that lead from x to y.");return this.tidy("backward",(()=>{const e={};e[s.id]=null==n?function(e){const t=Oe(oe(e),"float32");return da.makeTensor(t,e,"float32")}(s.shape):n,function(e,t,n,r){for(let s=t.length-1;s>=0;s--){const a=t[s],i=[];if(a.outputs.forEach((t=>{const n=e[t.id];null!=n?i.push(n):i.push(null)})),null==a.gradient)throw new Error(`Cannot compute gradient: gradient function not found for ${a.kernelName}.`);const o=a.gradient(i);for(const t in a.inputs){if(!(t in o))throw new Error(`Cannot backprop through input ${t}. Available gradients found: ${Object.keys(o)}.`);const s=n((()=>o[t]()));if("float32"!==s.dtype)throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input ${t} must have 'float32' dtype, but has '${s.dtype}'`);const i=a.inputs[t];if(!le(s.shape,i.shape))throw new Error(`Error in gradient for op ${a.kernelName}. The gradient of input '${t}' has shape '${s.shape}', which does not match the shape of the input '${i.shape}'`);if(null==e[i.id])e[i.id]=s;else{const t=e[i.id];e[i.id]=r(t,s),t.dispose()}}}}(e,a,(e=>this.tidy(e)),fa);const r=t.map((t=>e[t.id]));return 0===this.state.gradientDepth&&(this.state.activeTape.forEach((e=>{for(const t of e.saved)t.dispose()})),this.state.activeTape=null),{value:s,grads:r}}))}customGrad(e){return re($e(e),(()=>"The f passed in customGrad(f) must be a function.")),(...t)=>{let n;re(t.every((e=>e instanceof qs)),(()=>"The args passed in customGrad(f)(x1, x2,...) must all be tensors"));const r={};return t.forEach(((e,t)=>{r[t]=e})),this.runKernelFunc({forwardFunc:(r,s)=>(n=e(...t,s),re(n.value instanceof qs,(()=>"The function f passed in customGrad(f) must return an object where `obj.value` is a tensor")),re($e(n.gradFunc),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function.")),n.value),backwardsFunc:(e,r)=>{const s=n.gradFunc(e,r),a=Array.isArray(s)?s:[s];re(a.length===t.length,(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns the same number of tensors as inputs passed to f(...).")),re(a.every((e=>e instanceof qs)),(()=>"The function f passed in customGrad(f) must return an object where `obj.gradFunc` is a function that returns a list of only tensors."));const i={};return a.forEach(((e,t)=>{i[t]=()=>e})),i},inputs:r})}}readSync(e){return this.state.tensorInfo.get(e).backend.readSync(e)}read(e){return this.state.tensorInfo.get(e).backend.read(e)}readToGPU(e,t){return this.state.tensorInfo.get(e).backend.readToGPU(e,t)}async time(e){const t=$s(),n=await this.backend.time(e);return n.wallMs=$s()-t,n}track(e){return null!=this.state.activeScope&&(e.scopeId=this.state.activeScope.id,this.state.activeScope.track.push(e)),e}get registeredVariables(){return this.state.registeredVariables}reset(){this.pendingBackendInitId++,this.state.dispose(),this.ENV.reset(),this.state=new ca;for(const e in this.registry)this.disposeRegisteredKernels(e),this.registry[e].dispose(),delete this.registry[e];this.backendName=null,this.backendInstance=null,this.pendingBackendInit=null}}function pa(){const e=Ke();if(null==e._tfengine){const t=new Ve(e);e._tfengine=new ha(t)}var t;return t=e._tfengine.ENV,qe=t,Gs=()=>e._tfengine,e._tfengine}ha.nextTensorId=0,ha.nextVariableId=0;const da=pa();function fa(e,t){const n={a:e,b:t};return da.runKernel(Qe,n)}let ma;function ga(e){ma=e}function ya(e){if(void 0!==ma)return ma;if(e||"undefined"!=typeof navigator&&null!=navigator){if(e||(e=navigator),"ReactNative"===e.product)return!0;const t=e.userAgent||e.vendor||("undefined"!=typeof window?window.opera:"");if(!t){const t=e;return t.userAgentData&&t.userAgentData.mobile}return/(android|bb\d+|meego).+mobile|avantgo|bada\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\.(browser|link)|vodafone|wap|windows ce|xda|xiino/i.test(t)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\-(n|u)|c55\/|capi|ccwa|cdm\-|cell|chtm|cldc|cmd\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\-s|devi|dica|dmob|do(c|p)o|ds(12|\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\-|_)|g1 u|g560|gene|gf\-5|g\-mo|go(\.w|od)|gr(ad|un)|haie|hcit|hd\-(m|p|t)|hei\-|hi(pt|ta)|hp( i|ip)|hs\-c|ht(c(\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\-(20|go|ma)|i230|iac( |\-|\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\/)|klon|kpt |kwc\-|kyo(c|k)|le(no|xi)|lg( g|\/(k|l|u)|50|54|\-[a-w])|libw|lynx|m1\-w|m3ga|m50\/|ma(te|ui|xo)|mc(01|21|ca)|m\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\-2|po(ck|rt|se)|prox|psio|pt\-g|qa\-a|qc(07|12|21|32|60|\-[2-7]|i\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\-|oo|p\-)|sdk\/|se(c(\-|0|1)|47|mc|nd|ri)|sgh\-|shar|sie(\-|m)|sk\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\-|v\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\-|tdg\-|tel(i|m)|tim\-|t\-mo|to(pl|sh)|ts(70|m\-|m3|m5)|tx\-9|up(\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\-|your|zeto|zte\-/i.test(t.substr(0,4))}return!1}function ba(){return"undefined"!=typeof window&&null!=window.document||"undefined"!=typeof WorkerGlobalScope}const xa=je();function wa(e,t){let n=e;if(Ie(e))return"string"===t?[]:[e.length];if(!Array.isArray(e))return[];const r=[];for(;Array.isArray(n)||Ie(n)&&"string"!==t;)r.push(n.length),n=n[0];return Array.isArray(e)&&je().getBool("TENSORLIKE_CHECK_SHAPE_CONSISTENCY")&&va(e,r,[]),r}function va(e,t,n){if(n=n||[],!Array.isArray(e)&&!Ie(e))return void re(0===t.length,(()=>`Element arr[${n.join("][")}] is a primitive, but should be an array/TypedArray of ${t[0]} elements`));re(t.length>0,(()=>`Element arr[${n.join("][")}] should be a primitive, but is an array of ${e.length} elements`)),re(e.length===t[0],(()=>`Element arr[${n.join("][")}] should have ${t[0]} elements, but has ${e.length} elements`));const r=t.slice(1);for(let t=0;t<e.length;++t)va(e[t],r,n.concat(t))}function ka(e,t,n,r){if("string_or_numeric"!==e){if(null==e)throw new Error("Expected dtype cannot be null.");if("numeric"!==e&&e!==t||"numeric"===e&&"string"===t)throw new Error(`Argument '${n}' passed to '${r}' must be ${e} tensor, but got ${t} tensor`)}}function Na(e,t,n,r="numeric"){if(e instanceof qs)return ka(r,e.dtype,t,n),e;let s=Ae(e);if("string"!==s&&["bool","int32","float32"].indexOf(r)>=0&&(s=r),ka(r,s,t,n),null==e||!Ie(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e){const r=null==e?"null":e.constructor.name;throw new Error(`Argument '${t}' passed to '${n}' must be a Tensor or TensorLike, but got '${r}'`)}const a=wa(e,s);Ie(e)||Array.isArray(e)||(e=[e]);const i="string"!==s?As(e,s):ie(e,[],!0);return da.makeTensor(i,a,s)}function Ia(e,t,n,r="numeric"){if(!Array.isArray(e))throw new Error(`Argument ${t} passed to ${n} must be a \`Tensor[]\` or \`TensorLike[]\``);return e.map(((e,s)=>Na(e,`${t}[${s}]`,n,r)))}xa.registerFlag("DEBUG",(()=>!1),(e=>{e&&console.warn("Debugging mode is ON. The output of every math call will be downloaded to CPU and checked for NaNs. This significantly impacts performance.")})),xa.registerFlag("IS_BROWSER",(()=>ba())),xa.registerFlag("IS_NODE",(()=>"undefined"!=typeof process&&void 0!==process.versions&&void 0!==process.versions.node)),xa.registerFlag("IS_CHROME",(()=>"undefined"!=typeof navigator&&null!=navigator&&null!=navigator.userAgent&&/Chrome/.test(navigator.userAgent)&&/Google Inc/.test(navigator.vendor))),xa.registerFlag("PROD",(()=>!1)),xa.registerFlag("TENSORLIKE_CHECK_SHAPE_CONSISTENCY",(()=>xa.getBool("DEBUG"))),xa.registerFlag("DEPRECATION_WARNINGS_ENABLED",(()=>!0)),xa.registerFlag("IS_TEST",(()=>!1)),xa.registerFlag("CHECK_COMPUTATION_FOR_ERRORS",(()=>!0)),xa.registerFlag("WRAP_TO_IMAGEBITMAP",(()=>!1));const Ca="__op";function Da(e){const t=Object.keys(e);if(1!==t.length)throw new Error(`Please provide an object with a single key (operation name) mapping to a function. Got an object with ${t.length} keys.`);let n=t[0];const r=e[n];n.endsWith("_")&&(n=n.substring(0,n.length-1)),n+=Ca;const s=(...e)=>{da.startScope(n);try{const t=r(...e);return We(t)&&console.error("Cannot return a Promise inside of tidy."),da.endScope(t),t}catch(e){throw da.endScope(null),e}};return Object.defineProperty(s,"name",{value:n,configurable:!0}),s}const Ea=Da({complex_:function(e,t){const n=Na(e,"real","complex"),r=Na(t,"imag","complex");se(n.shape,r.shape,`real and imag shapes, ${n.shape} and ${r.shape}, must match in call to tf.complex().`);const s={real:n,imag:r};return da.runKernel(kt,s)}});function Sa(e,t,n,r){if(null==r&&(r=Ae(e)),"complex64"===r)throw new Error("Cannot construct a complex64 tensor directly. Please use tf.complex(real, imag).");if(!Ie(e)&&!Array.isArray(e)&&"number"!=typeof e&&"boolean"!=typeof e&&"string"!=typeof e)throw new Error("values passed to tensor(values) must be a number/boolean/string or an array of numbers/booleans/strings, or a TypedArray");if(null!=t){Le(t);const e=oe(t),r=oe(n);re(e===r,(()=>`Based on the provided shape, [${t}], the tensor should have ${e} values but has ${r}`));for(let e=0;e<n.length;++e){const r=n[e],s=e!==n.length-1||r!==oe(t.slice(e));re(n[e]===t[e]||!s,(()=>`Error creating a new Tensor. Inferred shape (${n}) does not match the provided shape (${t}). `))}}return Ie(e)||Array.isArray(e)||(e=[e]),t=t||n,e="string"!==r?As(e,r):ie(e,[],!0),da.makeTensor(e,t,r)}function Ta(e,t,n){return Sa(e,t,wa(e,n),n)}const Aa={float32:4,float16:2,int32:4,uint16:2,uint8:1,bool:1,complex64:8};async function $a(e,t){const n=[],r=[],s=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);for(let a=0;a<s.length;++a){const i=s[a],o=Array.isArray(e)?e[a].tensor:e[i];if("float32"!==o.dtype&&"int32"!==o.dtype&&"bool"!==o.dtype&&"string"!==o.dtype&&"complex64"!==o.dtype)throw new Error(`Unsupported dtype in weight '${i}': ${o.dtype}`);const u={name:i,shape:o.shape,dtype:o.dtype};if("string"===o.dtype){const e=new Promise((async e=>{const t=await o.bytes(),n=t.reduce(((e,t)=>e+t.length),0)+4*t.length,r=new Uint8Array(n);let s=0;for(let e=0;e<t.length;e++){const n=t[e],a=new Uint8Array(new Uint32Array([n.length]).buffer);r.set(a,s),s+=4,r.set(n,s),s+=n.length}e(r)}));r.push(e)}else r.push(o.data());null!=t&&(u.group=t),n.push(u)}return{data:Ra(await Promise.all(r)),specs:n}}function Fa(e,t){const n={};let r,s=0;for(const a of t){const t=a.name,i=a.dtype,o=a.shape,u=oe(o);let l;if("quantization"in a){const n=a.quantization;if("uint8"===n.dtype||"uint16"===n.dtype){if(!("min"in n)||!("scale"in n))throw new Error(`Weight ${a.name} with quantization ${n.dtype} doesn't have corresponding metadata min and scale.`)}else{if("float16"!==n.dtype)throw new Error(`Weight ${a.name} has unknown quantization dtype ${n.dtype}. Supported quantization dtypes are: 'uint8', 'uint16', and 'float16'.`);if("float32"!==i)throw new Error(`Weight ${a.name} is quantized with ${n.dtype} which only supports weights of type float32 not ${i}.`)}const o=Aa[n.dtype],c=e.slice(s,s+u*o),h="uint8"===n.dtype?new Uint8Array(c):new Uint16Array(c);if("float32"===i)if("uint8"===n.dtype||"uint16"===n.dtype){l=new Float32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=t*n.scale+n.min}}else{if("float16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type float32.`);void 0===r&&(r=Ua()),l=r(h)}else{if("int32"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);if("uint8"!==n.dtype&&"uint16"!==n.dtype)throw new Error(`Unsupported quantization type ${n.dtype} for weight type int32.`);l=new Int32Array(h.length);for(let e=0;e<h.length;e++){const t=h[e];l[e]=Math.round(t*n.scale+n.min)}}s+=u*o}else if("string"===i){const t=oe(a.shape);l=[];for(let n=0;n<t;n++){const t=new Uint32Array(e.slice(s,s+4))[0];s+=4;const n=new Uint8Array(e.slice(s,s+t));l.push(n),s+=t}}else{const r=Aa[i],a=e.slice(s,s+u*r);if("float32"===i)l=new Float32Array(a);else if("int32"===i)l=new Int32Array(a);else if("bool"===i)l=new Uint8Array(a);else{if("complex64"!==i)throw new Error(`Unsupported dtype in weight '${t}': ${i}`);{l=new Float32Array(a);const e=new Float32Array(l.length/2),r=new Float32Array(l.length/2);for(let t=0;t<e.length;t++)e[t]=l[2*t],r[t]=l[2*t+1];const s=Ta(e,o,"float32"),i=Ta(r,o,"float32");n[t]=Ea(s,i),s.dispose(),i.dispose()}}s+=u*r}"complex64"!==i&&(n[t]=Ta(l,o,i))}return n}function Ra(e){if(null===e)throw new Error(`Invalid input value: ${JSON.stringify(e)}`);let t=0;const n=[];e.forEach((e=>{if(t+=e.byteLength,n.push(e.byteLength===e.buffer.byteLength?e:new e.constructor(e)),!(e instanceof Float32Array||e instanceof Int32Array||e instanceof Uint8Array))throw new Error(`Unsupported TypedArray subtype: ${e.constructor.name}`)}));const r=new Uint8Array(t);let s=0;return n.forEach((e=>{r.set(new Uint8Array(e.buffer),s),s+=e.byteLength})),r.buffer}const _a="undefined"!=typeof Buffer&&("undefined"==typeof Blob||"undefined"==typeof atob||"undefined"==typeof btoa);function Ma(e){return _a?Buffer.byteLength(e):new Blob([e]).size}function Oa(e){if(1===e.length)return e[0];let t=0;e.forEach((e=>{t+=e.byteLength}));const n=new Uint8Array(t);let r=0;return e.forEach((e=>{n.set(new Uint8Array(e),r),r+=e.byteLength})),n.buffer}function Ba(e){for(e=e.trim();e.endsWith("/");)e=e.slice(0,e.length-1);const t=e.split("/");return t[t.length-1]}function za(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,weightsManifest:t};return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),n}async function La(e,t){const n={modelTopology:e.modelTopology,format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy};if(null!=e.trainingConfig&&(n.trainingConfig=e.trainingConfig),null!=e.weightsManifest){const[r,s]=await t(e.weightsManifest);n.weightSpecs=r,n.weightData=s}return null!=e.signature&&(n.signature=e.signature),null!=e.userDefinedMetadata&&(n.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(n.modelInitializer=e.modelInitializer),n}function Pa(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("Expected JSON model topology, received ArrayBuffer.");return{dateSaved:new Date,modelTopologyType:"JSON",modelTopologyBytes:null==e.modelTopology?0:Ma(JSON.stringify(e.modelTopology)),weightSpecsBytes:null==e.weightSpecs?0:Ma(JSON.stringify(e.weightSpecs)),weightDataBytes:null==e.weightData?0:e.weightData.byteLength}}function Ua(){const e=function(){const e=e=>{let t=e<<13,n=0;for(;0==(8388608&t);)n-=8388608,t<<=1;return t&=-8388609,n+=947912704,t|n},t=new Uint32Array(2048);t[0]=0;for(let n=1;n<1024;n++)t[n]=e(n);for(let e=1024;e<2048;e++)t[e]=939524096+(e-1024<<13);return t}(),t=function(){const e=new Uint32Array(64);e[0]=0,e[31]=1199570944,e[32]=2147483648,e[63]=3347054592;for(let t=1;t<31;t++)e[t]=t<<23;for(let t=33;t<63;t++)e[t]=2147483648+(t-32<<23);return e}(),n=function(){const e=new Uint32Array(64);for(let t=0;t<64;t++)e[t]=1024;return e[0]=e[32]=0,e}();return r=>{const s=new ArrayBuffer(4*r.length),a=new Uint32Array(s);for(let s=0;s<r.length;s++){const i=r[s],o=e[n[i>>10]+(1023&i)]+t[i>>10];a[s]=o}return new Float32Array(s)}}class Wa{constructor(){this.saveRouters=[],this.loadRouters=[]}static getInstance(){return null==Wa.instance&&(Wa.instance=new Wa),Wa.instance}static registerSaveRouter(e){Wa.getInstance().saveRouters.push(e)}static registerLoadRouter(e){Wa.getInstance().loadRouters.push(e)}static getSaveHandlers(e){return Wa.getHandlers(e,"save")}static getLoadHandlers(e,t){return Wa.getHandlers(e,"load",t)}static getHandlers(e,t,n){const r=[];return("load"===t?Wa.getInstance().loadRouters:Wa.getInstance().saveRouters).forEach((t=>{const s=t(e,n);null!==s&&r.push(s)})),r}}const Va=e=>Wa.registerSaveRouter(e),Ga=e=>Wa.registerLoadRouter(e),ja=e=>Wa.getSaveHandlers(e),Ha=(e,t)=>Wa.getLoadHandlers(e,t),qa="tensorflowjs",Ka="models_store",Xa="model_info_store";function Ya(){if(!je().getBool("IS_BROWSER"))throw new Error("Failed to obtain IndexedDB factory because the current environmentis not a web browser.");const e="undefined"==typeof window?self:window,t=e.indexedDB||e.mozIndexedDB||e.webkitIndexedDB||e.msIndexedDB||e.shimIndexedDB;if(null==t)throw new Error("The current browser does not appear to support IndexedDB.");return t}function Za(e){const t=e.result;t.createObjectStore(Ka,{keyPath:"modelPath"}),t.createObjectStore(Xa,{keyPath:"modelPath"})}class Ja{constructor(e){if(this.indexedDB=Ya(),null==e||!e)throw new Error("For IndexedDB, modelPath must not be null, undefined or empty.");this.modelPath=e}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");return this.databaseAction(this.modelPath,e)}async load(){return this.databaseAction(this.modelPath)}databaseAction(e,t){return new Promise(((e,n)=>{const r=this.indexedDB.open(qa,1);r.onupgradeneeded=()=>Za(r),r.onsuccess=()=>{const s=r.result;if(null==t){const t=s.transaction(Ka,"readonly"),r=t.objectStore(Ka).get(this.modelPath);r.onsuccess=()=>{if(null==r.result)return s.close(),n(new Error(`Cannot find model with path '${this.modelPath}' in IndexedDB.`));e(r.result.modelArtifacts)},r.onerror=e=>(s.close(),n(r.error)),t.oncomplete=()=>s.close()}else{const r=Pa(t),a=s.transaction(Xa,"readwrite");let i=a.objectStore(Xa);const o=i.put({modelPath:this.modelPath,modelArtifactsInfo:r});let u;o.onsuccess=()=>{u=s.transaction(Ka,"readwrite");const o=u.objectStore(Ka).put({modelPath:this.modelPath,modelArtifacts:t,modelArtifactsInfo:r});o.onsuccess=()=>e({modelArtifactsInfo:r}),o.onerror=e=>{i=a.objectStore(Xa);const t=i.delete(this.modelPath);t.onsuccess=()=>(s.close(),n(o.error)),t.onerror=e=>(s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}}},r.onerror=e=>n(r.error)}))}}Ja.URL_SCHEME="indexeddb://";const Qa=e=>{return je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ja.URL_SCHEME)?(t=e.slice(Ja.URL_SCHEME.length),new Ja(t)):null;var t};Wa.registerSaveRouter(Qa),Wa.registerLoadRouter(Qa);class ei{constructor(){this.indexedDB=Ya()}async listModels(){return new Promise(((e,t)=>{const n=this.indexedDB.open(qa,1);n.onupgradeneeded=()=>Za(n),n.onsuccess=()=>{const r=n.result,s=r.transaction(Xa,"readonly"),a=s.objectStore(Xa).getAll();a.onsuccess=()=>{const t={};for(const e of a.result)t[e.modelPath]=e.modelArtifactsInfo;e(t)},a.onerror=e=>(r.close(),t(a.error)),s.oncomplete=()=>r.close()},n.onerror=e=>t(n.error)}))}async removeModel(e){var t;return e=(t=e).startsWith(Ja.URL_SCHEME)?t.slice(Ja.URL_SCHEME.length):t,new Promise(((t,n)=>{const r=this.indexedDB.open(qa,1);r.onupgradeneeded=()=>Za(r),r.onsuccess=()=>{const s=r.result,a=s.transaction(Xa,"readwrite"),i=a.objectStore(Xa),o=i.get(e);let u;o.onsuccess=()=>{if(null==o.result)return s.close(),n(new Error(`Cannot find model with path '${e}' in IndexedDB.`));{const r=i.delete(e),a=()=>{u=s.transaction(Ka,"readwrite");const r=u.objectStore(Ka).delete(e);r.onsuccess=()=>t(o.result.modelArtifactsInfo),r.onerror=e=>n(o.error)};r.onsuccess=a,r.onerror=e=>(a(),s.close(),n(o.error))}},o.onerror=e=>(s.close(),n(o.error)),a.oncomplete=()=>{null==u?s.close():u.oncomplete=()=>s.close()}},r.onerror=e=>n(r.error)}))}}const ti="/",ni="tensorflowjs_models",ri="info",si="model_topology",ai="weight_specs",ii="weight_data",oi="model_metadata";function ui(e){return{info:[ni,e,ri].join(ti),topology:[ni,e,si].join(ti),weightSpecs:[ni,e,ai].join(ti),weightData:[ni,e,ii].join(ti),modelMetadata:[ni,e,oi].join(ti)}}function li(e){for(const t of Object.values(e))window.localStorage.removeItem(t)}function ci(e){const t=e.split(ti);if(t.length<3)throw new Error(`Invalid key format: ${e}`);return t.slice(1,t.length-1).join(ti)}class hi{constructor(e){if(!je().getBool("IS_BROWSER")||"undefined"==typeof window||void 0===window.localStorage)throw new Error("The current environment does not support local storage.");if(this.LS=window.localStorage,null==e||!e)throw new Error("For local storage, modelPath must not be null, undefined or empty.");this.modelPath=e,this.keys=ui(this.modelPath)}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserLocalStorage.save() does not support saving model topology in binary formats yet.");{const t=JSON.stringify(e.modelTopology),n=JSON.stringify(e.weightSpecs),r=Pa(e);try{this.LS.setItem(this.keys.info,JSON.stringify(r)),this.LS.setItem(this.keys.topology,t),this.LS.setItem(this.keys.weightSpecs,n),this.LS.setItem(this.keys.weightData,function(e){if(_a)return Buffer.from(e).toString("base64");const t=new Uint8Array(e);let n="";for(let e=0,r=t.length;e<r;e++)n+=String.fromCharCode(t[e]);return btoa(n)}(e.weightData));const s={format:e.format,generatedBy:e.generatedBy,convertedBy:e.convertedBy,signature:null!=e.signature?e.signature:void 0,userDefinedMetadata:null!=e.userDefinedMetadata?e.userDefinedMetadata:void 0,modelInitializer:null!=e.modelInitializer?e.modelInitializer:void 0,trainingConfig:null!=e.trainingConfig?e.trainingConfig:void 0};return this.LS.setItem(this.keys.modelMetadata,JSON.stringify(s)),{modelArtifactsInfo:r}}catch(e){throw li(this.keys),new Error(`Failed to save model '${this.modelPath}' to local storage: size quota being exceeded is a possible cause of this failure: modelTopologyBytes=${r.modelTopologyBytes}, weightSpecsBytes=${r.weightSpecsBytes}, weightDataBytes=${r.weightDataBytes}.`)}}}async load(){const e=JSON.parse(this.LS.getItem(this.keys.info));if(null==e)throw new Error(`In local storage, there is no model with name '${this.modelPath}'`);if("JSON"!==e.modelTopologyType)throw new Error("BrowserLocalStorage does not support loading non-JSON model topology yet.");const t={},n=JSON.parse(this.LS.getItem(this.keys.topology));if(null==n)throw new Error(`In local storage, the topology of model '${this.modelPath}' is missing.`);t.modelTopology=n;const r=JSON.parse(this.LS.getItem(this.keys.weightSpecs));if(null==r)throw new Error(`In local storage, the weight specs of model '${this.modelPath}' are missing.`);t.weightSpecs=r;const s=this.LS.getItem(this.keys.modelMetadata);if(null!=s){const e=JSON.parse(s);t.format=e.format,t.generatedBy=e.generatedBy,t.convertedBy=e.convertedBy,null!=e.signature&&(t.signature=e.signature),null!=e.userDefinedMetadata&&(t.userDefinedMetadata=e.userDefinedMetadata),null!=e.modelInitializer&&(t.modelInitializer=e.modelInitializer),null!=e.trainingConfig&&(t.trainingConfig=e.trainingConfig)}const a=this.LS.getItem(this.keys.weightData);if(null==a)throw new Error(`In local storage, the binary weight values of model '${this.modelPath}' are missing.`);return t.weightData=function(e){if(_a){const t=Buffer.from(e,"base64");return t.buffer.slice(t.byteOffset,t.byteOffset+t.byteLength)}const t=atob(e),n=new Uint8Array(t.length);for(let e=0;e<t.length;++e)n.set([t.charCodeAt(e)],e);return n.buffer}(a),t}}hi.URL_SCHEME="localstorage://";const pi=e=>{return je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(hi.URL_SCHEME)?(t=e.slice(hi.URL_SCHEME.length),new hi(t)):null;var t};Wa.registerSaveRouter(pi),Wa.registerLoadRouter(pi);class di{constructor(){re(je().getBool("IS_BROWSER"),(()=>"Current environment is not a web browser")),re("undefined"==typeof window||void 0!==window.localStorage,(()=>"Current browser does not appear to support localStorage")),this.LS=window.localStorage}async listModels(){const e={},t=ni+ti,n=ti+ri;for(let r=0;r<this.LS.length;++r){const s=this.LS.key(r);s.startsWith(t)&&s.endsWith(n)&&(e[ci(s)]=JSON.parse(this.LS.getItem(s)))}return e}async removeModel(e){var t;const n=ui(e=(t=e).startsWith(hi.URL_SCHEME)?t.slice(hi.URL_SCHEME.length):t);if(null==this.LS.getItem(n.info))throw new Error(`Cannot find model at path '${e}'`);const r=JSON.parse(this.LS.getItem(n.info));return li(n),r}}const fi="://";class mi{constructor(){this.managers={}}static getInstance(){return null==mi.instance&&(mi.instance=new mi),mi.instance}static registerManager(e,t){re(null!=e,(()=>"scheme must not be undefined or null.")),e.endsWith(fi)&&(e=e.slice(0,e.indexOf(fi))),re(e.length>0,(()=>"scheme must not be an empty string."));const n=mi.getInstance();re(null==n.managers[e],(()=>`A model store manager is already registered for scheme '${e}'.`)),n.managers[e]=t}static getManager(e){const t=this.getInstance().managers[e];if(null==t)throw new Error(`Cannot find model manager for scheme '${e}'`);return t}static getSchemes(){return Object.keys(this.getInstance().managers)}}function gi(e){if(-1===e.indexOf(fi))throw new Error(`The url string provided does not contain a scheme. Supported schemes are: ${mi.getSchemes().join(",")}`);return{scheme:e.split(fi)[0],path:e.split(fi)[1]}}async function yi(e,t,n=!1){re(e!==t,(()=>`Old path and new path are the same: '${e}'`));const r=Wa.getLoadHandlers(e);re(r.length>0,(()=>`Copying failed because no load handler is found for source URL ${e}.`)),re(r.length<2,(()=>`Copying failed because more than one (${r.length}) load handlers for source URL ${e}.`));const s=r[0],a=Wa.getSaveHandlers(t);re(a.length>0,(()=>`Copying failed because no save handler is found for destination URL ${t}.`)),re(a.length<2,(()=>`Copying failed because more than one (${r.length}) save handlers for destination URL ${t}.`));const i=a[0],o=gi(e).scheme,u=gi(e).path,l=o===gi(e).scheme,c=await s.load();n&&l&&await mi.getManager(o).removeModel(u);const h=await i.save(c);return n&&!l&&await mi.getManager(o).removeModel(u),h.modelArtifactsInfo}async function bi(){const e=mi.getSchemes(),t={};for(const n of e){const e=await mi.getManager(n).listModels();for(const r in e)t[n+fi+r]=e[r]}return t}async function xi(e){const t=gi(e);return mi.getManager(t.scheme).removeModel(t.path)}async function wi(e,t){return yi(e,t,!1)}async function vi(e,t){return yi(e,t,!0)}class ki{fetch(e,t){return fetch(e,t)}now(){return performance.now()}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Browser's encoder only supports utf-8, but got ${t}`);return null==this.textEncoder&&(this.textEncoder=new TextEncoder),this.textEncoder.encode(e)}decode(e,t){return new TextDecoder(t).decode(e)}}if(je().get("IS_BROWSER")){je().setPlatform("browser",new ki);try{mi.registerManager(hi.URL_SCHEME,new di)}catch(e){}try{mi.registerManager(Ja.URL_SCHEME,new ei)}catch(e){}}let Ni;function Ii(e,t="float32",n){return t=t||"float32",Le(e),new Vs(e,t,n)}je().get("IS_NODE")&&je().setPlatform("node",new class{constructor(){this.util=n(758),this.textEncoder=new this.util.TextEncoder}fetch(e,t){return null!=je().global.fetch?je().global.fetch(e,t):(null==Ni&&(Ni=n(352)),Ni(e,t))}now(){const e=process.hrtime();return 1e3*e[0]+e[1]/1e6}encode(e,t){if("utf-8"!==t&&"utf8"!==t)throw new Error(`Node built-in encoder only supports utf-8, but got ${t}`);return this.textEncoder.encode(e)}decode(e,t){return 0===e.length?"":new this.util.TextDecoder(t).decode(e)}});const Ci=Da({cast_:function(e,t){const n=Na(e,"x","cast");if(!ke(t))throw new Error(`Failed to cast to unknown dtype ${t}`);if("string"===t&&"string"!==n.dtype||"string"!==t&&"string"===n.dtype)throw new Error("Only strings can be casted to strings");const r={x:n},s={dtype:t};return da.runKernel(xt,r,s)}}),Di=Da({clone_:function(e){const t={x:Na(e,"x","clone","string_or_numeric")};return da.runKernel(cn,t)}});function Ei(e,t=!1){console.log(e.toString(t))}function Si(e){return new Promise((e=>setTimeout(e))).then(e)}pa(),js={buffer:Ii,cast:Ci,clone:Di,print:Ei};class Ti{constructor(e){if(!je().getBool("IS_BROWSER"))throw new Error("browserDownloads() cannot proceed because the current environment is not a browser.");e.startsWith(Ti.URL_SCHEME)&&(e=e.slice(Ti.URL_SCHEME.length)),null!=e&&0!==e.length||(e="model"),this.modelJsonFileName=e+".json",this.weightDataFileName=e+".weights.bin"}async save(e){if("undefined"==typeof document)throw new Error("Browser downloads are not supported in this environment since `document` is not present");const t=window.URL.createObjectURL(new Blob([e.weightData],{type:"application/octet-stream"}));if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserDownloads.save() does not support saving model topology in binary formats yet.");{const n=za(e,[{paths:["./"+this.weightDataFileName],weights:e.weightSpecs}]),r=window.URL.createObjectURL(new Blob([JSON.stringify(n)],{type:"application/json"})),s=null==this.modelJsonAnchor?document.createElement("a"):this.modelJsonAnchor;if(s.download=this.modelJsonFileName,s.href=r,await Si((()=>s.dispatchEvent(new MouseEvent("click")))),null!=e.weightData){const e=null==this.weightDataAnchor?document.createElement("a"):this.weightDataAnchor;e.download=this.weightDataFileName,e.href=t,await Si((()=>e.dispatchEvent(new MouseEvent("click"))))}return{modelArtifactsInfo:Pa(e)}}}}Ti.URL_SCHEME="downloads://";class Ai{constructor(e){if(null==e||e.length<1)throw new Error(`When calling browserFiles, at least 1 file is required, but received ${e}`);this.jsonFile=e[0],this.weightsFiles=e.slice(1)}async load(){return new Promise(((e,t)=>{const n=new FileReader;n.onload=n=>{const r=JSON.parse(n.target.result),s=r.modelTopology;if(null==s)return void t(new Error(`modelTopology field is missing from file ${this.jsonFile.name}`));if(null==r.weightsManifest)return void t(new Error(`weightManifest field is missing from file ${this.jsonFile.name}`));if(0===this.weightsFiles.length)return void e({modelTopology:s});const a=La(r,(e=>this.loadWeights(e)));e(a)},n.onerror=e=>t(`Failed to read model topology and weights manifest JSON from file '${this.jsonFile.name}'. BrowserFiles supports loading Keras-style tf.Model artifacts only.`),n.readAsText(this.jsonFile)}))}loadWeights(e){const t=[],n=[];for(const r of e)t.push(...r.weights),n.push(...r.paths);const r=this.checkManifestAndWeightFiles(e),s=n.map((e=>this.loadWeightsFile(e,r[e])));return Promise.all(s).then((e=>[t,Oa(e)]))}loadWeightsFile(e,t){return new Promise(((n,r)=>{const s=new FileReader;s.onload=e=>{const t=e.target.result;n(t)},s.onerror=t=>r(`Failed to weights data from file of path '${e}'.`),s.readAsArrayBuffer(t)}))}checkManifestAndWeightFiles(e){const t=[],n=this.weightsFiles.map((e=>Ba(e.name))),r={};for(const s of e)s.paths.forEach((e=>{const s=Ba(e);if(-1!==t.indexOf(s))throw new Error(`Duplicate file basename found in weights manifest: '${s}'`);if(t.push(s),-1===n.indexOf(s))throw new Error(`Weight file with basename '${s}' is not provided.`);r[e]=this.weightsFiles[n.indexOf(s)]}));if(t.length!==this.weightsFiles.length)throw new Error(`Mismatch in the number of files in weights manifest (${t.length}) and the number of weight files provided (${this.weightsFiles.length}).`);return r}}function $i(e){return new Ai(e)}function Fi(e,t,n,r){!function(e){re(null!=e&&Array.isArray(e)&&e.length>0,(()=>"promises must be a none empty array"))}(e),function(e,t){re(e>=0&&e<=1,(()=>`Progress fraction must be in range [0, 1], but got startFraction ${e}`)),re(t>=0&&t<=1,(()=>`Progress fraction must be in range [0, 1], but got endFraction ${t}`)),re(t>=e,(()=>`startFraction must be no more than endFraction, but got startFraction ${e} and endFraction ${t}`))}(n=null==n?0:n,r=null==r?1:r);let s=0;return Promise.all(e.map((a=>(a.then((a=>{const i=n+ ++s/e.length*(r-n);return t(i),a})),a))))}async function Ri(e,t){null==t&&(t={});const n=null==t.fetchFunc?je().platform.fetch:t.fetchFunc,r=e.map((e=>n(e,t.requestInit,{isBinary:!0}))),s=(null==t.onProgress?await Promise.all(r):await Fi(r,t.onProgress,0,.5)).map((e=>e.arrayBuffer()));return null==t.onProgress?await Promise.all(s):await Fi(s,t.onProgress,.5,1)}async function _i(e,t="",n,r){return Mi((e=>Ri(e,{requestInit:r})))(e,t,n)}function Mi(e){return async(t,n="",r)=>{const s=t.map((()=>!1)),a={},i=null!=r?r.map((()=>!1)):[],o=[];if(t.forEach(((e,t)=>{let n=0;e.weights.forEach((e=>{const u="quantization"in e?e.quantization.dtype:e.dtype,l=Aa[u]*oe(e.shape),c=()=>{s[t]=!0,null==a[t]&&(a[t]=[]),a[t].push({manifestEntry:e,groupOffset:n,sizeBytes:l})};null!=r?r.forEach(((t,n)=>{t===e.name&&(c(),i[n]=!0)})):c(),o.push(e.name),n+=l}))})),!i.every((e=>e))){const e=r.filter(((e,t)=>!i[t]));throw new Error(`Could not find weights in manifest with names: ${e.join(", ")}. \nManifest JSON has weights with names: ${o.join(", ")}.`)}const u=s.reduce(((e,t,n)=>(t&&e.push(n),e)),[]),l=[];u.forEach((e=>{t[e].paths.forEach((e=>{const t=n+(n.endsWith("/")?"":"/")+e;l.push(t)}))}));const c=await e(l),h={};let p=0;return u.forEach((e=>{const n=t[e].paths.length;let r=0;for(let e=0;e<n;e++)r+=c[p+e].byteLength;const s=new ArrayBuffer(r),i=new Uint8Array(s);let o=0;for(let e=0;e<n;e++){const t=new Uint8Array(c[p+e]);i.set(t,o),o+=t.byteLength}a[e].forEach((e=>{const t=Fa(s.slice(e.groupOffset,e.groupOffset+e.sizeBytes),[e.manifestEntry]);for(const e in t)h[e]=t[e]})),p+=n})),h}}Wa.registerSaveRouter((e=>je().getBool("IS_BROWSER")&&!Array.isArray(e)&&e.startsWith(Ti.URL_SCHEME)?function(e="model"){return new Ti(e)}(e.slice(Ti.URL_SCHEME.length)):null));class Oi{constructor(e,t){if(this.DEFAULT_METHOD="POST",null==t&&(t={}),this.weightPathPrefix=t.weightPathPrefix,this.onProgress=t.onProgress,this.weightUrlConverter=t.weightUrlConverter,null!=t.fetchFunc?(re("function"==typeof t.fetchFunc,(()=>"Must pass a function that matches the signature of `fetch` (see https://developer.mozilla.org/en-US/docs/Web/API/Fetch_API)")),this.fetch=t.fetchFunc):this.fetch=je().platform.fetch,re(null!=e&&e.length>0,(()=>"URL path for http must not be null, undefined or empty.")),Array.isArray(e)&&re(2===e.length,(()=>`URL paths for http must have a length of 2, (actual length is ${e.length}).`)),this.path=e,null!=t.requestInit&&null!=t.requestInit.body)throw new Error("requestInit is expected to have no pre-existing body, but has one.");this.requestInit=t.requestInit||{}}async save(e){if(e.modelTopology instanceof ArrayBuffer)throw new Error("BrowserHTTPRequest.save() does not support saving model topology in binary formats yet.");const t=Object.assign({method:this.DEFAULT_METHOD},this.requestInit);t.body=new FormData;const n=za(e,[{paths:["./model.weights.bin"],weights:e.weightSpecs}]);t.body.append("model.json",new Blob([JSON.stringify(n)],{type:"application/json"}),"model.json"),null!=e.weightData&&t.body.append("model.weights.bin",new Blob([e.weightData],{type:"application/octet-stream"}),"model.weights.bin");const r=await this.fetch(this.path,t);if(r.ok)return{modelArtifactsInfo:Pa(e),responses:[r]};throw new Error(`BrowserHTTPRequest.save() failed due to HTTP response status ${r.status}.`)}async load(){const e=await this.fetch(this.path,this.requestInit);if(!e.ok)throw new Error(`Request to ${this.path} failed with status code ${e.status}. Please verify this URL points to the model JSON of the model to load.`);let t;try{t=await e.json()}catch(e){let t=`Failed to parse model JSON of response from ${this.path}.`;throw this.path.endsWith(".pb")?t+=" Your path contains a .pb file extension. Support for .pb models have been removed in TensorFlow.js 1.0 in favor of .json models. You can re-convert your Python TensorFlow model using the TensorFlow.js 1.0 conversion scripts or you can convert your.pb models with the 'pb2json'NPM script in the tensorflow/tfjs-converter repository.":t+=" Please make sure the server is serving valid JSON for this request.",new Error(t)}const n=t.modelTopology,r=t.weightsManifest;if(null==n&&null==r)throw new Error(`The JSON from HTTP path ${this.path} contains neither model topology or manifest for weights.`);return La(t,(e=>this.loadWeights(e)))}async loadWeights(e){const t=Array.isArray(this.path)?this.path[1]:this.path,[n,r]=function(e){const t=e.lastIndexOf("/"),n=e.lastIndexOf("?");return[e.substring(0,t)+"/",n>t?e.substring(n):""]}(t),s=this.weightPathPrefix||n,a=[];for(const t of e)a.push(...t.weights);const i=[],o=[];for(const t of e)for(const e of t.paths)null!=this.weightUrlConverter?o.push(this.weightUrlConverter(e)):i.push(s+e+r);return this.weightUrlConverter&&i.push(...await Promise.all(o)),[a,Oa(await Ri(i,{requestInit:this.requestInit,fetchFunc:this.fetch,onProgress:this.onProgress}))]}}function Bi(e){return null!=e.match(Oi.URL_SCHEME_REGEX)}Oi.URL_SCHEME_REGEX=/^https?:\/\//;const zi=(e,t)=>{if("undefined"==typeof fetch&&(null==t||null==t.fetchFunc))return null;{let n=!0;if(n=Array.isArray(e)?e.every((e=>Bi(e))):Bi(e),n)return Li(e,t)}return null};function Li(e,t){return new Oi(e,t)}function Pi(e,t){return Li(e,t)}Wa.registerSaveRouter(zi),Wa.registerLoadRouter(zi);class Ui{constructor(e){this.modelArtifacts=e}async load(){return this.modelArtifacts}}class Wi{constructor(e){this.saveHandler=e}async save(e){return this.saveHandler(e)}}function Vi(e,t,n,r){return 1===arguments.length?null!=e.modelTopology||null!=e.weightSpecs?new Ui(e):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ui({modelTopology:e})):(console.warn("Please call tf.io.fromMemory() with only one argument. The argument should be of type ModelArtifacts. The multi-argument signature of tf.io.fromMemory() has been deprecated and will be removed in a future release."),new Ui({modelTopology:e,weightSpecs:t,weightData:n,trainingConfig:r}))}function Gi(e){return new Wi(e)}const ji=Da({matMul_:function(e,t,n=!1,r=!1){let s=Na(e,"a","matMul"),a=Na(t,"b","matMul");[s,a]=sa(s,a);const i={a:s,b:a},o={transposeA:n,transposeB:r};return da.runKernel(ft,i,o)}}),Hi=Da({oneHot_:function(e,t,n=1,r=0){if(t<2)throw new Error(`Error in oneHot: depth must be >=2, but it is ${t}`);const s={indices:Na(e,"indices","oneHot","int32")},a={depth:t,onValue:n,offValue:r};return da.runKernel(Kn,s,a)}}),qi=Da({transpose_:function(e,t){const n=Na(e,"x","transpose");if(null==t&&(t=n.shape.map(((e,t)=>t)).reverse()),re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of perm ${t}.`)),t.forEach((e=>{re(e>=0&&e<n.rank,(()=>"All entries in 'perm' must be between 0 and "+(n.rank-1)+` but got ${t}`))})),n.rank<=1)return n.clone();const r={x:n},s={perm:t};return da.runKernel(jr,r,s)}}),Ki=Da({confusionMatrix_:function(e,t,n){const r=Na(e,"labels","confusionMatrix"),s=Na(t,"predictions","confusionMatrix");re(null==n||n>0&&Number.isInteger(n),(()=>`If provided, numClasses must be a positive integer, but got ${n}`)),re(1===r.rank,(()=>`Expected the rank of labels to be 1, but got ${r.rank}`)),re(1===s.rank,(()=>`Expected the rank of predictions to be 1, but got ${s.rank}`)),re(r.shape[0]===s.shape[0],(()=>`Mismatch in the number of examples: ${r.shape[0]} vs. ${s.shape[0]}. Labels and predictions should have the same number of elements.`)),re(n>0&&Number.isInteger(n),(()=>`numClasses is required to be a positive integer, but got ${n}`));const a=Hi(Ci(r,"int32"),n),i=Hi(Ci(s,"int32"),n),o=qi(a),u=ji(o,i);return Ci(u,"int32")}});function Xi(e,t){const n=e.length,r=[];for(let s=0;s<n;s++){const a=n-1-s,i=e[a]||1;(t[t.length-1-s]||1)>1&&1===i&&r.unshift(a)}return r}function Yi(e,t){const n=[];for(let r=0;r<t.length;r++){const s=e[e.length-r-1],a=t.length-r-1,i=t[a];(null==s||1===s&&i>1)&&n.unshift(a)}return n}function Zi(e,t){const n=[],r=Math.max(e.length,t.length);for(let s=0;s<r;s++){let r=e[e.length-s-1];null==r&&(r=1);let a=t[t.length-s-1];if(null==a&&(a=1),1===r)n.unshift(a);else if(1===a)n.unshift(r);else{if(r!==a)throw Error(`Operands could not be broadcast together with shapes ${e} and ${t}.`);n.unshift(r)}}return n}function Ji(e,t,n){if(ae(e),null!=t&&3!==t.length)throw new Error("tensor3d() requires shape to have three numbers");const r=wa(e,n);if(3!==r.length&&1!==r.length)throw new Error("tensor3d() requires values to be number[][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor3d() requires shape to be provided when `values` are a flat array");return Sa(e,t,r,n)}let Qi;function eo(e,t=3){if(t>4)throw new Error("Cannot construct Tensor with more than 4 channels from pixels.");if(null==e)throw new Error("pixels passed to tf.browser.fromPixels() can not be null");let n=!1,r=!1,s=!1,a=!1,i=!1,o=!1;if(e.data instanceof Uint8Array)n=!0;else if("undefined"!=typeof ImageData&&e instanceof ImageData)r=!0;else if("undefined"!=typeof HTMLVideoElement&&e instanceof HTMLVideoElement)s=!0;else if("undefined"!=typeof HTMLImageElement&&e instanceof HTMLImageElement)a=!0;else if(null!=e.getContext)i=!0;else{if(!("undefined"!=typeof ImageBitmap&&e instanceof ImageBitmap))throw new Error(`pixels passed to tf.browser.fromPixels() must be either an HTMLVideoElement, HTMLImageElement, HTMLCanvasElement, ImageData in browser, or OffscreenCanvas, ImageData in webworker or {data: Uint32Array, width: number, height: number}, but was ${e.constructor.name}`);o=!0}if(s){const t=2;if(s&&e.readyState<t)throw new Error("The video element has not loaded data yet. Please wait for `loadeddata` event on the <video> element.")}if(null!=is(Zr,da.backendName)){const n={pixels:e},r={numChannels:t};return da.runKernel(Zr,n,r)}const[u,l]=s?[e.videoWidth,e.videoHeight]:[e.width,e.height];let c,h;if(i)c=e.getContext("2d").getImageData(0,0,u,l).data;else if(r||n)c=e.data;else if(a||s||o){if(null==Qi)if("undefined"==typeof document){if("undefined"==typeof OffscreenCanvas||"undefined"==typeof OffscreenCanvasRenderingContext2D)throw new Error("Cannot parse input in current context. Reason: OffscreenCanvas Context2D rendering is not supported.");Qi=new OffscreenCanvas(1,1).getContext("2d")}else Qi=document.createElement("canvas").getContext("2d");Qi.canvas.width=u,Qi.canvas.height=l,Qi.drawImage(e,0,0,u,l),c=Qi.getImageData(0,0,u,l).data}if(4===t)h=new Int32Array(c);else{const e=u*l;h=new Int32Array(e*t);for(let n=0;n<e;n++)for(let e=0;e<t;++e)h[n*t+e]=c[4*n+e]}return Ji(h,[l,u,t],"int32")}async function to(e,t=3){let n=null;if(je().getBool("WRAP_TO_IMAGEBITMAP")&&function(e){return"undefined"!=typeof window&&"undefined"!=typeof ImageBitmap&&window.hasOwnProperty("createImageBitmap")&&!(e instanceof ImageBitmap)&&function(e){return null!=e&&0!==e.width&&0!==e.height}(e)&&!function(e){return null!=e&&e.data instanceof Uint8Array}(e)}(e)){let t;try{t=await createImageBitmap(e,{premultiplyAlpha:"none"})}catch(e){t=null}n=null!=t&&t.width===e.width&&t.height===e.height?t:e}else n=e;return eo(n,t)}async function no(e,t){let n=Na(e,"img","toPixels");if(!(e instanceof qs)){const e=n;n=Ci(e,"int32"),e.dispose()}if(2!==n.rank&&3!==n.rank)throw new Error(`toPixels only supports rank 2 or 3 tensors, got rank ${n.rank}.`);const[r,s]=n.shape.slice(0,2),a=2===n.rank?1:n.shape[2];if(a>4||2===a)throw new Error(`toPixels only supports depth of size 1, 3 or 4 but got ${a}`);if("float32"!==n.dtype&&"int32"!==n.dtype)throw new Error(`Unsupported type for toPixels: ${n.dtype}. Please use float32 or int32 tensors.`);const i=await n.data(),o="float32"===n.dtype?255:1,u=new Uint8ClampedArray(s*r*4);for(let e=0;e<r*s;++e){const t=[0,0,0,255];for(let r=0;r<a;r++){const s=i[e*a+r];if("float32"===n.dtype){if(s<0||s>1)throw new Error(`Tensor values for a float32 Tensor must be in the range [0 - 1] but encountered ${s}.`)}else if("int32"===n.dtype&&(s<0||s>255))throw new Error(`Tensor values for a int32 Tensor must be in the range [0 - 255] but encountered ${s}.`);1===a?(t[0]=s*o,t[1]=s*o,t[2]=s*o):t[r]=s*o}const r=4*e;u[r+0]=Math.round(t[0]),u[r+1]=Math.round(t[1]),u[r+2]=Math.round(t[2]),u[r+3]=Math.round(t[3])}if(null!=t){t.width=s,t.height=r;const e=t.getContext("2d"),n=new ImageData(u,s,r);e.putImageData(n,0,0)}return n!==e&&n.dispose(),u}const ro=Da({fromPixels_:eo});function so(e,t){const n=e.shape.length,r=t.shape.length;if(n<1)throw new Error(`tf.gatherND() expects the input to be rank 1 or higher, but the rank was ${n}.`);if(r<1)throw new Error(`tf.gatherND() expects the indices to be rank 1 or higher, but the rank was ${r}.`);if("int32"!==t.dtype)throw new Error(`tf.gatherND() expects the indices to be int32 type, but the dtype was ${t.dtype}.`);if(t.shape[r-1]>n)throw new Error(`index innermost dimension length must be <= tensor rank; saw: ${t.shape[r-1]} vs. ${n}`);if(0===oe(e.shape))throw new Error(`Requested more than 0 entries, but input is empty. Input shape: ${e.shape}.`);const s=t.shape,a=s[s.length-1];let i=1;for(let e=0;e<s.length-1;++e)i*=s[e];const o=e.shape,u=s.slice();u.pop();let l=1;for(let e=a;e<n;++e)l*=o[e],u.push(o[e]);const c=[...Re(e.shape).map((e=>e/l)),1].slice(0,a);return[u,i,l,c]}function ao(e,t,n){const r=t.rank>1?t.shape[t.rank-1]:1,s=t.rank>1?t.rank-1:1,a=`Must have updates.shape = indices.shape[:batchDim] + shape[sliceDim:], got updates.shape: ${n.shape}, indices.shape: ${t.shape}, shape: ${e}, sliceDim: ${r}, and batchDim: ${s}.`;if(n.rank<s)throw new Error(a+` update.rank < ${s}. `);if(e.length<r+(n.rank-s))throw new Error(a+` Output shape length < ${r+(n.rank-s)}`);if(n.rank!==s+e.length-r)throw new Error(a+" update.rank != "+(s+e.length-r));for(let e=0;e<s;++e)if(n.shape[e]!==t.shape[e])throw new Error(a+` updates.shape[${e}] (${n.shape[e]}) != indices.shape[${e}] (${t.shape[e]}).`);for(let t=0;t<n.rank-s;++t)if(n.shape[t+s]!==e[t+r])throw new Error(a+` updates.shape[${t+s}] (${n.shape[t+s]}) != shape[${t+s}] (${e[t+s]})`)}function io(e,t,n){if(t.rank<1)throw new Error(`tf.scatterND() expects the indices to be rank 1 or higher, but the rank was ${t.rank}.`);if(e.rank<1)throw new Error(`tf.scatterND() expects the updates to be rank 1 or higher, but the rank was ${e.rank}.`);if("int32"!==t.dtype)throw new Error(`The dtype of 'indices' should be int32, but got dtype: ${t.dtype}`);if(n.length<1)throw new Error(`Output rank must be greater or equal to 1, but got shape: ${n}`);if(0===n.length){if(0===t.size)throw new Error(`Indices specified for empty output. indices shape: ${t.shape}`);if(0===e.size)throw new Error(`Updates specified for empty output. updates shape: ${e.shape}`)}ao(n,t,e)}function oo(e,t,n){const r=t.shape.length,s=r>1?t.shape[r-1]:1,a=n.length;let i=1;for(let e=s;e<a;++e)i*=n[e];const o=s<1?1:s;return{sliceRank:s,numUpdates:oe(t.shape)/o,sliceSize:i,strides:[...Re(n.slice(0,s)),1],outputSize:oe(n)}}function uo(e,t,n){const r=e.shape.length;re(r===t.length,(()=>`Error in slice${r}D: Length of begin ${t} must match the rank of the array (${r}).`)),re(r===n.length,(()=>`Error in slice${r}D: Length of size ${n} must match the rank of the array (${r}).`));for(let s=0;s<r;++s)re(t[s]+n[s]<=e.shape[s],(()=>`Error in slice${r}D: begin[${s}] + size[${s}] (${t[s]+n[s]}) would overflow input.shape[${s}] (${e.shape[s]})`))}function lo(e){const t=[];let n=0;for(;e>0;)1&e&&t.push(n),e/=2,n++;return t}function co(e,t,n){const r=[];for(let s=0;s<e.length;s++)r[s]=Math.ceil((t[s]-e[s])/n[s]);return r}function ho(e,t,n,r){const s=[...e];for(let e=s.length;e<r.length;e++)s.push(1);for(let e=0;e<n;e++)0===e?s[t]=1:(s.splice(t,0,1),s.pop());return s}function po(e,t,n){return n<=e?n:n-(t-1)}function fo(e,t){const n=[];for(let r=0;r<e;r++)n.push(t+r);return n}function mo(e,t,n,r,s,a,i,o,u){const l=e.length;let c=new Array(l),h=new Array(l),p=new Array(l);if(t.length&&n>0){const u=t[0],l=n+1;c=go(i,u,l,r,e),h=yo(o,u,l,s,e),p=ho(a,u,l,e)}else for(let t=0;t<l;t++)c[t]=xo(i,r,a,e,t,u),h[t]=wo(o,s,a,e,t,u),p[t]=bo(a,t,u);return{begin:c,end:h,strides:p}}function go(e,t,n,r,s){const a=[...s],i=fo(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=0;else{const i=po(t,n,s);let o=r[i];e&1<<i&&(o=0),a[s]=o}return a}function yo(e,t,n,r,s){const a=[...s],i=fo(n,t);for(let s=0;s<a.length;s++)if(i.indexOf(s)>-1)a[s]=Number.MAX_SAFE_INTEGER;else{const i=po(t,n,s);let o=r[i];e&1<<i&&(o=Number.MAX_SAFE_INTEGER),a[s]=o}for(let e=0;e<a.length;e++){const t=s[e];a[e]<0&&(a[e]+=t),a[e]=Z(0,a[e],s[e])}return a}function bo(e,t,n){let r=e[t];return(n&1<<t||null==r)&&(r=1),r}function xo(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MIN_SAFE_INTEGER:Number.MAX_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=Z(0,i,u-1),i}function wo(e,t,n,r,s,a){let i=t[s];const o=n[s]||1;(e&1<<s||a&1<<s||null==i)&&(i=o>0?Number.MAX_SAFE_INTEGER:Number.MIN_SAFE_INTEGER);const u=r[s];return i<0&&(i+=u),i=o>0?Z(0,i,u):Z(-1,i,u-1),i}function vo(e,t,n){let r=n.length;for(let e=0;e<n.length;e++)if(n[e]>1){r=e;break}for(let s=r+1;s<n.length;s++)if(t[s]>0||n[s]!==e[s])return!1;return!0}function ko(e,t){let n=e.length>0?e[e.length-1]:1;for(let r=0;r<e.length-1;r++)n+=e[r]*t[r];return n}function No(e,t,n){let r;const s=e.shape.length;let a;return r="number"==typeof t?[t,...new Array(s-1).fill(0)]:t.length<s?t.concat(new Array(s-t.length).fill(0)):t.slice(),r.forEach((e=>{re(-1!==e,(()=>"slice() does not support negative begin indexing."))})),a=null==n?new Array(s).fill(-1):"number"==typeof n?[n,...new Array(s-1).fill(-1)]:n.length<s?n.concat(new Array(s-n.length).fill(-1)):n,a=a.map(((t,n)=>t>=0?t:(re(-1===t,(()=>`Negative size values should be exactly -1 but got ${t} for the slice() size at index ${n}.`)),e.shape[n]-r[n]))),[r,a]}function Io(e,t,n,r,s,a,i,o,u){let l;if(null==r?(l=new Array(t.length),l.fill(1)):l=r,null!=i&&0!=(i&i-1))throw new Error("Multiple ellipses in slice is not allowed.");let c=!1;const h={dims:l.length,numAddAxisAfterEllipsis:0,begin:t.slice(),end:n.slice(),strides:l.slice(),beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};for(let e=0;e<h.dims;e++)c&&0!=(1<<e&o)&&h.numAddAxisAfterEllipsis++,1<<e&i&&(c=!0);c||(h.ellipsisMask|=1<<h.dims,h.dims++);const p={dims:e.length,beginMask:0,endMask:0,beginValid:!1,endValid:!1};!function(e,t){t.beginMask=0,t.endMask=0,t.shrinkAxisMask=0;let n=0;t.beginValid=null!=e.begin,t.endValid=null!=e.end,t.begin=new Array(t.dims),t.end=new Array(t.dims),t.strides=new Array(t.dims),t.finalShapeGatherIndices=[],t.finalShapeGatherIndicesSparse=[],t.inputShapeGatherIndicesSparse=new Array(t.dims);for(let r=0;r<e.dims;r++)if(1<<r&e.ellipsisMask){const s=Math.min(t.dims-(e.dims-r)+1+e.numAddAxisAfterEllipsis,t.dims);for(;n<s;n++)t.begin[n]=0,t.end[n]=0,t.strides[n]=1,t.beginMask|=1<<n,t.endMask|=1<<n,t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(-1),t.inputShapeGatherIndicesSparse[n]=r}else if(1<<r&e.newAxisMask)t.finalShapeGatherIndices.push(-2),t.finalShapeGatherIndicesSparse.push(-1);else{if(n===t.begin.length)throw Error(`Index out of range using input dim ${n}; input has only ${t.dims} dims, ${t.begin.length}.`);null!=e.begin&&(t.begin[n]=e.begin[r]),null!=e.end&&(t.end[n]=e.end[r]),t.strides[n]=e.strides[r],e.beginMask&1<<r&&(t.beginMask|=1<<n),e.endMask&1<<r&&(t.endMask|=1<<n),e.shrinkAxisMask&1<<r?(t.finalShapeGatherIndices.push(-1),t.finalShapeGatherIndicesSparse.push(-1),t.shrinkAxisMask|=1<<n):(t.finalShapeGatherIndices.push(n),t.finalShapeGatherIndicesSparse.push(r)),t.inputShapeGatherIndicesSparse[n]=r,n++}}(h,p);let d=!0,f=!0,m=!0;const g=[],y=[];for(let t=0;t<e.length;++t){if(0===p.strides[t])throw Error(`strides[${t}] must be non-zero`);const n=!!(p.shrinkAxisMask&1<<t),r=e[t];if(-1===r){g.push(n?1:-1);continue}const s=[p.beginMask&1<<t,p.endMask&1<<t],a=[p.strides[t]>0?0:-1,p.strides[t]>0?r:r-1];if(n&&p.strides[t]<=0)throw Error("only stride 1 allowed on non-range indexing.");m=m&&1===p.strides[t];const i=!!(p.beginMask&1<<t&&p.endMask&1<<t);if(p.beginValid&&p.endValid){if(n){const e=p.begin[t]<0?r+p.begin[t]:p.begin[t];if(p.begin[t]=e,p.end[t]=p.begin[t]+1,e<0||e>=r)throw Error(`slice index ${p.begin[t]} of dimension ${t} out of bounds.`)}else p.begin[t]=Co(p.begin[t],0,p.strides[t],r,s,a),p.end[t]=Co(p.end[t],1,p.strides[t],r,s,a);const e=1===p.strides[t]&&0===p.begin[t]&&p.end[t]===r;d=d&&e,f=f&&(0===t&&1===p.strides[t]||e)}else d=d&&1===p.strides[t]&&i,f=f&&(0===t&&1===p.strides[t]||i);let o,u=!1;if(p.beginValid&&p.endValid?(o=p.end[t]-p.begin[t],u=!0):n?(o=1,u=!0):i&&r>=0&&(o=p.strides[t]<0?-r:r,u=!0),u){let e;e=0===o||o<0!=p.strides[t]<0?0:Math.trunc(o/p.strides[t])+(o%p.strides[t]!=0?1:0),g.push(e)}else g.push(-1)}for(let e=0;e<p.finalShapeGatherIndices.length;++e){const t=p.finalShapeGatherIndices[e];t>=0?y.push(g[t]):-2===t&&y.push(1)}return{finalShapeSparse:y.filter(((e,t)=>-2!==p.finalShapeGatherIndices[t])),finalShape:y,isIdentity:d,sliceDim0:f,isSimpleSlice:m,begin:p.begin,end:p.end,strides:p.strides}}function Co(e,t,n,r,s,a){if(s[t])return n>0?a[t]:a[t+1&1];{const t=e<0?r+e:e;return t<a[0]?a[0]:t>a[1]?a[1]:t}}class Do{getClassName(){return this.constructor.className}static fromConfig(e,t){return new e(t)}}class Eo{constructor(){this.classNameMap={}}static getMap(){return null==Eo.instance&&(Eo.instance=new Eo),Eo.instance}static register(e){Eo.getMap().classNameMap[e.className]=[e,e.fromConfig]}}function So(e){re(null!=e.className,(()=>"Class being registered does not have the static className property defined.")),re("string"==typeof e.className,(()=>"className is required to be a string, but got type "+typeof e.className)),re(e.className.length>0,(()=>"Class being registered has an empty-string as its className, which is disallowed.")),Eo.register(e)}const To=.1;function Ao(e,t,n){return null==n&&(n=$o()),Fo(e,t,((e,t)=>Oo(e,t,n)))}function $o(){return 32===da.backend.floatPrecision()?.001:To}function Fo(e,t,n){let r=!0;if((Ie(e)||Ie(t))&&(r=!1),Ie(e)&&Ie(t)&&(r=!0),r){const n=e.constructor.name,r=t.constructor.name;if(n!==r)throw new Error(`Arrays are of different type. Actual: ${n}. Expected: ${r}`)}if(Array.isArray(e)&&Array.isArray(t)){const n=wa(e),r=wa(t);if(!le(n,r))throw new Error(`Arrays have different shapes. Actual: [${n}]. Expected: [${r}]`)}const s=Ie(e)?e:ie(e),a=Ie(t)?t:ie(t);if(s.length!==a.length)throw new Error(`Arrays have different lengths actual: ${s.length} vs expected: ${a.length}.\nActual:   ${s}.\nExpected: ${a}.`);for(let e=0;e<a.length;++e){const t=s[e],r=a[e];if(!n(t,r))throw new Error(`Arrays differ: actual[${e}] = ${t}, expected[${e}] = ${r}.\nActual:   ${s}.\nExpected: ${a}.`)}}function Ro(e,t){e().then((()=>t.fail()),(()=>t()))}function _o(e,t){const n="string"==typeof t||"number"==typeof t||"boolean"==typeof t?[t]:t;return Ee(e)||Ee(e[0])||Ee(t)||Ee(t[0])?Fo(e,n,((e,t)=>e==t)):Fo(e,t,((e,t)=>Oo(e,t,0)))}function Mo(e,t,n){if(null==n&&(n=$o()),!Oo(e,t,n))throw new Error(`Numbers differ: actual === ${e}, expected === ${t}`)}function Oo(e,t,n){return!isFinite(e)&&!isFinite(t)||!(isNaN(e)||isNaN(t)||Math.abs(e-t)>n)}function Bo(e,t,n){for(let r=0;r<e.length;r++)if(e[r]<t||e[r]>n)throw new Error(`Value out of range:${e[r]} low: ${t}, high: ${n}`)}function zo(e,t){const n=new Float32Array(e),r=new Float32Array(t);if(n.length!==r.length)throw new Error(`Expected ArrayBuffer to be of length ${r.length}, but it was ${n.length}`);for(let e=0;e<r.length;e++)if(n[e]!==r[e])throw new Error(`Expected ArrayBuffer value at ${e} to be ${r[e]} but got ${n[e]} instead`)}function Lo(e){for(let t=0;t<e.length;t++){const n=e[t];Array.isArray(n)?Lo(n):e[t]=Rs(n)}return e}const Po="3.13.0";function Uo(){je().set("PROD",!0)}function Wo(){je().set("DEBUG",!0)}function Vo(){je().set("DEPRECATION_WARNINGS_ENABLED",!1),console.warn("TensorFlow.js deprecation warnings have been disabled.")}function Go(e){je().getBool("DEPRECATION_WARNINGS_ENABLED")&&console.warn(e+" You can disable deprecation warnings with tf.disableDeprecationWarnings().")}function jo(){da.disposeVariables()}function Ho(){return da}function qo(){return da.memory()}function Ko(e){return da.profile(e)}function Xo(e,t){return da.tidy(e,t)}function Yo(e){oa(e).forEach((e=>e.dispose()))}function Zo(e){return da.keep(e)}function Jo(e){return da.time(e)}function Qo(e){return da.setBackend(e)}function eu(){return da.ready()}function tu(){return da.backendName}function nu(e){da.removeBackend(e)}function ru(e){return da.findBackend(e)}function su(e){return da.findBackendFactory(e)}function au(e,t,n=1){return da.registerBackend(e,t,n)}function iu(){return da.backend}function ou(e,t){je().setPlatform(e,t)}Hs=Go;const uu=Da({add_:function(e,t){let n=Na(e,"a","add"),r=Na(t,"b","add");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Qe,s)}}),lu=Da({floorDiv_:function(e,t){let n=Na(e,"a","floorDiv"),r=Na(t,"b","floorDiv");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(rn,s)}}),cu=Da({div_:function(e,t){let n=Na(e,"a","div"),r=Na(t,"b","div");if([n,r]=sa(n,r),"int32"===n.dtype&&"int32"===r.dtype)return lu(n,r);const s={a:n,b:r};return da.runKernel(Gt,s,{})}}),hu=Da({mul_:function(e,t){let n=Na(e,"a","mul"),r=Na(t,"b","mul");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Un,s)}}),pu=Da({sqrt_:function(e){const t={x:Na(e,"x","sqrt","float32")};return da.runKernel(Nr,t)}}),du=Da({square_:function(e){const t=Na(e,"x","square");return da.runKernel("Square",{x:t},{})}}),fu=Da({zerosLike_:function(e){const t={x:Na(e,"x","zerosLike")};return da.runKernel(Xr,t)}});function mu(e){return re($e(e),(()=>"The f passed in grad(f) must be a function")),(t,n)=>{const r=Na(t,"x","tf.grad","string_or_numeric"),s=null!=n?Na(n,"dy","tf.grad"):null;return da.tidy((()=>{const{value:t,grads:n}=da.gradients((()=>e(r)),[r],s);return null!=s&&se(t.shape,s.shape,"The shape of dy passed in grad(f)(x, dy) must match the shape returned by f(x)"),vu(n),n[0]}))}}function gu(e){return re($e(e),(()=>"The f passed in grads(f) must be a function")),(t,n)=>{re(Array.isArray(t),(()=>"The args passed in grads(f)(args) must be an array of `Tensor`s or `TensorLike`s"));const r=Ia(t,"args","tf.grads","string_or_numeric"),s=null!=n?Na(n,"dy","tf.grads"):null;return da.tidy((()=>{const{value:t,grads:n}=da.gradients((()=>e(...r)),r,s);return null!=s&&se(t.shape,s.shape,"The shape of dy passed in grads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vu(n),n}))}}function yu(e){return re($e(e),(()=>"The f passed in valueAndGrad(f) must be a function")),(t,n)=>{re(t instanceof qs,(()=>"The x passed in valueAndGrad(f)(x) must be a tensor")),re(null==n||n instanceof qs,(()=>"The dy passed in valueAndGrad(f)(x, dy) must be a tensor"));const{grads:r,value:s}=da.gradients((()=>e(t)),[t],n);return vu(r),{grad:r[0],value:s}}}function bu(e){return re($e(e),(()=>"The f passed in valueAndGrads(f) must be a function")),(t,n)=>{re(Array.isArray(t)&&t.every((e=>e instanceof qs)),(()=>"The args passed in valueAndGrads(f)(args) must be array of tensors")),re(null==n||n instanceof qs,(()=>"The dy passed in valueAndGrads(f)(args, dy) must be a tensor"));const r=da.gradients((()=>e(...t)),t,n);return null!=n&&se(r.value.shape,n.shape,"The shape of dy passed in valueAndGrads(f)([x1,...], dy) must match the shape returned by f([x1,...])"),vu(r.grads),r}}function xu(e,t){re($e(e),(()=>"The f passed in variableGrads(f) must be a function")),re(null==t||Array.isArray(t)&&t.every((e=>e instanceof Xs)),(()=>"The varList passed in variableGrads(f, varList) must be an array of variables"));const n=null!=t;if(!n){t=[];for(const e in da.registeredVariables)t.push(da.registeredVariables[e])}const r=n?t.filter((e=>!e.trainable)):null,s=t.length;t=t.filter((e=>e.trainable)),re(t.length>0,(()=>`variableGrads() expects at least one of the input variables to be trainable, but none of the ${s} variables is trainable.`));const{value:a,grads:i}=da.gradients(e,t,null,!0);re(i.some((e=>null!=e)),(()=>"Cannot find a connection between any variable and the result of the loss function y=f(x). Please make sure the operations that use variables are inside the function f passed to minimize().")),re(0===a.rank,(()=>`The f passed in variableGrads(f) must return a scalar, but it returned a rank-${a.rank} tensor`));const o={};return t.forEach(((e,t)=>{null!=i[t]&&(o[e.name]=i[t])})),null!=r&&r.forEach((e=>o[e.name]=null)),{value:a,grads:o}}function wu(e){return da.customGrad(e)}function vu(e){if(e.filter((e=>null==e)).length>0)throw new Error("Cannot compute gradient of y=f(x) with respect to x. Make sure that\n    the f you passed encloses all operations that lead from x to y.")}function ku(e,t){if((Ie(e)&&"string"!==t||Array.isArray(e))&&"complex64"!==t)throw new Error("Error creating a new Scalar: value must be a primitive (number|boolean|string)");if("string"===t&&Ie(e)&&!(e instanceof Uint8Array))throw new Error("When making a scalar from encoded string, the value must be `Uint8Array`.");return Sa(e,[],[],t)}class Nu extends Do{minimize(e,t=!1,n){const{value:r,grads:s}=this.computeGradients(e,n);if(null!=n){const e=n.map((e=>({name:e.name,tensor:s[e.name]})));this.applyGradients(e)}else this.applyGradients(s);return Yo(s),t?r:(r.dispose(),null)}get iterations(){return null==this.iterations_&&(this.iterations_=0),this.iterations_}incrementIterations(){this.iterations_=this.iterations+1}computeGradients(e,t){return xu(e,t)}dispose(){null!=this.iterations_&&Yo(this.iterations_)}async saveIterations(){return null==this.iterations_&&(this.iterations_=0),{name:"iter",tensor:ku(this.iterations_,"int32")}}async getWeights(){throw new Error("getWeights() is not implemented for this optimizer yet.")}async setWeights(e){throw new Error(`setWeights() is not implemented for this optimizer class ${this.getClassName()}`)}async extractIterations(e){return this.iterations_=(await e[0].tensor.data())[0],e.slice(1)}}Object.defineProperty(Nu,Symbol.hasInstance,{value:e=>null!=e.minimize&&null!=e.computeGradients&&null!=e.applyGradients});class Iu extends Nu{constructor(e,t,n=null){super(),this.learningRate=e,this.rho=t,this.epsilon=n,this.accumulatedGrads=[],this.accumulatedUpdates=[],null==n&&(this.epsilon=da.backend.epsilon())}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t];null==this.accumulatedGrads[n]&&(this.accumulatedGrads[n]={originalName:`${t}/accum_grad`,variable:Xo((()=>fu(r).variable(!1)))}),null==this.accumulatedUpdates[n]&&(this.accumulatedUpdates[n]={originalName:`${t}/accum_var`,variable:Xo((()=>fu(r).variable(!1)))});const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable,i=this.accumulatedUpdates[n].variable;Xo((()=>{const e=uu(hu(a,this.rho),hu(du(s),1-this.rho)),t=hu(cu(pu(uu(i,this.epsilon)),pu(uu(a,this.epsilon))),s),n=uu(hu(i,this.rho),hu(du(t),1-this.rho));a.assign(e),i.assign(n);const o=uu(hu(t,-this.learningRate),r);r.assign(o)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedUpdates&&(Yo(this.accumulatedGrads.map((e=>e.variable))),Yo(this.accumulatedUpdates.map((e=>e.variable))))}async getWeights(){const e=[...this.accumulatedGrads,...this.accumulatedUpdates];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){const t=(e=await this.extractIterations(e)).length/2;this.accumulatedGrads=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedUpdates=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,rho:this.rho,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.rho,t.epsilon)}}function Cu(e,t,n){const r={shape:e,value:t,dtype:n};return da.runKernel(en,{},r)}Iu.className="Adadelta",So(Iu);class Du extends Nu{constructor(e,t=.1){super(),this.learningRate=e,this.initialAccumulatorValue=t,this.accumulatedGrads=[]}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t];if(null==this.accumulatedGrads[n]){const e=!1;this.accumulatedGrads[n]={originalName:`${t}/accumulator`,variable:Xo((()=>Cu(r.shape,this.initialAccumulatorValue).variable(e)))}}const s=Array.isArray(e)?e[n].tensor:e[t];if(null==s)return;const a=this.accumulatedGrads[n].variable;Xo((()=>{const e=uu(a,du(s));a.assign(e);const t=uu(hu(cu(s,pu(uu(e,da.backend.epsilon()))),-this.learningRate),r);r.assign(t)}))})),this.incrementIterations()}dispose(){null!=this.accumulatedGrads&&Yo(this.accumulatedGrads.map((e=>e.variable)))}async getWeights(){return[await this.saveIterations()].concat(this.accumulatedGrads.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulatedGrads=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,initialAccumulatorValue:this.initialAccumulatorValue}}static fromConfig(e,t){return new e(t.learningRate,t.initialAccumulatorValue)}}Du.className="Adagrad",So(Du);const Eu=Da({pow_:function(e,t){let n=Na(e,"base","pow"),r=Na(t,"exp","pow");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Jn,s)}}),Su=Da({sub_:function(e,t){let n=Na(e,"a","sub"),r=Na(t,"b","sub");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Lr,s)}});class Tu extends Nu{constructor(e,t,n,r=null){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.accumulatedFirstMoment=[],this.accumulatedSecondMoment=[],Xo((()=>{this.accBeta1=ku(t).variable(),this.accBeta2=ku(n).variable()})),null==r&&(this.epsilon=da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Xo((()=>{const n=Su(1,this.accBeta1),r=Su(1,this.accBeta2);t.forEach(((t,s)=>{const a=da.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:Xo((()=>fu(a).variable(!1)))}),null==this.accumulatedSecondMoment[s]&&(this.accumulatedSecondMoment[s]={originalName:`${t}/v`,variable:Xo((()=>fu(a).variable(!1)))});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedSecondMoment[s].variable,l=uu(hu(o,this.beta1),hu(i,1-this.beta1)),c=uu(hu(u,this.beta2),hu(du(i),1-this.beta2)),h=cu(l,n),p=cu(c,r);o.assign(l),u.assign(c);const d=uu(hu(cu(h,uu(pu(p),this.epsilon)),-this.learningRate),a);a.assign(d)})),this.accBeta1.assign(hu(this.accBeta1,this.beta1)),this.accBeta2.assign(hu(this.accBeta2,this.beta2))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.accBeta2.dispose(),null!=this.accumulatedFirstMoment&&Yo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedSecondMoment&&Yo(this.accumulatedSecondMoment.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedFirstMoment,...this.accumulatedSecondMoment];return[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),Xo((()=>{this.accBeta1.assign(Eu(this.beta1,this.iterations_+1)),this.accBeta2.assign(Eu(this.beta2,this.iterations_+1))}));const t=e.length/2;this.accumulatedFirstMoment=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)}))),this.accumulatedSecondMoment=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon)}}Tu.className="Adam",So(Tu);const Au=Da({abs_:function(e){const t=Na(e,"x","abs");if("complex64"===t.dtype){const e={x:t};return da.runKernel(Nt,e)}{const e={x:t};return da.runKernel(Ye,e)}}}),$u=Da({maximum_:function(e,t){let n=Na(e,"a","maximum"),r=Na(t,"b","maximum");[n,r]=sa(n,r),"bool"===n.dtype&&(n=Ci(n,"int32"),r=Ci(r,"int32")),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Tn,s)}});class Fu extends Nu{constructor(e,t,n,r=null,s=0){super(),this.learningRate=e,this.beta1=t,this.beta2=n,this.epsilon=r,this.decay=s,this.accumulatedFirstMoment=[],this.accumulatedWeightedInfNorm=[],Xo((()=>{this.iteration=ku(0).variable(),this.accBeta1=ku(t).variable()})),null==r&&(this.epsilon=da.backend.epsilon())}applyGradients(e){const t=Array.isArray(e)?e.map((e=>e.name)):Object.keys(e);Xo((()=>{const n=Su(1,this.accBeta1),r=cu(-this.learningRate,uu(hu(this.iteration,this.decay),1));t.forEach(((t,s)=>{const a=da.registeredVariables[t];null==this.accumulatedFirstMoment[s]&&(this.accumulatedFirstMoment[s]={originalName:`${t}/m`,variable:fu(a).variable(!1)}),null==this.accumulatedWeightedInfNorm[s]&&(this.accumulatedWeightedInfNorm[s]={originalName:`${t}/v`,variable:fu(a).variable(!1)});const i=Array.isArray(e)?e[s].tensor:e[t];if(null==i)return;const o=this.accumulatedFirstMoment[s].variable,u=this.accumulatedWeightedInfNorm[s].variable,l=uu(hu(o,this.beta1),hu(i,1-this.beta1)),c=hu(u,this.beta2),h=Au(i),p=$u(c,h);o.assign(l),u.assign(p);const d=uu(hu(cu(r,n),cu(l,uu(p,this.epsilon))),a);a.assign(d)})),this.iteration.assign(uu(this.iteration,1)),this.accBeta1.assign(hu(this.accBeta1,this.beta1))})),this.incrementIterations()}dispose(){this.accBeta1.dispose(),this.iteration.dispose(),null!=this.accumulatedFirstMoment&&Yo(this.accumulatedFirstMoment.map((e=>e.variable))),null!=this.accumulatedWeightedInfNorm&&Yo(this.accumulatedWeightedInfNorm.map((e=>e.variable)))}async getWeights(){throw new Error("getWeights() is not implemented for Adamax yet.")}async setWeights(e){throw new Error("setWeights() is not implemented for Adamax yet.")}getConfig(){return{learningRate:this.learningRate,beta1:this.beta1,beta2:this.beta2,epsilon:this.epsilon,decay:this.decay}}static fromConfig(e,t){return new e(t.learningRate,t.beta1,t.beta2,t.epsilon,t.decay)}}Fu.className="Adamax",So(Fu);class Ru extends Nu{constructor(e){super(),this.learningRate=e,this.setLearningRate(e)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=Array.isArray(e)?e[n].tensor:e[t];if(null==r)return;const s=da.registeredVariables[t];Xo((()=>{const e=uu(hu(this.c,r),s);s.assign(e)}))})),this.incrementIterations()}setLearningRate(e){this.learningRate=e,null!=this.c&&this.c.dispose(),this.c=Zo(ku(-e))}dispose(){this.c.dispose()}async getWeights(){return[await this.saveIterations()]}async setWeights(e){if(0!==(e=await this.extractIterations(e)).length)throw new Error("SGD optimizer does not have settable weights.")}getConfig(){return{learningRate:this.learningRate}}static fromConfig(e,t){return new e(t.learningRate)}}Ru.className="SGD",So(Ru);class _u extends Ru{constructor(e,t,n=!1){super(e),this.learningRate=e,this.momentum=t,this.useNesterov=n,this.accumulations=[],this.m=ku(this.momentum)}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t];if(null==this.accumulations[n]){const e=!1;this.accumulations[n]={originalName:`${t}/momentum`,variable:Xo((()=>fu(r).variable(e)))}}const s=this.accumulations[n].variable,a=Array.isArray(e)?e[n].tensor:e[t];null!=a&&Xo((()=>{let e;const t=uu(hu(this.m,s),a);e=this.useNesterov?uu(hu(this.c,uu(a,hu(t,this.m))),r):uu(hu(this.c,t),r),s.assign(t),r.assign(e)}))})),this.incrementIterations()}dispose(){this.m.dispose(),null!=this.accumulations&&Yo(this.accumulations.map((e=>e.variable)))}setMomentum(e){this.momentum=e}async getWeights(){return[await this.saveIterations()].concat(this.accumulations.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e),this.accumulations=e.map((e=>({originalName:e.name,variable:e.tensor.variable(!1)})))}getConfig(){return{learningRate:this.learningRate,momentum:this.momentum,useNesterov:this.useNesterov}}static fromConfig(e,t){return new e(t.learningRate,t.momentum,t.useNesterov)}}_u.className="Momentum",So(_u);class Mu extends Nu{constructor(e,t=.9,n=0,r=null,s=!1){if(super(),this.learningRate=e,this.decay=t,this.momentum=n,this.epsilon=r,this.accumulatedMeanSquares=[],this.accumulatedMoments=[],this.accumulatedMeanGrads=[],this.centered=s,null==r&&(this.epsilon=da.backend.epsilon()),null==e)throw new Error("learningRate for RMSPropOptimizer must be defined.")}applyGradients(e){(Array.isArray(e)?e.map((e=>e.name)):Object.keys(e)).forEach(((t,n)=>{const r=da.registeredVariables[t],s=!1;null==this.accumulatedMeanSquares[n]&&(this.accumulatedMeanSquares[n]={originalName:`${t}/rms`,variable:Xo((()=>fu(r).variable(s)))}),null==this.accumulatedMoments[n]&&(this.accumulatedMoments[n]={originalName:`${t}/momentum`,variable:Xo((()=>fu(r).variable(s)))}),null==this.accumulatedMeanGrads[n]&&this.centered&&(this.accumulatedMeanGrads[n]={originalName:`${t}/mg`,variable:Xo((()=>fu(r).variable(s)))});const a=Array.isArray(e)?e[n].tensor:e[t];if(null==a)return;const i=this.accumulatedMeanSquares[n].variable,o=this.accumulatedMoments[n].variable;Xo((()=>{const e=uu(hu(i,this.decay),hu(du(a),1-this.decay));if(this.centered){const t=this.accumulatedMeanGrads[n].variable,s=uu(hu(t,this.decay),hu(a,1-this.decay)),u=cu(hu(a,this.learningRate),pu(Su(e,uu(du(s),this.epsilon)))),l=uu(hu(o,this.momentum),u);i.assign(e),t.assign(s),o.assign(l);const c=Su(r,l);r.assign(c)}else{const e=uu(hu(i,this.decay),hu(du(a),1-this.decay)),t=uu(hu(o,this.momentum),cu(hu(a,this.learningRate),pu(uu(e,this.epsilon))));i.assign(e),o.assign(t);const n=Su(r,t);r.assign(n)}}))})),this.incrementIterations()}dispose(){null!=this.accumulatedMeanSquares&&Yo(this.accumulatedMeanSquares.map((e=>e.variable))),null!=this.accumulatedMeanGrads&&this.centered&&Yo(this.accumulatedMeanGrads.map((e=>e.variable))),null!=this.accumulatedMoments&&Yo(this.accumulatedMoments.map((e=>e.variable)))}async getWeights(){const e=[...this.accumulatedMeanSquares,...this.accumulatedMoments];return this.centered&&e.push(...this.accumulatedMeanGrads),[await this.saveIterations()].concat(e.map((e=>({name:e.originalName,tensor:e.variable}))))}async setWeights(e){e=await this.extractIterations(e);const t=this.centered?e.length/3:e.length/2,n=!1;this.accumulatedMeanSquares=e.slice(0,t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.accumulatedMoments=e.slice(t,2*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))),this.centered&&(this.accumulatedMeanGrads=e.slice(2*t,3*t).map((e=>({originalName:e.name,variable:e.tensor.variable(n)}))))}getConfig(){return{learningRate:this.learningRate,decay:this.decay,momentum:this.momentum,epsilon:this.epsilon,centered:this.centered}}static fromConfig(e,t){return new e(t.learningRate,t.decay,t.momentum,t.epsilon,t.centered)}}Mu.className="RMSProp",So(Mu);class Ou{static sgd(e){return new Ru(e)}static momentum(e,t,n=!1){return new _u(e,t,n)}static rmsprop(e,t=.9,n=0,r=null,s=!1){return new Mu(e,t,n,r,s)}static adam(e=.001,t=.9,n=.999,r=null){return new Tu(e,t,n,r)}static adadelta(e=.001,t=.95,n=null){return new Iu(e,t,n)}static adamax(e=.002,t=.9,n=.999,r=null,s=0){return new Fu(e,t,n,r,s)}static adagrad(e,t=.1){return new Du(e,t)}}const Bu=Da({acos_:function(e){const t={x:Na(e,"x","acos")};return da.runKernel(Ze,t)}}),zu=Da({acosh_:function(e){const t={x:Na(e,"x","acosh")};return da.runKernel(Je,t)}}),Lu=Da({addN_:function(e){re(Array.isArray(e),(()=>"The argument passed to tf.addN() must be a list of tensors")),re(e.length>=1,(()=>`Must pass at least one tensor to tf.addN(), but got ${e.length}`));const t=e.map(((e,t)=>Na(e,`tensors${t}`,"addN"))),n=t[0];t.forEach((e=>{if(e.dtype!==n.dtype)throw new Error("All tensors passed to tf.addN() must have the same dtype")})),t.forEach((e=>{if(!le(e.shape,n.shape))throw new Error("All tensors passed to tf.addN() must have the same shape")}));const r=t;return da.runKernel(et,r)}}),Pu=Da({all_:function(e,t=null,n=!1){const r={x:Na(e,"x","all","bool")},s={axis:t,keepDims:n};return da.runKernel(tt,r,s)}}),Uu=Da({any_:function(e,t=null,n=!1){const r={x:Na(e,"x","any","bool")},s={axis:t,keepDims:n};return da.runKernel(nt,r,s)}}),Wu=Da({argMax_:function(e,t=0){const n={x:Na(e,"x","argMax")},r={axis:t};return da.runKernel(rt,n,r)}}),Vu=Da({argMin_:function(e,t=0){const n={x:Na(e,"x","argMin")},r={axis:t};return da.runKernel(st,n,r)}}),Gu=Da({asin_:function(e){const t={x:Na(e,"x","asin")};return da.runKernel(at,t)}}),ju=Da({asinh_:function(e){const t={x:Na(e,"x","asinh")};return da.runKernel(it,t)}}),Hu=Da({atan_:function(e){const t={x:Na(e,"x","atan")};return da.runKernel(ot,t)}}),qu=Da({atan2_:function(e,t){let n=Na(e,"a","atan2"),r=Na(t,"b","atan2");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(lt,s)}}),Ku=Da({atanh_:function(e){const t={x:Na(e,"x","atanh")};return da.runKernel(ut,t)}});function Xu(e,t,n,r,s="NHWC",a){return Ju(e,[...t,e[3]],n,a,r,null,null,ol(s))}function Yu(e,t,n,r,s,a,i="channelsLast"){const[o,u]=tl(t);let l;if("channelsLast"===i)l=[o,u,e[3],e[3]];else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);l=[o,u,e[1],e[1]]}return Ju(e,l,n,r,s,a,!1,i)}function Zu(e,t,n,r,s,a,i="NDHWC"){const[o,u,l]=nl(t);let c,h;if("NDHWC"===i)h="channelsLast",c=[o,u,l,e[4],e[4]];else{if("NCDHW"!==i)throw new Error(`Unknown dataFormat ${i}`);h="channelsFirst",c=[o,u,l,e[1],e[1]]}return Qu(e,c,n,r,s,!1,h,a)}function Ju(e,t,n,r,s,a,i=!1,o="channelsLast"){let[u,l,c,h]=[-1,-1,-1,-1];if("channelsLast"===o)[u,l,c,h]=e;else{if("channelsFirst"!==o)throw new Error(`Unknown dataFormat ${o}`);[u,h,l,c]=e}const[p,d,,f]=t,[m,g]=tl(n),[y,b]=tl(r),x=rl(p,y),w=rl(d,b),{padInfo:v,outHeight:k,outWidth:N}=function(e,t,n,r,s,a,i,o,u){let l,c,h;if("number"==typeof e){l={top:e,bottom:e,left:e,right:e,type:0===e?"VALID":"NUMBER"};const s=function(e,t,n,r,s){null==r&&(r=el(e,t,n));const a=e[1];return[sl((e[0]-t+2*r)/n+1,s),sl((a-t+2*r)/n+1,s)]}([t,n],a,r,e,o);c=s[0],h=s[1]}else if("same"===e){c=Math.ceil(t/r),h=Math.ceil(n/s);const e=Math.max(0,(c-1)*r+a-t),o=Math.max(0,(h-1)*s+i-n),u=Math.floor(e/2),p=e-u,d=Math.floor(o/2);l={top:u,bottom:p,left:d,right:o-d,type:"SAME"}}else if("valid"===e)l={top:0,bottom:0,left:0,right:0,type:"VALID"},c=Math.ceil((t-a+1)/r),h=Math.ceil((n-i+1)/s);else{if("object"!=typeof e)throw Error(`Unknown padding parameter: ${e}`);{const p="channelsLast"===u?e[1][0]:e[2][0],d="channelsLast"===u?e[1][1]:e[2][1],f="channelsLast"===u?e[2][0]:e[3][0],m="channelsLast"===u?e[2][1]:e[3][1];l={top:p,bottom:d,left:f,right:m,type:0===p&&0===d&&0===f&&0===m?"VALID":"EXPLICIT"},c=sl((t-a+p+d)/r+1,o),h=sl((n-i+f+m)/s+1,o)}}return{padInfo:l,outHeight:c,outWidth:h}}(s,l,c,m,g,x,w,a,o),I=i?f*h:f;let C;return"channelsFirst"===o?C=[u,I,k,N]:"channelsLast"===o&&(C=[u,k,N,I]),{batchSize:u,dataFormat:o,inHeight:l,inWidth:c,inChannels:h,outHeight:k,outWidth:N,outChannels:I,padInfo:v,strideHeight:m,strideWidth:g,filterHeight:p,filterWidth:d,effectiveFilterHeight:x,effectiveFilterWidth:w,dilationHeight:y,dilationWidth:b,inShape:e,outShape:C,filterShape:t}}function Qu(e,t,n,r,s,a=!1,i="channelsLast",o){let[u,l,c,h,p]=[-1,-1,-1,-1,-1];if("channelsLast"===i)[u,l,c,h,p]=e;else{if("channelsFirst"!==i)throw new Error(`Unknown dataFormat ${i}`);[u,p,l,c,h]=e}const[d,f,m,,g]=t,[y,b,x]=nl(n),[w,v,k]=nl(r),N=rl(d,w),I=rl(f,v),C=rl(m,k),{padInfo:D,outDepth:E,outHeight:S,outWidth:T}=function(e,t,n,r,s,a,i,o,u,l,c){let h,p,d,f;if("number"==typeof e){h={top:e,bottom:e,left:e,right:e,front:e,back:e,type:0===e?"VALID":"NUMBER"};const a=function(e,t,n,r,s,a){null==s&&(s=el(e,t,r));const i=e[1],o=e[2];return[sl((e[0]-t+2*s)/r+1,a),sl((i-t+2*s)/r+1,a),sl((o-t+2*s)/r+1,a),1]}([t,n,r,1],o,0,s,e,c);p=a[0],d=a[1],f=a[2]}else if("same"===e){p=Math.ceil(t/s),d=Math.ceil(n/a),f=Math.ceil(r/i);const e=(p-1)*s+o-t,c=(d-1)*a+u-n,m=(f-1)*i+l-r,g=Math.floor(e/2),y=e-g,b=Math.floor(c/2),x=c-b,w=Math.floor(m/2);h={top:b,bottom:x,left:w,right:m-w,front:g,back:y,type:"SAME"}}else{if("valid"!==e)throw Error(`Unknown padding parameter: ${e}`);h={top:0,bottom:0,left:0,right:0,front:0,back:0,type:"VALID"},p=Math.ceil((t-o+1)/s),d=Math.ceil((n-u+1)/a),f=Math.ceil((r-l+1)/i)}return{padInfo:h,outDepth:p,outHeight:d,outWidth:f}}(s,l,c,h,y,b,x,N,I,C,o),A=a?g*p:g;let $;return"channelsFirst"===i?$=[u,A,E,S,T]:"channelsLast"===i&&($=[u,E,S,T,A]),{batchSize:u,dataFormat:i,inDepth:l,inHeight:c,inWidth:h,inChannels:p,outDepth:E,outHeight:S,outWidth:T,outChannels:A,padInfo:D,strideDepth:y,strideHeight:b,strideWidth:x,filterDepth:d,filterHeight:f,filterWidth:m,effectiveFilterDepth:N,effectiveFilterHeight:I,effectiveFilterWidth:C,dilationDepth:w,dilationHeight:v,dilationWidth:k,inShape:e,outShape:$,filterShape:t}}function el(e,t,n,r=1){const s=rl(t,r);return Math.floor((e[0]*(n-1)-n+s)/2)}function tl(e){return"number"==typeof e?[e,e,e]:2===e.length?[e[0],e[1],1]:e}function nl(e){return"number"==typeof e?[e,e,e]:e}function rl(e,t){return t<=1?e:e+(e-1)*(t-1)}function sl(e,t){if(!t)return Math.trunc(e);switch(t){case"round":return Math.round(e);case"ceil":return Math.ceil(e);case"floor":return Math.floor(e);default:throw new Error(`Unknown roundingMode ${t}`)}}function al(e){const[t,n,r]=tl(e);return 1===t&&1===n&&1===r}function il(e,t){return al(e)||al(t)}function ol(e){if("NHWC"===e)return"channelsLast";if("NCHW"===e)return"channelsFirst";throw new Error(`Unknown dataFormat ${e}`)}function ul(e,t,n){if(null!=n){if("string"==typeof t)throw Error(`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`);if("number"==typeof t)re(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`));else{if("object"!=typeof t)throw Error(`Error in ${e}: Unknown padding parameter: ${t}`);t.forEach((t=>{t.forEach((t=>{re(ce(t),(()=>`Error in ${e}: pad must be an integer when using dimRoundingMode ${n} but got pad ${t}.`))}))}))}}}const ll=Da({reshape_:function(e,t){const n={x:Na(e,"x","reshape","string_or_numeric")},r={shape:t};return da.runKernel(ar,n,r)}}),cl=Da({avgPool_:function(e,t,n,r,s){const a=Na(e,"x","avgPool","float32");re(il(n,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`));let i=a,o=!1;3===a.rank&&(o=!0,i=ll(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===i.rank,(()=>`Error in avgPool: x must be rank 4 but got rank ${i.rank}.`)),ul("avgPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s};let c=da.runKernel(ct,u,l);return c=Ci(c,a.dtype),o?ll(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),hl=Da({avgPool3d_:function(e,t,n,r,s,a="NDHWC"){const i=Na(e,"x","avgPool3d","float32");let o=i,u=!1;4===i.rank&&(u=!0,o=ll(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in avgPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===a,(()=>`Error in avgPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ul("avgPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a};let h=da.runKernel(pt,l,c);return h=Ci(h,o.dtype),u?ll(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),pl=Da({concat_:function(e,t=0){re(e.length>=1,(()=>"Pass at least one tensor to concat"));const n=Ia(e,"tensors","concat","string_or_numeric");if("complex64"===n[0].dtype&&n.forEach((e=>{if("complex64"!==e.dtype)throw new Error(`Cannot concatenate complex64 tensors with a tensor\n          with dtype ${e.dtype}. `)})),1===n.length)return Di(n[0]);const r=n,s={axis:t};return da.runKernel(It,r,s)}}),dl=Da({sigmoid_:function(e){const t={x:Na(e,"x","sigmoid","float32")};return da.runKernel(vr,t)}}),fl=Da({slice_:function(e,t,n){const r=Na(e,"x","slice","string_or_numeric");if(0===r.rank)throw new Error("Slicing scalar is not possible");const s={x:r},a={begin:t,size:n};return da.runKernel(yr,s,a)}}),ml=Da({tanh_:function(e){const t={x:Na(e,"x","tanh","float32")};return da.runKernel(Ur,t)}}),gl=Da({basicLSTMCell_:function(e,t,n,r,s,a){const i=Na(e,"forgetBias","basicLSTMCell"),o=Na(t,"lstmKernel","basicLSTMCell"),u=Na(n,"lstmBias","basicLSTMCell"),l=Na(r,"data","basicLSTMCell"),c=Na(s,"c","basicLSTMCell"),h=Na(a,"h","basicLSTMCell"),p=pl([l,h],1),d=ji(p,o),f=uu(d,u),m=f.shape[0],g=f.shape[1]/4,y=[m,g],b=fl(f,[0,0],y),x=fl(f,[0,g],y),w=fl(f,[0,2*g],y),v=fl(f,[0,3*g],y),k=uu(hu(dl(b),ml(x)),hu(c,dl(uu(i,w))));return[k,hu(ml(k),dl(v))]}}),yl=Da({batchToSpaceND_:function(e,t,n){const r=Na(e,"x","batchToSpaceND"),s=t.reduce(((e,t)=>e*t));re(r.rank>=1+t.length,(()=>`input rank is ${r.rank} but should be > than blockShape.length ${t.length}`)),re(n.length===t.length,(()=>`crops.length is ${n.length} but should be equal to blockShape.length  ${t.length}`)),re(r.shape[0]%s==0,(()=>`input tensor batch is ${r.shape[0]} but is not divisible by the product of the elements of blockShape ${t.join(" * ")} === ${s}`));const a={x:r},i={blockShape:t,crops:n};return da.runKernel(mt,a,i)}}),bl=Da({batchNorm_:function(e,t,n,r,s,a){null==a&&(a=.001);const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),u=Na(n,"variance","batchNorm");let l,c;null!=s&&(l=Na(s,"scale","batchNorm")),null!=r&&(c=Na(r,"offset","batchNorm")),re(o.rank===u.rank,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==c||o.rank===c.rank,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==l||o.rank===l.rank,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));const h=function(e){let t;return t=0===e.rank||1===e.rank?ll(e,[1,1,1,e.size]):2===e.rank?ll(e,[1,1,e.shape[0],e.shape[1]]):3===e.rank?ll(e,[1,e.shape[0],e.shape[1],e.shape[2]]):e,t}(i),p={x:h,scale:l,offset:c,mean:o,variance:u},d={varianceEpsilon:a},f=da.runKernel(sn,p,d);return ll(f,i.shape)}}),xl=Da({batchNorm2d_:function(e,t,n,r,s,a){const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),u=Na(n,"variance","batchNorm");let l,c;return null!=s&&(l=Na(s,"scale","batchNorm")),null!=r&&(c=Na(r,"offset","batchNorm")),re(2===i.rank,(()=>`Error in batchNorm2D: x must be rank 2 but got rank ${i.rank}.`)),re(2===o.rank||1===o.rank,(()=>`Error in batchNorm2D: mean must be rank 2 or rank 1 but got rank ${o.rank}.`)),re(2===u.rank||1===u.rank,(()=>`Error in batchNorm2D: variance must be rank 2 or rank 1 but got rank ${u.rank}.`)),null!=l&&re(2===l.rank||1===l.rank,(()=>`Error in batchNorm2D: scale must be rank 2 or rank 1 but got rank ${l.rank}.`)),null!=c&&re(2===c.rank||1===c.rank,(()=>`Error in batchNorm2D: offset must be rank 2 or rank 1 but got rank ${c.rank}.`)),bl(i,o,u,c,l,a)}}),wl=Da({batchNorm3d_:function(e,t,n,r,s,a){const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),u=Na(n,"variance","batchNorm");let l,c;return null!=s&&(l=Na(s,"scale","batchNorm")),null!=r&&(c=Na(r,"offset","batchNorm")),re(3===i.rank,(()=>`Error in batchNorm3D: x must be rank 3 but got rank ${i.rank}.`)),re(3===o.rank||1===o.rank,(()=>`Error in batchNorm3D: mean must be rank 3 or rank 1 but got rank ${o.rank}.`)),re(3===u.rank||1===u.rank,(()=>`Error in batchNorm3D: variance must be rank 3 or rank 1 but got rank ${u.rank}.`)),null!=l&&re(3===l.rank||1===l.rank,(()=>`Error in batchNorm3D: scale must be rank 3 or rank 1 but got rank ${l.rank}.`)),null!=c&&re(3===c.rank||1===c.rank,(()=>`Error in batchNorm3D: offset must be rank 3 or rank 1 but got rank ${c.rank}.`)),bl(i,o,u,c,l,a)}}),vl=Da({batchNorm4d_:function(e,t,n,r,s,a){const i=Na(e,"x","batchNorm"),o=Na(t,"mean","batchNorm"),u=Na(n,"variance","batchNorm");let l,c;return null!=s&&(l=Na(s,"scale","batchNorm")),null!=r&&(c=Na(r,"offset","batchNorm")),re(4===i.rank,(()=>`Error in batchNorm4D: x must be rank 4 but got rank ${i.rank}.`)),re(4===o.rank||1===o.rank,(()=>`Error in batchNorm4D: mean must be rank 4 or rank 1 but got rank ${o.rank}.`)),re(4===u.rank||1===u.rank,(()=>`Error in batchNorm4D: variance must be rank 4 or rank 1 but got rank ${u.rank}.`)),null!=l&&re(4===l.rank||1===l.rank,(()=>`Error in batchNorm4D: scale must be rank 4 or rank 1 but got rank ${l.rank}.`)),null!=c&&re(4===c.rank||1===c.rank,(()=>`Error in batchNorm4D: offset must be rank 4 or rank 1 but got rank ${c.rank}.`)),bl(i,o,u,c,l,a)}}),kl=Da({bincount_:function(e,t,n){const r=Na(e,"x","bincount"),s=Na(t,"weights","bincount");re("int32"===r.dtype,(()=>`Error in bincount: input dtype must be int32, but got ${r.dtype}`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(s.size===r.size||0===s.size,(()=>`Error in bincount: weights must have the same size as input or0-length, but got input shape: ${r.shape}, weights shape: ${s.shape}.`));const a={x:r,weights:s},i={size:n};return da.runKernel(gt,a,i)}}),Nl=Da({broadcastArgs_:function(e,t){const n=Na(e,"s0","broadcastArgs","int32"),r=Na(t,"s1","broadcastArgs","int32");if(1!==n.rank)throw new Error(`broadcastArgs(): first input must be a vector (rank=1). Has rank ${n.rank}`);if(1!==r.rank)throw new Error(`broadcastArgs(): second input must be a vector (rank=1). Has rank ${r.rank}`);const s={s0:n,s1:r};return da.runKernel(bt,s)}}),Il=Da({broadcastTo_:function(e,t){let n=Na(e,"broadcastTo","x");const r=n.shape;if(t.some((e=>!(e>0)||e%1!=0)))throw new Error(`broadcastTo(): Invalid broadcast shape [${t}].`);if(t.length<n.rank)throw new Error(`broadcastTo(): shape.length=${t.length} < input.rank=${n.rank}.`);if(t.length>n.rank){const e=n.shape.slice();for(;e.length<t.length;)e.unshift(1);n=ll(n,e)}const s=n.shape,a=Array.from(t);for(let e=t.length-1;e>=0;e--)if(s[e]===t[e])a[e]=1;else if(1!==n.shape[e])throw new Error(`broadcastTo(): [${r}] cannot be broadcast to [${t}].`);if(0===a.map(((e,t)=>e>1?t:-1)).filter((e=>e>=0)).length)return Di(n);const i={x:n},o={reps:a};return da.runKernel(Wr,i,o)}}),Cl=Da({ceil_:function(e){const t={x:Na(e,"x","ceil","float32")};return da.runKernel(wt,t)}}),Dl=Da({clipByValue_:function(e,t,n){const r=Na(e,"x","clipByValue");re(t<=n,(()=>`Error in clip: min (${t}) must be less than or equal to max (${n}).`));const s={x:r},a={clipValueMin:t,clipValueMax:n};return da.runKernel(vt,s,a)}}),El=Da({concat1d_:function(e){return pl(e,0)}}),Sl=Da({concat2d_:function(e,t){return pl(e,t)}}),Tl=Da({concat3d_:function(e,t){return pl(e,t)}}),Al=Da({concat4d_:function(e,t){return pl(e,t)}}),$l=Da({conv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Na(e,"x","conv2d","float32"),u=Na(t,"filter","conv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=ll(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===l.rank,(()=>`Error in conv2d: input must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in conv2d: filter must be rank 4, but got rank ${u.rank}.`)),ul("conv2d",r,i);const h="NHWC"===s?l.shape[3]:l.shape[1];re(h===u.shape[2],(()=>`Error in conv2d: depth of input (${h}) must match input depth for filter ${u.shape[2]}.`)),re(il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`));const p={x:l,filter:u},d={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},f=da.runKernel(Ct,p,d);return c?ll(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),Fl=Da({conv1d_:function(e,t,n,r,s="NWC",a=1,i){const o=Na(e,"x","conv1d"),u=Na(t,"filter","conv1d");let l=o,c=!1;2===o.rank&&(c=!0,l=ll(o,[1,o.shape[0],o.shape[1]])),re(3===l.rank,(()=>`Error in conv1d: input must be rank 3, but got rank ${l.rank}.`)),re(3===u.rank,(()=>`Error in conv1d: filter must be rank 3, but got rank ${u.rank}.`)),ul("conv1d",r,i),re(l.shape[2]===u.shape[1],(()=>`Error in conv1d: depth of input (${l.shape[2]}) must match input depth for filter ${u.shape[1]}.`)),re(il(n,a),(()=>`Error in conv1D: Either stride or dilation must be 1. Got stride ${n} and dilation '${a}'`)),re("NWC"===s,(()=>`Error in conv1d: got dataFormat of ${s} but only NWC is currently supported.`));const h=ll(u,[1,u.shape[0],u.shape[1],u.shape[2]]),p=ll(l,[l.shape[0],1,l.shape[1],l.shape[2]]),d=$l(p,h,[1,n],r,"NHWC",[1,a],i);return ll(d,c?[d.shape[2],d.shape[3]]:[d.shape[0],d.shape[2],d.shape[3]])}}),Rl=Da({conv2DBackpropInput_:function(e,t,n,r,s,a="NHWC",i){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let o=e,u=t,l=!1;3===t.rank&&(l=!0,u=ll(t,[1,t.shape[0],t.shape[1],t.shape[2]]),o=[1,e[0],e[1],e[2]]),re(4===o.length,(()=>`Error in conv2dDerInput: inShape must be length 4, but got length ${o.length}.`)),re(4===u.rank,(()=>`Error in conv2dDerInput: dy must be rank 4, but got rank ${u.rank}`)),re(4===n.rank,(()=>`Error in conv2dDerInput: filter must be rank 4, but got rank ${n.rank}`));const c="NHWC"===a?o[3]:o[1],h="NHWC"===a?u.shape[3]:u.shape[1];re(c===n.shape[2],(()=>`Error in conv2dDerInput: depth of input (${c}) must match input depth for filter ${n.shape[2]}.`)),re(h===n.shape[3],(()=>`Error in conv2dDerInput: depth of output (${h}) must match output depth for filter ${n.shape[3]}.`)),ul("conv2dDerInput",s,i);const p={dy:u,filter:n},d={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,inputShape:o},f=da.runKernel(Et,p,d);return l?ll(f,[f.shape[1],f.shape[2],f.shape[3]]):f}}),_l=Da({conv2dTranspose_:function(e,t,n,r,s,a){const i=Na(e,"x","conv2dTranspose"),o=Na(t,"filter","conv2dTranspose");return Rl(n,i,o,r,s,"NHWC",a)}}),Ml=Da({conv3d_:function(e,t,n,r,s="NDHWC",a=[1,1,1]){const i=Na(e,"x","conv3d"),o=Na(t,"filter","conv3d");let u=i,l=!1;4===i.rank&&(l=!0,u=ll(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===u.rank,(()=>`Error in conv3d: input must be rank 5, but got rank ${u.rank}.`)),re(5===o.rank,(()=>`Error in conv3d: filter must be rank 5, but got rank ${o.rank}.`)),re(u.shape[4]===o.shape[3],(()=>`Error in conv3d: depth of input (${u.shape[4]}) must match input depth for filter ${o.shape[3]}.`)),re(il(n,a),(()=>`Error in conv3D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),re("NDHWC"===s,(()=>`Error in conv3d: got dataFormat of ${s} but only NDHWC is currently supported.`));const c={x:u,filter:o},h={strides:n,pad:r,dataFormat:s,dilations:a},p=da.runKernel(St,c,h);return l?ll(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Ol=Da({conv3DBackpropInput_:function(e,t,n,r,s){re(e.length===t.rank,(()=>`Length of inShape (${e.length}) and rank of dy (${t.rank}) must match`));let a=e,i=t,o=!1;4===t.rank&&(o=!0,i=ll(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]]),a=[1,e[0],e[1],e[2],e[3]]);const u=a[4],l=i.shape[4];re(5===a.length,(()=>`Error in conv3dDerInput: inShape must be length 5, but got length ${a.length}.`)),re(5===i.rank,(()=>`Error in conv3dDerInput: dy must be rank 5, but got rank ${i.rank}`)),re(5===n.rank,(()=>`Error in conv3dDerInput: filter must be rank 5, but got rank ${n.rank}`)),re(u===n.shape[3],(()=>`Error in conv3dDerInput: depth of input (${u}) must match input depth for filter ${n.shape[3]}.`)),re(l===n.shape[4],(()=>`Error in conv3dDerInput: depth of output (${l}) must match output depth for filter ${n.shape[4]}.`));const c={dy:i,filter:n},h={pad:s,strides:r,inputShape:a},p=da.runKernel(At,c,h);return o?ll(p,[p.shape[1],p.shape[2],p.shape[3],p.shape[4]]):p}}),Bl=Da({conv3dTranspose_:function(e,t,n,r,s){const a=Na(e,"x","conv3dTranspose"),i=Na(t,"filter","conv3dTranspose");return Ol(n,a,i,r,s)}}),zl=Da({cos_:function(e){const t={x:Na(e,"x","cos","float32")};return da.runKernel($t,t)}}),Ll=Da({cosh_:function(e){const t={x:Na(e,"x","cosh","float32")};return da.runKernel(Ft,t)}}),Pl=Da({cumsum_:function(e,t=0,n=!1,r=!1){const s={x:Na(e,"x","cumsum")},a={axis:t,exclusive:n,reverse:r};return da.runKernel(Rt,s,a)}}),Ul=Da({denseBincount_:function(e,t,n,r=!1){const s=Na(e,"x","denseBincount"),a=Na(t,"weights","denseBincount");re("int32"===s.dtype,(()=>`Error in denseBincount: input dtype must be int32, but got ${s.dtype}`)),re(s.rank<=2,(()=>`Error in denseBincount: input must be at most rank 2, but got rank ${s.rank}.`)),re(n>=0,(()=>`size must be non-negative, but got ${n}.`)),re(a.size===s.size||0===a.size,(()=>`Error in denseBincount: weights must have the same shape as x or 0-length, but got x shape: ${s.shape}, weights shape: ${a.shape}.`));const i={x:s,weights:a},o={size:n,binaryOutput:r};return da.runKernel(Mt,i,o)}}),Wl=Da({depthToSpace_:function(e,t,n="NHWC"){const r=Na(e,"x","depthToSpace","float32"),s="NHWC"===n?r.shape[1]:r.shape[2],a="NHWC"===n?r.shape[2]:r.shape[3],i="NHWC"===n?r.shape[3]:r.shape[1];re(t>1,(()=>`blockSize should be > 1 for depthToSpace, but was: ${t}`)),re(s*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${s} and ${t}  for depthToSpace with input shape\n    ${r.shape}`)),re(a*t>=0,(()=>`Negative dimension size caused by overflow when multiplying\n    ${a} and ${t} for depthToSpace with input shape\n        ${r.shape}`)),re(i%(t*t)==0,(()=>`Dimension size must be evenly divisible by ${t*t} but is ${i} for depthToSpace with input shape ${r.shape}`));const o={x:r},u={blockSize:t,dataFormat:n};return da.runKernel(Ot,o,u)}}),Vl=Da({depthwiseConv2d_:function(e,t,n,r,s="NHWC",a=[1,1],i){const o=Na(e,"x","depthwiseConv2d","float32"),u=Na(t,"filter","depthwiseConv2d","float32");let l=o,c=!1;3===o.rank&&(c=!0,l=ll(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(4===l.rank,(()=>`Error in depthwiseConv2d: input must be rank 4, but got rank ${l.rank}.`)),re(4===u.rank,(()=>`Error in depthwiseConv2d: filter must be rank 4, but got rank ${u.rank}.`)),re(l.shape[3]===u.shape[2],(()=>`Error in depthwiseConv2d: number of input channels (${l.shape[3]}) must match the inChannels dimension in filter ${u.shape[2]}.`)),ul("depthwiseConv2d",r,i);const h={x:l,filter:u},p={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i},d=da.runKernel(Bt,h,p);return c?ll(d,[d.shape[1],d.shape[2],d.shape[3]]):d}}),Gl=Da({diag_:function(e){const t={x:Na(e,"x","diag")};return da.runKernel(Pt,t)}}),jl=Da({dilation2d_:function(e,t,n,r,s=[1,1],a="NHWC"){const i=Na(e,"x","dilation2d"),o=Na(t,"filter","dilation2d");re(3===i.rank||4===i.rank,(()=>`Error in dilation2d: input must be rank 3 or 4, but got rank ${i.rank}.`)),re(3===o.rank,(()=>`Error in dilation2d: filter must be rank 3, but got rank ${o.rank}.`)),re("NHWC"===a,(()=>`Error in dilation2d: Only NHWC is currently supported, but got dataFormat of ${a}`));let u=i,l=!1;3===i.rank&&(u=ll(i,[1,i.shape[0],i.shape[1],i.shape[2]]),l=!0);const c={x:u,filter:o},h={strides:n,pad:r,dilations:s},p=da.runKernel(Ut,c,h);return l?ll(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Hl=Da({equal_:function(e,t){let n=Na(e,"a","equal","string_or_numeric"),r=Na(t,"b","equal","string_or_numeric");[n,r]=sa(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Xt,s)}}),ql=Da({where_:function(e,t,n){const r=Na(t,"a","where"),s=Na(n,"b","where"),a=Na(e,"condition","where","bool"),i=Zi(Zi(a.shape,r.shape),s.shape),o={condition:Il(a,i),t:Il(r,i),e:Il(s,i)};return da.runKernel(mr,o)}}),Kl=Da({divNoNan_:function(e,t){let n=Na(e,"a","div"),r=Na(t,"b","div");[n,r]=sa(n,r);const s=cu(n,r),a=fu(s),i=Hl(r,a);return ql(i,a,s)}}),Xl=Da({dot_:function(e,t){const n=Na(e,"t1","dot"),r=Na(t,"t2","dot");re(!(1!==n.rank&&2!==n.rank||1!==r.rank&&2!==r.rank),(()=>`Error in dot: inputs must all be rank 1 or 2, but got ranks ${n.rank} and ${r.rank}.`));const s=1===n.rank?n.size:n.shape[1],a=1===r.rank?r.size:r.shape[0];if(re(s===a,(()=>`Error in dot: inner dimensions of inputs must match, but got ${s} and ${a}.`)),1===n.rank&&1===r.rank){const e=ll(n,[1,-1]),t=ll(r,[-1,1]),s=ji(e,t);return ll(s,[])}if(1===n.rank&&2===r.rank){const e=ll(n,[1,-1]),t=ll(r,[r.shape[0],r.shape[1]]),s=ji(e,t);return ll(s,[s.size])}if(2===n.rank&&1===r.rank){const e=ll(r,[-1,1]),t=ji(n,e);return ll(t,[t.size])}{const e=ll(r,[r.shape[0],r.shape[1]]);return ji(n,e)}}}),Yl=Da({einsum_:function(e,...t){const n=t.map(((e,t)=>Na(e,`tensors${t}`,"einsum"))),r={equation:e};return da.runKernel(jt,n,r)}}),Zl=Da({elu_:function(e){const t={x:Na(e,"x","elu","float32")};return da.runKernel(Ht,t)}}),Jl=Da({erf_:function(e){let t=Na(e,"x","erf");re("int32"===t.dtype||"float32"===t.dtype,(()=>"Input dtype must be `int32` or `float32`.")),"int32"===t.dtype&&(t=Ci(t,"float32"));const n={x:t};return da.runKernel(Kt,n)}}),Ql=Da({exp_:function(e){const t={x:Na(e,"x","exp")};return da.runKernel(Yt,t)}}),ec=Da({expandDims_:function(e,t=0){const n=Na(e,"x","expandDims","string_or_numeric");re(t<=n.rank,(()=>"Axis must be <= rank of the tensor"));const r={input:n},s={dim:t};return da.runKernel(Zt,r,s)}}),tc=Da({expm1_:function(e){const t={x:Na(e,"x","expm1")};return da.runKernel(Jt,t)}}),nc=Da({tile_:function(e,t){const n=Na(e,"x","tile","string_or_numeric");re(n.rank===t.length,(()=>`Error in transpose: rank of input ${n.rank} must match length of reps ${t}.`));const r={x:n},s={reps:t};return da.runKernel(Wr,r,s)}}),rc=Da({eye_:function(e,t,n,r="float32"){null==t&&(t=e);const s=Ii([e,t],r),a=e<=t?e:t;for(let e=0;e<a;++e)s.set(1,e,e);const i=ll(s.toTensor(),[e,t]);if(null==n)return i;if(1===n.length)return nc(ec(i,0),[n[0],1,1]);if(2===n.length)return nc(ec(ec(i,0),0),[n[0],n[1],1,1]);if(3===n.length)return nc(ec(ec(ec(i,0),0),0),[n[0],n[1],n[2],1,1]);throw new Error(`eye() currently supports only 1D and 2D batchShapes, but received ${n.length}D.`)}}),sc=Da({floor_:function(e){const t={x:Na(e,"x","floor","float32")};return da.runKernel(nn,t)}}),ac=Da({gather_:function(e,t,n=0,r=0){const s={x:Na(e,"x","gather"),indices:Na(t,"indices","gather","int32")},a={axis:n,batchDims:r};return da.runKernel(an,s,a)}}),ic=Da({greater_:function(e,t){let n=Na(e,"a","greater","string_or_numeric"),r=Na(t,"b","greater","string_or_numeric");[n,r]=sa(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(un,s)}}),oc=Da({greaterEqual_:function(e,t){let n=Na(e,"a","greaterEqual","string_or_numeric"),r=Na(t,"b","greaterEqual","string_or_numeric");[n,r]=sa(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(ln,s)}}),uc=Da({imag_:function(e){const t={input:Na(e,"input","imag")};return da.runKernel(pn,t)}}),lc=Da({isFinite_:function(e){const t={x:Na(e,"x","isFinite")};return da.runKernel(dn,t)}}),cc=Da({isInf_:function(e){const t={x:Na(e,"x","isInf")};return da.runKernel(fn,t)}}),hc=Da({isNaN_:function(e){const t={x:Na(e,"x","isNaN")};return da.runKernel(mn,t)}}),pc=Da({leakyRelu_:function(e,t=.2){const n={x:Na(e,"x","leakyRelu")},r={alpha:t};return da.runKernel(gn,n,r)}}),dc=Da({less_:function(e,t){let n=Na(e,"a","less","string_or_numeric"),r=Na(t,"b","less","string_or_numeric");[n,r]=sa(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(yn,s)}}),fc=Da({lessEqual_:function(e,t){let n=Na(e,"a","lessEqual","string_or_numeric"),r=Na(t,"b","lessEqual","string_or_numeric");[n,r]=sa(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(bn,s)}});function mc(e,t,n){if(n<=0)throw new Error("The number of values should be positive.");const r={start:e,stop:t,num:n};return da.runKernel(xn,{},r)}const gc=Da({localResponseNormalization_:function(e,t=5,n=1,r=1,s=.5){const a=Na(e,"x","localResponseNormalization");re(4===a.rank||3===a.rank,(()=>`Error in localResponseNormalization: x must be rank 3 or 4 but got\n               rank ${a.rank}.`)),re(ce(t),(()=>`Error in localResponseNormalization: depthRadius must be an integer but got depthRadius ${t}.`));let i=a,o=!1;3===a.rank&&(o=!0,i=ll(a,[1,a.shape[0],a.shape[1],a.shape[2]]));const u={x:i},l={depthRadius:t,bias:n,alpha:r,beta:s},c=da.runKernel(Dn,u,l);return o?ll(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),yc=Da({log_:function(e){const t={x:Na(e,"x","log","float32")};return da.runKernel(wn,t)}}),bc=Da({log1p_:function(e){const t={x:Na(e,"x","log1p")};return da.runKernel(vn,t)}}),xc=Da({neg_:function(e){const t={x:Na(e,"x","neg")};return da.runKernel(Wn,t)}}),wc=Da({softplus_:function(e){const t={x:Na(e,"x","softplus")};return da.runKernel(kr,t)}}),vc=Da({logSigmoid_:function(e){const t=Na(e,"x","logSigmoid"),n=wu((e=>({value:xc(wc(xc(e))),gradFunc:t=>hu(t,dl(xc(e)))})));return n(t)}}),kc=Da({max_:function(e,t=null,n=!1){const r={x:Na(e,"x","max")},s={reductionIndices:t,keepDims:n};return da.runKernel(Sn,r,s)}}),Nc=Da({sum_:function(e,t=null,n=!1){let r=Na(e,"x","sum");"bool"===r.dtype&&(r=Ci(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return da.runKernel(Ir,s,a)}}),Ic=Da({logSoftmax_:function(e,t=-1){const n=Na(e,"logits","logSoftmax");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Log Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and axis was ${t}`);const r=wu(((e,n)=>{const r=kc(e,t,!0),s=Su(e,r),a=Su(Ci(s,"float32"),yc(Nc(Ql(s),t,!0)));return n([a]),{value:a,gradFunc:(e,n)=>{const[r]=n,s=Ql(r);return Su(e,hu(Nc(e,t,!0),s))}}}));return r(n)}});function Cc(e,t){for(let n=0;n<e.length;++n)if(e[e.length-n-1]!==t-1-n)return!1;return!0}function Dc(e,t,n){const r=e.length+t.length,s=[];let a=0,i=0;for(let o=0;o<r;o++)-1===n.indexOf(o)?s.push(e[a++]):s.push(t[i++]);return s}function Ec(e,t){const n=[],r=e.length;for(let s=0;s<r;s++)-1===t.indexOf(s)&&n.push(e[s]);return[n,t.map((t=>e[t]))]}function Sc(e,t){return Dc(e,t.map((e=>1)),t)}function Tc(e,t,n){re(Cc(t,n),(()=>`${e} supports only inner-most axes for now. Got axes ${t} and rank-${n} input.`))}function Ac(e,t){if(Cc(e,t))return null;const n=[];for(let r=0;r<t;++r)-1===e.indexOf(r)&&n.push(r);return e.forEach((e=>n.push(e))),n}function $c(e){return e.map(((e,t)=>[t,e])).sort(((e,t)=>e[1]-t[1])).map((e=>e[0]))}function Fc(e,t){const n=[];for(let r=t-e;r<t;++r)n.push(r);return n}const Rc=Da({logSumExp_:function(e,t=null,n=!1){const r=Na(e,"x","logSumExp"),s=ye(t,r.shape),a=kc(r,s,!0),i=Su(r,a),o=Ql(i),u=Nc(o,s),l=yc(u),c=uu(ll(a,l.shape),l);if(n){const e=Sc(c.shape,s);return ll(c,e)}return c}}),_c=Da({logicalAnd_:function(e,t){const n=Na(e,"a","logicalAnd","bool"),r=Na(t,"b","logicalAnd","bool");Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(kn,s)}}),Mc=Da({logicalNot_:function(e){const t={x:Na(e,"x","logicalNot","bool")};return da.runKernel(Nn,t)}}),Oc=Da({logicalOr_:function(e,t){const n=Na(e,"a","logicalOr","bool"),r=Na(t,"b","logicalOr","bool");Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(In,s)}}),Bc=Da({logicalXor_:function(e,t){const n=Na(e,"a","logicalXor","bool"),r=Na(t,"b","logicalXor","bool");return Zi(n.shape,r.shape),_c(Oc(e,t),Mc(_c(e,t)))}}),zc=Da({maxPool_:function(e,t,n,r,s){const a=Na(e,"x","maxPool");let i=a,o=!1;3===a.rank&&(o=!0,i=ll(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===i.rank,(()=>`Error in maxPool: input must be rank 4 but got rank ${i.rank}.`)),re(il(n,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${n} and dilations '1'`)),ul("maxPool",r,s);const u={x:i},l={filterSize:t,strides:n,pad:r,dimRoundingMode:s},c=da.runKernel(An,u,l);return o?ll(c,[c.shape[1],c.shape[2],c.shape[3]]):c}}),Lc=Da({maxPool3d_:function(e,t=[1,1,1],n,r,s,a="NDHWC"){const i=Na(e,"x","maxPool3d");let o=i,u=!1;4===i.rank&&(u=!0,o=ll(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]])),re(5===o.rank,(()=>`Error in maxPool3d: x must be rank 5 but got rank ${o.rank}.`)),re("NDHWC"===a,(()=>`Error in maxPool3d: Only NDHWC is currently supported, but got dataFormat of ${a}`)),ul("maxPool3d",r,s);const l={x:o},c={filterSize:t,strides:n,pad:r,dimRoundingMode:s,dataFormat:a},h=da.runKernel(Fn,l,c);return u?ll(h,[h.shape[1],h.shape[2],h.shape[3],h.shape[4]]):h}}),Pc=Da({maxPoolWithArgmax_:function(e,t,n,r,s=!1){const a={x:Na(e,"x","maxPoolWithArgmax")},i={filterSize:t,strides:n,pad:r,includeBatchInIndex:s},o=da.runKernel(_n,a,i);return{result:o[0],indexes:o[1]}}}),Uc=Da({mean_:function(e,t=null,n=!1){const r={x:Na(e,"x","mean")},s={axis:t,keepDims:n};return da.runKernel(Mn,r,s)}});function Wc(e,t="float32"){if("complex64"===t){const t=Wc(e,"float32"),n=Wc(e,"float32");return Ea(t,n)}const n=Be(oe(e),t);return da.makeTensor(n,e,t)}function Vc(e,t="float32"){if("complex64"===t){const t=Vc(e,"float32"),n=Wc(e,"float32");return Ea(t,n)}const n=Oe(oe(e),t);return da.makeTensor(n,e,t)}function Gc(e,t,{indexing:n="xy"}={}){if("xy"!==n&&"ij"!==n)throw new TypeError(`${n} is not a valid third argument to meshgrid`);if(void 0===e)return[];let r=Na(e,"x","meshgrid",e instanceof qs?e.dtype:"float32");if(void 0===t)return[r];let s=Na(t,"y","meshgrid",t instanceof qs?t.dtype:"float32");const a=oe(r.shape),i=oe(s.shape);return"xy"===n?(r=ll(r,[1,-1]),s=ll(s,[-1,1]),[ji(Vc([i,1],r.dtype),r),ji(s,Vc([1,a],s.dtype))]):(r=ll(r,[-1,1]),s=ll(s,[1,-1]),[ji(r,Vc([1,i],r.dtype)),ji(Vc([a,1],s.dtype),s)])}const jc=Da({min_:function(e,t=null,n=!1){const r={x:Na(e,"x","min")},s={axis:t,keepDims:n};return da.runKernel(On,r,s)}}),Hc=Da({minimum_:function(e,t){let n=Na(e,"a","minimum"),r=Na(t,"b","minimum");[n,r]=sa(n,r),"bool"===n.dtype&&(n=Ci(n,"int32"),r=Ci(r,"int32")),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Bn,s)}}),qc=Da({mirrorPad_:function(e,t,n){re("reflect"===n||"symmetric"===n,(()=>`Invalid mode. Mode must be either reflect or symmetric. Got ${n}.`));const r=Na(e,"x","mirrorPad");if(0===r.rank)throw new Error("mirrorPad(scalar) is not defined. Pass non-scalar to mirrorPad");re(t.length===r.rank,(()=>`Padding doesn't match input. Must be ${r.rank}. Got ${t.length}.`));const s="reflect"===n?1:0;for(let e=0;e<r.rank;e++)re(2===t[e].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),re(t[e][0]>=0&&t[e][0]<=r.shape[e]-s&&t[e][1]>=0&&t[e][1]<=r.shape[e]-s,(()=>`Padding in dimension ${e} cannot be greater than or equal to ${r.shape[e]-s} or less than 0 for input of shape ${r.shape}`));const a={paddings:t,mode:n},i={x:r};return da.runKernel(zn,i,a)}}),Kc=Da({mod_:function(e,t){let n=Na(e,"a","mod"),r=Na(t,"b","mod");[n,r]=sa(n,r);const s={a:n,b:r};return da.runKernel(Ln,s)}}),Xc=Da({moments_:function(e,t=null,n=!1){const r=ye(t,(e=Na(e,"x","moments")).shape),s=Uc(e,r,n);let a=s.shape;n||(a=Sc(s.shape,r));const i=du(Su(Ci(e,"float32"),ll(s,a)));return{mean:s,variance:Uc(i,r,n)}}}),Yc=Da({multiRNNCell_:function(e,t,n,r){const s=Na(t,"data","multiRNNCell"),a=Ia(n,"c","multiRNNCell"),i=Ia(r,"h","multiRNNCell");let o=s;const u=[];for(let t=0;t<e.length;t++){const n=e[t](o,a[t],i[t]);u.push(n[0]),u.push(n[1]),o=n[1]}const l=[],c=[];for(let e=0;e<u.length;e+=2)l.push(u[e]),c.push(u[e+1]);return[l,c]}}),Zc=Da({multinomial_:function(e,t,n,r=!1){const s=Na(e,"logits","multinomial"),a=s.size,i=s.rank;if(a<2)throw new Error(`Error in multinomial: you need at least 2 outcomes, but got ${a}.`);if(i>2)throw new Error(`Rank of probabilities must be 1 or 2, but is ${i}`);n=n||Math.random();const o={logits:1===i?ll(s,[1,-1]):s},u={numSamples:t,seed:n,normalized:r},l=da.runKernel(Pn,o,u);return 1===i?ll(l,[l.size]):l}}),Jc=Da({notEqual_:function(e,t){let n=Na(e,"a","notEqual","string_or_numeric"),r=Na(t,"b","notEqual","string_or_numeric");[n,r]=sa(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Vn,s)}}),Qc=Da({onesLike_:function(e){const t={x:Na(e,"x","onesLike")};return da.runKernel(qn,t)}}),eh=Da({outerProduct_:function(e,t){const n=Na(e,"v1","outerProduct"),r=Na(t,"v2","outerProduct");re(1===n.rank&&1===r.rank,(()=>`Error in outerProduct: inputs must be rank 1, but got ranks ${n.rank} and ${r.rank}.`));const s=ll(n,[-1,1]),a=ll(r,[1,-1]);return ji(s,a)}}),th=Da({pad_:function(e,t,n=0){const r=Na(e,"x","pad");if(0===r.rank)throw new Error("pad(scalar) is not defined. Pass non-scalar to pad");const s={paddings:t,constantValue:n},a={x:r};return da.runKernel(Yn,a,s)}}),nh=Da({pad1d_:function(e,t,n=0){return re(2===t.length,(()=>"Invalid number of paddings. Must be length of 2.")),th(e,[t],n)}}),rh=Da({pad2d_:function(e,t,n=0){return re(2===t.length&&2===t[0].length&&2===t[1].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),th(e,t,n)}}),sh=Da({pad3d_:function(e,t,n=0){return re(3===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),th(e,t,n)}}),ah=Da({pad4d_:function(e,t,n=0){return re(4===t.length&&2===t[0].length&&2===t[1].length&&2===t[2].length&&2===t[3].length,(()=>"Invalid number of paddings. Must be length of 2 each.")),th(e,t,n)}}),ih=Da({spaceToBatchND_:function(e,t,n){const r=Na(e,"x","spaceToBatchND");re(r.rank>=1+t.length,(()=>`input rank ${r.rank} should be > than [blockShape] ${t.length}`)),re(n.length===t.length,(()=>`paddings.shape[0] ${n.length} must be equal to [blockShape] ${t.length}`)),re(r.shape.reduce(((e,r,s)=>s>0&&s<=t.length?e&&(r+n[s-1][0]+n[s-1][1])%t[s-1]==0:e),!0),(()=>`input spatial dimensions ${r.shape.slice(1)} with paddings ${n.toString()} must be divisible by blockShapes ${t.toString()}`));const s={x:r},a={blockShape:t,paddings:n};return da.runKernel(Cr,s,a)}}),oh=Da({pool_:function(e,t,n,r,s,a,i){null==s&&(s=[1,1]),null==a&&(a=1),0===r&&(r="valid");const o=Na(e,"x","maxPool");let u=o,l=!1;3===o.rank&&(l=!0,u=ll(o,[1,o.shape[0],o.shape[1],o.shape[2]])),re(il(a,s),(()=>`Error in pool: Either strides or dilations must be 1. Got strides ${a} and dilations '${s}'`));const c=Yu(u.shape,t,a,s,r),h=[c.dilationHeight,c.dilationWidth];let p;p="same"===r?function(e,t){const n=e.map(((e,n)=>e+(e-1)*(t[n]-1))).map((e=>e-1)),r=n.map((e=>Math.floor(e/2))),s=n.map(((e,t)=>e-r[t]));return n.map(((e,t)=>[r[t],s[t]]))}([c.filterHeight,c.filterWidth],h):[[0,0],[0,0]];const d=1===h[0]&&1===h[1],[f,m]=function(e,t,n){const r=n.map((e=>e[0])),s=n.map((e=>e[1])),a=e.concat(r,s),i=t.map(((e,t)=>(e-a[t]%e)%e)),o=s.map(((e,t)=>e+i[t]));return[t.map(((e,t)=>[r[t],o[t]])),t.map(((e,t)=>[0,i[t]]))]}([c.inHeight,c.inWidth],h,p),g=d?r:"valid",y=d?u:ih(u,h,f),b=("avg"===n?()=>cl(y,t,a,g,i):()=>zc(y,t,a,g,i))(),x=d?b:yl(b,h,m);return l?ll(x,[x.shape[1],x.shape[2],x.shape[3]]):x}}),uh=Da({prelu_:function(e,t){const n={x:Na(e,"x","prelu"),alpha:Na(t,"alpha","prelu")};return da.runKernel(Qn,n)}}),lh=Da({prod_:function(e,t=null,n=!1){let r=Na(e,"x","prod");"bool"===r.dtype&&(r=Ci(r,"int32"));const s={x:r},a={axis:t,keepDims:n};return da.runKernel(er,s,a)}}),ch=Da({rand_:function(e,t,n){const r=oe(e);let s=null;if(null==n||"float32"===n)s=new Float32Array(r);else if("int32"===n)s=new Int32Array(r);else{if("bool"!==n)throw new Error(`Unknown data type ${n}`);s=new Uint8Array(r)}for(let e=0;e<r;e++)s[e]=t();return da.makeTensor(s,e,n)}});var hh=n(377);class ph{constructor(e,t,n,r,s){this.mean=e,this.stdDev=t,this.dtype=n,this.nextVal=NaN,this.truncated=r,this.truncated&&(this.upper=this.mean+2*this.stdDev,this.lower=this.mean-2*this.stdDev);const a=s||Math.random();this.random=hh.alea(a.toString())}nextValue(){if(!isNaN(this.nextVal)){const e=this.nextVal;return this.nextVal=NaN,e}let e,t,n=!1;for(;!n;){let r,s,a;do{r=2*this.random()-1,s=2*this.random()-1,a=r*r+s*s}while(a>=1||0===a);const i=Math.sqrt(-2*Math.log(a)/a);e=this.mean+this.stdDev*r*i,t=this.mean+this.stdDev*s*i,this.truncated&&!this.isValidTruncated(e)||(n=!0)}return this.truncated&&!this.isValidTruncated(t)||(this.nextVal=this.convertValue(t)),this.convertValue(e)}convertValue(e){return null==this.dtype||"float32"===this.dtype?e:Math.round(e)}isValidTruncated(e){return e<=this.upper&&e>=this.lower}}class dh{constructor(e,t,n,r){this.alpha=e,this.beta=1/t,this.dtype=n;const s=r||Math.random();this.randu=hh.alea(s.toString()),this.randn=new ph(0,1,n,!1,this.randu()),this.d=e<1?e+2/3:e-1/3,this.c=1/Math.sqrt(9*this.d)}nextValue(){let e,t,n,r,s,a;for(;;){do{r=this.randn.nextValue(),a=1+this.c*r}while(a<=0);if(a*=a*a,e=r*r,t=1-.331*e*e,n=.5*e+this.d*(1-a+Math.log(a)),s=this.randu(),s<t||Math.log(s)<n)break}return a=1/this.beta*this.d*a,this.alpha<1&&(a*=Math.pow(this.randu(),1/this.alpha)),this.convertValue(a)}convertValue(e){return"float32"===this.dtype?e:Math.round(e)}}class fh{constructor(e=0,t=1,n,r){if(this.canReturnFloat=()=>null==this.dtype||"float32"===this.dtype,this.min=e,this.range=t-e,this.dtype=n,null==r&&(r=Math.random()),"number"==typeof r&&(r=r.toString()),!this.canReturnFloat()&&this.range<=1)throw new Error(`The difference between ${e} - ${t} <= 1 and dtype is not float`);this.random=hh.alea(r)}convertValue(e){return this.canReturnFloat()?e:Math.round(e)}nextValue(){return this.convertValue(this.min+this.range*this.random())}}const mh=Da({randomGamma_:function(e,t,n=1,r="float32",s){if(null==n&&(n=1),null==r&&(r="float32"),"float32"!==r&&"int32"!==r)throw new Error(`Unsupported data type ${r}`);const a=new dh(t,n,r,s),i=Ii(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),gh=Da({randomNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error(`Unsupported data type ${r}`);const a=new ph(t,n,r,!1,s),i=Ii(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),yh=Da({randomUniform_:function(e,t=0,n=1,r="float32",s){const a=Ii(e,r),i=new fh(t,n,null,s);for(let e=0;e<a.values.length;e++)a.values[e]=i.nextValue();return a.toTensor()}});function bh(e,t,n=1,r="float32"){if(0===n)throw new Error("Cannot have a step of zero");const s={start:e,stop:t,step:n,dtype:r};return da.runKernel(tr,{},s)}const xh=Da({real_:function(e){const t={input:Na(e,"input","real")};return da.runKernel(nr,t)}}),wh=Da({reciprocal_:function(e){const t={x:Na(e,"x","reciprocal")};return da.runKernel(rr,t)}}),vh=Da({relu_:function(e){const t={x:Na(e,"x","relu")};return da.runKernel(sr,t)}}),kh=Da({relu6_:function(e){const t={x:Na(e,"x","relu6")};return da.runKernel(cr,t)}}),Nh=Da({reverse_:function(e,t){const n={x:Na(e,"x","reverse")},r={dims:t};return da.runKernel(hr,n,r)}}),Ih=Da({reverse1d_:function(e){const t=Na(e,"x","reverse");return re(1===t.rank,(()=>`Error in reverse1D: x must be rank 1 but got rank ${t.rank}.`)),Nh(t,0)}}),Ch=Da({reverse2d_:function(e,t){const n=Na(e,"x","reverse");return re(2===n.rank,(()=>`Error in reverse2D: x must be rank 2 but got rank ${n.rank}.`)),Nh(n,t)}}),Dh=Da({reverse3d_:function(e,t){const n=Na(e,"x","reverse");return re(3===n.rank,(()=>`Error in reverse3D: x must be rank 3 but got rank ${n.rank}.`)),Nh(n,t)}}),Eh=Da({reverse4d_:function(e,t){const n=Na(e,"x","reverse");return re(4===n.rank,(()=>`Error in reverse4D: x must be rank 4 but got rank ${n.rank}.`)),Nh(n,t)}}),Sh=Da({round_:function(e){const t={x:Na(e,"x","round")};return da.runKernel(pr,t)}}),Th=Da({rsqrt_:function(e){const t={x:Na(e,"x","rsqrt","float32")};return da.runKernel(dr,t)}}),Ah=Da({selu_:function(e){const t={x:Na(e,"x","selu")};return da.runKernel(gr,t)}}),$h=Da({separableConv2d_:function(e,t,n,r,s,a=[1,1],i="NHWC"){const o=Na(e,"x","separableConv2d"),u=Na(t,"depthwiseFilter","separableConv2d"),l=Na(n,"pointwiseFilter","separableConv2d");let c=o,h=!1;if(3===o.rank&&(h=!0,c=ll(o,[1,o.shape[0],o.shape[1],o.shape[2]])),"NCHW"===i)throw new Error("separableConv2d currently does not support dataFormat NCHW; only NHWC is supported");re(4===c.rank,(()=>`Error in separableConv2d: input must be rank 4, but got rank ${c.rank}.`)),re(4===u.rank,(()=>`Error in separableConv2d: depthwise filter must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in separableConv2d: pointwise filter must be rank 4, but got rank ${u.rank}.`)),re(1===l.shape[0],(()=>`Error in separableConv2d: the first dimension of pointwise filter  must be 1, but got ${l.shape[0]}.`)),re(1===l.shape[1],(()=>`Error in separableConv2d: the second dimension of pointwise filter must be 1, but got ${l.shape[1]}.`));const p=u.shape[2],d=u.shape[3];re(l.shape[2]===p*d,(()=>`Error in separableConv2d: the third dimension of pointwise filter must be ${p*d}, but got ${l.shape[2]}.`));const f=Vl(c,u,r,s,i,a),m=$l(f,l,1,"valid",i);return h?ll(m,[m.shape[1],m.shape[2],m.shape[3]]):m}}),Fh=async function(e,t){const n=Na(e,"x","setdiff1d"),r=Na(t,"y","setdiff1d");re(n.dtype===r.dtype,(()=>`x and y should have the same dtype, but got x (${n.dtype}) and y (${r.dtype}).`)),re(1===n.rank,(()=>`x should be 1D tensor, but got x (${n.shape}).`)),re(1===r.rank,(()=>`y should be 1D tensor, but got y (${r.shape}).`));const s=await n.data(),a=await r.data(),i=new Set(a);let o=0;for(let e=0;e<s.length;e++)i.has(s[e])||o++;const u=new Vs([o],n.dtype),l=new Vs([o],"int32");for(let e=0,t=0;e<s.length;e++)i.has(s[e])||(u.values[t]=s[e],l.values[t]=e,t++);return[u.toTensor(),l.toTensor()]},Rh=Da({sign_:function(e){const t={x:Na(e,"x","sign")};return da.runKernel(wr,t)}}),_h=Da({sin_:function(e){const t={x:Na(e,"x","sin","float32")};return da.runKernel(br,t)}}),Mh=Da({sinh_:function(e){const t={x:Na(e,"x","sinh")};return da.runKernel(xr,t)}}),Oh=Da({slice1d_:function(e,t,n){const r=Na(e,"x","slice1d");return re(1===r.rank,(()=>`slice1d expects a rank-1 tensor, but got a rank-${r.rank} tensor`)),fl(r,[t],[n])}}),Bh=Da({slice2d_:function(e,t,n){const r=Na(e,"x","slice2d");return re(2===r.rank,(()=>`slice2d expects a rank-2 tensor, but got a rank-${r.rank} tensor`)),fl(r,t,n)}}),zh=Da({slice3d_:function(e,t,n){const r=Na(e,"x","slice3d");return re(3===r.rank,(()=>`slice3d expects a rank-3 tensor, but got a rank-${r.rank} tensor`)),fl(r,t,n)}}),Lh=Da({slice4d_:function(e,t,n){const r=Na(e,"x","slice4d");return re(4===r.rank,(()=>`slice4d expects a rank-4 tensor, but got a rank-${r.rank} tensor`)),fl(r,t,n)}}),Ph=Da({softmax_:function(e,t=-1){const n=Na(e,"logits","softmax","float32");if(-1===t&&(t=n.rank-1),t!==n.rank-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${n.rank} and dim was ${t}`);const r={logits:n},s={dim:t};return da.runKernel(Er,r,s)}}),Uh=Da({fft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.fft() must be complex64 but got ${e.dtype}.`));const t={input:e};return da.runKernel(Qt,t)}}),Wh=Da({ifft_:function(e){re("complex64"===e.dtype,(()=>`The dtype for tf.spectral.ifft() must be complex64 but got ${e.dtype}.`));const t={input:e};return da.runKernel(hn,t)}}),Vh=Da({irfft_:function(e){const t=e.shape[e.shape.length-1],n=e.size/t;let r;if(t<=2){const s=ll(e,[n,t]);r=Wh(s)}else{const s=[n,2*(t-1)],a=ll(xh(e),[n,t]),i=ll(uc(e),[n,t]),o=Nh(fl(a,[0,1],[n,t-2]),1),u=hu(Nh(fl(i,[0,1],[n,t-2]),1),ku(-1)),l=pl([a,o],1),c=pl([i,u],1),h=ll(Ea(l,c),[s[0],s[1]]);r=Wh(h)}if(r=xh(r),3===e.rank&&0!==e.shape[0]){const t=r,n=e.shape[0];r=ll(r,[n,r.shape[0]/n,r.shape[1]]),t.dispose()}return r}}),Gh=Da({split_:function(e,t,n=0){const r={x:Na(e,"x","split")},s={numOrSizeSplits:t,axis:n};return da.runKernel(Dr,r,s)}}),jh=Da({rfft_:function(e,t){re("float32"===e.dtype,(()=>`The dtype for rfft() must be real value but got ${e.dtype}`));let n=e.shape[e.shape.length-1];const r=e.size/n;let s;if(null!=t&&t<n){const r=e.shape.map((e=>0)),a=e.shape.map((e=>e));a[e.shape.length-1]=t,s=fl(e,r,a),n=t}else if(null!=t&&t>n){const r=e.shape.map((e=>e));r[e.shape.length-1]=t-n,s=pl([e,Wc(r)],e.shape.length-1),n=t}else s=e;const a=fu(s),i=ll(Ea(s,a),[r,n]),o=Uh(i),u=Math.floor(n/2)+1,l=xh(o),c=uc(o),h=Gh(l,[u,n-u],l.shape.length-1),p=Gh(c,[u,n-u],c.shape.length-1),d=s.shape.slice();return d[s.shape.length-1]=u,ll(Ea(h[0],p[0]),d)}}),Hh=Da({squaredDifference_:function(e,t){let n=Na(e,"a","squaredDifference"),r=Na(t,"b","squaredDifference");[n,r]=sa(n,r),Zi(n.shape,r.shape);const s={a:n,b:r};return da.runKernel(Rr,s,{})}}),qh=Da({squeeze_:function(e,t){const n=Na(e,"x","squeeze");return ll(n,be(n.shape,t).newShape)}}),Kh=Da({stack_:function(e,t=0){const n=Ia(e,"tensors","stack","string_or_numeric");re(n.length>=1,(()=>"Pass at least one tensor to tf.stack")),n.length>0&&re(t<=n[0].rank,(()=>"Axis must be <= rank of the tensor"));const r=n,s={axis:t};return da.runKernel(Xn,r,s)}}),Xh=Da({step_:function(e,t=0){const n={x:Na(e,"x","step")},r={alpha:t};return da.runKernel(Yr,n,r)}}),Yh=Da({stridedSlice_:function(e,t,n,r,s=0,a=0,i=0,o=0,u=0){const l={x:Na(e,"x","stridedSlice","string_or_numeric")},c={begin:t,end:n,strides:r,beginMask:s,endMask:a,ellipsisMask:i,newAxisMask:o,shrinkAxisMask:u};return da.runKernel(Mr,l,c)}}),Zh=Da({tan_:function(e){const t={x:Na(e,"x","tan","float32")};return da.runKernel(Pr,t)}});function Jh(e,t){ae(e);const n=wa(e,t);if(1!==n.length)throw new Error("tensor1d() requires values to be a flat/TypedArray");return Sa(e,null,n,t)}function Qh(e,t,n){if(ae(e),null!=t&&2!==t.length)throw new Error("tensor2d() requires shape to have two numbers");const r=wa(e,n);if(2!==r.length&&1!==r.length)throw new Error("tensor2d() requires values to be number[][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor2d() requires shape to be provided when `values` are a flat/TypedArray");return Sa(e,t,r,n)}function ep(e,t,n){if(ae(e),null!=t&&4!==t.length)throw new Error("tensor4d() requires shape to have four numbers");const r=wa(e,n);if(4!==r.length&&1!==r.length)throw new Error("tensor4d() requires values to be number[][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor4d() requires shape to be provided when `values` are a flat array");return Sa(e,t,r,n)}function tp(e,t,n){if(ae(e),null!=t&&5!==t.length)throw new Error("tensor5d() requires shape to have five numbers");const r=wa(e,n);if(5!==r.length&&1!==r.length)throw new Error("tensor5d() requires values to be number[][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor5d() requires shape to be provided when `values` are a flat array");return Sa(e,t,r,n)}function np(e,t,n){if(ae(e),null!=t&&6!==t.length)throw new Error("tensor6d() requires shape to have six numbers");const r=wa(e,n);if(6!==r.length&&1!==r.length)throw new Error("tensor6d() requires values to be number[][][][][][] or flat/TypedArray");if(1===r.length&&null==t)throw new Error("tensor6d() requires shape to be provided when `values` are a flat array");return Sa(e,t=t||r,r,n)}const rp=Da({topk_:function(e,t=1,n=!0){const r=Na(e,"x","topk");if(0===r.rank)throw new Error("topk() expects the input to be of rank 1 or higher");const s=r.shape[r.shape.length-1];if(t<0)throw new Error(`'k' passed to topk() must be >= 0 but got ${t}`);if(t>s)throw new Error(`'k' passed to topk() must be <= the last dimension (${s}) but got ${t}`);const a={x:r},i={k:t,sorted:n},[o,u]=da.runKernel(Vr,a,i);return{values:o,indices:u}}}),sp=Da({truncatedNormal_:function(e,t=0,n=1,r,s){if(null!=r&&"bool"===r)throw new Error("Unsupported data type $ { dtype }");const a=new ph(t,n,r,!0,s),i=Ii(e,r);for(let e=0;e<i.values.length;e++)i.values[e]=a.nextValue();return i.toTensor()}}),ap=Da({unique_:function(e,t=0){const n=Na(e,"x","unique","string_or_numeric");re(n.rank>0,(()=>"The input tensor must be at least 1D"));const r={x:n},s={axis:t},[a,i]=da.runKernel(Hr,r,s);return{values:a,indices:i}}}),ip=Da({unsortedSegmentSum_:function(e,t,n){const r=Na(e,"x","unsortedSegmentSum"),s=Na(t,"segmentIds","unsortedSegmentSum","int32");re(ce(n),(()=>"numSegments must be of dtype int"));const a={x:r,segmentIds:s},i={numSegments:n};return da.runKernel(Kr,a,i)}}),op=Da({unstack_:function(e,t=0){const n=Na(e,"x","unstack","string_or_numeric");re(t>=-n.shape.length&&t<n.shape.length,(()=>`Axis = ${t} is not in [-${n.shape.length}, ${n.shape.length})`));const r={value:n},s={axis:t};return da.runKernel(qr,r,s)}});function up(e,t=!0,n,r){return da.makeVariable(e,t,n,r)}function lp(e,t){const n=[];for(let e=0;e<t.length;e++)t[e]&&n.push(e);const r=Ii(e,"int32"),s=Ii([n.length,e.length],"int32");for(let t=0;t<n.length;t++){const a=r.indexToLoc(n[t]),i=t*e.length;s.values.set(a,i)}return s.toTensor()}const cp=async function(e){const t=Na(e,"condition","whereAsync","bool"),n=await t.data(),r=lp(t.shape,n);return e!==t&&t.dispose(),r},hp=async function(e,t,n){const r=Na(e,"tensor","boolMask"),s=Na(t,"mask","boolMask","bool"),a=null==n?0:n,i=s.rank,o=r.shape;re(i>0,(()=>"mask cannot be scalar")),se(o.slice(a,a+i),s.shape,"mask's shape must match the first K dimensions of tensor's shape,");let u=1;for(let e=a;e<a+i;e++)u*=o[e];const l=o.slice(0,a).concat([u],o.slice(a+i)),c=ll(r,l),h=ll(s,[-1]),p=await cp(h),d=qh(p,[1]),f=ac(c,d,a);return e!==r&&r.dispose(),t!==s&&s.dispose(),d.dispose(),c.dispose(),h.dispose(),p.dispose(),f};function pp(e,t,n=null){if(0===e.rank)return Au(e);if(1!==e.rank&&null===n)return pp(ll(e,[-1]),t,n);if(1===e.rank||"number"==typeof n||Array.isArray(n)&&1===n.length){if(1===t)return Nc(Au(e),n);if(t===1/0)return kc(Au(e),n);if(t===-1/0)return jc(Au(e),n);if("euclidean"===t||2===t)return pu(Nc(Eu(Au(e),ku(2,"int32")),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}if(Array.isArray(n)&&2===n.length){if(1===t)return kc(Nc(Au(e),n[0]),n[1]-1);if(t===1/0)return kc(Nc(Au(e),n[1]),n[0]);if(t===-1/0)return jc(Nc(Au(e),n[1]),n[0]);if("fro"===t||"euclidean"===t)return pu(Nc(du(e),n));throw new Error(`Error in norm: invalid ord value: ${t}`)}throw new Error(`Error in norm: invalid axis: ${n}`)}const dp=Da({norm_:function(e,t="euclidean",n=null,r=!1){const s=pp(e=Na(e,"x","norm"),t,n);let a=s.shape;if(r){const t=ye(n,e.shape);a=Sc(s.shape,t)}return ll(s,a)}}),fp=Da({movingAverage_:function(e,t,n,r,s=!0){const a=Na(e,"v","movingAverage"),i=Na(t,"x","movingAverage"),o=Na(n,"decay","movingAverage");aa(a,i),re(le(a.shape,i.shape),(()=>"Shape mismatch in v and x"));const u=ku(1),l=Su(u,o);let c=hu(Su(i,a),l);if(s){re(null!=r,(()=>"When using zeroDebias: true, step is required."));const e=Na(r,"step","movingAverage");c=cu(c,Su(u,Eu(o,e)))}return uu(a,c)}}),mp=Da({scatterND_:function(e,t,n){const r=Na(e,"indices","scatterND","int32"),s=Na(t,"updates","scatterND");io(s,r,n);const a={indices:r,updates:s},i={shape:n};return da.runKernel(fr,a,i)}}),gp=Da({sparseToDense_:function(e,t,n,r=0){const s=Na(e,"sparseIndices","sparseToDense","int32"),a=Na(t,"sparseValues","sparseToDense"),i=Na(r,"defaultValue","sparseToDense",a.dtype);!function(e,t,n,r){if("int32"!==e.dtype)throw new Error(`tf.sparseToDense() expects the indices to be int32 type, but the dtype was ${e.dtype}.`);if(e.rank>2)throw new Error(`sparseIndices should be a scalar, vector, or matrix, but got shape ${e.shape}.`);const s=e.rank>0?e.shape[0]:1,a=e.rank>1?e.shape[1]:1;if(n.length!==a)throw new Error(`outputShape has incorrect number of elements:, ${n.length}, should be: ${a}.`);const i=t.size;if(0!==t.rank&&(1!==t.rank||i!==s))throw new Error(`sparseValues has incorrect shape ${t.shape}, should be [] or [${s}]`);if(t.dtype!==r.dtype)throw new Error("sparseValues.dtype must match defaultValues.dtype")}(s,a,n,i);const o={sparseIndices:s,sparseValues:a,defaultValue:i},u={outputShape:n};return da.runKernel(Fr,o,u)}}),yp=Da({gatherND_:function(e,t){const n=Na(t,"indices","gatherND","int32"),r={params:Na(e,"x","gatherND","string_or_numeric"),indices:n};return da.runKernel(on,r)}}),bp=Da({dropout_:function(e,t,n,r){const s=Na(e,"x","dropout");if(re("float32"===s.dtype,(()=>`x has to be a floating point tensor since it's going to be scaled, but got a ${s.dtype} tensor instead.`)),re(t>=0&&t<1,(()=>`rate must be a float in the range [0, 1), but got ${t}.`)),0===t)return e instanceof qs?s.clone():s;const a=function(e,t){if(null==t)return e.shape.slice();if(le(e.shape,t))return t;if(e.shape.length===t.length){const n=[];for(let r=0;r<e.shape.length;r++)null==t[r]&&null!=e.shape[r]?n.push(e.shape[r]):n.push(t[r]);return n}return t}(s,n),i=1-t,o=cu(sc(uu(yh(a,0,1,"float32",r),i)),i);return hu(s,o)}});function xp(e){return Math.floor(Math.pow(2,Math.ceil(Math.log(e)/Math.log(2))))}function wp(e,t,n){const r=1-e%2,s=new Float32Array(e);for(let a=0;a<e;++a){const i=2*Math.PI*a/(e+r-1);s[a]=t-n*Math.cos(i)}return Jh(s,"float32")}const vp=async function(e,t,n=1){const r=Na(e,"predictions","inTopK"),s=Na(t,"targets","inTopK");re(r.rank>1,(()=>`inTopK() expects the predictions to be of rank 2 or higher, but got ${r.rank}`)),re(r.rank-1===s.rank,(()=>`predictions rank should be 1 larger than targets rank, but got predictions rank ${r.rank} and targets rank ${s.rank}`)),se(r.shape.slice(0,r.shape.length-1),s.shape,"predictions's shape should be align with the targets' shape, except the last dimension.");const a=r.shape[r.shape.length-1];re(n>0&&n<=a,(()=>`'k' passed to inTopK() must be > 0 && <= the predictions last dimension (${a}), but got ${n}`));const i=await r.data(),o=await s.data(),[u,l]=[i.length/a,a],c=xe("bool",u);for(let e=0;e<u;e++){const t=e*l,r=i.subarray(t,t+l),s=[];for(let e=0;e<r.length;e++)s.push({value:r[e],index:e});s.sort(((e,t)=>t.value-e.value)),c[e]=0;for(let t=0;t<n;t++)if(s[t].index===o[e]){c[e]=1;break}}return e!==r&&r.dispose(),t!==s&&s.dispose(),Ta(c,s.shape,"bool")},kp=Da({conv2DBackpropFilter_:function(e,t,n,r,s,a="NHWC",i){let o=e;3===e.rank&&(o=ll(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ll(t,[1,t.shape[0],t.shape[1],t.shape[2]])),re(4===o.rank,(()=>`Error in conv2dDerFilter: input must be rank 4, but got shape ${o.shape}.`)),re(4===u.rank,(()=>`Error in conv2dDerFilter: dy must be rank 4, but got shape ${u.shape}.`)),re(4===n.length,(()=>`Error in conv2dDerFilter: filterShape must be length 4, but got ${n}.`));const l="NHWC"===a?o.shape[3]:o.shape[1],c="NHWC"===a?u.shape[3]:u.shape[1];re(l===n[2],(()=>`Error in conv2dDerFilter: depth of input ${l}) must match input depth in filter (${n[2]}.`)),re(c===n[3],(()=>`Error in conv2dDerFilter: depth of dy (${c}) must match output depth for filter (${n[3]}).`)),ul("conv2dDerFilter",s,i);const h={x:o,dy:u},p={strides:r,pad:s,dataFormat:a,dimRoundingMode:i,filterShape:n};return da.runKernel(Dt,h,p)}});function Np(e,t,n){if(null==n||"linear"===n)return e;if("relu"===n)return hu(e,Xh(t));throw new Error(`Cannot compute gradient for fused activation ${n}.`)}function Ip(e,t){let n=t;const r=Yi(e.shape,t.shape);return r.length>0&&(n=Nc(n,r)),ll(n,e.shape)}function Cp(e,t,n,r){if("linear"===t)return e;if("relu"===t)return vh(e);if("elu"===t)return Zl(e);if("relu6"===t)return kh(e);if("prelu"===t)return uh(e,n);if("leakyrelu"===t)return pc(e,r);if("sigmoid"===t)return dl(e);throw new Error(`Unknown fused activation ${t}.`)}const Dp=(e,t)=>!(e>0)||"linear"===t,Ep=Da({fusedConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(u=u||"linear",!1===Dp(da.state.gradientDepth,u)){let h=$l(e,t,n,r,s,a,i);return null!=o&&(h=uu(h,o)),Cp(h,u,l,c)}const h=Na(e,"x","conv2d","float32"),p=Na(t,"filter","conv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=ll(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused conv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused conv2d: filter must be rank 4, but got rank ${p.rank}.`)),ul("fused conv2d",r,i),re(d.shape[3]===p.shape[2],(()=>`Error in conv2d: depth of input (${d.shape[3]}) must match input depth for filter ${p.shape[2]}.`)),re(il(n,a),(()=>`Error in conv2D: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),re("NHWC"===s,(()=>`Error in conv2d: got dataFormat of ${s} but only NHWC is currently supported.`));const m=Ju(d.shape,p.shape,n,a,r,i);let g,y;null!=o&&(g=Na(o,"bias","fused conv2d"),[g]=sa(g,h),Zi(m.outShape,g.shape)),null!=l&&(y=Na(l,"prelu weights","fused conv2d"));const b=(e,t)=>{const[s,i,o,l]=t,c=Np(e,o,u);re(al(a),(()=>`Error in gradient of fused conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`));const h=[Rl(i.shape,c,s,n,r),kp(i,c,s.shape,n,r)];if(null!=l){const e=Ip(l,c);h.push(e)}return h},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=wu(((e,t,n)=>{let r=da.runKernel(es,x,w);return n([t,e,r]),f&&(r=ll(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=wu(((e,t,n,r)=>{let s=da.runKernel(es,x,w);return r([t,e,s,n]),f&&(s=ll(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p,g)}}}),Sp=Da({depthwiseConv2dNativeBackpropFilter_:function(e,t,n,r,s,a=[1,1],i){let o=e;3===e.rank&&(o=ll(e,[1,e.shape[0],e.shape[1],e.shape[2]]));let u=t;3===u.rank&&(u=ll(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={x:o,dy:u},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,filterShape:n};return da.runKernel(zt,l,c)}}),Tp=Da({depthwiseConv2dNativeBackpropInput_:function(e,t,n,r,s,a=[1,1],i){let o=t,u=!1;3===t.rank&&(u=!0,o=ll(t,[1,t.shape[0],t.shape[1],t.shape[2]]));const l={dy:o,filter:n},c={strides:r,pad:s,dimRoundingMode:i,dilations:a,inputShape:e},h=da.runKernel(Lt,l,c);return u?ll(h,[h.shape[1],h.shape[2],h.shape[3]]):h}}),Ap=Da({fusedDepthwiseConv2d_:function({x:e,filter:t,strides:n,pad:r,dataFormat:s="NHWC",dilations:a=[1,1],dimRoundingMode:i,bias:o,activation:u="linear",preluActivationWeights:l,leakyreluAlpha:c}){if(!1===Dp(da.state.gradientDepth,u)){let h=Vl(e,t,n,r,s,a,i);return null!=o&&(h=uu(h,o)),Cp(h,u,l,c)}const h=Na(e,"x","depthwiseConv2d","float32"),p=Na(t,"filter","depthwiseConv2d","float32");let d=h,f=!1;3===h.rank&&(f=!0,d=ll(h,[1,h.shape[0],h.shape[1],h.shape[2]])),re(4===d.rank,(()=>`Error in fused depthwiseConv2d: input must be rank 4, but got rank ${d.rank}.`)),re(4===p.rank,(()=>`Error in fused depthwiseConv2d: filter must be rank 4, but got rank ${p.rank}.`)),re(d.shape[3]===p.shape[2],(()=>`Error in fused depthwiseConv2d: number of input channels (${d.shape[3]}) must match the inChannels dimension in filter ${p.shape[2]}.`)),null==a&&(a=[1,1]),re(il(n,a),(()=>`Error in fused depthwiseConv2d: Either strides or dilations must be 1. Got strides ${n} and dilations '${a}'`)),ul("fused depthwiseConv2d",r,i);const m=Ju(d.shape,p.shape,n,a,r,i,!0);let g,y;null!=o&&(g=Na(o,"bias","fused conv2d"),[g]=sa(g,h),Zi(m.outShape,g.shape)),null!=l&&(y=Na(l,"prelu weights","fused depthwiseConv2d"));const b=(e,t)=>{re(al(a),(()=>`Error in gradient of fused depthwiseConv2d: dilation rates greater than 1 are not yet supported. Got dilations '${a}'`));const[s,o,l,c]=t,h=Np(e,l,u),p=Tp(o.shape,h,s,n,r,a,i),d=Sp(o,h,s.shape,n,r,a,i);return null!=c?[p,d,Ip(g,h)]:[p,d]},x={x:d,filter:p,bias:g,preluActivationWeights:y},w={strides:n,pad:r,dataFormat:s,dilations:a,dimRoundingMode:i,activation:u,leakyreluAlpha:c};if(null==o){const e=wu(((e,t,n)=>{let r=da.runKernel(ts,x,w);return n([t,e,r]),f&&(r=ll(r,[r.shape[1],r.shape[2],r.shape[3]])),{value:r,gradFunc:b}}));return e(d,p)}{const e=wu(((e,t,n,r)=>{let s=da.runKernel(ts,x,w);return r([t,e,s,n]),f&&(s=ll(s,[s.shape[1],s.shape[2],s.shape[3]])),{value:s,gradFunc:b}}));return e(d,p,g)}}}),$p=Da({fusedMatMul_:function({a:e,b:t,transposeA:n=!1,transposeB:r=!1,bias:s,activation:a="linear",preluActivationWeights:i,leakyreluAlpha:o}){if(!1===Dp(da.state.gradientDepth,a)){let u=ji(e,t,n,r);return null!=s&&(u=uu(u,s)),Cp(u,a,i,o)}let u=Na(e,"a","fused matMul"),l=Na(t,"b","fused matMul");[u,l]=sa(u,l);const c=n?u.shape[u.rank-2]:u.shape[u.rank-1],h=r?l.shape[l.rank-1]:l.shape[l.rank-2],p=n?u.shape[u.rank-1]:u.shape[u.rank-2],d=r?l.shape[l.rank-2]:l.shape[l.rank-1],f=u.shape.slice(0,-2),m=l.shape.slice(0,-2),g=oe(f),y=oe(m);re(c===h,(()=>`Error in fused matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${u.shape} and ${l.shape} and transposeA=${n} and transposeB=${r} must match.`));const b=Zi(u.shape.slice(0,-2),l.shape.slice(0,-2)).concat([p,d]),x=ll(u,n?[g,c,p]:[g,p,c]),w=ll(l,r?[y,d,h]:[y,h,d]);let v,k;null!=s&&(v=Na(s,"bias","fused matMul"),[v]=sa(v,u),Zi(b,v.shape)),null!=i&&(k=Na(i,"prelu weights","fused matMul"));const N=(e,t)=>{const[i,o,u,l]=t,c=Np(ll(e,u.shape),u,a);let h,p;return n||r?!n&&r?(h=ji(c,o,!1,!1),p=ji(c,i,!0,!1)):n&&!r?(h=ji(o,c,!1,!0),p=ji(i,c,!1,!1)):(h=ji(o,c,!0,!0),p=ji(c,i,!0,!0)):(h=ji(c,o,!1,!0),p=ji(i,c,!0,!1)),null!=s?[h,p,Ip(l,c)]:[h,p]},I={a:x,b:w,bias:v,preluActivationWeights:k},C={transposeA:n,transposeB:r,activation:a,leakyreluAlpha:o};if(null==s){const e=wu(((e,t,n)=>{const r=da.runKernel(Qr,I,C);return n([e,t,r]),{value:ll(r,b),gradFunc:N}}));return e(x,w)}{const e=wu(((e,t,n,r)=>{const s=da.runKernel(Qr,I,C);return r([e,t,s,n]),{value:ll(s,b),gradFunc:N}}));return e(x,w,v)}}}),Fp=Da({hammingWindow_:function(e){return wp(e,.54,.46)}}),Rp=Da({hannWindow_:function(e){return wp(e,.5,.5)}}),_p=Da({frame_:function(e,t,n,r=!1,s=0){let a=0;const i=[];for(;a+t<=e.size;)i.push(fl(e,a,t)),a+=n;if(r)for(;a<e.size;){const r=a+t-e.size,o=pl([fl(e,a,t-r),Cu([r],s)]);i.push(o),a+=n}return 0===i.length?Qh([],[0,t]):ll(pl(i),[i.length,t])}}),Mp=Da({stft_:function(e,t,n,r,s=Rp){null==r&&(r=xp(t));const a=_p(e,t,n),i=hu(a,s(t));return jh(i,r)}}),Op=Da({cropAndResize_:function(e,t,n,r,s="bilinear",a=0){const i=Na(e,"image","cropAndResize"),o=Na(t,"boxes","cropAndResize","float32"),u=Na(n,"boxInd","cropAndResize","int32"),l=o.shape[0];re(4===i.rank,(()=>`Error in cropAndResize: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&4===o.shape[1],(()=>`Error in cropAndResize: boxes must be have size [${l},4] but had shape ${o.shape}.`)),re(1===u.rank&&u.shape[0]===l,(()=>`Error in cropAndResize: boxInd must be have size [${l}] but had shape ${o.shape}.`)),re(2===r.length,(()=>`Error in cropAndResize: cropSize must be of length 2, but got length ${r.length}.`)),re(r[0]>=1&&r[1]>=1,(()=>`cropSize must be atleast [1,1], but was ${r}`)),re("bilinear"===s||"nearest"===s,(()=>`method must be bilinear or nearest, but was ${s}`));const c={image:i,boxes:o,boxInd:u},h={method:s,extrapolationValue:a,cropSize:r};return da.runKernel(_t,c,h)}}),Bp=Da({flipLeftRight_:function(e){const t=Na(e,"image","flipLeftRight","float32");re(4===t.rank,(()=>`Error in flipLeftRight: image must be rank 4,but got rank ${t.rank}.`));const n={image:t};return da.runKernel(tn,n,{})}}),zp=Da({grayscaleToRGB_:function(e){const t=Na(e,"image","grayscaleToRGB"),n=t.rank-1,r=t.shape[n];re(t.rank>=2,(()=>`Error in grayscaleToRGB: images must be at least rank 2, but got rank ${t.rank}.`)),re(1===r,(()=>`Error in grayscaleToRGB: last dimension of a grayscale image should be size 1, but got size ${r}.`));const s=new Array(t.rank);return s.fill(1,0,n),s[n]=3,nc(t,s)}}),Lp=Da({rotateWithOffset_:function(e,t,n=0,r=.5){const s=Na(e,"image","rotateWithOffset","float32");re(4===s.rank,(()=>`Error in rotateWithOffset: image must be rank 4,but got rank ${s.rank}.`));const a={image:s},i={radians:t,fillValue:n,center:r};return da.runKernel(Jr,a,i)}});function Pp(e,t,n,r,s,a){null==r&&(r=.5),null==s&&(s=Number.NEGATIVE_INFINITY),null==a&&(a=0);const i=e.shape[0];return n=Math.min(n,i),re(0<=r&&r<=1,(()=>`iouThreshold must be in [0, 1], but was '${r}'`)),re(2===e.rank,(()=>`boxes must be a 2D tensor, but was of rank '${e.rank}'`)),re(4===e.shape[1],(()=>`boxes must have 4 columns, but 2nd dimension was ${e.shape[1]}`)),re(1===t.rank,(()=>"scores must be a 1D tensor")),re(t.shape[0]===i,(()=>`scores has incompatible shape with boxes. Expected ${i}, but was ${t.shape[0]}`)),re(0<=a&&a<=1,(()=>`softNmsSigma must be in [0, 1], but was '${a}'`)),{maxOutputSize:n,iouThreshold:r,scoreThreshold:s,softNmsSigma:a}}const Up=Da({nonMaxSuppression_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Na(e,"boxes","nonMaxSuppression","float32"),i=Na(t,"scores","nonMaxSuppression","float32"),o=Pp(a,i,n,r,s),u={maxOutputSize:n=o.maxOutputSize,iouThreshold:r=o.iouThreshold,scoreThreshold:s=o.scoreThreshold};return da.runKernel(Gn,{boxes:a,scores:i},u)}});function Wp(e,t,n){const r=function(e,t,n){return function(e,t,n){let r=0,s=e.length,a=0,i=!1;for(;r<s;){a=r+(s-r>>>1);const o=n(t,e[a]);o>0?r=a+1:(s=a,i=!o)}return i?r:-r-1}(e,t,n||Vp)}(e,t,n),s=r<0?-(r+1):r;e.splice(s,0,t)}function Vp(e,t){return e>t?1:e<t?-1:0}function Gp(e,t,n,r,s){return qp(e,t,n,r,s,0)}function jp(e,t,n,r,s,a){return qp(e,t,n,r,s,0,!1,a,!0)}function Hp(e,t,n,r,s,a){return qp(e,t,n,r,s,a,!0)}function qp(e,t,n,r,s,a,i=!1,o=!1,u=!1){const l=[];for(let e=0;e<t.length;e++)t[e]>s&&l.push({score:t[e],boxIndex:e,suppressBeginIndex:0});l.sort(Yp);const c=a>0?-.5/a:0,h=[],p=[];for(;h.length<n&&l.length>0;){const t=l.pop(),{score:n,boxIndex:a,suppressBeginIndex:i}=t;if(n<s)break;let o=!1;for(let n=h.length-1;n>=i;--n){const i=Kp(e,a,h[n]);if(i>=r){o=!0;break}if(t.score=t.score*Xp(r,c,i),t.score<=s)break}t.suppressBeginIndex=h.length,o||(t.score===n?(h.push(a),p.push(t.score)):t.score>s&&Wp(l,t,Yp))}const d=h.length,f=n-d;o&&f>0&&(h.push(...new Array(f).fill(0)),p.push(...new Array(f).fill(0)));const m={selectedIndices:h};return i&&(m.selectedScores=p),u&&(m.validOutputs=d),m}function Kp(e,t,n){const r=e.subarray(4*t,4*t+4),s=e.subarray(4*n,4*n+4),a=Math.min(r[0],r[2]),i=Math.min(r[1],r[3]),o=Math.max(r[0],r[2]),u=Math.max(r[1],r[3]),l=Math.min(s[0],s[2]),c=Math.min(s[1],s[3]),h=Math.max(s[0],s[2]),p=Math.max(s[1],s[3]),d=(o-a)*(u-i),f=(h-l)*(p-c);if(d<=0||f<=0)return 0;const m=Math.max(a,l),g=Math.max(i,c),y=Math.min(o,h),b=Math.min(u,p),x=Math.max(y-m,0)*Math.max(b-g,0);return x/(d+f-x)}function Xp(e,t,n){const r=Math.exp(t*n*n);return n<=e?r:0}function Yp(e,t){return e.score-t.score||e.score===t.score&&t.boxIndex-e.boxIndex}const Zp=Da({nonMaxSuppressionWithScore_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Na(e,"boxes","nonMaxSuppression"),o=Na(t,"scores","nonMaxSuppression"),u=Pp(i,o,n,r,s,a),l={boxes:i,scores:o},c={maxOutputSize:n=u.maxOutputSize,iouThreshold:r=u.iouThreshold,scoreThreshold:s=u.scoreThreshold,softNmsSigma:a=u.softNmsSigma},h=da.runKernel(Hn,l,c);return{selectedIndices:h[0],selectedScores:h[1]}}}),Jp=Da({nonMaxSuppressionPadded_:function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Na(e,"boxes","nonMaxSuppression"),o=Na(t,"scores","nonMaxSuppression"),u=Pp(i,o,n,r,s,null),l={boxes:i,scores:o},c={maxOutputSize:u.maxOutputSize,iouThreshold:u.iouThreshold,scoreThreshold:u.scoreThreshold,padToMaxOutputSize:a},h=da.runKernel(jn,l,c);return{selectedIndices:h[0],validOutputs:h[1]}}}),Qp=Da({resizeBilinear_:function(e,t,n=!1,r=!1){const s=Na(e,"images","resizeBilinear");re(3===s.rank||4===s.rank,(()=>`Error in resizeBilinear: x must be rank 3 or 4, but got rank ${s.rank}.`)),re(2===t.length,(()=>`Error in resizeBilinear: new shape must 2D, but got shape ${t}.`)),re(!1===r||!1===n,(()=>"Error in resizeBilinear: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=ll(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=da.runKernel(ur,o,u);return i?ll(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),ed=Da({resizeNearestNeighbor_:function(e,t,n=!1,r=!1){const s=Na(e,"images","resizeNearestNeighbor");re(3===s.rank||4===s.rank,(()=>`Error in resizeNearestNeighbor: x must be rank 3 or 4, but got rank ${s.rank}.`)),re(2===t.length,(()=>`Error in resizeNearestNeighbor: new shape must 2D, but got shape ${t}.`)),re("float32"===s.dtype||"int32"===s.dtype,(()=>"`images` must have `int32` or `float32` as dtype")),re(!1===r||!1===n,(()=>"Error in resizeNearestNeighbor: If halfPixelCenters is true, alignCorners must be false."));let a=s,i=!1;3===s.rank&&(i=!0,a=ll(s,[1,s.shape[0],s.shape[1],s.shape[2]]));const[]=t,o={images:a},u={alignCorners:n,halfPixelCenters:r,size:t},l=da.runKernel(ir,o,u);return i?ll(l,[l.shape[1],l.shape[2],l.shape[3]]):l}}),td=Da({threshold_:function(e,t="binary",n=!1,r=.5){const s=Na(e,"image","threshold"),a=s.shape[0]*s.shape[1];let i,o,u,l,c=hu(Jh([r]),255);if(re(3===s.rank,(()=>`Error in threshold: image must be rank 3,but got rank ${s.rank}.`)),re(3===s.shape[2]||1===s.shape[2],(()=>`Error in threshold: image color channel must be equal to 3 or 1but got ${s.shape[2]}.`)),re("int32"===s.dtype||"float32"===s.dtype,(()=>`Error in dtype: image dtype must be int32 or float32,but got dtype ${s.dtype}.`)),re("otsu"===t||"binary"===t,(()=>`Method must be binary or otsu, but was ${t}`)),3===s.shape[2]){[i,o,u]=Gh(s,[1,1,1],-1);const e=hu(i,.2989),t=hu(o,.587),n=hu(u,.114);l=uu(uu(e,t),n)}else l=e;"otsu"===t&&(c=function(e,t){let n,r,s,a,i,o,u=Jh([-1]),l=Jh([0]),c=Jh([0]);for(let h=0;h<e.size-1;h++){n=fl(e,0,h+1),r=fl(e,h+1),i=cu(Nc(n),t),o=cu(Nc(r),t);const p=Nc(hu(n,bh(0,n.size)));s=cu(p,Nc(n));const d=Cu(r.shape,n.size),f=uu(bh(0,r.size),d),m=hu(r,f);a=cu(Nc(m),Nc(r));const g=Su(s,a),y=Su(s,a),b=hu(i,o);c=hu(hu(b,g),y);const x=ic(c,l);l=ql(x,c,l),u=ql(x,Jh([h]),u)}return u}(kl(Ci(Sh(l),"int32"),Ta([]),256),a));const h=n?fc(l,c):ic(l,c);return Ci(hu(h,255),"int32")}}),nd=Da({transform_:function(e,t,n="nearest",r="constant",s=0,a){const i=Na(e,"image","transform","float32"),o=Na(t,"transforms","transform","float32");re(4===i.rank,(()=>`Error in transform: image must be rank 4,but got rank ${i.rank}.`)),re(2===o.rank&&(o.shape[0]===i.shape[0]||1===o.shape[0])&&8===o.shape[1],(()=>"Error in transform: Input transform should be batch x 8 or 1 x 8")),re(null==a||2===a.length,(()=>`Error in transform: outputShape must be [height, width] or null, but got ${a}.`));const u={image:i,transforms:o},l={interpolation:n,fillMode:r,fillValue:s,outputShape:a};return da.runKernel(Gr,u,l)}}),rd=Da({bandPart_:function(e,t,n){re(t%1==0,(()=>`bandPart(): numLower must be an integer, got ${t}.`)),re(n%1==0,(()=>`bandPart(): numUpper must be an integer, got ${n}.`));const r=Na(e,"a","bandPart");re(r.rank>=2,(()=>`bandPart(): Rank must be at least 2, got ${r.rank}.`));const s=r.shape,[a,i]=r.shape.slice(-2);if(!(t<=a))throw new Error(`bandPart(): numLower (${t}) must not be greater than the number of rows (${a}).`);if(!(n<=i))throw new Error(`bandPart(): numUpper (${n}) must not be greater than the number of columns (${i}).`);t<0&&(t=a),n<0&&(n=i);const o=ll(bh(0,a,1,"int32"),[-1,1]),u=bh(0,i,1,"int32"),l=Su(o,u),c=_c(fc(l,ku(+t,"int32")),oc(l,ku(-n,"int32"))),h=Wc([a,i],r.dtype);return ll(Kh(op(ll(r,[-1,a,i])).map((e=>ql(c,e,h)))),s)}}),sd=Da({gramSchmidt_:function(e){let t;if(Array.isArray(e)){t=!1,re(null!=e&&e.length>0,(()=>"Gram-Schmidt process: input must not be null, undefined, or empty"));const n=e[0].shape[0];for(let t=1;t<e.length;++t)re(e[t].shape[0]===n,(()=>`Gram-Schmidt: Non-unique lengths found in the input vectors: (${e[t].shape[0]} vs. ${n})`))}else t=!0,e=Gh(e,e.shape[0],0).map((e=>qh(e,[0])));re(e.length<=e[0].shape[0],(()=>`Gram-Schmidt: Number of vectors (${e.length}) exceeds number of dimensions (${e[0].shape[0]}).`));const n=[],r=e;for(let t=0;t<e.length;++t)n.push(da.tidy((()=>{let e=r[t];if(t>0)for(let r=0;r<t;++r){const t=hu(Nc(hu(n[r],e)),n[r]);e=Su(e,t)}return cu(e,dp(e,"euclidean"))})));return t?Kh(n,0):n}});function ad(e,t=!1){return da.tidy((()=>{re(2===e.shape.length,(()=>`qr2d() requires a 2D Tensor, but got a ${e.shape.length}D Tensor.`));const n=e.shape[0],r=e.shape[1];let s=rc(n),a=Di(e);const i=Qh([[1]],[1,1]);let o=Di(i);const u=n>=r?r:n;for(let e=0;e<u;++e){const t=a,u=o,l=s;[o,a,s]=da.tidy((()=>{const t=fl(a,[e,e],[n-e,1]),u=dp(t),l=fl(a,[e,e],[1,1]),c=ql(ic(l,0),Qh([[-1]]),Qh([[1]])),h=Su(l,hu(c,u)),p=cu(t,h);o=1===p.shape[0]?Di(i):pl([i,fl(p,[1,0],[p.shape[0]-1,p.shape[1]])],0);const d=xc(cu(ji(c,h),u)),f=fl(a,[e,0],[n-e,r]),m=hu(d,o),g=qi(o);if(0===e)a=Su(f,ji(m,ji(g,f)));else{const t=Su(f,ji(m,ji(g,f)));a=pl([fl(a,[0,0],[e,r]),t],0)}const y=qi(m),b=fl(s,[0,e],[n,s.shape[1]-e]);if(0===e)s=Su(b,ji(ji(b,o),y));else{const t=Su(b,ji(ji(b,o),y));s=pl([fl(s,[0,0],[n,e]),t],1)}return[o,a,s]})),Yo([t,u,l])}return!t&&n>r&&(s=fl(s,[0,0],[n,r]),a=fl(a,[0,0],[r,r])),[s,a]}))}const id=Da({qr_:function(e,t=!1){if(re(e.rank>=2,(()=>`qr() requires input tensor to have a rank >= 2, but got rank ${e.rank}`)),2===e.rank)return ad(e,t);{const n=e.shape.slice(0,e.shape.length-2).reduce(((e,t)=>e*t)),r=op(ll(e,[n,e.shape[e.shape.length-2],e.shape[e.shape.length-1]]),0),s=[],a=[];return r.forEach((e=>{const[n,r]=ad(e,t);s.push(n),a.push(r)})),[ll(Kh(s,0),e.shape),ll(Kh(a,0),e.shape)]}}});var od;!function(e){e[e.NONE=0]="NONE",e[e.MEAN=1]="MEAN",e[e.SUM=2]="SUM",e[e.SUM_BY_NONZERO_WEIGHTS=3]="SUM_BY_NONZERO_WEIGHTS"}(od||(od={}));const ud=Da({computeWeightedLoss_:function(e,t,n=od.SUM_BY_NONZERO_WEIGHTS){const r=Na(e,"losses","computeWeightedLoss");let s=null;null!=t&&(s=Na(t,"weights","computeWeightedLoss"));const a=null==s?r:hu(r,s);if(n===od.NONE)return a;if(n===od.SUM)return Nc(a);if(n===od.MEAN){if(null==s)return Uc(a);{const e=r.size/s.size,t=cu(Nc(a),Nc(s));return e>1?cu(t,ku(e)):t}}if(n===od.SUM_BY_NONZERO_WEIGHTS){if(null==s)return cu(Nc(a),ku(r.size));{const e=hu(s,Vc(r.shape)),t=Ci(Nc(Jc(e,ku(0))),"float32");return cu(Nc(a),t)}}throw Error(`Unknown reduction: ${n}`)}}),ld=Da({absoluteDifference_:function(e,t,n,r=od.SUM_BY_NONZERO_WEIGHTS){const s=Na(e,"labels","absoluteDifference"),a=Na(t,"predictions","absoluteDifference");let i=null;null!=n&&(i=Na(n,"weights","absoluteDifference")),se(s.shape,a.shape,"Error in absoluteDifference: ");const o=Au(Su(s,a));return ud(o,i,r)}}),cd=Da({cosineDistance_:function(e,t,n,r,s=od.SUM_BY_NONZERO_WEIGHTS){const a=Na(e,"labels","cosineDistance"),i=Na(t,"predictions","cosineDistance");let o=null;null!=r&&(o=Na(r,"weights","cosineDistance")),se(a.shape,i.shape,"Error in cosineDistance: ");const u=ku(1),l=Su(u,Nc(hu(a,i),n,!0));return ud(l,o,s)}}),hd=Da({hingeLoss_:function(e,t,n,r=od.SUM_BY_NONZERO_WEIGHTS){let s=Na(e,"labels","hingeLoss");const a=Na(t,"predictions","hingeLoss");let i=null;null!=n&&(i=Na(n,"weights","hingeLoss")),se(s.shape,a.shape,"Error in hingeLoss: ");const o=ku(1);s=Su(hu(ku(2),s),o);const u=vh(Su(o,hu(s,a)));return ud(u,i,r)}}),pd=Da({huberLoss_:function(e,t,n,r=1,s=od.SUM_BY_NONZERO_WEIGHTS){const a=Na(e,"labels","huberLoss"),i=Na(t,"predictions","huberLoss");let o=null;null!=n&&(o=Na(n,"weights","huberLoss")),se(a.shape,i.shape,"Error in huberLoss: ");const u=ku(r),l=Au(Su(i,a)),c=Hc(l,u),h=Su(l,c),p=uu(hu(ku(.5),du(c)),hu(u,h));return ud(p,o,s)}}),dd=Da({logLoss_:function(e,t,n,r=1e-7,s=od.SUM_BY_NONZERO_WEIGHTS){const a=Na(e,"labels","logLoss"),i=Na(t,"predictions","logLoss");let o=null;null!=n&&(o=Na(n,"weights","logLoss")),se(a.shape,i.shape,"Error in logLoss: ");const u=ku(1),l=ku(r),c=xc(hu(a,yc(uu(i,l)))),h=hu(Su(u,a),yc(uu(Su(u,i),l))),p=Su(c,h);return ud(p,o,s)}}),fd=Da({meanSquaredError_:function(e,t,n,r=od.SUM_BY_NONZERO_WEIGHTS){const s=Na(e,"labels","meanSquaredError"),a=Na(t,"predictions","meanSquaredError");let i=null;null!=n&&(i=Na(n,"weights","meanSquaredError")),se(s.shape,a.shape,"Error in meanSquaredError: ");const o=Hh(s,a);return ud(o,i,r)}}),md=Da({sigmoidCrossEntropy_:function(e,t,n,r=0,s=od.SUM_BY_NONZERO_WEIGHTS){let a=Na(e,"multiClassLabels","sigmoidCrossEntropy");const i=Na(t,"logits","sigmoidCrossEntropy");let o=null;if(null!=n&&(o=Na(n,"weights","sigmoidCrossEntropy")),se(a.shape,i.shape,"Error in sigmoidCrossEntropy: "),r>0){const e=ku(r),t=ku(1),n=ku(.5);a=uu(hu(a,Su(t,e)),hu(n,e))}const u=function(e,t){const n=Na(e,"labels","sigmoidCrossEntropyWithLogits"),r=Na(t,"logits","sigmoidCrossEntropyWithLogits");se(n.shape,r.shape,"Error in sigmoidCrossEntropyWithLogits: ");const s=vh(r),a=hu(r,n),i=bc(Ql(xc(Au(r))));return uu(Su(s,a),i)}(a,i);return ud(u,o,s)}}),gd=Da({softmaxCrossEntropy_:function(e,t,n,r=0,s=od.SUM_BY_NONZERO_WEIGHTS){let a=Na(e,"onehotLabels","softmaxCrossEntropy");const i=Na(t,"logits","softmaxCrossEntropy");let o=null;if(null!=n&&(o=Na(n,"weights","softmaxCrossEntropy")),se(a.shape,i.shape,"Error in softmaxCrossEntropy: "),r>0){const e=ku(r),t=ku(1),n=ku(a.shape[1]);a=uu(hu(a,Su(t,e)),cu(e,n))}const u=function(e,t,n=-1){if(-1===n&&(n=t.rank-1),n!==t.rank-1)throw Error(`Softmax cross entropy along a non-last dimension is not yet supported. Labels / logits was rank ${t.rank} and dim was ${n}`);const r=wu(((e,t,r)=>{const s=Rc(t,[n],!0),a=Su(Ci(t,"float32"),s);r([e,a]);const i=xc(hu(a,e));return{value:Nc(i,[n]),gradFunc:(e,t)=>{const[r,s]=t,a=Sc(e.shape,[n]);return[hu(ll(e,a),Su(Ci(r,"float32"),Ql(s))),hu(ll(e,a),Su(Ql(s),Ci(r,"float32")))]}}}));return r(e,t)}(a,i);return ud(u,o,s)}}),yd=Da({sparseFillEmptyRows_:function(e,t,n,r){const s=Na(e,"indices","sparseFillEmptyRows","int32"),a=Na(t,"values","sparseFillEmptyRows"),i=Na(n,"denseShape","sparseFillEmptyRows","int32"),o=Na(r,"defaultValue","sparseFillEmptyRows",a.dtype);if(2!==s.rank)throw new Error(`Indices should be Tensor2D but received shape\n        ${s.shape}`);if(1!==a.rank)throw new Error(`Values should be Tensor1D but received shape ${a.shape}`);if(1!==i.rank)throw new Error(`Dense shape should be Tensor1D but received shape ${i.shape}`);if(0!==o.rank)throw new Error(`Default value should be a scalar but received shape ${o.shape}`);const u={indices:s,values:a,denseShape:i,defaultValue:o},l=da.runKernel(Sr,u);return{outputIndices:l[0],outputValues:l[1],emptyRowIndicator:l[2],reverseIndexMap:l[3]}}}),bd=Da({sparseReshape_:function(e,t,n){const r=Na(e,"inputIndices","sparseReshape","int32"),s=Na(t,"inputShape","sparseReshape","int32"),a=Na(n,"newShape","sparseReshape","int32");if(2!==r.rank)throw new Error(`Input indices should be Tensor2D but received shape\n        ${r.shape}`);if(1!==s.rank)throw new Error(`Input shape should be Tensor1D but received shape ${s.shape}`);if(1!==a.rank)throw new Error(`New shape should be Tensor1D but received shape ${a.shape}`);const i={inputIndices:r,inputShape:s,newShape:a},o=da.runKernel(Tr,i);return{outputIndices:o[0],outputShape:o[1]}}}),xd=Da({sparseSegmentMean_:function(e,t,n){const r=Na(e,"data","sparseSegmentMean"),s=Na(t,"indices","sparseSegmentMean","int32"),a=Na(n,"segmentIds","sparseSegmentMean","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n          ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n          ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return da.runKernel(Ar,i)}}),wd=Da({sparseSegmentSum_:function(e,t,n){const r=Na(e,"data","sparseSegmentSum"),s=Na(t,"indices","sparseSegmentSum","int32"),a=Na(n,"segmentIds","sparseSegmentSum","int32");if(r.rank<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.rank)throw new Error(`Indices should be Tensor1D but received shape\n         ${s.shape}`);if(1!==a.rank)throw new Error(`Segment ids should be Tensor1D but received shape\n         ${a.shape}`);const i={data:r,indices:s,segmentIds:a};return da.runKernel($r,i)}}),vd=Da({stringNGrams_:function(e,t,n,r,s,a,i,o){const u=Na(e,"data","stringNGrams","string");if("string"!==u.dtype)throw new Error("Data must be of datatype string");if(1!==u.shape.length)throw new Error(`Data must be a vector, saw: ${u.shape}`);const l=Na(t,"dataSplits","stringNGrams");if("int32"!==l.dtype)throw new Error("Data splits must be of datatype int32");const c={separator:n,nGramWidths:r,leftPad:s,rightPad:a,padWidth:i,preserveShortSequences:o},h={data:u,dataSplits:l},p=da.runKernel(Or,h,c);return{nGrams:p[0],nGramsSplits:p[1]}}}),kd=Da({stringSplit_:function(e,t,n=!0){const r=Na(e,"input","stringSplit","string"),s=Na(t,"delimiter","stringSplit","string");if(1!==r.rank)throw new Error(`Input should be Tensor1D but received shape ${r.shape}`);if(0!==s.rank)throw new Error(`Delimiter should be a scalar but received shape ${s.shape}`);const a={skipEmpty:n},i={input:r,delimiter:s},o=da.runKernel(Br,i,a);return{indices:o[0],values:o[1],shape:o[2]}}}),Nd=Da({stringToHashBucketFast_:function(e,t){const n=Na(e,"input","stringToHashBucketFast","string"),r={numBuckets:t};if(t<=0)throw new Error("Number of buckets must be at least 1");const s={input:n};return da.runKernel(zr,s,r)}}),Id={fft:Uh,ifft:Wh,rfft:jh,irfft:Vh},Cd={hammingWindow:Fp,hannWindow:Rp,frame:_p,stft:Mp},Dd={flipLeftRight:Bp,grayscaleToRGB:zp,resizeNearestNeighbor:ed,resizeBilinear:Qp,rotateWithOffset:Lp,cropAndResize:Op,nonMaxSuppression:Up,nonMaxSuppressionAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY){const a=Na(e,"boxes","nonMaxSuppressionAsync"),i=Na(t,"scores","nonMaxSuppressionAsync"),o=Pp(a,i,n,r,s);n=o.maxOutputSize,r=o.iouThreshold,s=o.scoreThreshold;const u=await Promise.all([a.data(),i.data()]),l=u[0],c=u[1],{selectedIndices:h}=Gp(l,c,n,r,s);return a!==e&&a.dispose(),i!==t&&i.dispose(),Jh(h,"int32")},nonMaxSuppressionWithScore:Zp,nonMaxSuppressionWithScoreAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=0){const i=Na(e,"boxes","nonMaxSuppressionAsync"),o=Na(t,"scores","nonMaxSuppressionAsync"),u=Pp(i,o,n,r,s,a);n=u.maxOutputSize,r=u.iouThreshold,s=u.scoreThreshold,a=u.softNmsSigma;const l=await Promise.all([i.data(),o.data()]),c=l[0],h=l[1],{selectedIndices:p,selectedScores:d}=Hp(c,h,n,r,s,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jh(p,"int32"),selectedScores:Jh(d)}},nonMaxSuppressionPadded:Jp,nonMaxSuppressionPaddedAsync:async function(e,t,n,r=.5,s=Number.NEGATIVE_INFINITY,a=!1){const i=Na(e,"boxes","nonMaxSuppressionAsync"),o=Na(t,"scores","nonMaxSuppressionAsync"),u=Pp(i,o,n,r,s,null),l=u.maxOutputSize,c=u.iouThreshold,h=u.scoreThreshold,[p,d]=await Promise.all([i.data(),o.data()]),{selectedIndices:f,validOutputs:m}=jp(p,d,l,c,h,a);return i!==e&&i.dispose(),o!==t&&o.dispose(),{selectedIndices:Jh(f,"int32"),validOutputs:ku(m,"int32")}},threshold:td,transform:nd},Ed={bandPart:rd,gramSchmidt:sd,qr:id},Sd={absoluteDifference:ld,computeWeightedLoss:ud,cosineDistance:cd,hingeLoss:hd,huberLoss:pd,logLoss:dd,meanSquaredError:fd,sigmoidCrossEntropy:md,softmaxCrossEntropy:gd},Td={sparseFillEmptyRows:yd,sparseReshape:bd,sparseSegmentMean:xd,sparseSegmentSum:wd},Ad={stringNGrams:vd,stringSplit:kd,stringToHashBucketFast:Nd},$d={sgd:Ou.sgd,momentum:Ou.momentum,adadelta:Ou.adadelta,adagrad:Ou.adagrad,rmsprop:Ou.rmsprop,adamax:Ou.adamax,adam:Ou.adam},Fd="undefined"!=typeof requestAnimationFrame?requestAnimationFrame:"undefined"!=typeof setImmediate?setImmediate:e=>e();function Rd(){return new Promise((e=>Fd((()=>e()))))}function _d(e,t){const n=e[0].length;e.forEach(((e,t)=>{re(e.length===n,(()=>`Error in concat${n}D: rank of tensors[${t}] must be the same as the rank of the rest (${n})`))})),re(t>=0&&t<n,(()=>`Error in concat${n}D: axis must be between 0 and ${n-1}.`));const r=e[0];e.forEach(((e,s)=>{for(let a=0;a<n;a++)re(a===t||e[a]===r[a],(()=>`Error in concat${n}D: Shape of tensors[${s}] (${e}) does not match the shape of the rest (${r}) along the non-concatenated axis ${s}.`))}))}function Md(e,t){const n=e[0].slice();for(let r=1;r<e.length;r++)n[t]+=e[r][t];return n}const Od=30;function Bd(e){return e<=Od?e:Fe(e,Math.floor(Math.sqrt(e)))}function zd(e,t,n){return[n*("number"==typeof e?e:e[0]),t*("number"==typeof e?e:e[1])]}function Ld(e,t,n,r=!0){let s=[];if(r)s=s.concat(t.slice(0)),s.push(e[0]/n),s=s.concat(e.slice(1));else{s=s.concat(e[0]);const n=t.length;for(let r=0;r<n;++r)s=s.concat([e[r+1]/t[r],t[r]]);s=s.concat(e.slice(n+1))}return s}function Pd(e,t,n=!0){const r=[];if(n){r.push(t);for(let n=t+1;n<e;++n)n<=2*t?(r.push(n),r.push(n-(t+1))):r.push(n)}else{const n=[],s=[];for(let r=1;r<e;++r)r>=2*t+1||r%2==1?s.push(r):n.push(r);r.push(...n),r.push(0),r.push(...s)}return r}function Ud(e,t,n,r=!0){const s=[];r?s.push(e[0]/n):s.push(e[0]*n);for(let n=1;n<e.length;++n)n<=t.length?r?s.push(t[n-1]*e[n]):s.push(e[n]/t[n-1]):s.push(e[n]);return s}function Wd(e,t){const n=[0];for(let r=0;r<t;++r)n.push(e[r][0]);return n}function Vd(e,t,n){const r=e.slice(0,1);for(let s=0;s<n;++s)r.push(e[s+1]-t[s][0]-t[s][1]);return r}const Gd=1.7580993408473768,jd=1.0507009873554805,Hd=.3275911,qd=.254829592,Kd=-.284496736,Xd=1.421413741,Yd=-1.453152027,Zd=1.061405429;function Jd(e,t){if(e.length!==t.length)throw new Error(`Cannot merge real and imag arrays of different lengths. real:${e.length}, imag: ${t.length}.`);const n=new Float32Array(2*e.length);for(let r=0;r<n.length;r+=2)n[r]=e[r/2],n[r+1]=t[r/2];return n}function Qd(e){const t=new Float32Array(e.length/2),n=new Float32Array(e.length/2);for(let r=0;r<e.length;r+=2)t[r/2]=e[r],n[r/2]=e[r+1];return{real:t,imag:n}}function ef(e){const t=Math.ceil(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=0;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function nf(e){const t=Math.floor(e.length/4),n=new Float32Array(t),r=new Float32Array(t);for(let t=2;t<e.length;t+=4)n[Math.floor(t/4)]=e[t],r[Math.floor(t/4)]=e[t+1];return{real:n,imag:r}}function rf(e,t){return{real:e[2*t],imag:e[2*t+1]}}function sf(e,t,n,r){e[2*r]=t,e[2*r+1]=n}function af(e,t){const n=new Float32Array(e/2),r=new Float32Array(e/2);for(let s=0;s<Math.ceil(e/2);s++){const a=(t?2:-2)*Math.PI*(s/e);n[s]=Math.cos(a),r[s]=Math.sin(a)}return{real:n,imag:r}}function of(e,t,n){const r=(n?2:-2)*Math.PI*(e/t);return{real:Math.cos(r),imag:Math.sin(r)}}const uf=/->/g;function lf(e,t){const n=((e=e.replace(/\s/g,"")).length-e.replace(uf,"").length)/"->".length;if(n<1)throw new Error("Equations without an arrow are not supported.");if(n>1)throw new Error('Equation must contain exactly one arrow ("->").');const[r,s]=e.split("->");re(-1===r.indexOf("..."),(()=>'The ellipsis notation ("...") is not supported yet.'));const a=r.split(","),i=a.length;if(t!==i)throw new Error(`Expected ${i} input tensors, received ${t}`);if(i>2)throw new Error("Support for more than 2 input tensors is not implemented yet.");const o=[];for(let e=0;e<s.length;++e){const t=s[e];if(!a.some((e=>-1!==e.indexOf(t))))throw new Error(`Output subscripts contain the label ${t} not present in the input subscripts.`);-1===o.indexOf(t)&&o.push(t)}for(let e=0;e<r.length;++e){const t=r[e];-1===o.indexOf(t)&&","!==t&&o.push(t)}const u=new Array(a.length);for(let e=0;e<i;++e){if(new Set(a[e].split("")).size!==a[e].length)throw new Error(`Found duplicate axes in input component ${a[e]}. Support for duplicate axes in input is not implemented yet.`);u[e]=[];for(let t=0;t<a[e].length;++t)u[e].push(o.indexOf(a[e][t]))}const l=o.length,c=[];for(let e=s.length;e<l;++e)c.push(e);return{allDims:o,summedDims:c,idDims:u}}function cf(e,t){let n=new Array(e);n.fill(-1);for(let e=0;e<t.length;++e)n[t[e]]=e;const r=[];for(let t=0;t<e;++t)-1===n[t]&&r.push(t);return n=n.filter((e=>-1!==e)),{permutationIndices:n,expandDims:r}}function hf(e,t,n){const r=new Array(e);for(let e=0;e<n.length;++e){const s=n[e].shape;for(let n=0;n<t[e].length;++n)void 0===r[t[e][n]]?r[t[e][n]]=s[n]:re(r[t[e][n]]===s[n],(()=>`Expected dimension ${r[t[e][n]]} at axis ${n} of input shaped ${JSON.stringify(s)}, but got dimension ${s[n]}`))}}function pf(e,t){const n=e,r=[];let s=0;0===e.length&&n.push(-1),s=e.length+1;for(let e=0;e<s;++e)r.push([]);const a=[];for(let e=0;e<n.length;++e){const s=ff(t,n[e]);for(const t of s)-1===a.indexOf(t)&&(r[e].push(t),a.push(t))}return{path:n,steps:r}}function df(e){return e.every(((e,t)=>e===t))}function ff(e,t){const n=[];for(let r=0;r<e.length;++r)0!==e[r].length&&-1===e[r].indexOf(t)&&-1!==t||n.push(r);return n}function mf(e,t,n=0){let r=[];if("number"==typeof t)re(e.shape[n]%t==0,(()=>"Number of splits must evenly divide the axis.")),r=new Array(t).fill(e.shape[n]/t);else{const s=t.reduce(((e,t)=>(-1===t&&(e+=1),e)),0);re(s<=1,(()=>"There should be only one negative value in split array."));const a=t.indexOf(-1);if(-1!==a){const r=t.reduce(((e,t)=>t>0?e+t:e));t[a]=e.shape[n]-r}re(e.shape[n]===t.reduce(((e,t)=>e+t)),(()=>"The sum of sizes must match the size of the axis dimension.")),r=t}return r}function gf(e){return`Received SparseTensor with denseShape[0] = 0 but\n  indices.shape[0] = ${e}`}function yf(e,t){return`indices(${e}, 0) is invalid: ${t} < 0`}function bf(e,t,n){return`indices(${e}, 0) is invalid: ${t} >= ${n}`}function xf(e,t){return`only one output dimension may be -1, not both ${e} and ${t}`}function wf(e,t){return`size ${e} must be non-negative, not ${t}`}function vf(){return"reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero"}function kf(e,t){return`Input to reshape is a SparseTensor with ${oe(e)}\n  dense values, but the requested shape requires a multiple of ${oe(t)}. inputShape=${e} outputShape= ${t}`}function Nf(e,t){return`Input to reshape is a tensor with ${oe(e)} dense values, but the requested shape has ${oe(t)}. inputShape=${e} outputShape=${t}`}function If(){return"segment ids must be >= 0"}function Cf(){return"segment ids are not increasing"}function Df(e,t){return`Segment id ${e} out of range [0, ${t}), possibly because segmentIds input is not sorted.`}function Ef(e,t,n){return`Bad: indices[${e}] == ${t} out of range [0, ${n})`}function Sf(e,t){let n,r=!1;for(e<=Od?(n=e,r=!0):n=Fe(e,Math.floor(Math.sqrt(e)));!r;)n>t||n===e?r=!0:n=Fe(e,n+1);return n}function Tf(e,t,n){const r=[],s=e.length;for(let a=0;a<s;a++)a!==t?r.push(e[a]):r.push(n);return r}function Af(e,t,n,r){const s=t.shape.length,a=e.shape.length;if(0!==r&&(r<-s||r>s))throw new Error(`Expect batchDims in the range of [-${s}, ${s}], but got ${r}`);if(r<0&&(r+=s),r>a)throw new Error(`batchDims (${r}) must be less than rank(x) (\n    ${a}).`);if(n<r)throw new Error(`batchDims (${r}) must be less than or equal to axis (${n}).`);for(let n=0;n<r;++n)if(e.shape[n]!==t.shape[n])throw new Error(`x.shape[${n}]: ${e.shape[n]} should be equal to indices.shape[${n}]: ${t.shape[n]}.`);const i=e.shape[n],o=[];let u=1,l=1,c=1;for(let t=0;t<r;++t)o.push(e.shape[t]),u*=e.shape[t];for(let t=r;t<n;t++)o.push(e.shape[t]),l*=e.shape[t];for(let e=r;e<s;e++)o.push(t.shape[e]);for(let t=n+1;t<a;t++)o.push(e.shape[t]),c*=e.shape[t];return{batchSize:u,sliceSize:c,outerSize:l,dimSize:i,outputShape:o}}function $f(e){try{return e.map((e=>_s(e)))}catch(e){throw new Error(`Failed to decode encoded string bytes into utf-8, error: ${e}`)}}function Ff(e){return e.map((e=>Rs(e)))}const Rf={kernelName:Ye,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,Xh(Ci(n,"float32"),-1))}}},_f={kernelName:Ze,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=du(Ci(n,"float32")),r=pu(Su(ku(1),t));return xc(cu(e,r))}}}},Mf={kernelName:Je,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=pu(Su(du(Ci(n,"float32")),1));return cu(e,t)}}}},Of={kernelName:Qe,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zi(n.shape,r.shape);return{a:()=>{let t=e;const r=Yi(n.shape,s);return r.length>0&&(t=Nc(t,r)),ll(t,n.shape)},b:()=>{let t=e;const n=Yi(r.shape,s);return n.length>0&&(t=Nc(t,n)),ll(t,r.shape)}}}},Bf={kernelName:et,saveAllInputs:!0,gradFunc:(e,t)=>{const n={};return t.forEach(((t,r)=>{n[r]=()=>e.clone()})),n}},zf={kernelName:rt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fu(n)}}},Lf={kernelName:st,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>fu(n)}}},Pf={kernelName:at,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,pu(Su(ku(1),du(Ci(n,"float32")))))}}},Uf={kernelName:it,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=pu(uu(ku(1),du(Ci(n,"float32"))));return cu(e,t)}}}},Wf={kernelName:lt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zi(n.shape,r.shape);return{a:()=>{const t=uu(du(n),du(r));let a=hu(e,cu(r,t));const i=Yi(n.shape,s);return i.length>0&&(a=Nc(a,i)),ll(a,n.shape)},b:()=>{const t=uu(du(n),du(r));let a=xc(hu(e,cu(n,t)));const i=Yi(r.shape,s);return i.length>0&&(a=Nc(a,i)),ll(a,r.shape)}}}},Vf={kernelName:ot,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,uu(du(Ci(n,"float32")),1))}}},Gf={kernelName:ut,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,Su(ku(1),du(Ci(n,"float32"))))}}},jf=Da({avgPool3dGrad_:function(e,t,n,r,s,a){const i=Na(e,"dy","avgPool3dGrad"),o=Na(t,"input","avgPool3dGrad");let u=i,l=o,c=!1;4===o.rank&&(c=!0,u=ll(i,[1,i.shape[0],i.shape[1],i.shape[2],i.shape[3]]),l=ll(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]])),re(5===u.rank,(()=>`Error in avgPool3dGrad: dy must be rank 5 but got rank ${u.rank}.`)),re(5===l.rank,(()=>`Error in avgPool3dGrad: input must be rank 5 but got rank ${l.rank}.`)),ul("avgPool3dGrad",s,a);const h={dy:u,input:l},p={filterSize:n,strides:r,pad:s,dimRoundingMode:a},d=da.runKernel(dt,h,p);return c?ll(d,[d.shape[1],d.shape[2],d.shape[3],d.shape[4]]):d}}),Hf={kernelName:pt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i,dimRoundingMode:o}=n;return{x:()=>jf(e,r,s,a,i,o)}}},qf=Da({avgPoolGrad_:function(e,t,n,r,s){const a=Na(e,"dy","avgPoolGrad"),i=Na(t,"input","avgPoolGrad");re(i.rank===a.rank,(()=>`Rank of input (${i.rank}) does not match rank of dy (${a.rank})`));let o=i,u=a,l=!1;3===i.rank&&(l=!0,o=ll(i,[1,i.shape[0],i.shape[1],i.shape[2]]),u=ll(a,[1,a.shape[0],a.shape[1],a.shape[2]])),re(4===u.rank,(()=>`Error in avgPoolGrad: dy must be rank 4 but got rank ${u.rank}.`)),re(4===o.rank,(()=>`Error in avgPoolGrad: input must be rank 4 but got rank ${o.rank}.`));const c={dy:u,input:o},h={filterSize:n,strides:r,pad:s},p=da.runKernel(ht,c,h);return l?ll(p,[p.shape[1],p.shape[2],p.shape[3]]):p}}),Kf={kernelName:ct,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{filterSize:s,strides:a,pad:i}=n;return{x:()=>qf(e,r,s,a,i)}}},Xf={kernelName:ft,inputsToSave:["a","b"],gradFunc:(e,t,n)=>{const[r,s]=t,{transposeA:a,transposeB:i}=n;return a||i?!a&&i?{a:()=>ji(e,s,!1,!1),b:()=>ji(e,r,!0,!1)}:a&&!i?{a:()=>ji(s,e,!1,!0),b:()=>ji(r,e,!1,!1)}:{a:()=>ji(s,e,!0,!0),b:()=>ji(e,r,!0,!0)}:{a:()=>ji(e,s,!1,!0),b:()=>ji(r,e,!0,!1)}}},Yf={kernelName:mt,gradFunc:(e,t,n)=>{const{blockShape:r,crops:s}=n;return{x:()=>ih(e,r,s)}}},Zf={kernelName:yt,gradFunc:(e,t,n)=>{const r=n,s=r.inputShape,a=r.shape,i=Array.from(a);for(let e=s.length-1;e>=0;e--)if(s[e]===a[e])i[e]=1;else if(1!==s[e])throw new Error(`broadcastTo(): [${s}] cannot be broadcast to [${a}].`);const o=[];for(let e=0;e<i.length;e++)i[e]>1&&o.push(e);return{x:()=>Nc(e,o,!0)}}},Jf={kernelName:xt,gradFunc:e=>({x:()=>e.clone()})},Qf={kernelName:wt,gradFunc:e=>({x:()=>fu(e)})},em={kernelName:vt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{clipValueMin:s,clipValueMax:a}=n;return{x:()=>ql(_c(oc(r,s),fc(r,a)),e,fu(e))}}},tm={kernelName:Nt,inputsToSave:["x"],gradFunc:Rf.gradFunc},nm={kernelName:It,saveAllInputs:!0,gradFunc:(e,t,n)=>{const r=t.map((e=>e.shape)),{axis:s}=n,a=ye(s,t[0].shape)[0],i=r.map((e=>e[a]));return Gh(e,i,a).map((e=>()=>e))}},rm={kernelName:Ct,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{dilations:a,strides:i,pad:o,dataFormat:u}=n;return re(al(a),(()=>`Error in gradient of conv2D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${a}'`)),{x:()=>Rl(r.shape,e,s,i,o,u),filter:()=>kp(r,e,s.shape,i,o,u)}}},sm={kernelName:Et,inputsToSave:["dy","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,{strides:a,pad:i,dataFormat:o,dimRoundingMode:u}=n;return{dy:()=>$l(e,s,a,i,o,1,u),filter:()=>kp(e,r,s.shape,a,i,o,u)}}},am=Da({conv3DBackpropFilter_:function(e,t,n,r,s){let a=e;4===e.rank&&(a=ll(e,[1,e.shape[0],e.shape[1],e.shape[2],e.shape[3]]));let i=t;4===i.rank&&(i=ll(t,[1,t.shape[0],t.shape[1],t.shape[2],t.shape[3]])),re(5===a.rank,(()=>`Error in conv3dDerFilter: input must be rank 5, but got shape ${a.shape}.`)),re(5===i.rank,(()=>`Error in conv3dDerFilter: dy must be rank 5, but got shape ${i.shape}.`)),re(5===n.length,(()=>`Error in conv3dDerFilter: filterShape must be length 5, but got ${n}.`)),re(a.shape[4]===n[3],(()=>`Error in conv3dDerFilter: depth of input ${a.shape[4]}) must match input depth in filter (${n[3]}.`)),re(i.shape[4]===n[4],(()=>`Error in conv3dDerFilter: depth of dy (${i.shape[4]}) must match output depth for filter (${n[4]}).`));const o={x:a,dy:i},u={strides:r,pad:s,filterShape:n};return da.runKernel(Tt,o,u)}}),im={kernelName:St,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a}=n;re(al(r),(()=>`Error in gradient of conv3D: dilation rates greater than 1 are not yet supported in gradients. Got dilations '${r}'`));const[i,o]=t;return{x:()=>Ol(i.shape,e,o,s,a),filter:()=>am(i,e,o.shape,s,a)}}},om={kernelName:$t,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(xc(_h(Ci(n,"float32"))),e)}}},um={kernelName:Ft,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(Mh(Ci(n,"float32")),e)}}},lm={kernelName:Rt,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s,exclusive:a,reverse:i}=n;return{x:()=>{const t=Ac([s],r.rank);let n=Pl(e,s,a,!i);return null!=t&&(n=qi(n,t)),n}}}},cm={kernelName:Bt,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const{dilations:r,strides:s,pad:a,dimRoundingMode:i}=n,o=null==r?[1,1]:r;re(al(o),(()=>`Error in gradient of depthwiseConv2dNative: dilation rates greater than 1 are not yet supported. Got dilations '${o}'`));const[u,l]=t;return re(4===u.rank,(()=>`Error in gradient of depthwiseConv2dNative: input must be rank 4, but got rank ${u.rank}.`)),re(4===l.rank,(()=>`Error in gradient of depthwiseConv2dNative: filter must be rank 4, but got rank ${l.rank}.`)),re(u.shape[3]===l.shape[2],(()=>`Error in gradient of depthwiseConv2d: number of input channels (${u.shape[3]}) must match the inChannels dimension in filter ${l.shape[2]}.`)),re(il(s,o),(()=>`Error in gradient of depthwiseConv2d: Either strides or dilations must be  1. Got strides ${s} and dilations '${o}'.`)),ul("depthwiseConv2d",a,i),{x:()=>Tp(u.shape,e,l,s,a,o,i),filter:()=>Sp(u,e,l.shape,s,a,o,i)}}},hm={kernelName:Ut,inputsToSave:["x","filter"],gradFunc:(e,t,n)=>{const[r,s]=t,a={x:r,filter:s,dy:e},i={x:r,filter:s,dy:e};return{x:()=>da.runKernel(Wt,a,n),filter:()=>da.runKernel(Vt,i,n)}}},pm={kernelName:Ht,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t,r={dy:e,y:n};return{x:()=>da.runKernel(qt,r)}}},dm={kernelName:Kt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hu(Ql(xc(du(n))),2/Math.sqrt(Math.PI));return{x:()=>hu(e,r)}}},fm={kernelName:Yt,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,n)}}},mm={kernelName:Zt,inputsToSave:["input"],gradFunc:(e,t)=>{const[n]=t;return{input:()=>ll(e,n.shape)}}},gm={kernelName:Jt,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,Ql(n))}}},ym={kernelName:nn,gradFunc:e=>({x:()=>fu(e)})},bm={kernelName:rn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zi(n.shape,r.shape);return{a:()=>{const t=cu(e,Ci(r,"float32")),a=Yi(n.shape,s);return a.length>0?ll(Nc(t,a),n.shape):t},b:()=>{let t=hu(e,Ci(n,"float32"));const a=Yi(r.shape,s);a.length>0&&(t=ll(Nc(t,a),r.shape));const i=du(r);return xc(cu(t,Ci(i,"float32")))}}}},xm={kernelName:sn,inputsToSave:["x","mean","variance","scale"],gradFunc:(e,t,n)=>{const{varianceEpsilon:r}=n,[s,a,i,o]=t,u=null==o?ku(1):o,l=Yi(a.shape,s.shape),c=[];if(1===a.rank){for(let e=0;e<s.shape.length-1;++e)c.push(s.shape[e]);c.push(1)}const h=Su(s,a),p=hu(e,u),d=Th(uu(i,ku(r))),f=hu(hu(hu(d,d),d),ku(-.5));return{x:()=>1===a.rank?ll(hu(hu(e,nc(ll(d,[1,1,1,a.shape[0]]),c)),u),s.shape):ll(hu(hu(e,d),u),s.shape),mean:()=>{let e=hu(hu(d,ku(-1)),p);return 1===a.rank&&(e=Nc(e,l)),ll(e,a.shape)},variance:()=>{let e=hu(hu(f,h),p);return 1===a.rank&&(e=Nc(e,l)),ll(e,a.shape)},scale:()=>{const t=hu(h,d);let n=hu(e,t);return 1===a.rank&&(n=Nc(n,l)),ll(n,a.shape)},offset:()=>{let t=e;return 1===a.rank&&(t=Nc(t,l)),ll(t,a.shape)}}}},wm={kernelName:an,inputsToSave:["x","indices"],gradFunc:(e,t,n)=>{const[r,s]=t,{axis:a}=n,i=ye(a,r.shape)[0];return{x:()=>{const t=r.shape,n=s.size,o=t.slice(0,i),u=o.length,l=t.slice(a,t.length).slice(1),c=l.length,h=vm(0,u),p=vm(u+1,u+1+c),d=km([o,[n],l]),f=ll(e,d),m=ll(s,[n]),g=km([[u],h,p]),y=qi(f,g);let b=ip(y,m,r.shape[i]);const x=$c(g);return b=qi(b,x),b},indices:()=>s}}};function vm(e,t){const n=[];for(let r=e;r<t;++r)n.push(r);return n}function km(e){const t=[];for(let n=0;n<e.length;++n)for(let r=0;r<e[n].length;++r)t.push(e[n][r]);return t}const Nm={kernelName:ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>fu(n),b:()=>fu(r)}}},Im={kernelName:cn,gradFunc:e=>({x:()=>Ci(e,"float32")})},Cm={kernelName:dn,gradFunc:e=>({x:()=>fu(e)})},Dm={kernelName:fn,gradFunc:e=>({x:()=>fu(e)})},Em={kernelName:mn,gradFunc:e=>({x:()=>fu(e)})},Sm={kernelName:gn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{alpha:s}=n,a=ic(r,0);return{x:()=>ql(a,e,hu(e,s))}}},Tm={kernelName:vn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,uu(n,1))}}},Am={kernelName:wn,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,Ci(n,"float32"))}}},$m={kernelName:Cn,inputsToSave:[],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n;return{logits:()=>{const t=Ql(r);return Su(e,hu(Nc(e,s,!0),t))}}}},Fm=Da({localResponseNormalizationBackprop_:function(e,t,n,r=5,s=1,a=1,i=.5){const o={x:e,y:t,dy:n},u={depthRadius:r,bias:s,alpha:a,beta:i};return da.runKernel(En,o,u)}}),Rm={kernelName:Dn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{depthRadius:a,bias:i,alpha:o,beta:u}=n;return{x:()=>Fm(r,s,e,a,i,o,u)}}};function _m(e,t,n,r){return t.rank<n.rank&&(t=ll(t,Sc(t.shape,r))),e.rank<n.rank&&(e=ll(e,Sc(e.shape,r))),{x:()=>hu(e,Ci(Hl(n,t),e.dtype))}}const Mm={kernelName:Sn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{reductionIndices:s}=r,a=t[0],i=_m(e,t[1],a,ye(s,a.shape));return{x:()=>i.x()}}},Om={kernelName:Tn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hu(e,Ci(oc(n,r),"float32")),b:()=>hu(e,Ci(dc(n,r),"float32"))}}},Bm=Da({maxPool3dGrad_:function(e,t,n,r,s,a,i){const o=Na(e,"dy","maxPool3dGrad"),u=Na(t,"input","maxPool3dGrad"),l=Na(n,"output","maxPool3dGrad");let c=o,h=u,p=l,d=!1;4===u.rank&&(d=!0,c=ll(o,[1,o.shape[0],o.shape[1],o.shape[2],o.shape[3]]),h=ll(u,[1,u.shape[0],u.shape[1],u.shape[2],u.shape[3]]),p=ll(l,[1,l.shape[0],l.shape[1],l.shape[2],l.shape[3]])),re(5===c.rank,(()=>`Error in maxPool3dGrad: dy must be rank 5 but got rank ${c.rank}.`)),re(5===h.rank,(()=>`Error in maxPool3dGrad: input must be rank 5 but got rank ${h.rank}.`)),re(5===p.rank,(()=>`Error in maxPool3dGrad: output must be rank 5 but got rank ${p.rank}.`)),ul("maxPool3dGrad",a,i);const f={dy:c,input:h,output:p},m={filterSize:r,strides:s,pad:a,dimRoundingMode:i},g=da.runKernel(Rn,f,m);return d?ll(g,[g.shape[1],g.shape[2],g.shape[3],g.shape[4]]):g}}),zm={kernelName:Fn,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=n;return{x:()=>Bm(e,r,s,a,i,o,u)}}},Lm=Da({maxPoolGrad_:function(e,t,n,r,s,a,i){const o=Na(e,"dy","maxPoolGrad"),u=Na(t,"input","maxPoolGrad"),l=Na(n,"output","maxPoolGrad");re(u.rank===o.rank,(()=>`Rank of input (${u.rank}) does not match rank of dy (${o.rank})`)),re(4===o.rank,(()=>`Error in maxPoolGrad: dy must be rank 4 but got rank ${o.rank}.`)),re(4===u.rank,(()=>`Error in maxPoolGrad: input must be rank 4 but got rank ${u.rank}.`)),ul("maxPoolGrad",a,i);const c={dy:o,input:u,output:l},h={filterSize:r,strides:s,pad:a,dimRoundingMode:i};return da.runKernel($n,c,h)}}),Pm={kernelName:An,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r,s]=t,{filterSize:a,strides:i,pad:o}=n;return{x:()=>Lm(e,r,s,a,i,o)}}},Um={kernelName:zn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>fl(e,a,r.shape)}}},Wm={kernelName:Yn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const r=t[0],{paddings:s}=n,a=s.map((e=>e[0]));return{x:()=>fl(e,a,r.shape)}}},Vm={kernelName:Jn,inputsToSave:["a","b"],outputsToSave:[!0],gradFunc:(e,t)=>{const[n,r,s]=t,a=n,i=r,o=Zi(a.shape,i.shape);return{a:()=>{const t=Ci(i,"float32");let n=hu(e,hu(t,Eu(a,Su(t,ku(1)))));const r=Yi(a.shape,o);return r.length>0&&(n=Nc(n,r)),ll(n,a.shape)},b:()=>{const t=ic(a,0),n=ql(t,yc(a),fu(a));let r=hu(e,hu(s,n));const u=Yi(i.shape,o);return u.length>0&&(r=Nc(r,u)),ll(r,i.shape)}}}},Gm={kernelName:gr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>{const t=ic(n,ku(0)),r=ku(Gd),s=ku(jd),a=hu(e,s),i=hu(hu(e,r),Ql(Ci(n,"float32")));return ql(t,a,i)}}}},jm={kernelName:Cr,gradFunc:(e,t,n)=>{const{blockShape:r,paddings:s}=n;return{x:()=>yl(e,r,s)}}},Hm={kernelName:Dr,gradFunc:(e,t,n)=>{const{axis:r}=n;return{x:()=>pl(e,r)}}},qm=[Rf,_f,Mf,Of,Bf,zf,Lf,Pf,Uf,Wf,Vf,Gf,Hf,Kf,Xf,Yf,Zf,Jf,Qf,em,tm,nm,sm,rm,im,om,um,lm,cm,hm,{kernelName:Gt,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zi(n.shape,r.shape);return{a:()=>{const t=cu(e,Ci(r,"float32")),a=Yi(n.shape,s);return a.length>0?ll(Nc(t,a),n.shape):t},b:()=>{let t=hu(e,Ci(n,"float32"));const a=Yi(r.shape,s);a.length>0&&(t=ll(Nc(t,a),r.shape));const i=du(r);return xc(cu(t,Ci(i,"float32")))}}}},pm,dm,fm,mm,gm,bm,ym,xm,wm,Nm,Im,Cm,Dm,Em,Sm,Tm,Am,$m,Rm,Mm,Mm,Om,zm,Pm,{kernelName:Mn,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{axis:s}=n,a=ye(s,r.shape),i=oe(Ec(r.shape,a)[1]);return{x:()=>{const t=r.shape.slice();a.forEach((e=>{t[e]=1}));const n=ll(e,t);return cu(hu(n,Vc(r.shape,"float32")),i)}}}},{kernelName:On,inputsToSave:["x"],outputsToSave:[!0],gradFunc:(e,t,n)=>{const r=n,{axis:s}=r,[a,i]=t,o=_m(e,i,a,ye(s,a.shape));return{x:()=>o.x()}}},{kernelName:Bn,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t;return{a:()=>hu(e,Ci(fc(n,r),"float32")),b:()=>hu(e,Ci(ic(n,r),"float32"))}}},Um,{kernelName:Ln,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zi(n.shape,r.shape);return{a:()=>{const t=Yi(n.shape,s);return t.length>0?ll(Nc(e,t),n.shape):e},b:()=>{const t=hu(e,xc(sc(cu(n,r)))),a=Yi(r.shape,s);return a.length>0?ll(Nc(t,a),r.shape):t}}}},{kernelName:Un,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zi(n.shape,r.shape);return{a:()=>{const t=hu(e,Ci(r,"float32")),a=Yi(n.shape,s);return a.length>0?ll(Nc(t,a),n.shape):t},b:()=>{const t=hu(e,Ci(n,"float32")),a=Yi(r.shape,s);return a.length>0?ll(Nc(t,a),r.shape):t}}}},{kernelName:Wn,gradFunc:e=>({x:()=>xc(e)})},{kernelName:Kn,inputsToSave:["indices"],gradFunc:(e,t)=>{const n=t[0];return{indices:()=>Wc(n.shape,"float32")}}},{kernelName:qn,gradFunc:e=>({x:()=>fu(e)})},{kernelName:Xn,saveAllInputs:!0,gradFunc:(e,t,n)=>{const{axis:r}=n;return op(e,r).map((e=>()=>e))}},Wm,Wm,Vm,{kernelName:Qn,inputsToSave:["x","alpha"],gradFunc:(e,t)=>{const[n,r]=t,s=ic(n,0);return{x:()=>ql(s,e,hu(e,r)),alpha:()=>{let t=ql(s,fu(e),hu(e,n));const a=Yi(r.shape,e.shape);return a.length>0&&(t=Nc(t,a)),ll(t,r.shape)}}}},{kernelName:rr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,xc(du(n)))}}},{kernelName:cr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t,r=hu(fc(n,6),Xh(n));return{x:()=>hu(e,Ci(r,"float32"))}}},{kernelName:sr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,Ci(Xh(n),"float32"))}}},{kernelName:ar,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>ll(e,n.shape)}}},{kernelName:ur,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>da.runKernel(lr,s,n)}}},{kernelName:ir,inputsToSave:["images"],gradFunc:(e,t,n)=>{const[r]=t,s={dy:e,images:r};return{images:()=>da.runKernel(or,s,n)}}},{kernelName:hr,gradFunc:(e,t,n)=>{const{dims:r}=n,s=ye(r,e.shape);return{x:()=>Nh(e,s)}}},{kernelName:pr,gradFunc:e=>({x:()=>fu(e)})},{kernelName:dr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>xc(cu(e,hu(Eu(n,1.5),2)))}}},{kernelName:mr,inputsToSave:["condition"],gradFunc:(e,t)=>{const[n]=t;return{condition:()=>Ci(fu(n),"float32"),t:()=>hu(e,Ci(n,e.dtype)),e:()=>hu(e,Ci(Mc(n),e.dtype))}}},Gm,{kernelName:vr,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,hu(n,Su(ku(1),n)))}}},{kernelName:wr,gradFunc:e=>({x:()=>fu(e)})},{kernelName:br,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(zl(Ci(n,"float32")),e)}}},{kernelName:xr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(Ll(Ci(n,"float32")),e)}}},{kernelName:yr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{begin:s,size:a}=n,i=r.shape,[o,u]=No(r,s,a),l=[];for(let t=0;t<e.rank;t++)l.push([o[t],i[t]-o[t]-u[t]]);return{x:()=>th(e,l)}}},{kernelName:Er,outputsToSave:[!0],gradFunc:(e,t,n)=>{const[r]=t,{dim:s}=n,a=hu(e,r);return{logits:()=>Su(a,hu(Nc(a,[s],!0),r))}}},{kernelName:kr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,dl(n))}}},jm,jm,Hm,Hm,{kernelName:Nr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,hu(pu(Ci(n,"float32")),2))}}},{kernelName:Rr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=ku(2);return{a:()=>hu(e,hu(s,Su(n,r))),b:()=>hu(e,hu(s,Su(r,n)))}}},{kernelName:_r,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(e,hu(Ci(n,"float32"),2))}}},{kernelName:Yr,gradFunc:e=>({x:()=>fu(e)})},{kernelName:Lr,inputsToSave:["a","b"],gradFunc:(e,t)=>{const[n,r]=t,s=Zi(n.shape,r.shape);return{a:()=>{let t=e;const r=Yi(n.shape,s);return r.length>0&&(t=Nc(t,r)),ll(t,n.shape)},b:()=>{let t=e;const n=Yi(r.shape,s);return n.length>0&&(t=Nc(t,n)),ll(xc(t),r.shape)}}}},{kernelName:Ir,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,s=r.shape.slice(),{axis:a}=n;ye(a,r.shape).forEach((e=>{s[e]=1}));const i=ll(e,s),o=hu(i,Vc(r.shape,"float32"));return{x:()=>o}}},{kernelName:Pr,inputsToSave:["x"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>cu(e,du(zl(n)))}}},{kernelName:Ur,outputsToSave:[!0],gradFunc:(e,t)=>{const[n]=t;return{x:()=>hu(Su(ku(1),du(n)),e)}}},{kernelName:Wr,inputsToSave:["x"],gradFunc:(e,t,n)=>{const[r]=t,{reps:s}=n;return{x:()=>{let t=fu(r);if(1===r.rank)for(let n=0;n<s[0];++n)t=uu(t,fl(e,[n*r.shape[0]],[r.shape[0]]));else if(2===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)t=uu(t,fl(e,[n*r.shape[0],a*r.shape[1]],[r.shape[0],r.shape[1]]));else if(3===r.rank)for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)t=uu(t,fl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2]],[r.shape[0],r.shape[1],r.shape[2]]));else{if(4!==r.rank)throw new Error(`Gradient for tile operation is not implemented for rank-${r.rank} tensors yet.`);for(let n=0;n<s[0];++n)for(let a=0;a<s[1];++a)for(let i=0;i<s[2];++i)for(let o=0;o<s[3];++o)t=uu(t,fl(e,[n*r.shape[0],a*r.shape[1],i*r.shape[2],o*r.shape[3]],[r.shape[0],r.shape[1],r.shape[2],r.shape[3]]))}return t}}}},{kernelName:jr,gradFunc:(e,t,n)=>{const r=n,{perm:s}=r,a=$c(s);return{x:()=>qi(e,a)}}},{kernelName:qr,gradFunc:(e,t,n)=>{const r=n,{axis:s}=r;return{value:()=>Kh(e,s)}}},{kernelName:Kr,inputsToSave:["segmentIds"],gradFunc:(e,t)=>{const[n]=t;return{x:()=>function(e,t){const n=$u(t,fu(t)),r=ac(e,n);let s=oc(t,ku(0,"int32"));const a=r.rank-s.rank;for(let e=0;e<a;++e)s=ec(s,e+1);s=_c(s,Vc(r.shape,"bool"));const i=fu(r);return ql(s,r,i)}(e,n)}}},{kernelName:Xr,gradFunc:e=>({x:()=>fu(e)})}];for(const e of qm)cs(e);let Km;function Xm(){return null==Km&&(Km=iu().epsilon()),Km}Ks().prototype.abs=function(){return this.throwIfDisposed(),Au(this)},Ks().prototype.acos=function(){return this.throwIfDisposed(),Bu(this)},Ks().prototype.acosh=function(){return this.throwIfDisposed(),zu(this)},Ks().prototype.add=function(e){return this.throwIfDisposed(),uu(this,e)},Ks().prototype.all=function(e,t){return this.throwIfDisposed(),Pu(this,e,t)},Ks().prototype.any=function(e,t){return this.throwIfDisposed(),Uu(this,e,t)},Ks().prototype.argMax=function(e){return this.throwIfDisposed(),Wu(this,e)},Ks().prototype.argMin=function(e){return this.throwIfDisposed(),Vu(this,e)},Ks().prototype.asScalar=function(){return this.throwIfDisposed(),re(1===this.size,(()=>"The array must have only 1 element.")),ll(this,[])},Ks().prototype.asType=function(e){return this.throwIfDisposed(),Ci(this,e)},Ks().prototype.as1D=function(){return this.throwIfDisposed(),ll(this,[this.size])},Ks().prototype.as2D=function(e,t){return this.throwIfDisposed(),ll(this,[e,t])},Ks().prototype.as3D=function(e,t,n){return this.throwIfDisposed(),ll(this,[e,t,n])},Ks().prototype.as4D=function(e,t,n,r){return this.throwIfDisposed(),ll(this,[e,t,n,r])},Ks().prototype.as5D=function(e,t,n,r,s){return this.throwIfDisposed(),ll(this,[e,t,n,r,s])},Ks().prototype.asin=function(){return this.throwIfDisposed(),Gu(this)},Ks().prototype.asinh=function(){return this.throwIfDisposed(),ju(this)},Ks().prototype.atan=function(){return this.throwIfDisposed(),Hu(this)},Ks().prototype.atan2=function(e){return this.throwIfDisposed(),qu(this,e)},Ks().prototype.atanh=function(){return this.throwIfDisposed(),Ku(this)},Ks().prototype.avgPool=function(e,t,n,r){return this.throwIfDisposed(),cl(this,e,t,n,r)},Ks().prototype.batchToSpaceND=function(e,t){return this.throwIfDisposed(),yl(this,e,t)},Ks().prototype.batchNorm=function(e,t,n,r,s){return this.throwIfDisposed(),bl(this,e,t,n,r,s)},Ks().prototype.broadcastTo=function(e){return this.throwIfDisposed(),Il(this,e)},Ks().prototype.cast=function(e){return this.throwIfDisposed(),Ci(this,e)},Ks().prototype.ceil=function(){return this.throwIfDisposed(),Cl(this)},Ks().prototype.clipByValue=function(e,t){return this.throwIfDisposed(),Dl(this,e,t)},Ks().prototype.concat=function(e,t){return this.throwIfDisposed(),e instanceof qs&&(e=[e]),pl([this,...e],t)},Ks().prototype.conv1d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Fl(this,e,t,n,r,s,a)},Ks().prototype.conv2dTranspose=function(e,t,n,r,s){return this.throwIfDisposed(),_l(this,e,t,n,r,s)},Ks().prototype.conv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),$l(this,e,t,n,r,s,a)},Ks().prototype.cos=function(){return this.throwIfDisposed(),zl(this)},Ks().prototype.cosh=function(){return this.throwIfDisposed(),Ll(this)},Ks().prototype.cumsum=function(e,t,n){return this.throwIfDisposed(),Pl(this,e,t,n)},Ks().prototype.depthToSpace=function(e,t){return this.throwIfDisposed(),Wl(this,e,t)},Ks().prototype.depthwiseConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),Vl(this,e,t,n,r,s,a)},Ks().prototype.dilation2d=function(e,t,n,r,s){return this.throwIfDisposed(),jl(this,e,t,n,r,s)},Ks().prototype.divNoNan=function(e){return this.throwIfDisposed(),Kl(this,e)},Ks().prototype.div=function(e){return this.throwIfDisposed(),cu(this,e)},Ks().prototype.dot=function(e){return this.throwIfDisposed(),Xl(this,e)},Ks().prototype.elu=function(){return this.throwIfDisposed(),Zl(this)},Ks().prototype.equal=function(e){return this.throwIfDisposed(),Hl(this,e)},Ks().prototype.erf=function(){return this.throwIfDisposed(),Jl(this)},Ks().prototype.exp=function(){return this.throwIfDisposed(),Ql(this)},Ks().prototype.expandDims=function(e){return this.throwIfDisposed(),ec(this,e)},Ks().prototype.expm1=function(){return this.throwIfDisposed(),tc(this)},Ks().prototype.fft=function(){return this.throwIfDisposed(),Uh(this)},Ks().prototype.flatten=function(){return this.throwIfDisposed(),ll(this,[this.size])},Ks().prototype.floor=function(){return this.throwIfDisposed(),sc(this)},Ks().prototype.floorDiv=function(e){return this.throwIfDisposed(),lu(this,e)},Ks().prototype.gather=function(e,t){return this.throwIfDisposed(),ac(this,e,t)},Ks().prototype.greaterEqual=function(e){return this.throwIfDisposed(),oc(this,e)},Ks().prototype.greater=function(e){return this.throwIfDisposed(),ic(this,e)},Ks().prototype.ifft=function(){return this.throwIfDisposed(),Wh(this)},Ks().prototype.irfft=function(){return this.throwIfDisposed(),Vh(this)},Ks().prototype.isFinite=function(){return this.throwIfDisposed(),lc(this)},Ks().prototype.isInf=function(){return this.throwIfDisposed(),cc(this)},Ks().prototype.isNaN=function(){return this.throwIfDisposed(),hc(this)},Ks().prototype.leakyRelu=function(e){return this.throwIfDisposed(),pc(this,e)},Ks().prototype.lessEqual=function(e){return this.throwIfDisposed(),fc(this,e)},Ks().prototype.less=function(e){return this.throwIfDisposed(),dc(this,e)},Ks().prototype.localResponseNormalization=function(e,t,n,r){return this.throwIfDisposed(),gc(this,e,t,n,r)},Ks().prototype.logSigmoid=function(){return this.throwIfDisposed(),vc(this)},Ks().prototype.logSoftmax=function(e){return this.throwIfDisposed(),Ic(this,e)},Ks().prototype.logSumExp=function(e,t){return this.throwIfDisposed(),Rc(this,e,t)},Ks().prototype.log=function(){return this.throwIfDisposed(),yc(this)},Ks().prototype.log1p=function(){return this.throwIfDisposed(),bc(this)},Ks().prototype.logicalAnd=function(e){return this.throwIfDisposed(),_c(this,e)},Ks().prototype.logicalNot=function(){return this.throwIfDisposed(),Mc(this)},Ks().prototype.logicalOr=function(e){return this.throwIfDisposed(),Oc(this,e)},Ks().prototype.logicalXor=function(e){return this.throwIfDisposed(),Bc(this,e)},Ks().prototype.matMul=function(e,t,n){return this.throwIfDisposed(),ji(this,e,t,n)},Ks().prototype.maxPool=function(e,t,n,r){return this.throwIfDisposed(),zc(this,e,t,n,r)},Ks().prototype.max=function(e,t){return this.throwIfDisposed(),kc(this,e,t)},Ks().prototype.maximum=function(e){return this.throwIfDisposed(),$u(this,e)},Ks().prototype.mean=function(e,t){return this.throwIfDisposed(),Uc(this,e,t)},Ks().prototype.min=function(e,t){return this.throwIfDisposed(),jc(this,e,t)},Ks().prototype.minimum=function(e){return this.throwIfDisposed(),Hc(this,e)},Ks().prototype.mirrorPad=function(e,t){return this.throwIfDisposed(),qc(this,e,t)},Ks().prototype.mod=function(e){return this.throwIfDisposed(),Kc(this,e)},Ks().prototype.mul=function(e){return this.throwIfDisposed(),hu(this,e)},Ks().prototype.neg=function(){return this.throwIfDisposed(),xc(this)},Ks().prototype.norm=function(e,t,n){return this.throwIfDisposed(),dp(this,e,t,n)},Ks().prototype.notEqual=function(e){return this.throwIfDisposed(),Jc(this,e)},Ks().prototype.oneHot=function(e,t=1,n=0){return this.throwIfDisposed(),Hi(this,e,t,n)},Ks().prototype.onesLike=function(){return this.throwIfDisposed(),Qc(this)},Ks().prototype.pad=function(e,t){return this.throwIfDisposed(),th(this,e,t)},Ks().prototype.pool=function(e,t,n,r,s,a){return this.throwIfDisposed(),oh(this,e,t,n,r,s,a)},Ks().prototype.pow=function(e){return this.throwIfDisposed(),Eu(this,e)},Ks().prototype.prelu=function(e){return this.throwIfDisposed(),uh(this,e)},Ks().prototype.prod=function(e,t){return this.throwIfDisposed(),lh(this,e,t)},Ks().prototype.reciprocal=function(){return this.throwIfDisposed(),wh(this)},Ks().prototype.relu=function(){return this.throwIfDisposed(),vh(this)},Ks().prototype.relu6=function(){return this.throwIfDisposed(),kh(this)},Ks().prototype.reshapeAs=function(e){return this.throwIfDisposed(),ll(this,e.shape)},Ks().prototype.reshape=function(e){return this.throwIfDisposed(),ll(this,e)},Ks().prototype.resizeBilinear=function(e,t,n){return this.throwIfDisposed(),Qp(this,e,t,n)},Ks().prototype.resizeNearestNeighbor=function(e,t,n){return this.throwIfDisposed(),ed(this,e,t,n)},Ks().prototype.reverse=function(e){return this.throwIfDisposed(),Nh(this,e)},Ks().prototype.rfft=function(){return this.throwIfDisposed(),jh(this)},Ks().prototype.round=function(){return this.throwIfDisposed(),Sh(this)},Ks().prototype.rsqrt=function(){return this.throwIfDisposed(),Th(this)},Ks().prototype.selu=function(){return this.throwIfDisposed(),Ah(this)},Ks().prototype.separableConv2d=function(e,t,n,r,s,a){return this.throwIfDisposed(),$h(this,e,t,n,r,s,a)},Ks().prototype.sigmoid=function(){return this.throwIfDisposed(),dl(this)},Ks().prototype.sign=function(){return this.throwIfDisposed(),Rh(this)},Ks().prototype.sin=function(){return this.throwIfDisposed(),_h(this)},Ks().prototype.sinh=function(){return this.throwIfDisposed(),Mh(this)},Ks().prototype.slice=function(e,t){return this.throwIfDisposed(),fl(this,e,t)},Ks().prototype.softmax=function(e){return this.throwIfDisposed(),Ph(this,e)},Ks().prototype.softplus=function(){return this.throwIfDisposed(),wc(this)},Ks().prototype.spaceToBatchND=function(e,t){return this.throwIfDisposed(),ih(this,e,t)},Ks().prototype.split=function(e,t){return this.throwIfDisposed(),Gh(this,e,t)},Ks().prototype.sqrt=function(){return this.throwIfDisposed(),pu(this)},Ks().prototype.square=function(){return this.throwIfDisposed(),du(this)},Ks().prototype.squaredDifference=function(e){return this.throwIfDisposed(),Hh(this,e)},Ks().prototype.squeeze=function(e){return this.throwIfDisposed(),qh(this,e)},Ks().prototype.stack=function(e,t){this.throwIfDisposed();const n=e instanceof qs?[this,e]:[this,...e];return Kh(n,t)},Ks().prototype.step=function(e){return this.throwIfDisposed(),Xh(this,e)},Ks().prototype.stridedSlice=function(e,t,n,r,s,a,i,o){return this.throwIfDisposed(),Yh(this,e,t,n,r,s,a,i,o)},Ks().prototype.sub=function(e){return this.throwIfDisposed(),Su(this,e)},Ks().prototype.sum=function(e,t){return this.throwIfDisposed(),Nc(this,e,t)},Ks().prototype.tan=function(){return this.throwIfDisposed(),Zh(this)},Ks().prototype.tanh=function(){return this.throwIfDisposed(),ml(this)},Ks().prototype.tile=function(e){return this.throwIfDisposed(),nc(this,e)},Ks().prototype.toBool=function(){return this.throwIfDisposed(),Ci(this,"bool")},Ks().prototype.toFloat=function(){return this.throwIfDisposed(),Ci(this,"float32")},Ks().prototype.toInt=function(){return this.throwIfDisposed(),Ci(this,"int32")},Ks().prototype.topk=function(e,t){return this.throwIfDisposed(),rp(this,e,t)},Ks().prototype.transpose=function(e){return this.throwIfDisposed(),qi(this,e)},Ks().prototype.unique=function(e){return this.throwIfDisposed(),ap(this,e)},Ks().prototype.unsortedSegmentSum=function(e,t){return this.throwIfDisposed(),ip(this,e,t)},Ks().prototype.unstack=function(e){return this.throwIfDisposed(),op(this,e)},Ks().prototype.where=function(e,t){return this.throwIfDisposed(),ql(e,this,t)},Ks().prototype.zerosLike=function(){return this.throwIfDisposed(),fu(this)};class Ym extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Ym.prototype)}}class Zm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Zm.prototype)}}class Jm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Jm.prototype)}}class Qm extends Error{constructor(e){super(e),Object.setPrototypeOf(this,Qm.prototype)}}class eg extends Error{constructor(e){super(e),Object.setPrototypeOf(this,eg.prototype)}}function tg(e,t){if(Array.isArray(e)){let n=[];for(let r=0;r<t;r++)n=n.concat(e);return n}{const n=new Array(t);return n.fill(e),n}}function ng(e,t){if(!e)throw new eg(t)}function rg(e,t){let n=0;for(const r of e)r===t&&n++;return n}function sg(e){return 1===e.length?e[0]:e}function ag(e){return Array.isArray(e)?e:[e]}function ig(e){const t=e.replace(/(.)([A-Z][a-z0-9]+)/g,"$1_$2").replace(/([a-z])([A-Z])/g,"$1_$2").toLowerCase();return"_"!==t[0]?t:"private"+t}function og(e){return e.length<=1||-1===e.indexOf("_")?e:e.replace(/[_]+(\w|$)/g,((e,t)=>t.toUpperCase()))}Error;let ug={};function lg(e){if(null==e)return null;const t={};return t.className=e.getClassName(),t.config=e.getConfig(),t}function cg(e){if(null!=e&&"object"==typeof e)if(Array.isArray(e))e.forEach((e=>cg(e)));else{const t=Object.keys(e);for(const n of t){const t=e[n];null!=t&&"object"==typeof t&&(Array.isArray(t)||"ndarray"!==t.type||"number"!=typeof t.value?cg(t):e[n]=t.value)}}}function hg(e,t={},n={},r="object",s=!1){if("string"==typeof e){const s=e;let a;if(s in n)a=n[s];else if(s in ug)a=ug[s];else if(a=t[s],null==a)throw new Jm(`Unknown ${r}: ${e}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);return a}{const a=e;if(null==a.className||null==a.config)throw new Jm(`${r}: Improper config format: ${JSON.stringify(a)}.\n'className' and 'config' must set.`);const i=a.className;let o,u;if(i in n?[o,u]=n[i]:i in ug?[o,u]=ug.className:i in t&&([o,u]=t[i]),null==o)throw new Jm(`Unknown ${r}: ${i}. This may be due to one of the following reasons:\n1. The ${r} is defined in Python, in which case it needs to be ported to TensorFlow.js or your JavaScript code.\n2. The custom ${r} is defined in JavaScript, but is not registered properly with tf.serialization.registerClass().`);if(null!=u){const e={};for(const t of Object.keys(ug))e[t]=ug[t];for(const t of Object.keys(n))e[t]=n[t];a.config.customObjects=e;const t=Object.assign({},ug);for(const e of Object.keys(n))ug[e]=n[e];cg(a.config);const r=u(o,a.config,n,s);return ug=Object.assign({},t),r}{const e=Object.assign({},ug);for(const e of Object.keys(n))ug[e]=n[e];const t=new o(a.config);return ug=Object.assign({},e),t}}}function pg(e,t){return-1*function(e,t){return e<t?-1:e>t?1:0}(e,t)}function dg(e){if(null==e)return e;const t=[];for(const n of e)-1===t.indexOf(n)&&t.push(n);return t}function fg(e){if(null==e)throw new Jm(`Invalid value in obj: ${JSON.stringify(e)}`);for(const t in e)if(e.hasOwnProperty(t))return!1;return!0}function mg(e,t,n){if(null!=n&&e.indexOf(n)<0)throw new Jm(`${n} is not a valid ${t}.  Valid values are ${e} or null/undefined.`)}function gg(e,t,n=0,r=1/0){return ng(n>=0),ng(r>=n),Array.isArray(e)&&e.length>=n&&e.length<=r&&e.every((e=>typeof e===t))}function yg(e,t){Array.isArray(e)?(re(e.length>0,(()=>`${t} is unexpectedly an empty array.`)),e.forEach(((e,n)=>yg(e,`element ${n+1} of ${t}`)))):re(Number.isInteger(e)&&e>0,(()=>`Expected ${t} to be a positive integer, but got ${bg(e)}.`))}function bg(e){return null===e?"null":Array.isArray(e)?"["+e.map((e=>bg(e))).join(",")+"]":"string"==typeof e?`"${e}"`:`${e}`}function xg(e){return"relu"===e?"relu":"linear"===e?"linear":"elu"===e?"elu":null}function wg(e,t){return Xo((()=>pu(Nc(hu(e,e),t,!0))))}class vg extends Do{getConfig(){return{}}}class kg extends vg{constructor(e){super(),this.defaultMaxValue=2,this.defaultAxis=0,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Xo((()=>{const t=wg(e,this.axis),n=Dl(t,0,this.maxValue);return hu(e,cu(n,uu(Xm(),t)))}))}getConfig(){return{maxValue:this.maxValue,axis:this.axis}}}kg.className="MaxNorm",So(kg);class Ng extends vg{constructor(e){super(),this.defaultAxis=0,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Xo((()=>cu(e,uu(Xm(),wg(e,this.axis)))))}getConfig(){return{axis:this.axis}}}Ng.className="UnitNorm",So(Ng);class Ig extends vg{apply(e){return vh(e)}}Ig.className="NonNeg",So(Ig);class Cg extends vg{constructor(e){super(),this.defaultMinValue=0,this.defaultMaxValue=1,this.defaultRate=1,this.defaultAxis=0,this.minValue=null!=e.minValue?e.minValue:this.defaultMinValue,this.maxValue=null!=e.maxValue?e.maxValue:this.defaultMaxValue,this.rate=null!=e.rate?e.rate:this.defaultRate,this.axis=null!=e.axis?e.axis:this.defaultAxis}apply(e){return Xo((()=>{const t=wg(e,this.axis),n=uu(hu(this.rate,Dl(t,this.minValue,this.maxValue)),hu(1-this.rate,t));return hu(e,cu(n,uu(Xm(),t)))}))}getConfig(){return{minValue:this.minValue,maxValue:this.maxValue,rate:this.rate,axis:this.axis}}}Cg.className="MinMaxNorm",So(Cg);const Dg={maxNorm:"MaxNorm",minMaxNorm:"MinMaxNorm",nonNeg:"NonNeg",unitNorm:"UnitNorm"};function Eg(e){return lg(e)}function Sg(e,t={}){return hg(e,Eo.getMap().classNameMap,t,"constraint")}function Tg(e){return null==e?null:"string"==typeof e?Sg({className:e in Dg?Dg[e]:e,config:{}}):e instanceof vg?e:Sg(e)}function Ag(e){return new kg(e)}function $g(e){return new Ng(e)}function Fg(){return new Ig}function Rg(e){return new Cg(e)}const _g=["channelsFirst","channelsLast"],Mg=["nearest","bilinear"],Og=["valid","same","causal"],Bg=["max","avg"],zg=["sum","mul","concat","ave"],Lg=new Map;function Pg(e){mg(_g,"DataFormat",e)}function Ug(e){mg(Og,"PaddingMode",e)}function Wg(e){mg(Bg,"PoolMode",e)}const Vg=[];function Gg(e,t){Vg.push(e);try{const e=t();return Vg.pop(),e}catch(e){throw Vg.pop(),e}}function jg(e){if(!Kg(e))throw new Error("Not a valid tensor name: '"+e+"'");return(0===Vg.length?"":Vg.join("/")+"/")+e}function Hg(e){if(!Kg(e))throw new Error("Not a valid tensor name: '"+e+"'");Lg.has(e)||Lg.set(e,0);const t=Lg.get(e);if(Lg.set(e,Lg.get(e)+1),t>0){const n=`${e}_${t}`;return Lg.set(n,1),n}return e}const qg=new RegExp(/^[A-Za-z0-9][-A-Za-z0-9\._\/]*$/);function Kg(e){return!!e.match(qg)}function Xg(e,t,n){null==t&&(t=0),null==n&&(n=e.length);let r=1;for(let s=t;s<n;++s)r*=e[s];return r}function Yg(e){if(0===e.length)return Number.NaN;let t=Number.POSITIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r<t&&(t=r)}return t}function Zg(e){if(0===e.length)return Number.NaN;let t=Number.NEGATIVE_INFINITY;for(let n=0;n<e.length;n++){const r=e[n];r>t&&(t=r)}return t}function Jg(e,t){if(t<e)throw new Jm(`end (${t}) < begin (${e}) is forbidden.`);const n=[];for(let r=e;r<t;++r)n.push(r);return n}function Qg(e,t){return Ci(e,t)}function ey(e,t=-1){const n=e.shape.slice();return t<0&&(t=n.length+t+1),n.splice(t,0,1),ll(e,n)}function ty(e,t,n){return Xo((()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:return Bh(e,[t,0],[n,e.shape[1]]);case 3:return zh(e,[t,0,0],[n,e.shape[1],e.shape[2]]);case 4:return Lh(e,[t,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3]]);case 5:return fl(e,[t,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4]]);case 6:return fl(e,[t,0,0,0,0,0],[n,e.shape[1],e.shape[2],e.shape[3],e.shape[4],e.shape[5]]);default:throw new Jm(`sliceAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ny(e,t,n){return Xo((()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:return Bh(e,[0,t],[e.shape[0],n]);case 3:return zh(e,[0,0,t],[e.shape[0],e.shape[1],n]);case 4:return Lh(e,[0,0,0,t],[e.shape[0],e.shape[1],e.shape[2],n]);default:throw new Jm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function ry(e,t,n,r){return Xo((()=>{switch(e.rank){case 1:return Oh(e,t,n);case 2:switch(r){case 1:return ty(e,t,n);case 2:return ny(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${r}`)}case 3:switch(r){case 1:return ty(e,t,n);case 2:return zh(e,[0,t,0],[e.shape[0],n,e.shape[2]]);case 3:return ny(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${r}`)}case 4:switch(r){case 1:return ty(e,t,n);case 2:return Lh(e,[0,t,0,0],[e.shape[0],n,e.shape[2],e.shape[3]]);case 3:return Lh(e,[0,0,t,0],[e.shape[0],e.shape[1],n,e.shape[3]]);case 4:return ny(e,t,n);default:throw new Jm(`The axis is not within the rank of the tensor ${r}`)}default:throw new Jm(`sliceAlongLastAxis() received an unsupported tensor rank: ${e.rank}`)}}))}function sy(e,t=-1){let n;return t<0&&(n=e[0].rank,t=0!==n?n:0),t===e[0].rank&&(t=-1),pl(e,t)}function ay(e,t){switch(e.rank){case 1:return El([e,t]);case 2:return Sl([e,t],0);case 3:return Tl([e,t],0);case 4:return Al([e,t],0);default:throw new Jm(`concatAlongFirstAxis() received an unsupported tensor rank: ${e.rank}`)}}function iy(e,t){if(Array.isArray(t)||(t=[t]),e.rank!==t.length)throw new Jm(`The length of input n (${t.length}) does not match the number of dimensions in input x (${e.rank})`);return nc(e,t)}function oy(e,t=0,n=1,r,s){return gh(e,t,n,r,s)}function uy(e,t,n,r){if(e.rank<2||t.rank<2)throw new Qm(`dot requires both inputs to be rank >= 2 but got x shape = ${e.shape} and y shape = ${t.shape}`);if(t.rank>=3&&e.shape.slice(-1)[0]!==t.shape.slice(-2)[0])throw new Qm(`If rank y >= 3, then the second last dim of y must equal the last dim of x but got x shape = ${e.shape} and  y shape = ${t.shape}`);if(2===e.rank&&2===t.rank)return $p({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hy(e.rank,r,"channelsLast"):null,activation:n});{const s=e.shape.slice(),a=s.pop();e=ll(e,[-1,a]);const i=t.shape.slice(),o=i.pop(),u=i.pop(),l=[...i,o],c=Array.from({length:t.rank},((e,n)=>0===n?t.rank-2:n<=t.rank-2?n-1:n));t=ll(qi(t,c),[u,-1]);const h=[...s,...l];return ll($p({a:e,b:t,transposeA:!1,transposeB:!1,bias:r?hy(e.rank,r,"channelsLast"):null,activation:n}),h)}}function ly(e,t,n){return Xo((()=>(t=Array.isArray(t)?Jh(t,"int32"):Ci(t,"int32"),ac(e,t,n))))}function cy(e){return hu(e,e)}function hy(e,t,n){const r=t.shape;if(1!==t.rank&&t.rank!==e)throw new Jm(`Unexpected bias dimensions: ${t.rank}; expected it to be 1 or ${e}`);if(5===e){if("channelsFirst"===n)return 1===r.length?ll(t,[1,r[0],1,1,1]):ll(t,[1,r[3],r[0],r[1],r[2]]);if("channelsLast"===n)return 1===r.length?ll(t,[1,1,1,1,r[0]]):ll(t,[1].concat(r))}else if(4===e){if("channelsFirst"===n)return 1===r.length?ll(t,[1,r[0],1,1]):ll(t,[1,r[2],r[0],r[1]]);if("channelsLast"===n)return 1===r.length?ll(t,[1,1,1,r[0]]):ll(t,[1].concat(r))}else if(3===e){if("channelsFirst"===n)return 1===r.length?ll(t,[1,r[0],1]):ll(t,[1,r[1],r[0]]);if("channelsLast"===n)return 1===r.length?ll(t,[1,1,r[0]]):ll(t,[1].concat(r))}else if(e<3)return t;throw new Jm(`Unsupported input rank by biasAdd: ${t.rank}`)}function py(e,t,n){return Xo((()=>(null==n&&(n="channelsLast"),Pg(n),uu(e,hy(e.rank,t,n)))))}function dy(e,t,n,r){return Xo((()=>bp(e,t,n,r)))}function fy(e,t,n=!1){return n?e():t()}const my=["fanIn","fanOut","fanAvg"],gy=["normal","uniform","truncatedNormal"];class yy extends Do{fromConfigUsesCustomObjects(){return!1}getConfig(){return{}}}class by extends yy{apply(e,t){return Wc(e,t)}}by.className="Zeros",So(by);class xy extends yy{apply(e,t){return Vc(e,t)}}xy.className="Ones",So(xy);class wy extends yy{constructor(e){if(super(),"object"!=typeof e)throw new Jm(`Expected argument of type ConstantConfig but got ${e}`);if(void 0===e.value)throw new Jm(`config must have value set but got ${e}`);this.value=e.value}apply(e,t){return Xo((()=>hu(ku(this.value),Vc(e,t))))}getConfig(){return{value:this.value}}}wy.className="Constant",So(wy);class vy extends yy{constructor(e){super(),this.DEFAULT_MINVAL=-.05,this.DEFAULT_MAXVAL=.05,this.minval=e.minval||this.DEFAULT_MINVAL,this.maxval=e.maxval||this.DEFAULT_MAXVAL,this.seed=e.seed}apply(e,t){return yh(e,this.minval,this.maxval,t)}getConfig(){return{minval:this.minval,maxval:this.maxval,seed:this.seed}}}vy.className="RandomUniform",So(vy);class ky extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`randomNormal does not support dType ${t}.`);return oy(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}ky.className="RandomNormal",So(ky);class Ny extends yy{constructor(e){super(),this.DEFAULT_MEAN=0,this.DEFAULT_STDDEV=.05,this.mean=e.mean||this.DEFAULT_MEAN,this.stddev=e.stddev||this.DEFAULT_STDDEV,this.seed=e.seed}apply(e,t){if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`truncatedNormal does not support dType ${t}.`);return sp(e,this.mean,this.stddev,t,this.seed)}getConfig(){return{mean:this.mean,stddev:this.stddev,seed:this.seed}}}Ny.className="TruncatedNormal",So(Ny);class Iy extends yy{constructor(e){super(),this.gain=null!=e.gain?e.gain:1}apply(e,t){return Xo((()=>{if(2!==e.length||e[0]!==e[1])throw new Jm("Identity matrix initializer can only be used for 2D square matrices.");return hu(this.gain,rc(e[0]))}))}getConfig(){return{gain:this.gain}}}Iy.className="Identity",So(Iy);class Cy extends yy{constructor(e){if(super(),e.scale<0)throw new Jm(`scale must be a positive float. Got: ${e.scale}`);var t;this.scale=null==e.scale?1:e.scale,this.mode=null==e.mode?"fanIn":e.mode,t=this.mode,mg(my,"FanMode",t),this.distribution=null==e.distribution?"normal":e.distribution,function(e){mg(gy,"Distribution",e)}(this.distribution),this.seed=e.seed}apply(e,t){const n=function(e,t="channelsLast"){let n,r;if(Pg(t),2===e.length)n=e[0],r=e[1];else if(-1!==[3,4,5].indexOf(e.length)){if("channelsFirst"===t){const t=Xg(e,2);n=e[1]*t,r=e[0]*t}else if("channelsLast"===t){const t=Xg(e,0,e.length-2);n=e[e.length-2]*t,r=e[e.length-1]*t}}else{const t=Xg(e);n=Math.sqrt(t),r=Math.sqrt(t)}return[n,r]}(e),r=n[0],s=n[1];let a=this.scale;if("fanIn"===this.mode?a/=Math.max(1,r):"fanOut"===this.mode?a/=Math.max(1,s):a/=Math.max(1,(r+s)/2),"normal"===this.distribution){const n=Math.sqrt(a);if("float32"!==(t=t||"float32")&&"int32"!==t)throw new Qm(`${this.getClassName()} does not support dType ${t}.`);return sp(e,0,n,t,this.seed)}{const n=Math.sqrt(3*a);return yh(e,-n,n,t)}}getConfig(){return{scale:this.scale,mode:this.mode,distribution:this.distribution,seed:this.seed}}}Cy.className="VarianceScaling",So(Cy);class Dy extends Cy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Cy.className}}Dy.className="GlorotUniform",So(Dy);class Ey extends Cy{constructor(e){super({scale:1,mode:"fanAvg",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Cy.className}}Ey.className="GlorotNormal",So(Ey);class Sy extends Cy{constructor(e){super({scale:2,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Cy.className}}Sy.className="HeNormal",So(Sy);class Ty extends Cy{constructor(e){super({scale:2,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Cy.className}}Ty.className="HeUniform",So(Ty);class Ay extends Cy{constructor(e){super({scale:1,mode:"fanIn",distribution:"normal",seed:null==e?null:e.seed})}getClassName(){return Cy.className}}Ay.className="LeCunNormal",So(Ay);class $y extends Cy{constructor(e){super({scale:1,mode:"fanIn",distribution:"uniform",seed:null==e?null:e.seed})}getClassName(){return Cy.className}}$y.className="LeCunNormal",So($y);class Fy extends yy{constructor(e){if(super(),this.DEFAULT_GAIN=1,this.gain=null==e.gain?this.DEFAULT_GAIN:e.gain,this.seed=e.seed,null!=this.seed)throw new Qm("Random seed is not implemented for Orthogonal Initializer yet.")}apply(e,t){return Xo((()=>{if(e.length<2)throw new Qm("Shape must be at least 2D.");e[0]*e[1]>2e3&&console.warn(`Orthogonal initializer is being called on a matrix with more than 2000 (${e[0]*e[1]}) elements: Slowness may result.`);const t=oy(e[0]>e[1]?[e[1],e[0]]:e,0,1,"float32");let n=Ed.gramSchmidt(t);return e[0]>e[1]&&(n=qi(n)),hu(this.gain,n)}))}getConfig(){return{gain:this.gain,seed:this.seed}}}Fy.className="Orthogonal",So(Fy);const Ry={constant:"Constant",glorotNormal:"GlorotNormal",glorotUniform:"GlorotUniform",heNormal:"HeNormal",heUniform:"HeUniform",identity:"Identity",leCunNormal:"LeCunNormal",leCunUniform:"LeCunUniform",ones:"Ones",orthogonal:"Orthogonal",randomNormal:"RandomNormal",randomUniform:"RandomUniform",truncatedNormal:"TruncatedNormal",varianceScaling:"VarianceScaling",zeros:"Zeros"};function _y(e,t={}){return hg(e,Eo.getMap().classNameMap,t,"initializer")}function My(e){return lg(e)}function Oy(e){if("string"==typeof e){const t=e in Ry?Ry[e]:e;if("GlorotNormal"===t)return new Ey;if("GlorotUniform"===t)return new Dy;if("HeNormal"===t)return new Sy;if("HeUniform"===t)return new Ty;if("LeCunNormal"===t)return new Ay;if("LeCunUniform"===t)return new $y;{const e={};return e.className=t,e.config={},_y(e)}}return e instanceof yy?e:_y(e)}function By(){return new by}function zy(){return new xy}function Ly(e){return new wy(e)}function Py(e){return new vy(e)}function Uy(e){return new ky(e)}function Wy(e){return new Ny(e)}function Vy(e){return new Iy(e)}function Gy(e){return new Cy(e)}function jy(e){return new Dy(e)}function Hy(e){return new Ey(e)}function qy(e){return new Sy(e)}function Ky(e){return new Ty(e)}function Xy(e){return new Ay(e)}function Yy(e){return new $y(e)}function Zy(e){return new Fy(e)}let Jy=0;function Qy(){return Jy++}const eb={};function tb(e=""){return e in eb||(eb[e]=0),eb[e]+=1,e+eb[e].toString()}function nb(e){return Array.isArray(e)&&Array.isArray(e[0])}function rb(e){return 0===e.length?[]:Array.isArray(e[0])?e:[e]}function sb(e){let t;if(Array.isArray(e)){if(1!==e.length)throw new Jm(`Expected Tensor length to be 1; got ${e.length}`);t=e[0]}else t=e;return t}function ab(e){if(Array.isArray(e)&&Array.isArray(e[0])){if(1===e.length)return e[0];throw new Jm(`Expected exactly 1 Shape; got ${e.length}`)}return e}function ib(e){let t=0;for(const n of e)0===n.shape.length?t+=1:t+=n.shape.reduce(((e,t)=>e*t));return t}class ob{constructor(e,t="float32",n="Variable",r=!0,s=null){this.dtype=null==t?"float32":t,this.shape=e.shape,this.id=Qy(),n=null==n?"Variable":n,this.originalName=jg(n),this.name=Hg(this.originalName),this.trainable_=r,this.constraint=s,this.val=up(e,this.trainable_,this.name,this.dtype)}read(){return this.assertNotDisposed(),this.val}write(e){return this.assertNotDisposed(),function(e,t){if(e.shape.toString()!==t.shape.toString())throw new Error("Shape mismatch: "+JSON.stringify(e.shape)+" vs. "+JSON.stringify(t.shape))}(this.val,e),this.val.id!==e.id&&(this.val.assign(e),null!=this.constraint&&this.val.assign(this.constraint.apply(this.val))),this}dispose(){this.assertNotDisposed(),this.val.dispose()}assertNotDisposed(){if(this.val.isDisposed)throw new Error(`LayersVariable ${this.name} is already disposed.`)}get trainable(){return this.trainable_}set trainable(e){this.trainable_=e,this.val.trainable=e}}function ub(e){return e.map((e=>e.read()))}function lb(e){e.forEach((e=>{e[0].write(e[1])}))}class cb{constructor(e){this.dtype=e.dtype,this.shape=e.shape,null!=e.shape?this.ndim=e.shape.length:this.ndim=e.ndim,this.maxNDim=e.maxNDim,this.minNDim=e.minNDim,this.axes=e.axes||{}}}class hb{constructor(e,t,n,r,s,a,i){this.dtype=e,this.shape=t,this.sourceLayer=n,this.inputs=r,this.callArgs=s,this.outputTensorIndex=i,this.id=Qy(),null!=a&&(this.originalName=jg(a),this.name=Hg(this.originalName)),this.rank=t.length}}let pb=0;class db{constructor(e,t){this.callArgs=t,this.id=pb++,this.outboundLayer=e.outboundLayer,this.inboundLayers=e.inboundLayers,this.nodeIndices=e.nodeIndices,this.tensorIndices=e.tensorIndices,this.inputTensors=e.inputTensors,this.outputTensors=e.outputTensors,this.inputMasks=e.inputMasks,this.outputMasks=e.outputMasks,this.inputShapes=e.inputShapes,this.outputShapes=e.outputShapes;for(const t of e.inboundLayers)null!=t&&t.outboundNodes.push(this);e.outboundLayer.inboundNodes.push(this)}getConfig(){const e=[];for(const t of this.inboundLayers)null!=t?e.push(t.name):e.push(null);return{outboundLayer:this.outboundLayer?this.outboundLayer.name:null,inboundLayers:e,nodeIndices:this.nodeIndices,tensorIndices:this.tensorIndices}}}let fb=0;class mb extends Do{constructor(e={}){super(),this._callHook=null,this._addedWeightNames=[],this._stateful=!1,this.id=fb++,this.activityRegularizer=null,this.inputSpec=null,this.supportsMasking=!1,this._trainableWeights=[],this._nonTrainableWeights=[],this._losses=[],this._updates=[],this._built=!1,this.inboundNodes=[],this.outboundNodes=[];let t=e.name;if(!t){const e=this.getClassName();t=ig(e)+"_"+tb(e)}if(this.name=t,this.trainable_=null==e.trainable||e.trainable,null!=e.inputShape||null!=e.batchInputShape){let t;if(null!=e.batchInputShape)t=e.batchInputShape;else if(null!=e.inputShape){let n=null;null!=e.batchSize&&(n=e.batchSize),t=[n].concat(e.inputShape)}this.batchInputShape=t;let n=e.dtype;null==n&&(n=e.inputDType),null==n&&(n="float32"),this.dtype=n}null!=e.weights?this.initialWeights=e.weights:this.initialWeights=null,this._refCount=null,this.fastWeightInitDuringBuild=!1}static nodeKey(e,t){return e.name+"_ib-"+t.toString()}getNodeAtIndex(e,t){if(0===this.inboundNodes.length)throw new Zm(`The layer has never been called and thus has no defined ${t}.`);if(this.inboundNodes.length<=e)throw new Jm(`Asked to get ${t} at node ${e}, but the layer has only ${this.inboundNodes.length} inbound nodes.`);return this.inboundNodes[e]}getInputAt(e){return sg(this.getNodeAtIndex(e,"input").inputTensors)}getOutputAt(e){return sg(this.getNodeAtIndex(e,"output").outputTensors)}get input(){if(this.inboundNodes.length>1)throw new Ym(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer input" is ill-defined. Use \`getInputAt(nodeIndex)\` instead.`);if(0===this.inboundNodes.length)throw new Ym(`Layer ${this.name} is not connected, no input to return.`);return sg(this.getNodeAtIndex(0,"input").inputTensors)}get output(){if(0===this.inboundNodes.length)throw new Ym(`Layer ${this.name} has no inbound nodes.`);if(this.inboundNodes.length>1)throw new Ym(`Layer ${this.name} has multiple inbound nodes, hence the notion of "layer output" is ill-defined. Use \`getOutputAt(nodeIndex)\` instead.`);return sg(this.getNodeAtIndex(0,"output").outputTensors)}get losses(){return this._losses}calculateLosses(){return this.losses.map((e=>e()))}get updates(){return this._updates}get built(){return this._built}set built(e){this._built=e}get trainable(){return this.trainable_}set trainable(e){this._trainableWeights.forEach((t=>t.trainable=e)),this.trainable_=e}get trainableWeights(){return this.trainable_?this._trainableWeights.filter((e=>e.trainable)):[]}set trainableWeights(e){this._trainableWeights=e}get nonTrainableWeights(){return this.trainable?this._trainableWeights.filter((e=>!e.trainable)).concat(this._nonTrainableWeights):this._trainableWeights.concat(this._nonTrainableWeights)}set nonTrainableWeights(e){this._nonTrainableWeights=e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}get stateful(){return this._stateful}resetStates(){if(!this.stateful)throw new Error("Cannot call the resetStates() method of a non-stateful Layer object.")}assertInputCompatibility(e){if(e=ag(e),null==this.inputSpec||0===this.inputSpec.length)return;const t=ag(this.inputSpec);if(e.length!==t.length)throw new Jm(`Layer ${this.name} expects ${t.length} inputs, but it received ${e.length} input tensors. Input received: ${e}`);for(let n=0;n<e.length;n++){const r=e[n],s=t[n];if(null==s)continue;const a=r.rank;if(null!=s.ndim&&a!==s.ndim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected ndim=${s.ndim}, found ndim=${a}`);if(null!=s.maxNDim&&a>s.maxNDim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected max_ndim=${s.maxNDim}, found ndim=${a}`);if(null!=s.minNDim&&a<s.minNDim)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected min_ndim=${s.minNDim}, found ndim=${a}.`);if(null!=s.dtype&&r.dtype!==s.dtype)throw new Jm(`Input ${n} is incompatible with layer ${this.name} : expected dtype=${s.dtype}, found dtype=${r.dtype}.`);if(s.axes){const e=r.shape;for(const t in s.axes){const r=Number(t),a=s.axes[t],i=r>=0?e[r]:e[e.length+r];if(null!=a&&-1===[a,null].indexOf(i))throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected axis ${r} of input shape to have value ${a} but got shape ${e}.`)}}if(null!=s.shape)for(let e=0;e<s.shape.length;++e){const t=s.shape[e],a=r.shape[e];if(null!=t&&null!=a&&t!==a)throw new Jm(`Input ${n} is incompatible with layer ${this.name}: expected shape=${s.shape}, found shape=${r.shape}.`)}}}call(e,t){return e}invokeCallHook(e,t){null!=this._callHook&&this._callHook(e,t)}setCallHook(e){this._callHook=e}clearCallHook(){this._callHook=null}apply(e,t){t=t||{},this.assertNotDisposed();const n=ag(e);let r=!0;for(const e of n)if(!(e instanceof hb)){r=!1;break}let s=!0;for(const e of n)if(e instanceof hb){s=!1;break}if(r===s)throw new Jm("Arguments to apply() must be all SymbolicTensors or all Tensors");return Gg(this.name,(()=>{if(!this.built){this.assertInputCompatibility(e);const t=[];for(const n of ag(e))t.push(n.shape);this.build(sg(t)),this.built=!0,this.initialWeights&&this.setWeights(this.initialWeights),null===this._refCount&&s&&(this._refCount=1)}if(this.assertInputCompatibility(e),s){let r=this.call(e,t);const s=ag(r),a=[];for(let e of s)-1!==n.indexOf(e)&&(e=e.clone()),a.push(e);if(r=sg(a),null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return r}{const n=function(e){e=ag(e);const t=[];for(const n of e)t.push(n.shape);return sg(t)}(e),r=this.computeOutputShape(n);let s;const a="float32";if(this.warnOnIncompatibleInputShape(Array.isArray(e)?n[0]:n),s=null!=r&&r.length>0&&Array.isArray(r[0])?r.map(((n,r)=>new hb(a,n,this,ag(e),t,this.name,r))):new hb(a,r,this,ag(e),t,this.name),this.addInboundNode(e,s,null,null,n,r,t),this._refCount++,null!=this.activityRegularizer)throw new Qm("Layer invocation in the presence of activity regularizer(s) is not supported yet.");return s}}))}warnOnIncompatibleInputShape(e){if(null!=this.batchInputShape)if(e.length!==this.batchInputShape.length)console.warn(`The rank of the input tensor provided (shape: ${JSON.stringify(e)}) does not match that of the batchInputShape (${JSON.stringify(this.batchInputShape)}) of the layer ${this.name}`);else{let t=!1;this.batchInputShape.forEach(((n,r)=>{null!=n&&null!=e[r]&&e[r]!==n&&(t=!0)})),t&&console.warn(`The shape of the input tensor (${JSON.stringify(e)}) does not match the expectation of layer ${this.name}: ${JSON.stringify(this.batchInputShape)}`)}}get outputShape(){if(null==this.inboundNodes||0===this.inboundNodes.length)throw new Ym(`The layer ${this.name} has never been called and thus has no defined output shape.`);const e=[];for(const t of this.inboundNodes){const n=JSON.stringify(t.outputShapes);-1===e.indexOf(n)&&e.push(n)}if(1===e.length){const e=this.inboundNodes[0].outputShapes;return Array.isArray(e)&&Array.isArray(e[0])&&1===e.length?e[0]:e}throw new Ym(`The layer ${this.name} has multiple inbound nodes with different output shapes. Hence the notion of "output shape" is ill-defined for the layer.`)}countParams(){if(!this.built)throw new Zm(`You tried to call countParams() on ${this.name}, but the layer is not built yet. Build it first by calling build(batchInputShape).`);return ib(this.weights)}build(e){this.built=!0}getWeights(e=!1){return ub(e?this.trainableWeights:this.weights)}setWeights(e){Xo((()=>{const t=this.weights;if(t.length!==e.length)throw new Jm(`You called setWeights(weights) on layer "${this.name}" with a weight list of length ${e.length}, but the layer was expecting ${t.length} weights. Provided weights: ${e}...`);if(0===t.length)return;const n=[],r=ub(t);for(let s=0;s<r.length;++s){const a=r[s],i=t[s],o=e[s];if(!le(a.shape,o.shape))throw new Jm(`Layer weight shape ${a.shape} not compatible with provided weight shape ${o.shape}`);n.push([i,o])}lb(n)}))}addWeight(e,t,n,r,s,a,i,o){if(-1!==this._addedWeightNames.indexOf(e))throw new Jm(`Duplicate weight name ${e} for layer ${this.name}`);this._addedWeightNames.push(e),null==n&&(n="float32"),this.fastWeightInitDuringBuild&&(r=null!=o?o():Oy("zeros"));const u=r.apply(t,n),l=new ob(u,n,e,a,i);return u.dispose(),null!=s&&this.addLoss((()=>s.apply(l.read()))),null==a&&(a=!0),a?this._trainableWeights.push(l):this._nonTrainableWeights.push(l),l}setFastWeightInitDuringBuild(e){this.fastWeightInitDuringBuild=e}addLoss(e){null==e||Array.isArray(e)&&0===e.length||(e=ag(e),void 0!==this._losses&&null!==this._losses&&this.losses.push(...e))}computeOutputShape(e){return e}computeMask(e,t){if(!this.supportsMasking){if(null!=t){if(!Array.isArray(t))throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`);t.forEach((e=>{if(null!=e)throw new TypeError(`Layer ${this.name} does not support masking, but was passed an inputMask.`)}))}return null}return t}addInboundNode(e,t,n,r,s,a,i=null){const o=ag(e);t=ag(t),n=ag(n),r=ag(r),s=rb(s),a=rb(a);const u=[],l=[],c=[];for(const e of o)u.push(e.sourceLayer),l.push(e.nodeIndex),c.push(e.tensorIndex);new db({outboundLayer:this,inboundLayers:u,nodeIndices:l,tensorIndices:c,inputTensors:o,outputTensors:t,inputMasks:n,outputMasks:r,inputShapes:s,outputShapes:a},i);for(let e=0;e<t.length;e++)t[e].sourceLayer=this,t[e].nodeIndex=this.inboundNodes.length-1,t[e].tensorIndex=e}getConfig(){const e={name:this.name,trainable:this.trainable};return null!=this.batchInputShape&&(e.batchInputShape=this.batchInputShape),null!=this.dtype&&(e.dtype=this.dtype),e}disposeWeights(){return this.weights.forEach((e=>e.dispose())),this.weights.length}assertNotDisposed(){if(0===this._refCount)throw new Error(`Layer '${this.name}' is already disposed.`)}dispose(){if(!this.built)throw new Error(`Cannot dispose Layer ${this.name} because it has not been built yet.`);if(null===this._refCount)throw new Error(`Cannot dispose Layer ${this.name} because it has not been used yet.`);this.assertNotDisposed();let e=0;return 0==--this._refCount&&(e=this.disposeWeights()),{refCountAfterDispose:this._refCount,numDisposedVariables:e}}}function gb(e,t,n){if((null==t||null!=n&&n>0)&&(t=e.sourceLayer,n=e.nodeIndex),0===t.inboundNodes.length)return[e];{const e=t.inboundNodes[n];if(0===e.inboundLayers.length)return e.inputTensors;{const t=[];for(let n=0;n<e.inboundLayers.length;n++){const r=gb(e.inputTensors[n],e.inboundLayers[n],e.nodeIndices[n]);for(const e of r)-1===t.indexOf(e)&&t.push(e)}return t}}}class yb extends mb{constructor(e){if(super({dtype:e.dtype,name:null!=e.name?e.name:tb("input").toString()}),null==e.batchSize&&(e.batchSize=null),null==e.sparse&&(e.sparse=!1),this.trainable=!1,this.built=!0,this.sparse=e.sparse,null!=e.inputShape&&null!=e.batchInputShape)throw new Jm("Only provide the inputShape OR batchInputShape argument to inputLayer, not both at the same time.");let t=e.batchInputShape;if(null==t){if(null==e.inputShape)throw new Jm("An InputLayer should be passed either a `batchInputShape` or an `inputShape`.");t=[e.batchSize].concat(e.inputShape)}else if(null!=e.batchSize)throw new Jm("Cannot specify batchSize if batchInputShape is specified when creating an InputLayer.");const n=e.dtype||"float32";this.batchInputShape=t,this.dtype=n,this.inputSpec=[{shape:t}];const r=new hb(this.dtype,this.batchInputShape,this,[],{},this.name);r.nodeIndex=0,r.tensorIndex=0,new db({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:[r],outputTensors:[r],inputMasks:[null],outputMasks:[null],inputShapes:[t],outputShapes:[t]})}apply(e,t){throw new Jm(`Cannot pass any input to an InputLayer's apply() method. InputLayer name: ${this.name}`)}dispose(){return{refCountAfterDispose:this._refCount,numDisposedVariables:0}}getConfig(){return{batchInputShape:this.batchInputShape,dtype:this.dtype,sparse:this.sparse,name:this.name}}}function bb(e){if(null==e.batchShape&&null==e.shape)throw new Error("Please provide to Input either a `shape` or a `batchShape` argument. Note that `shape` does not include the batch dimension.");if(null!=e.batchShape&&null!=e.shape)throw new Jm("Please provide either a `shape` or `batchShape` argument to Input, but not both.");let t=e.batchShape;null!=e.shape&&null==t&&(t=[null].concat(e.shape));let n=e.dtype;return null==n&&(n="float32"),new yb({batchInputShape:t,name:e.name,dtype:n,sparse:e.sparse}).inboundNodes[0].outputTensors[0]}async function xb(e){if(null==e)return;const t=[],n=[],r=[];for(const s in e){const a=e[s];if("number"!=typeof a){const e=a;t.push(e.data()),n.push(s),r.push(e)}}if(t.length>0){const s=await Promise.all(t);for(let t=0;t<s.length;++t)e[n[t]]=s[t][0];Yo(r)}}function wb(e){if(null!=e)for(const t in e){const n=e[t];"number"!=typeof n&&n.dispose()}}var vb;yb.className="InputLayer",So(yb),function(e){e[e.SILENT=0]="SILENT",e[e.VERBOSE=1]="VERBOSE"}(vb||(vb={}));class kb{constructor(){this.validationData=null}setParams(e){this.params=e}async onEpochBegin(e,t){}async onEpochEnd(e,t){}async onBatchBegin(e,t){}async onBatchEnd(e,t){}async onTrainBegin(e){}async onTrainEnd(e){}setModel(e){}}class Nb{constructor(e,t=10){null==e&&(e=[]),this.callbacks=e,this.queueLength=t}append(e){this.callbacks.push(e)}setParams(e){for(const t of this.callbacks)t.setParams(e)}setModel(e){for(const t of this.callbacks)t.setModel(e)}async onEpochBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochBegin(e,t)}async onEpochEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onEpochEnd(e,t)}async onBatchBegin(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchBegin(e,t)}async onBatchEnd(e,t){null==t&&(t={});for(const n of this.callbacks)await n.onBatchEnd(e,t)}async onTrainBegin(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainBegin(e)}async onTrainEnd(e){null==e&&(e={});for(const t of this.callbacks)await t.onTrainEnd(e)}}class Ib extends kb{constructor(){super()}async onEpochBegin(e){this.seen=0,this.totals={}}async onBatchEnd(e,t){null==t&&(t={});const n=null==t.size?0:t.size;this.seen+=n;for(const e in t){const r=t[e];if("number"==typeof r)this.totals.hasOwnProperty(e)||(this.totals[e]=0),this.totals[e]=this.totals[e]+r*n;else{let t;e in this.totals?t=this.totals[e]:this.totals[e]=0;const s=Xo((()=>uu(this.totals[e],hu(r,n))));this.totals[e]=s,null!=t&&t.dispose()}}}async onEpochEnd(e,t){if(null!=t)for(const e of this.params.metrics)null!=this.totals[e]&&("number"==typeof this.totals[e]?t[e]=this.totals[e]/this.seen:Xo((()=>{const n=hu(cu(1,this.seen),this.totals[e]);t[e]=n,this.totals[e].dispose(),Zo(t[e])})))}}class Cb extends kb{async onTrainBegin(e){this.epoch=[],this.history={}}async onEpochEnd(e,t){null==t&&(t={}),this.epoch.push(e);for(const e in t)null==this.history[e]&&(this.history[e]=[]),this.history[e].push(t[e])}async syncData(){const e=[],t=[],n=[];for(const r in this.history){const s=this.history[r];for(let a=0;a<s.length;++a)if("number"!=typeof s[a]){const i=s[a];e.push(i.data()),t.push(r),n.push(a)}}const r=await Promise.all(e);for(let e=0;e<r.length;++e)this.history[t[e]][n[e]].dispose(),this.history[t[e]][n[e]]=r[e][0]}}class Db extends kb{constructor(e,t){if(super(),this.currentEpoch=0,this.nowFunc=e.nowFunc,this.nextFrameFunc=e.nextFrameFunc||Rd,this.yieldEvery=t||"auto","auto"===this.yieldEvery&&(this.yieldEvery=125),"never"===this.yieldEvery&&null!=e.onYield)throw new Error("yieldEvery is `never` but you provided an `onYield` callback. Either change `yieldEvery` or remove the callback");Te(this.yieldEvery)&&(this.maybeWait=function(e,t,n){let r,s=null!=n?n():$s();return(...a)=>{const i=null!=n?n():$s();return i-s<t||(s=i,r=e(...a)),r}}(this.maybeWait.bind(this),this.yieldEvery,this.nowFunc)),this.trainBegin=e.onTrainBegin,this.trainEnd=e.onTrainEnd,this.epochBegin=e.onEpochBegin,this.epochEnd=e.onEpochEnd,this.batchBegin=e.onBatchBegin,this.batchEnd=e.onBatchEnd,this.yield=e.onYield}async maybeWait(e,t,n){const r=[];null!=this.yield&&(await xb(n),r.push(this.yield(e,t,n))),r.push(this.nextFrameFunc()),await Promise.all(r)}async onEpochBegin(e,t){this.currentEpoch=e,null!=this.epochBegin&&(await xb(t),await this.epochBegin(e,t))}async onEpochEnd(e,t){const n=[];null!=this.epochEnd&&(await xb(t),n.push(this.epochEnd(e,t))),"epoch"===this.yieldEvery&&n.push(this.nextFrameFunc()),await Promise.all(n)}async onBatchBegin(e,t){null!=this.batchBegin&&(await xb(t),await this.batchBegin(e,t))}async onBatchEnd(e,t){const n=[];null!=this.batchEnd&&(await xb(t),n.push(this.batchEnd(e,t))),"batch"===this.yieldEvery?n.push(this.nextFrameFunc()):Te(this.yieldEvery)&&n.push(this.maybeWait(this.currentEpoch,e,t)),await Promise.all(n)}async onTrainBegin(e){null!=this.trainBegin&&(await xb(e),await this.trainBegin(e))}async onTrainEnd(e){null!=this.trainEnd&&(await xb(e),await this.trainEnd(e))}}function Eb(e,t){return null==e&&(e={}),e instanceof kb?[e]:Array.isArray(e)&&e[0]instanceof kb?e:ag(e).map((e=>new Db(e,t)))}class Sb{constructor(){}static registerCallbackConstructor(e,t){re(e>=0&&Number.isInteger(e),(()=>`Verbosity level is expected to be an integer >= 0, but got ${e}`)),Sb.checkForDuplicate(t),null==Sb.constructors[e]&&(Sb.constructors[e]=[]),Sb.constructors[e].push(t)}static checkForDuplicate(e){for(const t in Sb.constructors)Sb.constructors[+t].forEach((t=>{if(t===e)throw new Jm("Duplicate callback constructor.")}))}static clear(){Sb.constructors={}}static createCallbacks(e){const t=[];for(const n in Sb.constructors){const r=+n;e>=r&&t.push(...Sb.constructors[r])}return t.map((e=>new e))}}function Tb(e,t,n,r,s,a,i,o,u){const l=new Cb,c=[new Ib,...Sb.createCallbacks(t)];null!=e&&c.push(...e),c.push(l);const h=new Nb(c);return h.setParams({epochs:n,initialEpoch:r,samples:s,steps:a,batchSize:i,verbose:t,doValidation:o,metrics:u}),{callbackList:h,history:l}}function Ab(e,t={},n=!1){return hg(e,Eo.getMap().classNameMap,t,"layer",n)}function $b(e,t){return Xo((()=>{"float32"!==e.dtype&&(e=Ci(e,"float32"));const n=Nc(cy(e),t,!0),r=Cu(n.shape,Xm()),s=pu($u(n,r));return cu(e,s)}))}function Fb(e,t){return Xo((()=>Uc(cy(Su(t,e)),-1)))}function Rb(e,t){return Xo((()=>Uc(Au(Su(t,e)),-1)))}function _b(e,t){return Xo((()=>{const n=Su(e,t),r=Dl(Au(e),Xm(),Number.MAX_VALUE),s=Au(cu(n,r));return hu(100,Uc(s,-1))}))}function Mb(e,t,n=!1){return Xo((()=>{if(n)t=Ph(t);else{const e=Nc(t,t.shape.length-1,!0);t=cu(t,e)}return t=Dl(t,Xm(),1-Xm()),xc(Nc(hu(Ci(e,"float32"),yc(t)),t.shape.length-1))}))}function Ob(e,t,n=!1){return Xo((()=>{const r=Ci(sc(function(e){const t=[Xg(e.shape)];return ll(e,t)}(e)),"int32"),s=(t=Dl(t,Xm(),1-Xm())).shape;return Mb(ll(Hi(r,s[s.length-1]),s),t,n)}))}function Bb(e,t){return Xo((()=>{let n;return n=Dl(t,Xm(),1-Xm()),n=yc(cu(n,Su(1,n))),Uc(function(e,t){if(!le(e.shape,t.shape))throw new Jm(`logits and labels must have the same shape, but got shapes ${JSON.stringify(e.shape)} and ${JSON.stringify(t.shape)}`);return Xo((()=>{const n=vh(t),r=xc(Au(t));return uu(Su(n,hu(t,e)),bc(Ql(r)))}))}(e,n),-1)}))}function zb(e,t){return Xo((()=>{const n=$b(e,-1),r=$b(t,-1),s=hu(n,r);return xc(Nc(s,-1))}))}Sb.constructors={};const Lb={meanSquaredError:Fb,meanAbsoluteError:Rb,meanAbsolutePercentageError:_b,meanSquaredLogarithmicError:function(e,t){return Xo((()=>{const n=Dl(t,Xm(),Number.MAX_VALUE),r=yc(uu(1,n)),s=Dl(e,Xm(),Number.MAX_VALUE),a=yc(uu(1,s));return Uc(cy(Su(r,a)),-1)}))},squaredHinge:function(e,t){return Xo((()=>{const n=$u(0,Su(1,hu(e,t)));return Uc(cy(n),-1)}))},hinge:function(e,t){return Xo((()=>{const n=$u(0,Su(1,hu(e,t)));return Uc(n,-1)}))},categoricalHinge:function(e,t){return Xo((()=>{const n=Nc(hu(e,t),-1),r=kc(hu(Su(1,e),t),-1);return $u(0,uu(1,Su(r,n)))}))},logcosh:function(e,t){return Xo((()=>{const n=Math.log(2),r=Su(t,e),s=Su(uu(r,wc(hu(-2,r))),n);return Uc(s,-1)}))},categoricalCrossentropy:Mb,sparseCategoricalCrossentropy:Ob,binaryCrossentropy:Bb,kullbackLeiblerDivergence:function(e,t){return Xo((()=>{const n=Dl(e,Xm(),1),r=Dl(t,Xm(),1);return Nc(hu(e,yc(cu(n,r))),-1)}))},poisson:function(e,t){return Xo((()=>{const n=yc(uu(Xm(),t));return Uc(Su(t,hu(e,n)),-1)}))},cosineProximity:zb};function Pb(e){if("string"==typeof e){if(e in Lb)return Lb[e];let t=`Unknown loss ${e}`;throw e.toLowerCase().includes("softmaxcrossentropy")&&(t=`Unknown loss ${e}. Use "categoricalCrossentropy" as the string name for tf.losses.softmaxCrossEntropy`),new Jm(t)}return e}function Ub(e,t){return Xo((()=>{const n=hu(.5,Qc(t)),r=Qg(ic(t,n),e.dtype);return Uc(Hl(e,r),-1)}))}function Wb(e,t){return Xo((()=>Qg(Hl(Wu(e,-1),Wu(t,-1)),"float32")))}function Vb(e,t){return Xo((()=>Ci(Nc(_c(Hl(e,1),Hl(t,1))),"float32")))}function Gb(e,t){return Xo((()=>{const n=Vb(e,t),r=function(e,t){return Xo((()=>Ci(Nc(_c(Hl(e,0),Hl(t,1))),"float32")))}(e,t),s=uu(n,r);return Ci(ql(ic(s,0),cu(n,s),0),"float32")}))}function jb(e,t){return Bb(e,t)}function Hb(e,t){return e.rank===t.rank&&(e=qh(e,[e.rank-1])),(t=Wu(t,-1)).dtype!==e.dtype&&(t=Ci(t,e.dtype)),Ci(Hl(e,t),"float32")}const qb=Mb,Kb=Ob,Xb={binaryAccuracy:Ub,categoricalAccuracy:Wb,precision:Gb,categoricalCrossentropy:qb,sparseCategoricalCrossentropy:Kb,mse:Fb,MSE:Fb,mae:Rb,MAE:Rb,mape:_b,MAPE:_b,cosine:zb};function Yb(e){if("string"==typeof e&&e in Xb)return Xb[e];if("string"!=typeof e&&null!=e)return e;throw new Jm(`Unknown metric ${e}`)}function Zb(e){if(ng(null!==e,`Unknown LossOrMetricFn ${e}`),"string"==typeof e)return e;{let t;for(const n of Object.keys(Lb))if(Lb[n]===e){t=n;break}if(void 0!==t)return t;for(const n of Object.keys(Xb))if(Xb[n]===e){t=n;break}return void 0!==t?t:e.name}}function Jb(e,t,n=!1){if(null==e||"object"!=typeof e||Object.getPrototypeOf(e)!==Object.prototype||!Qb(e))throw new Error("User-defined metadata is expected to be a JSON object, but is not.");if(n){const n=JSON.stringify(e);n.length>1048576&&console.warn(`User-defined metadata of model "${t}" is too large in size (length=${n.length} when serialized). It is not recommended to store such large objects in user-defined metadata. Please make sure its serialized length is <= 1048576.`)}}function Qb(e){if(null===e)return!0;if("object"==typeof e){if(Object.getPrototypeOf(e)===Object.prototype){const t=Object.keys(e);for(const n of t){if("string"!=typeof n)return!1;if(!Qb(e[n]))return!1}return!0}if(Array.isArray(e)){for(const t of e)if(!Qb(t))return!1;return!0}return!1}{const t=typeof e;return"string"===t||"number"===t||"boolean"===t}}function ex(e,t,n=console.log){let r="";for(let n=0;n<e.length;++n)n>0&&(r=r.slice(0,r.length-1)+" "),r+=e[n],r=r.slice(0,t[n]),r+=" ".repeat(t[n]-r.length);n(r)}function tx(e,t,n){let r;try{r=JSON.stringify(e.outputShape)}catch(e){r="multiple"}ex([`${e.name} (${e.getClassName()})`,r,e.countParams().toString()],t,n)}function nx(e,t,n,r){let s;try{s=JSON.stringify(e.outputShape)}catch(e){s="multiple"}const a=[];for(const t of e.inboundNodes)if(!(null!=n&&n.length>0&&-1===n.indexOf(t)))for(let e=0;e<t.inboundLayers.length;++e){const n=t.inboundLayers[e].name,r=t.nodeIndices[e],s=t.tensorIndices[e];a.push(`${n}[${r}][${s}]`)}const i=e.name,o=e.getClassName(),u=0===a.length?"":a[0];ex([`${i} (${o})`,s,e.countParams().toString(),u],t,r);for(let e=1;e<a.length;++e)ex(["","","",a[e]],t,r)}function rx(e,t,n){return("inboundNodes"===e||"outputLayers"===e||"inputLayers"===e)&&0===t&&"string"==typeof n}function sx(e,t){if(null===e)return null;if("string"==typeof e)return og(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];rx(t,s,r)?n.push(r):n.push(sx(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];if("name"===n&&"string"==typeof r)t[n]=r;else{const e=og(n);t[e]=sx(r,e)}}return t}}function ax(e,t){if(null==e)return null;if("string"==typeof e)return ig(e);if("number"==typeof e||"boolean"==typeof e)return e;if(e instanceof Array){const n=[],r=e.length;for(let s=0;s<r;++s){const r=e[s];rx(t,s,r)?n.push(r):n.push(ax(r,t))}return n}{const t={};for(const n of Object.keys(e)){const r=e[n];t[ig(n)]="name"!==n&&"className"!==n||"string"!=typeof r?ax(r,n):r}return t}}const ix="3.13.0";class ox{constructor(e){if(this.id2Value={},this.id2Mask={},this.name2Id={},e instanceof ox)for(const t in e.id2Value)this.id2Value[t]=e.id2Value[t],t in e.id2Mask&&(this.id2Mask[t]=e.id2Mask[t]);else{if(null==e)return;for(const t of e)this.add(t.key,t.value)}}add(e,t,n){if(null!=this.id2Value[e.id])throw new Jm(`Duplicate key: name=${e.name}, id=${e.id}`);return this.id2Value[e.id]=function(e,t){if(null==e.dtype||e.dtype===t.dtype)return t;try{return Ci(t,e.dtype)}catch(n){throw new Jm(`The dtype of the feed (${t.dtype}) can not be cast to the dtype of the key '${e.name}' (${e.dtype}).`)}}(e,t),this.name2Id[e.name]=e.id,null!=n&&(this.id2Mask[e.id]=n),this}addFeed(e){this.add(e.key,e.value)}hasKey(e){return null!=this.id2Value[e.id]}names(){return Object.keys(this.name2Id)}getValue(e){if(e instanceof hb){if(null==this.id2Value[e.id])throw new Jm(`Nonexistent key: ${e.name}`);return this.id2Value[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Value[t]}}getMask(e){if(e instanceof hb){if(null==this.id2Value[e.id])throw new Jm(`Nonexistent key: ${e.name}`);return this.id2Mask[e.id]}{const t=this.name2Id[e];if(null==t)throw new Jm(`Feed dict has no SymbolicTensor name: ${e}`);return this.id2Mask[t]}}disposeMasks(){null!=this.id2Mask&&Yo(this.id2Mask)}}const ux={},lx={};function cx(e,t,n,r){const s=null!=n&&n.training,a=Array.isArray(e),i=a?e:[e],o=i.map((e=>e.name)),u=[],l=t.names();for(const e of o)-1!==l.indexOf(e)?u.push(t.getValue(e)):u.push(null);null!=r&&(r.maxNumTensors=-1/0,r.minNumTensors=1/0);const c=o.join(",")+"|"+t.names().join(",");let h,p;if(null==ux[c]){const e=function(e,t){re(null!=e&&e.length>0,(()=>"Expected at least one fetch, got none"));let n=[],r={};if(1===e.length){const s=px(e[0],t);n=s.sorted,r=s.recipientMap}else{const s=new Set;for(const a of e){const{sorted:e,recipientMap:i}=px(a,t);for(const t of e)s.has(t.name)||(n.push(t),s.add(t.name));for(const e in i)null==r[e]&&(r[e]=new Set),i[e].forEach((t=>r[e].add(t)))}}return{sorted:n,recipientCounts:hx(r)}}(i,t);h=e.sorted,p=e.recipientCounts,ux[c]=h,lx[c]=p}h=ux[c],p={},s||Object.assign(p,lx[c]);const d=new ox(t);for(let e=0;e<h.length;++e){if(null!=r){const e=qo().numTensors;e>r.maxNumTensors&&(r.maxNumTensors=e),e<r.minNumTensors&&(r.minNumTensors=e)}const a=h[e],i=a.sourceLayer;if(i instanceof yb)continue;const l=[],c=[],f=[];let m=!1;for(const e of a.inputs){const n=d.getValue(e),r=d.getMask(e);l.push(n),c.push(r),null!=r&&(m=!0),s||(p[e.name]--,0!==p[e.name]||t.hasKey(e)||-1!==o.indexOf(e.name)||n.isDisposed||!0===e.sourceLayer.stateful||f.push(n))}m&&((n=n||{}).mask=c[0]);const g=ag(i.apply(l,n));let y=null;i.supportsMasking&&(y=i.computeMask(l,c));const b=dx(a),x=Array.isArray(b)?b:[b];for(let e=0;e<x.length;++e){d.hasKey(x[e])||d.add(x[e],g[e],Array.isArray(y)?y[0]:y);const t=o.indexOf(x[e].name);-1!==t&&(u[t]=g[e])}s||Yo(f)}return d.disposeMasks(),a?u:u[0]}function hx(e){const t={};for(const n in e)t[n]=e[n].size;return t}function px(e,t){const n=new Set,r=[],s={};for(const e of t.names())n.add(e);const a=[],i=[];for(a.push(e);a.length>0;){const e=a[a.length-1];if(n.has(e.name)){a.pop();continue}const t=i[i.length-1]===a.length-1;if(0===e.inputs.length||t)a.pop(),r.push(e),n.add(e.name),t&&i.pop();else{i.push(a.length-1);for(const t of e.inputs)null==s[t.name]&&(s[t.name]=new Set),s[t.name].add(e.name),n.has(t.name)||a.push(t)}}return{sorted:r,recipientMap:s}}function dx(e){let t;if(1===e.sourceLayer.inboundNodes.length)t=e.sourceLayer.output;else{let n=null;for(let t=0;t<e.sourceLayer.inboundNodes.length;++t)for(const r of e.sourceLayer.inboundNodes[t].outputTensors)if(r.id===e.id){n=t;break}t=e.sourceLayer.getOutputAt(n)}return t}class fx extends mb{constructor(e){if(super({}),this.containerNodes=new Set,this.name=e.name,null==this.name){const e=this.getClassName().toLowerCase();this.name=tb(e)}if(this.supportsMasking=!1,this.trainable_=!0,Array.isArray(e.inputs)?this.inputs=e.inputs.slice():this.inputs=[e.inputs],Array.isArray(e.outputs)?this.outputs=e.outputs.slice():this.outputs=[e.outputs],dg(this.inputs).length!==this.inputs.length)throw new Jm(`The list of inputs passed to the model is redundant. All inputs should only appear once. Found: ${this.inputs.map((e=>e.name))}`);dg(this.outputs).length!==this.outputs.length&&console.warn(`The list of outputs passed to the model is redundant. All outputs should only appear once. Found: ${this.outputs.map((e=>e.name))}`),this.inputLayers=[],this.inputLayersNodeIndices=[],this.inputLayersTensorIndices=[],this.outputLayers=[],this.outputLayersNodeIndices=[],this.outputLayersTensorIndices=[],this.layers=[],this.internalContainerRefs=[];for(const e of this.outputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;this.outputLayers.push(t),this.outputLayersNodeIndices.push(n),this.outputLayersTensorIndices.push(r)}for(const e of this.inputs){const t=e.sourceLayer,n=e.nodeIndex,r=e.tensorIndex;ng(0===n,"input layer has >1 nodes"),ng(0===r,"input layer has >1 tensors"),this.inputLayers.push(t),this.inputLayersNodeIndices.push(n),this.inputLayersTensorIndices.push(r)}this.inputNames=[],this.outputNames=[],this.feedInputShapes=[],this.feedInputNames=[],this.feedOutputNames=[];for(let t=0;t<this.inputLayers.length;t++){const n=this.inputLayers[t];if(!(n instanceof yb))throw new TypeError(`Input layers to a LayersModel must be InputLayer objects. Received inputs: ${e.inputs}. Input ${t} (0-based) originates from layer type ${n.getClassName()}.`);this.inputNames.push(n.name),this.feedInputShapes.push(n.batchInputShape),this.feedInputNames.push(n.name)}for(const e of this.outputLayers)this.outputNames.push(e.name);this.internalInputShapes=this.inputs.map((e=>e.shape)),this.internalOutputShapes=this.outputs.map((e=>e.shape));const t={},n={},r={},s={},a={},i=[],o=(e,t,n,r,s,u)=>{null!=r&&null!=s&&null!=u||(r=e.sourceLayer,s=e.nodeIndex,u=e.tensorIndex);const l=r.inboundNodes[s];if(-1!==n.indexOf(l))throw new Zm(`The tensor ${e.name} at layer "${r.name}" is part of a cycle.`);if(-1!==t.indexOf(l))return;this.containerNodes.add(fx.nodeKey(r,s)),r.id in a||(a[r.id]=Object.keys(a).length),-1===n.indexOf(l)&&n.push(l);const c=l.inboundLayers.length;for(let e=0;e<c;e++){const r=l.inputTensors[e],s=l.inboundLayers[e],a=l.nodeIndices[e],i=l.tensorIndices[e];o(r,t,n,s,a,i)}for(t.push(l);n.indexOf(l)>=0;)n.splice(n.indexOf(l),1);i.push(l)},u=[],l=[];for(const e of this.outputs)o(e,u,l);const c=i.slice().reverse();for(const e of c){n[e.id]=e,e.id in t||(t[e.id]=0);let a=t[e.id];const i=null==r[e.outboundLayer.id]?0:r[e.outboundLayer.id];a=Math.max(a,i),r[e.outboundLayer.id]=a,s[e.outboundLayer.id]=e.outboundLayer,t[e.id]=a;for(let r=0;r<e.inboundLayers.length;r++){const s=e.inboundLayers[r],i=e.nodeIndices[r],o=s.inboundNodes[i],u=null==t[o.id]?0:t[o.id];t[o.id]=Math.max(a+1,u),n[o.id]=o}}const h={};for(const e in t){const r=t[e];r in h||(h[r]=[]),h[r].push(n[e])}const p={};for(const e in r){const t=r[e];t in p||(p[t]=[]),p[t].push(s[e])}let d=Object.keys(p).map((e=>parseInt(e,10))).sort(pg);this.layers=[];for(const e of d){const t=p[e];t.sort(((e,t)=>{const n=a[e.id],r=a[t.id];return n<r?-1:n>r?1:0}));for(const e of t)e instanceof fx&&this.internalContainerRefs.push(e),this.layers.push(e)}this.layersByDepth=p,d=Object.keys(h).map((e=>parseInt(e,10))).sort(pg);const f=this.inputs.slice(),m=[];for(const e of d)for(const t of h[e]){const e=t.outboundLayer;if(null!=e){for(const n of t.inputTensors)if(-1===f.indexOf(n))throw new Zm(`Graph disconnected: cannot obtain value for tensor ${n} at layer "${e.name}". The following previous layers were accessed without issue: ${m}`);for(const e of t.outputTensors)f.push(e);m.push(e.name)}}this.nodesByDepth=h;const g=this.layers.map((e=>e.name));for(const e of g){const t=g.filter((t=>t===e)).length;if(1!==t)throw new Zm(`The name "${e}" is used ${t} times in the model. All layer names should be unique. Layer names: `+JSON.stringify(g))}this.outboundNodes=[],this.inboundNodes=[],new db({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:this.inputs.map((e=>null)),outputMasks:this.outputs.map((e=>null)),inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs.map((e=>e.shape))}),this.built=!0,this._refCount=1}assertNotDisposed(){if(0===this._refCount)throw new Error(`Container '${this.name}' is already disposed.`)}dispose(){this.assertNotDisposed();const e={refCountAfterDispose:null,numDisposedVariables:0};if(0==--this._refCount){for(const t of this.layers)e.numDisposedVariables+=t.dispose().numDisposedVariables;for(const t of this.internalContainerRefs)e.numDisposedVariables+=t.dispose().numDisposedVariables}return e.refCountAfterDispose=this._refCount,e}get trainable(){return this.trainable_}set trainable(e){this.layers.forEach((t=>{t._trainableWeights.forEach((t=>t.trainable=e))})),this.trainable_=e}get trainableWeights(){if(this._trainableWeights.length>0)throw new Jm("Container instance unexpectedly contains _trainableWeights.The trainable weights of a Container are a union of the trainable weights of its consituent Layers. Its own _trainableWeights must remain an empty Array.");if(!this.trainable)return[];let e=[];for(const t of this.layers)e=e.concat(t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.layers)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.layers)t.push(...e.trainableWeights);return t.concat(e)}return e}get weights(){return this.trainableWeights.concat(this.nonTrainableWeights)}loadWeights(e,t=!0){const n={};let r=0;for(const e of this.layers)for(const t of e.weights){if(null!=n[t.originalName])throw new Jm(`Duplicate weight name: ${t.originalName}`);n[t.originalName]=t,r++}const s=[];for(const r in e){let a=r;if(null==n[r]){const e=r.split("/");a=e.slice(0,-2).concat([e[e.length-1]]).join("/")}if(null!=n[a])s.push([n[a],e[r]]);else if(t)throw new Jm(`Provided weight data has no target variable: ${r}`);delete n[a]}if(t){const e=[];for(const t in n)e.push(t);if(e.length>0)throw new Jm(`${e.length} of ${r} weights are not set: ${e}`)}lb(s)}updatedConfig(){const e=this.getConfig(),t={};return t.className=this.getClassName(),t.config=e,t.kerasVersion=`tfjs-layers ${ix}`,t.backend="TensorFlow.js",t}toJSON(e,t=!0){const n=ax(this.updatedConfig());return t?JSON.stringify(n):n}call(e,t){return Xo((()=>{e=ag(e);const n=new ox;for(let t=0;t<this.inputs.length;++t)n.add(this.inputs[t],e[t]);return cx(this.outputs,n,t)}))}computeMask(e,t){return Xo((()=>{let n;return e=ag(e),n=null==t?tg(null,e.length):ag(t),this.runInternalGraph(e,n)[1]}))}computeOutputShape(e){const t=rb(e);if(t.length!==this.inputLayers.length)throw new Jm(`Invalid inputShape argument ${e}: model has ${this.inputLayers.length} tensor inputs.`);const n={};for(let e=0;e<t.length;e++){const r=this.inputLayers[e],s=t[e];n[r.name+"_0_0"]=s}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(pg);if(r.length>1)for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer;if(-1!==this.inputLayers.map((e=>e.id)).indexOf(t.id))continue;const r=[];for(let t=0;t<e.inboundLayers.length;t++){const s=e.inboundLayers[t],a=e.nodeIndices[t],i=e.tensorIndices[t],o=n[`${s.name}_${a}_${i}`];r.push(o)}const s=rb(t.computeOutputShape(sg(r))),a=t.inboundNodes.indexOf(e);for(let e=0;e<s.length;e++)n[`${t.name}_${a}_${e}`]=s[e]}}const s=[],a=[];for(let e=0;e<this.outputLayers.length;e++){const t=this.outputLayers[e],n=this.outputLayersNodeIndices[e],r=this.outputLayersTensorIndices[e],s=`${t.name}_${n}_${r}`;a.push(s)}for(let e=0;e<a.length;e++){const t=a[e];ng(t in n),s.push(n[t])}return sg(s)}runInternalGraph(e,t){null==t&&(t=tg(null,e.length));const n={};for(let r=0;r<this.inputs.length;++r){const s=this.inputs[r],a=e[r],i=t[r];n[s.id]=[a,i]}const r=Object.keys(this.nodesByDepth).map((e=>parseInt(e,10))).sort(pg);for(const e of r){const t=this.nodesByDepth[e];for(const e of t){const t=e.outboundLayer,r=e.inputTensors,s=e.outputTensors,a=new Array;for(const e of r)e.id in n&&a.push(n[e.id]);if(a.length===r.length){let r,i,o,u,l={};if(null!=e.callArgs&&(l=e.callArgs),1===a.length){const[e,n]=a[0];null==l.mask&&(l.mask=n),o=ag(t.call(e,l)),u=ag(t.computeMask(e,n)),r=[e],i=[n]}else r=a.map((e=>e[0])),i=a.map((e=>e[1])),null==l.mask&&(l.mask=i),o=ag(t.call(r,l)),u=ag(t.computeMask(r,i));if(t.activityRegularizer)throw new Qm("LayersModel invocation with concrete Tensor value(s) in the presence of activity regularizer(s) is not supported yet.");for(let e=0;e<s.length;++e){const t=s[e],r=o[e],a=u[e];n[t.id]=[r,a]}}}}const s=[],a=[],i=[];for(const e of this.outputs){ng(e.id in n,`Could not compute output ${e.name} : ${e.id}`);const[t,r]=n[e.id];i.push(t.shape),s.push(t),a.push(r)}return[s,a,i]}buildNodeConversionMap(e){const t={};let n;for(const e of this.layers){n=e instanceof fx?1:0;for(let r=0;r<e.inboundNodes.length;r++){const s=fx.nodeKey(e,r);this.containerNodes.has(s)&&(t[s]=n,n+=1)}}return t}getLayer(e,t){if(null!=t){if(this.layers.length<=t)throw new Jm(`Was asked to retrieve layer at index ${t}, but model only has ${this.layers.length} layer(s).`);return this.layers[t]}if(null==e)throw new Jm("Provide either a layer name or layer index");for(const t of this.layers)if(t.name===e)return t;throw new Jm(`No such layer: ${e}`)}calculateLosses(){return Xo((()=>{const e=[];for(const t of this.layers)for(let n=0;n<t.inboundNodes.length;++n){const r=fx.nodeKey(t,n);this.containerNodes.has(r)&&e.push(...t.calculateLosses())}return e}))}getConfig(){const e={name:this.name},t=this.buildNodeConversionMap(this.layers),n=[];for(const e of this.layers){const r=e.getClassName(),s=e.getConfig(),a=[];for(let n=0;n<e.inboundNodes.length;n++){const r=e.inboundNodes[n],s=fx.nodeKey(e,n);let i={};if(this.containerNodes.has(s)){if(r.callArgs)try{JSON.stringify(r.callArgs),i=r.callArgs}catch(t){console.warn(`Layer ${e.name} was passed non-serializable keyword arguments: ${r.callArgs}. They will not be included in the serialized model (and thus will be missing at deserialization time).`),i={}}if(r.inboundLayers.length>0){const e=[];for(let n=0;n<r.inboundLayers.length;n++){const s=r.inboundLayers[n],a=r.nodeIndices[n],o=r.tensorIndices[n];let u=t[fx.nodeKey(s,a)];null==u&&(u=0),e.push([s.name,u,o,i])}a.push(e)}}}const i={};i.name=e.name,i.className=r,i.config=s,i.inboundNodes=a,n.push(i)}e.layers=n;const r=[];for(let e=0;e<this.inputLayers.length;e++){const n=this.inputLayers[e],s=this.inputLayersNodeIndices[e],a=fx.nodeKey(n,s);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.inputLayersTensorIndices[e];r.push([n.name,i,o])}e.inputLayers=r;const s=[];for(let e=0;e<this.outputLayers.length;e++){const n=this.outputLayers[e],r=this.outputLayersNodeIndices[e],a=fx.nodeKey(n,r);if(!this.containerNodes.has(a))continue;let i=t[a];null==i&&(i=0);const o=this.outputLayersTensorIndices[e];s.push([n.name,i,o])}return e.outputLayers=s,e}static fromConfig(e,t,n={},r=!1){const s={},a={};function i(e,t){e.name in a?a[e.name].push(t):a[e.name]=[t]}function o(e,t){const n=[];let r;for(const a of t){const o=a[0],u=a[1],l=a[2];if(r=null==a[3]?{}:a[3],!(o in s))return void i(e,t);const c=s[o];if(c.inboundNodes.length<=u)return void i(e,t);const h=c.inboundNodes[u];n.push(h.outputTensors[l])}n.length>0&&e.apply(sg(n),r)}function u(e){const n=e.name,a=Ab(e,null!=t.customObjects?t.customObjects:{});a.setFastWeightInitDuringBuild(r),s[n]=a,e.inboundNodes.forEach((e=>{if(!(e instanceof Array))throw new Jm(`Corrupted configuration, expected array for nodeData: ${e}`);i(a,e)}))}const l=t.name,c=t.layers;for(const e of c)u(e);for(;!fg(a);)for(const e of c){const t=s[e.name];if(t.name in a){const e=a[t.name];delete a[t.name];for(const n of e)o(t,n)}}const h=[],p=[],d=t.inputLayers;for(const e of d){const t=e[0],n=e[1],r=e[2];ng(t in s);const a=s[t].inboundNodes[n].outputTensors;h.push(a[r])}const f=t.outputLayers;for(const e of f){const t=e[0],n=e[1],r=e[2];ng(t in s);const a=s[t].inboundNodes[n].outputTensors;p.push(a[r])}return new e({inputs:h,outputs:p,name:l})}get stateful(){if(this._stateful)throw new Jm("Container instance unexpectedly has _stateful = true. The statefulness of a Container is determined by the Layers it contains. Its _stateful property must remain the default false.");for(const e of this.layers)if(e.stateful)return!0;return!1}resetStates(){Xo((()=>{this.layers.forEach((e=>{e.stateful&&e.resetStates()}))}))}}function mx(e,t){return function(e,t,n){const r=t.length;if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>null));if(1===r)return Array.isArray(e)&&1===e.length?e:"object"==typeof e&&t[0]in e?[e[t[0]]]:[e];if(Array.isArray(e)){if(e.length!==r)throw new Error(`Provided ${n} is an array of ${e.length} element(s), but the model has ${r} outputs. Make sure a set of weights is provided for each model output.`);return e}if("object"==typeof e&&Object.keys(e).length>0&&"object"==typeof e[Object.keys(e)[0]]){const n=[];return t.forEach((t=>{t in e?n.push(e[t]):n.push(null)})),n}throw new Error(`The model has multiple (${r}) outputs, so ${n} must be either an array with ${r} elements or an object with ${t} keys. Provided ${n} not understood: ${JSON.stringify(e)}`)}(e,t,"classWeight")}async function gx(e,t,n,r){if(null!=t||null!=r)throw new Error("Support sampleWeight is not implemented yet");if(null!=n){const t=Xo((()=>{if(1===e.shape.length)return Di(e);if(2===e.shape.length){if(e.shape[1]>1)return Wu(e,1);if(1===e.shape[1])return ll(e,[e.shape[0]]);throw new Error(`Encountered unexpected last-dimension size (${e.shape[1]}) during handling of class weights. The size is expected to be >= 1.`)}throw new Error(`Unexpected rank of target (y) tensor (${e.rank}) during handling of class weights. The rank is expected to be 1 or 2.`)})),r=Array.from(await t.data());Yo(t);const s=[];return r.forEach((e=>{if(null==n[e])throw new Error(`classWeight must contain all classes in the training data. The class ${e} exists in the data but not in classWeight`);s.push(n[e])})),Jh(s,"float32")}return null}function yx(e,t){return hu(e,t)}function bx(e,t){let n,r;const s=t;n=s.xs,r=s.ys,re(null!=n&&null!=r,(()=>`A Dataset iterator for fitDataset() is expected to generate objects of the form \`{xs: xVal, ys: yVal}\`, where the two values may be \`tf.Tensor\`, an array of Tensors, or a map of string to Tensor.  The provided Dataset instead generates ${t}`));const a=xx("input",e.inputNames,n),i=xx("output",e.outputNames,r),o=a[0].shape[0];re(a.length===e.inputs.length,(()=>`LayersModel has ${e.inputs.length} inputs, but the dataset provides ${a.length} inputs.  (Expected input keys: ${JSON.stringify(e.inputNames)})`)),re(i.length===e.outputs.length,(()=>`LayersModel has ${e.outputs.length} outputs, but the dataset provides ${i.length} outputs.  (Expected output keys: ${JSON.stringify(e.outputNames)})`));for(let t=0;t<a.length;t++)re(a[t].shape[0]===o,(()=>`Batch size mismatch: input ${e.inputNames[t]} has ${a[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));for(let t=0;t<i.length;t++)re(i[t].shape[0]===o,(()=>`Batch size mismatch: output ${e.outputNames[t]} has ${i[t].shape[0]}; expected  ${o} based on input ${e.inputNames[0]}.`));return{xs:a,ys:i}}function xx(e,t,n){if(n instanceof qs)return[n];if(Array.isArray(n))return re(n.length===t.length,(()=>`Received an array of ${n.length} Tensors, but expected ${t.length} to match the ${e} keys ${t}.`)),n;{const r=[];for(const s of t){if(null==n[s])throw new Jm(`The feature data generated by the dataset lacks the required ${e} key '${s}'.`);r.push(n[s])}return r}}function wx(e){return"function"==typeof e.iterator}function vx(e){re(e>0&&Number.isInteger(e),(()=>`batchSize is required to be a positive integer, but got ${e}`))}function kx(e,t,n){return null==e?[null]:Array.isArray(e)?e.map((e=>ty(e,t,n-t))):ty(e,t,n-t)}function Nx(e,t){return Xo((()=>null==e?null:Array.isArray(e)?e.map((e=>Nx(e,t))):ly(e,"int32"===t.dtype?t:Ci(t,"int32"))))}function Ix(e,t){const n=[];let r=0,s=null;for(;r<e;)s=r+t,s>=e&&(s=e),n.push([r,s]),r=s;return n}function Cx(e){const t=[];e instanceof qs&&(e=[e]);for(let n=0;n<e.length;++n){const r=e[n];if(1===r.rank)t.push(ey(r,1));else{if(0===r.rank)throw new Error("Expected tensor to be at least 1D, but received a 0D tensor (scalar).");t.push(r)}}return t}function Dx(e,t){if(null==e)return;const n=[];if(t instanceof qs)n.push(t.id);else if(Array.isArray(t))t.forEach((e=>n.push(e.id)));else if(null!=t)for(const e in t){const r=t[e];n.push(r.id)}const r=[];if(e instanceof qs)-1===n.indexOf(e.id)&&r.push(e);else if(Array.isArray(e))e.forEach((e=>{-1===n.indexOf(e.id)&&r.push(e)}));else if(null!=e)for(const t in e){const s=e[t];-1===n.indexOf(s.id)&&r.push(s)}r.forEach((e=>{e.isDisposed||e.dispose()}))}function Ex(e){return Array.isArray(e)}function Sx(e){return!function(e){return e instanceof qs}(e)&&!Ex(e)}function Tx(e,t,n,r=!0,s=""){if(null==t||0===t.length){if(null!=e){let t=!1;if(Ex(e)&&e.length>0)t=!0;else if(Sx(e)){for(const n in e)if(e.hasOwnProperty(n)){t=!0;break}}else t=!0;if(t)throw new Jm(`Error when checking model ${s} expected no data, but got ${e}`)}return[]}if(null==e)return t.map((e=>null));let a;if(Sx(e)){a=[];for(const n of t){if(null==e[n])throw new Jm(`No data provided for "${n}". Need data for each key in: ${t}`);a.push(e[n])}}else if(Ex(e)){if(e.length!==t.length)throw new Jm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the model expected. Expected to see ${t.length} Tensor(s), but instead got the following list of Tensor(s): ${e}`);a=e}else{if(t.length>1)throw new Jm(`The model ${s} expects ${t.length} Tensor(s), but only received one Tensor. Found: Tensor with shape ${e.shape}`);a=[e]}if(a=Cx(a),null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Jm(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s). but got array with shape ${i.shape}`);for(let t=0;t<n[e].length;++t){if(0===t&&!r)continue;const a=i.shape[t],o=n[e][t];if(null!=o&&o>=0&&a!==o)throw new Jm(`${s} expected a batch of elements where each example has shape [${n[e].slice(1,n[e].length)}] (i.e.,tensor shape [*,${n[e].slice(1,n[e].length)}]) but the ${s} received an input with ${i.shape[0]} examples, each with shape [${i.shape.slice(1,i.shape.length)}] (tensor shape [${i.shape}])`)}}return a}function Ax(e,t,n,r=!0,s=""){let a;if(Array.isArray(e)){if(e.length!==t.length)throw new Jm(`Error when checking model ${s}: the Array of Tensors that you are passing to your model is not the size the the model expected. Expected to see ${t.length} Tensor(s), but instead got ${e.length} Tensors(s).`);a=e}else{if(t.length>1)throw new Jm(`The model expects ${t.length} ${s} Tensors, but only received one Tensor. Found: array with shape ${JSON.stringify(e.shape)}.`);a=[e]}if(null!=n)for(let e=0;e<t.length;++e){if(null==n[e])continue;const i=a[e];if(i.shape.length!==n[e].length)throw new Jm(`Error when checking ${s}: expected ${t[e]} to have ${n[e].length} dimension(s), but got array with shape ${JSON.stringify(i.shape)}`);for(let a=0;a<n[e].length;++a){if(0===a&&!r)continue;const o=i.shape[a],u=n[e][a];if(null!=u&&u!==o)throw new Jm(`Error when checking ${s}: expected ${t[e]} to have shape ${JSON.stringify(n[e])} but got array with shape ${JSON.stringify(i.shape)}.`)}}}class $x extends fx{constructor(e){super(e),this.isTraining=!1}summary(e,t,n=console.log){if(!this.built)throw new Jm("This model has never been called, thus its weights have not been created yet. So no summary can be displayed. Build the model first (e.g., by calling it on some test data).");!function(e,t,n,r=console.log){const s=function(e){let t=!0;const n=[],r=[];for(const t in e.nodesByDepth)n.push(e.nodesByDepth[t]);for(const e of n){if(e.length>1||1===e.length&&e[0].inboundLayers.length>1){t=!1;break}r.push(...e)}if(t)for(const n of e.layers){let e=!1;for(const s of n.inboundNodes)if(-1!==r.indexOf(s)){if(e){t=!1;break}e=!0}if(!t)break}return t}(e),a=["Layer (type)","Output shape","Param #"];let i;if(s?(t=t||65,n=n||[.45,.85,1]):(t=t||98,n=n||[.33,.55,.67,1]),n[n.length-1]<=1&&(n=n.map((e=>Math.floor(t*e)))),!s){a.push("Receives inputs"),i=[];for(const t in e.nodesByDepth)i.push(...e.nodesByDepth[t])}r("_".repeat(t)),ex(a,n,r),r("=".repeat(t));const o=e.layers;for(let e=0;e<o.length;++e)s?tx(o[e],n,r):nx(o[e],n,i,r),r((e===o.length-1?"=":"_").repeat(t));e.checkTrainableWeightsConsistency();const u=function(e){let t;return t=null!=e.collectedTrainableWeights?ib(e.collectedTrainableWeights):ib(e.trainableWeights),t}(e),l=ib(e.nonTrainableWeights);r(`Total params: ${u+l}`),r(`Trainable params: ${u}`),r(`Non-trainable params: ${l}`),r("_".repeat(t))}(this,e,t,n)}compile(e){if(null==e.loss&&(e.loss=[]),this.loss=e.loss,"string"==typeof e.optimizer)this.optimizer_=function(e){const t={Adagrad:()=>$d.adagrad(.01),Adadelta:()=>$d.adadelta(1,.95,Xm()),Adam:()=>$d.adam(.001,.9,.999,Xm()),Adamax:()=>$d.adamax(.002,.9,.999,Xm(),0),RMSProp:()=>$d.rmsprop(.001,.9,0,Xm()),SGD:()=>$d.sgd(.01)};if(t.adagrad=t.Adagrad,t.adadelta=t.Adadelta,t.adam=t.Adam,t.adamax=t.Adamax,t.rmsprop=t.RMSProp,t.sgd=t.SGD,e in t)return t[e]();throw new Jm(`Unknown Optimizer ${e}`)}(e.optimizer),this.isOptimizerOwned=!0;else{if(!(e.optimizer instanceof Nu))throw new Jm("User-defined optimizer must be an instance of tf.Optimizer.");this.optimizer_=e.optimizer,this.isOptimizerOwned=!1}let t=[];if(Array.isArray(e.loss)||"string"==typeof e.loss||"function"==typeof e.loss)if(Array.isArray(e.loss)){if(e.loss.length!==this.outputs.length)throw new Jm(`When passing an Array as loss, it should have one entry per model output. The model has ${this.outputs.length} output(s), but you passed loss=${e.loss}.`);const n=e.loss;t=n.map((e=>Pb(e)))}else{const n=Pb(e.loss);this.outputs.forEach((e=>{t.push(n)}))}else{e.loss=e.loss;for(const t in e.loss)if(-1===this.outputNames.indexOf(t))throw new Jm(`Unknown entry in loss dictionary: "${t}". Only expected the following keys: ${this.outputNames}`);for(const n of this.outputNames)null==e.loss[n]&&console.warn(`Output "${n}" is missing from loss dictionary. We assume this was done on purpose, and we will not be expecting data to be passed to ${n} during training`),t.push(Pb(e.loss[n]))}this.lossFunctions=t,this.feedOutputNames=[],this.feedOutputShapes=[],this.feedLossFns=[];for(let e=0;e<this.outputs.length;++e){const t=this.internalOutputShapes[e],n=this.outputNames[e];this.feedOutputNames.push(n),this.feedOutputShapes.push(t),this.feedLossFns.push(this.lossFunctions[e])}const n=[];this.metrics=e.metrics,this.metricsNames=["loss"],this.metricsTensors=[],Gg("loss",(()=>{for(let e=0;e<this.outputs.length;++e){if(-1!==n.indexOf(e))continue;const t=this.lossFunctions[e];this.outputs.length>1&&(this.metricsTensors.push([t,e]),this.metricsNames.push(this.outputNames[e]+"_loss"))}}));const r=function(e,t){if(null==e||Array.isArray(e)&&0===e.length)return t.map((e=>[]));let n;if("string"==typeof e||"function"==typeof e)n=[e];else{if(!Array.isArray(e)&&"object"!=typeof e)throw new TypeError(`Type of metrics argument not understood. Expected an string,function, Array, or Object, found: ${e}`);n=e}if(Array.isArray(n))return t.map((e=>n));{const e=[];for(const r of t){let t=n.hasOwnProperty(r)?n[r]:[];Array.isArray(t)||(t=[t]),e.push(t)}return e}}(e.metrics,this.outputNames),s=(e,t,n)=>{this.outputNames.length>1&&(t=this.outputNames[e]+"_"+t),this.metricsNames.push(t),this.metricsTensors.push([n,e])};Gg("metric",(()=>{for(let e=0;e<this.outputs.length;++e)-1===n.indexOf(e)&&(t=>{let n,r,a;for(const i of t){if("string"==typeof i&&-1!==["accuracy","acc","crossentropy","ce"].indexOf(i)){const t=this.internalOutputShapes[e];let s;1===t[t.length-1]||this.lossFunctions[e]===Bb?-1!==["accuracy","acc"].indexOf(i)?r=Ub:-1!==["crossentropy","ce"].indexOf(i)&&(r=jb):this.lossFunctions[e]===Ob?-1!==["accuracy","acc"].indexOf(i)?r=Hb:-1!==["crossentropy","ce"].indexOf(i)&&(r=Kb):-1!==["accuracy","acc"].indexOf(i)?r=Wb:-1!==["crossentropy","ce"].indexOf(i)&&(r=qb),-1!==["accuracy","acc"].indexOf(i)?s="acc":-1!==["crossentropy","ce"].indexOf(i)&&(s="ce"),a=r,n=""+s}else{const e=Yb(i);a=e,n=""+Zb(i)}let t;Gg(n,(()=>{t=a})),s(e,n,t)}})(r[e])})),this.collectedTrainableWeights=this.trainableWeights}checkTrainableWeightsConsistency(){null!=this.collectedTrainableWeights&&this.trainableWeights.length!==this.collectedTrainableWeights.length&&console.warn("Discrepancy between trainableweights and collected trainable weights. Did you set `model.trainable` without calling `model.compile()` afterwards?")}evaluate(e,t,n={}){const r=null==n.batchSize?32:n.batchSize;vx(r);const s=this.standardizeUserDataXY(e,t,!0,r);try{const a=s[0].concat(s[1]);this.makeTestFunction();const i=this.testFunction;return sg(this.testLoop(i,a,r,n.verbose,n.steps))}finally{Dx(s[0],e),Dx(s[1],t)}}async evaluateDataset(e,t){return this.makeTestFunction(),async function(e,t,n){const r=null!=(n=n||{}).batches,s=e.testFunction;let a=[];if(n.verbose>0)throw new Qm("Verbose mode is not implemented yet.");re(!r||n.batches>0&&Number.isInteger(n.batches),(()=>`Test loop expects \`batches\` to be a positive integer, but received ${JSON.stringify(n.batches)}`));const i="function"==typeof t.next?t:await t.iterator();let o=0,u=0;for(;!r||u<n.batches;){const t=await i.next();if(a=Xo((()=>{if(t.value){const{xs:n,ys:r}=bx(e,t.value),i=n.concat(r),l=Xo((()=>s(i)));if(Yo(i),0===u)for(let e=0;e<l.length;++e)a.push(ku(0));const c=i[0].shape[0];for(let e=0;e<l.length;++e){const t=l[e],n=a[e];a[e]=Xo((()=>uu(a[e],hu(c,t)))),u>0&&Yo(n)}Yo(l),o+=c,++u}return a})),t.done){r&&console.warn(`Your dataset iterator ran out of data during evaluateDataset(). Interrupting evalution. Make sure that your dataset can generate at least \`batches\` batches (in this case, ${n.batches} batches). You may need to use the repeat() function when building your dataset.`);break}}for(let e=0;e<a.length;++e){const t=a[e];a[e]=cu(a[e],o),Yo(t)}return sg(a)}(this,e,t)}checkNumSamples(e,t,n,r="steps"){let s;if(null!=n){if(s=null,null!=t)throw new Jm(`If ${r} is set, batchSize must be null or undefined.Got batchSize = ${t}`)}else{if(null==e)throw new Jm(`Either the input data should have a defined shape, or ${r} shoud be specified.`);s=Array.isArray(e)?e[0].shape[0]:e.shape[0]}return s}execute(e,t){if(Array.isArray(t)&&0===t.length)throw new Jm("`outputs` is an empty Array, which is not allowed.");const n=Array.isArray(t),r=n?t:[t],s=this.retrieveSymbolicTensors(r),a=new ox;if(e instanceof qs&&(e=[e]),Array.isArray(e)){if(e.length!==this.inputs.length)throw new Jm(`The number of inputs provided (${e.length}) does not match the number of inputs of this model (${this.inputs.length}).`);for(let t=0;t<this.inputs.length;++t)a.add(this.inputs[t],e[t])}else for(const t of this.inputs){const n=e[t.name];if(null==n)throw new Jm(`No value is provided for the model's input ${t.name}`);a.add(t,n)}const i=cx(s,a);return n?i:i[0]}retrieveSymbolicTensors(e){const t=tg(null,e.length);let n=e.length;for(const r of this.layers){const s=Array.isArray(r.output)?r.output:[r.output],a=s.map((e=>e.name));for(let r=0;r<e.length;++r){const i=a.indexOf(e[r]);if(-1!==i&&(t[r]=s[i],n--),0===n)break}if(0===n)break}if(n>0){const n=[];throw t.forEach(((t,r)=>{null==t&&n.push(e[r])})),new Jm(`Cannot find SymbolicTensors for output name(s): ${JSON.stringify(n)}`)}return t}predictLoop(e,t=32,n=!1){return Xo((()=>{const r=this.checkNumSamples(e);if(n)throw new Qm("Verbose predictLoop() is not implemented yet.");const s=Ix(r,t),a=this.outputs.map((e=>[]));for(let t=0;t<s.length;++t){Xo((()=>{const n=s[t][0],r=s[t][1],a=kx(e,n,r),i=[];if(Array.isArray(a))for(let e=0;e<a.length;++e)i.push({key:this.inputs[e],value:a[e]});else i.push({key:this.inputs[0],value:a});const o=new ox(i);return cx(this.outputs,o)})).forEach(((e,t)=>a[t].push(e)))}return sg(a.map((e=>pl(e,0))))}))}predict(e,t={}){const n=Cx(e);Ax(n,this.inputNames,this.feedInputShapes,!1);try{const r=null==t.batchSize?32:t.batchSize;return vx(r),this.predictLoop(n,r)}finally{Dx(n,e)}}predictOnBatch(e){Ax(e,this.inputNames,this.feedInputShapes,!0);const t=(Array.isArray(e)?e[0]:e).shape[0];return this.predictLoop(e,t)}standardizeUserDataXY(e,t,n=!0,r){if(null==this.optimizer_)throw new Zm("You must compile a model before training/testing. Use LayersModel.compile(modelCompileArgs).");const s=[];for(let e=0;e<this.feedOutputShapes.length;++e){const t=this.feedOutputShapes[e];this.feedLossFns[e]===Ob?s.push(t.slice(0,t.length-1).concat([1])):s.push(t)}if(function(e,t,n){const r=dg(e.map((e=>e.shape[0])));r.sort();const s=dg(t.map((e=>e.shape[0])));if(s.sort(),r.length>1)throw new Jm(`All input Tensors (x) should have the same number of samples. Got array shapes: ${JSON.stringify(e.map((e=>e.shape)))}`);if(s.length>1)throw new Jm(`All target Tensors (y) should have the same number of samples. Got array shapes: ${JSON.stringify(t.map((e=>e.shape)))}`);if(r.length>0&&s.length>0&&!le(r,s))throw new Jm(`Input Tensors should have the same number of samples as target Tensors. Found ${r[0]} input sample(s) and ${s[0]} target sample(s).`)}(e=Tx(e,this.feedInputNames,this.feedInputShapes,!1,"input"),t=Tx(t,this.feedOutputNames,s,!1,"target")),function(e,t,n){const r=[Fb,Bb,Mb];for(let s=0;s<e.length;++s){const a=e[s],i=t[s],o=n[s];if(null!=i){if(i===Mb&&1===a.shape[a.shape.length-1])throw new Jm(`You are passing a target array of shape ${a.shape} while using a loss 'categorical_crossentropy'. 'categorical_crossentropy'expects targets to be binary matrices (1s and 0s) of shape [samples, classes].`);if(-1!==r.indexOf(i)){const e=a.shape.slice(1),t=o.slice(1);for(let n=0;n<e.length;++n){const r=e[n],s=t[n];if(null!=s&&r!==s)throw new Jm(`A target Tensor with shape ${a.shape} was passed for an output of shape ${o}, while using a loss function that expects targets to have the same shape as the output.`)}}}}}(t,this.feedLossFns,this.feedOutputShapes),this.stateful&&null!=r&&r>0&&e[0].shape[0]%r!=0)throw new Jm(`In a stateful network, you should only pass inputs with a number of samples that is divisible by the batch size ${r}. Found: ${e[0].shape[0]} sample(s).`);return[e,t]}async standardizeUserData(e,t,n,r,s=!0,a){const[i,o]=this.standardizeUserDataXY(e,t,s,a);if(null!=n)throw new Error("sample weight is not supported yet.");let u=null;if(null!=r){const e=mx(r,this.outputNames);u=[];for(let t=0;t<e.length;++t)u.push(await gx(o[t],null,e[t]))}return[i,o,u]}testLoop(e,t,n,r=0,s){return Xo((()=>{const a=this.checkNumSamples(t,n,s,"steps"),i=[];if(r>0)throw new Qm("Verbose mode is not implemented yet.");if(null!=s)throw new Qm("steps mode in testLoop() is not implemented yet");{const r=Ix(a,n),s=Jh(Jg(0,a));for(let n=0;n<r.length;++n){const a=r[n][0],o=r[n][1],u=ty(s,a,o-a),l=Nx(t,u),c=e(l);if(0===n)for(let e=0;e<c.length;++e)i.push(ku(0));for(let e=0;e<c.length;++e){const t=c[e];i[e]=uu(i[e],hu(o-a,t))}}for(let e=0;e<i.length;++e)i[e]=cu(i[e],a)}return i}))}getDedupedMetricsNames(){const e=this.metricsNames,t=[];for(let n=0;n<e.length;++n){const r=e[n];let s=r;rg(e,r)>1&&(s+=`_${rg(e.slice(0,n),r)}`),t.push(s)}return t}makeTrainFunction(){return e=>{const t=[],n=e.slice(0,this.inputs.length),r=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),s=e.slice(this.inputs.length+this.outputs.length,this.inputs.length+2*this.outputs.length),a=[],i=this.collectedTrainableWeights.map((e=>e.read()));return[this.optimizer_.minimize((()=>{const e=[];for(let t=0;t<this.inputs.length;++t)e.push({key:this.inputs[t],value:n[t]});const i=new ox(e),o=cx(this.outputs,i,{training:!0});let u;for(let e=0;e<this.lossFunctions.length;++e){let n=(0,this.lossFunctions[e])(r[e],o[e]);null!=s[e]&&(n=yx(n,s[e]));const a=Uc(n);t.push(a),u=0===e?n:uu(u,n)}for(let e=0;e<this.metricsTensors.length;++e){let n;if(this.outputs.length>1&&e<this.outputs.length)n=t[e];else{const t=this.metricsTensors[e][0],s=this.metricsTensors[e][1];n=Uc(t(r[s],o[s]))}Zo(n),a.push(n)}return u=Uc(u),this.calculateLosses().forEach((e=>{u=uu(u,e)})),u}),!0,i)].concat(a)}}makeTestFunction(){this.testFunction=e=>Xo((()=>{const t=[];let n;const r=e.slice(0,this.inputs.length),s=e.slice(this.inputs.length,this.inputs.length+this.outputs.length),a=[];for(let e=0;e<this.inputs.length;++e)a.push({key:this.inputs[e],value:r[e]});const i=new ox(a),o=cx(this.outputs,i);for(let e=0;e<this.lossFunctions.length;++e){const r=this.lossFunctions[e],a=Uc(r(s[e],o[e]));n=0===e?a:uu(n,a),t.push(n)}for(let e=0;e<this.metricsTensors.length;++e){const n=this.metricsTensors[e][0],r=this.metricsTensors[e][1],a=Uc(n(s[r],o[r]));t.push(a)}return t}))}async fit(e,t,n={}){return async function(e,t,n,r={}){if(e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");let s,a,i,o,u,l,c,h,p;e.isTraining=!0;try{const d=null==r.batchSize?32:r.batchSize;vx(d);const f=!1,m=await e.standardizeUserData(t,n,r.sampleWeight,r.classWeight,f,d);s=m[0],a=m[1],p=m[2];let g,y=!1;if(null!=r.validationData&&r.validationData.length>0){if(y=!0,2!==r.validationData.length)throw 3===r.validationData.length?new Qm("validationData including sample weights is not supported yet."):new Jm(`When passing validation data, it must contain 2 (valX, valY) or 3 (valX, valY, valSampleWeight) items; ${r.validationData} is invalid.`);u=r.validationData[0],l=r.validationData[1];const t=!0,n=await e.standardizeUserData(u,l,null,null,t,d);c=n[0],h=n[1],g=c.concat(h)}else if(null!=r.validationSplit&&r.validationSplit>0&&r.validationSplit<1){y=!0;const e=Math.floor(s[0].shape[0]*(1-r.validationSplit)),t=s[0].shape[0];c=kx(s,e,t),i=s,s=kx(s,0,e),h=kx(a,e,t),o=a,a=kx(a,0,e),g=c.concat(h)}else null!=r.validationSteps&&(y=!0);const b=s.concat(a).concat(p);e.checkTrainableWeightsConsistency();const x=e.makeTrainFunction(),w=e.getDedupedMetricsNames();let v,k;y?(e.makeTestFunction(),v=e.testFunction,k=w.slice().concat(w.map((e=>"val_"+e)))):(v=null,g=[],k=w.slice());const N=Eb(r.callbacks,r.yieldEvery),I=await async function(e,t,n,r,s,a,i,o,u,l,c,h,p,d,f){null==s&&(s=32),null==a&&(a=1),null==c&&(c=!0),null==p&&(p=0);let m=!1;null!=u&&null!=l&&(m=!0);const g=e.checkNumSamples(n,s,d,"steps_per_epoch");let y;null!=g&&(y=Jg(0,g)),null==i&&(i=1);const{callbackList:b,history:x}=Tb(o,i,a,p,g,d,s,m,h);b.setModel(e),e.history=x,await b.onTrainBegin(),e.stopTraining_=!1;for(let i=p;i<a;++i){await b.onEpochBegin(i);const a={};{if("batch"===c)throw new Qm("batch shuffling is not implemneted yet");c&&X(y);const i=Jh(y),o=Ix(g,s);for(let c=0;c<o.length;++c){const h={};if(await b.onBatchBegin(c,h),Xo((()=>{const p=o[c][0],d=o[c][1],f=ty(i,p,d-p);h.batch=c,h.size=d-p;const g=Nx(n,f),y=t(g);for(let e=0;e<r.length;++e){const t=r[e],n=y[e];h[t]=n,Zo(n)}if(c===o.length-1&&m){const t=e.testLoop(u,l,s);for(let e=0;e<r.length;++e){const n=r[e],s=t[e];Zo(s),a["val_"+n]=s}}})),await b.onBatchEnd(c,h),wb(h),e.stopTraining_)break}i.dispose()}if(await b.onEpochEnd(i,a),e.stopTraining_)break}return await b.onTrainEnd(),await e.history.syncData(),e.history}(e,x,b,w,d,r.epochs,r.verbose,N,v,g,r.shuffle,k,r.initialEpoch,null);return I}finally{e.isTraining=!1,Dx(s,t),Dx(a,n),Dx(i,t),Dx(o,n),Dx(c,u),Dx(h,l),null!=p&&Yo(p)}}(this,e,t,n)}async fitDataset(e,t){return async function(e,t,n){const r=null!=n.batchesPerEpoch;if(re(null!=e.optimizer,(()=>"You must compile a model before training/testing. Use LayersModel.compile(modelCompileConfig).")),re(null!=n,(()=>"For fitDataset(), the 2nd argument (config) is required, but it is not provided in this call.")),re(null!=n.epochs&&n.epochs>0&&Number.isInteger(n.epochs),(()=>`For fitDataset(), config.epochs is expected to be a positive integer, but got ${n.epochs}`)),re(!r||n.batchesPerEpoch>0&&Number.isInteger(n.batchesPerEpoch),(()=>`For fitDataset(), config.batchesPerEpoch is expected to be a positive integer if specified, but got ${n.batchesPerEpoch}`)),re(null==n.validationSplit,(()=>"`validationSplit` is not supported by `fitDataset()`. Use validationData instead.")),e.isTraining)throw new Error("Cannot start training because another fit() call is ongoing.");e.isTraining=!0;try{const s=null!=n.validationData;let a,i;if(s)if(wx(n.validationData))re(null==n.validationBatches||n.validationBatches>0&&Number.isInteger(n.validationBatches),(()=>`For fitDataset() with dataset-based validation, config.validationBatches is expected not to be provided, or to be a positive integer, but got ${n.validationBatches}`));else{const e=function(e){if(3===e.length)throw new Qm("Validation with sample weights is not implemented yet.");return{xs:e[0],ys:e[1]}}(n.validationData);a=e.xs,i=e.ys}const o=e.makeTrainFunction(),u=e.getDedupedMetricsNames();let l;l=s?u.slice().concat(u.map((e=>"val_"+e))):u.slice();const c=Eb(n.callbacks,n.yieldEvery),h=null==n.verbose?1:n.verbose,{callbackList:p,history:d}=Tb(c,h,n.epochs,null,null,function(e,t){let n=null;return null!=t.batchesPerEpoch?n=t.batchesPerEpoch:Number.isFinite(e.size)&&(n=e.size),n}(t,n),null,s,l);p.setModel(e),e.history=d,await p.onTrainBegin(),e.stopTraining_=!1;let f=null==n.initialEpoch?0:n.initialEpoch,m=await t.iterator();for(;f<n.epochs;){const l={};await p.onEpochBegin(f);let c=0,h=0;for(r||(m=await t.iterator());!r||c<n.batchesPerEpoch;){const t=await m.next();if(r&&t.done){console.warn(`You provided \`batchesPerEpoch\` as ${n.batchesPerEpoch}, but your dataset iterator ran out of data after ${c} batches; interrupting training. Make sure that your dataset can generate at least \`batchesPerEpoch * epochs\` batches (in this case, `+n.batchesPerEpoch*n.epochs+" batches). You may need to use the repeat() function when building your dataset.");break}if(null!=t.value){const{xs:r,ys:s}=bx(e,t.value),a={};a.batch=h,a.size=r[0].shape[0],await p.onBatchBegin(h,a);const i=[];if(null!=n.classWeight){const t=mx(n.classWeight,e.outputNames);for(let e=0;e<t.length;++e)i.push(await gx(s[e],null,t[e]))}const l=r.concat(s).concat(i),d=o(l);Yo(l);for(let e=0;e<u.length;++e){const t=u[e],n=d[e];a[t]=n,Zo(n)}await p.onBatchEnd(h,a),wb(a),h++,c++}if(r?c>=n.batchesPerEpoch:t.done){if(s){let t;t=wx(n.validationData)?ag(await e.evaluateDataset(n.validationData,{batches:n.validationBatches})):ag(e.evaluate(a,i,{batchSize:null==n.validationBatchSize?32:n.validationBatchSize,verbose:0}));for(let n=0;n<e.metricsNames.length;++n)l[`val_${e.metricsNames[n]}`]=t[n]}break}if(e.stopTraining_)break}if(await p.onEpochEnd(f,l),f++,e.stopTraining_)break}return await p.onTrainEnd(),await e.history.syncData(),e.history}finally{e.isTraining=!1}}(this,e,t)}async trainOnBatch(e,t){const n=await this.standardizeUserData(e,t),r=n[0],s=n[1],a=this.makeTrainFunction()(r.concat(s)),i=[];for(const e of a){const t=await e.data();i.push(t[0])}return Yo(a),Dx(n[0],e),Dx(n[1],t),sg(i)}getNamedWeights(e){const t=[],n=null!=e&&e.trainableOnly,r=n?this.trainableWeights:this.weights,s=this.getWeights(n);for(let e=0;e<r.length;++e)n&&!r[e].trainable||t.push({name:r[e].originalName,tensor:s[e]});return t}set stopTraining(e){this.stopTraining_=e}get stopTraining(){return this.stopTraining_}get optimizer(){return this.optimizer_}set optimizer(e){this.optimizer_!==e&&(this.optimizer_=e,this.isOptimizerOwned=!1)}dispose(){const e=super.dispose();if(0===e.refCountAfterDispose&&null!=this.optimizer&&this.isOptimizerOwned){const t=qo().numTensors;this.optimizer_.dispose(),e.numDisposedVariables+=t-qo().numTensors}return e}getLossIdentifiers(){let e;if("string"==typeof this.loss)e=ig(this.loss);else if(Array.isArray(this.loss)){for(const e of this.loss)if("string"!=typeof e)throw new Error("Serialization of non-string loss is not supported.");e=this.loss.map((e=>ig(e)))}else{const t=Object.keys(this.loss);e={};const n=this.loss;for(const r of t){if("string"!=typeof n[r])throw new Error("Serialization of non-string loss is not supported.");e[r]=ig(n[r])}}return e}getMetricIdentifiers(){if("string"==typeof this.metrics||"function"==typeof this.metrics)return[ig(Zb(this.metrics))];if(Array.isArray(this.metrics))return this.metrics.map((e=>ig(Zb(e))));{const e={};for(const t in this.metrics)e[t]=ig(Zb(this.metrics[t]));return e}}getTrainingConfig(){return{loss:this.getLossIdentifiers(),metrics:this.getMetricIdentifiers(),optimizer_config:{class_name:this.optimizer.getClassName(),config:this.optimizer.getConfig()}}}loadTrainingConfig(e){if(null!=e.weighted_metrics)throw new Error("Loading weight_metrics is not supported yet.");if(null!=e.loss_weights)throw new Error("Loading loss_weights is not supported yet.");if(null!=e.sample_weight_mode)throw new Error("Loading sample_weight_mode is not supported yet.");const t=Ab(sx(e.optimizer_config));let n,r;if("string"==typeof e.loss)n=og(e.loss);else if(Array.isArray(e.loss))n=e.loss.map((e=>og(e)));else if(null!=e.loss){n={};for(const t in e.loss)n[t]=og(e.loss[t])}if(Array.isArray(e.metrics))r=e.metrics.map((e=>og(e)));else if(null!=e.metrics){r={};for(const t in e.metrics)r[t]=og(e.metrics[t])}this.compile({loss:n,metrics:r,optimizer:t})}async save(e,t){if("string"==typeof e){const t=ja(e);if(0===t.length)throw new Jm(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Jm(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Jm("LayersModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");const n=await $a(this.getNamedWeights(t)),r={modelTopology:this.toJSON(null,!1),format:"layers-model",generatedBy:`TensorFlow.js tfjs-layers v${ix}`,convertedBy:null};if(null!=t&&t.includeOptimizer&&null!=this.optimizer){r.trainingConfig=this.getTrainingConfig();const e="optimizer",{data:t,specs:s}=await $a(await this.optimizer.getWeights(),e);n.specs.push(...s),n.data=Oa([n.data,t])}if(null!=this.userDefinedMetadata){const e=!0;Jb(this.userDefinedMetadata,this.name,e),r.userDefinedMetadata=this.userDefinedMetadata}return r.weightData=n.data,r.weightSpecs=n.specs,e.save(r)}setUserDefinedMetadata(e){Jb(e,this.name),this.userDefinedMetadata=e}getUserDefinedMetadata(){return this.userDefinedMetadata}}$x.className="Model",So($x);class Fx extends $x{}async function Rx(e,t){"modelTopology"in e||(e={modelTopology:e});let n=e.modelTopology;null!=n.model_config&&(n=n.model_config);const r=Ab(sx(n),t);if(null!=e.weightsManifest){const t=await _i(e.weightsManifest,e.pathPrefix,r.weights.map((e=>e.originalName))),n={};for(const e of r.weights)n[e.originalName]=t[e.originalName];r.loadWeights(n),Yo(t)}return r}Fx.className="Functional",So(Fx);class _x extends $x{constructor(e){if(super({inputs:[],outputs:[]}),e=e||{},this.trainable=!0,this.built=!1,this.name=null!=e.name?e.name:tb("sequential_"),null!=e.layers)for(const t of e.layers)this.add(t)}checkShape(e){if(e.inboundNodes[0].outputTensors[0].shape.some((e=>e<0)))throw new Jm(`Negative dimension size caused by adding layer ${e.name} with input shape [${e.inboundNodes[0].inputTensors[0].shape}]`)}add(e){const t=e instanceof _x||e instanceof $x;let n;if(t){if(n=e,1!==n.outputs.length)throw new Jm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");if(1!==n.inputs.length)throw new Jm("All layers in a Sequential model should have a single input tensor. For multi-input layers, use the functional API.")}if(0===this.outputs.length){if(0===e.inboundNodes.length){if(null==e.batchInputShape)throw new Jm("The first layer in a Sequential model must get an `inputShape` or `batchInputShape` argument.");const t=bb({batchShape:e.batchInputShape,dtype:e.dtype,name:e.name+"_input"});e.apply(t)}if(t)this.outputs=n.outputs,this.inputs=n.inputs;else{if(1!==e.inboundNodes.length)throw new Jm(`A layer added to a Sequential model must not already be connected somewhere else. LayersModel received layer ${e.name} which has ${e.inboundNodes.length} pre-existing inbound connections.`);if(1!==e.inboundNodes[0].outputTensors.length)throw new Jm("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[e.inboundNodes[0].outputTensors[0]],this.inputs=gb(this.outputs[0])}this.inboundNodes=[],new db({outboundLayer:this,inboundLayers:[],nodeIndices:[],tensorIndices:[],inputTensors:this.inputs,outputTensors:this.outputs,inputMasks:tg(null,this.inputs.length),outputMasks:[null],inputShapes:this.inputs.map((e=>e.shape)),outputShapes:this.outputs[0].shape})}else{const t=e.apply(this.outputs[0]);if(Array.isArray(t))throw new TypeError("All layers in a Sequential model should have a single output tensor. For multi-output layers, use the functional API.");this.checkShape(e),this.outputs=[t],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}this.layers.push(e),this.built=!1}pop(){if(0===this.layers.length)throw new TypeError("There are no layers in the model.");if(this.layers.pop(),0===this.layers.length)this.outputs=[],this.inboundNodes=[],this.outboundNodes=[];else{const e=this.layers.length-1;this.layers[e].outboundNodes=[],this.outputs=[this.layers[e].output],this.inboundNodes[0].outputTensors=this.outputs,this.inboundNodes[0].outputShapes=[this.outputs[0].shape]}}call(e,t){return null==this.model&&this.build(),this.model.call(e,t)}build(e){if(ab(e),0===this.inputs.length||0===this.outputs.length)throw new TypeError("Sequential model cannot be built: model is empty. Add some layers first.");this.model=new $x({inputs:this.inputs,outputs:this.outputs[0],name:this.name+"_model"}),this.model.trainable=this.trainable,this.supportsMasking=this.model.supportsMasking,this.inputLayers=this.model.inputLayers,this.inputLayersNodeIndices=this.model.inputLayersNodeIndices,this.inputLayersTensorIndices=this.model.inputLayersTensorIndices,this.outputLayers=this.model.outputLayers,this.outputLayersNodeIndices=this.model.outputLayersNodeIndices,this.outputLayersTensorIndices=this.model.outputLayersTensorIndices,this.nodesByDepth=this.model.nodesByDepth,this.containerNodes=this.model.containerNodes,this.outputNames=this.model.outputNames,this.inputNames=this.model.inputNames,this.built=!0}countParams(){return this.built||this.build(),super.countParams()}summary(e,t,n=console.log){this.built||this.build(),super.summary(e,t,n)}setWeights(e){null==this.model&&this.build(),this.model.setWeights(e)}evaluate(e,t,n={}){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.evaluate(e,t,n)}async evaluateDataset(e,t){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.evaluateDataset(e,t)}predict(e,t={}){return null==this.model&&this.build(),this.model.predict(e,t)}predictOnBatch(e){return null==this.model&&this.build(),this.model.predictOnBatch(e)}compile(e){this.build(),this.model.compile(e),this.optimizer_=this.model.optimizer,this.isOptimizerOwned=this.model.isOptimizerOwned,this.loss=this.model.loss,this.metrics=this.model.metrics,this.metricsTensors=this.model.metricsTensors,this.metricsNames=this.model.metricsNames}get optimizer(){return null==this.model?void 0:this.model.optimizer}set optimizer(e){this.model.optimizer=e}async fit(e,t,n={}){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.fit(e,t,n)}async fitDataset(e,t){if(!this.built)throw new Zm("The model needs to be compiled before being used.");return this.model.fitDataset(e,t)}async trainOnBatch(e,t){return this.model.trainOnBatch(e,t)}static fromConfig(e,t,n={},r=!1){let s,a={};if(t instanceof Array){if(null==t[0].className||"Merge"===t[0].className)throw new Jm("Legacy serialization format not supported yet.");s=t}else re(null!=t.layers,(()=>"When the config data for a Sequential model is not an Array, it must be an Object that contains the 'layers' field.")),s=t.layers,delete t.layers,a=t;const i=new e(a);if(!(i instanceof _x))throw new Qm(`Sequential.fromConfig called on non-Sequential input: ${i}`);for(const e of s){const t=Ab(e,void 0,r);r&&t.setFastWeightInitDuringBuild(!0),i.add(t)}return i}set stopTraining(e){if(null==this.model)throw new Jm("Cannot set the stopTraining property of a sequential model before it is compiled.");this.model.stopTraining=e}get stopTraining(){if(null==this.model)throw new Jm("Cannot get the stopTraining property of a sequential model before it is compiled.");return this.model.stopTraining}getConfig(){const e=[];for(const t of this.layers){const n={};n.className=t.getClassName(),n.config=t.getConfig(),e.push(n)}return{name:this.name,layers:e}}}function Mx(e){return new $x(e)}function Ox(e){return new _x(e)}function Bx(e,t){return null==t&&(t={}),async function(e,t){if(null==t&&(t={}),"string"==typeof e){const n=Ha(e,t);if(0===n.length)n.push(Pi(e,t));else if(n.length>1)throw new Jm(`Found more than one (${n.length}) load handlers for URL '${e}'`);e=n[0]}return async function(e,t,n){if(null==n&&(n={}),null==e.load)throw new Jm("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const r=await e.load();let s=r.modelTopology;null!=s.model_config&&(s=s.model_config);const a=null==n.strict||n.strict,i=null!=r.weightData&&null!=r.weightSpecs&&a,o=Ab(sx(s),void 0,i),u=r.trainingConfig;if(null!=u&&o.loadTrainingConfig(u),null!=r.userDefinedMetadata&&o.setUserDefinedMetadata(r.userDefinedMetadata),null!=r.weightData){if(null==r.weightSpecs)throw new Jm("LayersModel artifacts contains weight data, but not weight specs. Therefore loading of weights cannot proceed.");const{modelWeights:e,optimizerWeights:t}=function(e,t){const n=Fa(e,t),r={},s=[];return t.forEach((e=>{"optimizer"===e.group?s.push({name:e.name,tensor:n[e.name]}):r[e.name]=n[e.name]})),{modelWeights:r,optimizerWeights:s}}(r.weightData,r.weightSpecs);o.loadWeights(e,a),null!=o.optimizer&&t.length>0&&await o.optimizer.setWeights(t),Yo(e),Yo(t.map((e=>e.tensor)))}return o}(e,0,t)}(e,t)}function zx(e){return bb(e)}function Lx(e,t){Sb.registerCallbackConstructor(e,t)}_x.className="Sequential",So(_x);class Px extends Do{getConfig(){return{}}}class Ux extends Px{apply(e,t=1){return function(e,t=1){if(1!==t)throw new Qm(`Support for alpha values other than 1 (${t}) is not implemented yet.`);return Zl(e)}(e,t)}}Ux.className="elu",So(Ux);class Wx extends Px{apply(e){return Ah(e)}}Wx.className="selu",So(Wx);class Vx extends Px{apply(e){return vh(e)}}Vx.className="relu",So(Vx);class Gx extends Px{apply(e){return Xo((()=>Hc(6,vh(e))))}}Gx.className="relu6",So(Gx);class jx extends Px{apply(e){return e}}jx.className="linear",So(jx);class Hx extends Px{apply(e){return dl(e)}}Hx.className="sigmoid",So(Hx);class qx extends Px{apply(e){return function(e){return Xo((()=>{const t=uu(.5,hu(.2,e));return Dl(t,0,1)}))}(e)}}qx.className="hardSigmoid",So(qx);class Kx extends Px{apply(e){return wc(e)}}Kx.className="softplus",So(Kx);class Xx extends Px{apply(e){return function(e){return Xo((()=>cu(e,uu(Au(e),1))))}(e)}}Xx.className="softsign",So(Xx);class Yx extends Px{apply(e){return ml(e)}}Yx.className="tanh",So(Yx);class Zx extends Px{apply(e,t=-1){return Ph(e,t)}}Zx.className="softmax",So(Zx);class Jx extends Px{apply(e,t=-1){return Ic(e,t)}}Jx.className="logSoftmax",So(Jx);class Qx extends Px{apply(e,t=1){return Xo((()=>hu(dl(hu(e,t)),e)))}}Qx.className="swish",So(Qx);class ew extends Px{apply(e){return Xo((()=>hu(e,ml(wc(e)))))}}function tw(e){return e.getClassName()}function nw(e,t={}){return hg(e,Eo.getMap().classNameMap,t,"activation")}function rw(e){if(null==e){return nw({className:"linear",config:{}})}if("string"==typeof e){const t={};return t.className=e,t.config={},nw(t)}return e instanceof Px?e:nw(e)}function sw(e){if(null!=e&&"object"!=typeof e)throw new Error(`Argument to L1L2 regularizer's constructor is expected to be an object, but received: ${e}`)}ew.className="mish",So(ew);class aw extends Do{}class iw extends aw{constructor(e){super(),sw(e),this.l1=null==e||null==e.l1?.01:e.l1,this.l2=null==e||null==e.l2?.01:e.l2,this.hasL1=0!==this.l1,this.hasL2=0!==this.l2}apply(e){return Xo((()=>{let t=Wc([1]);return this.hasL1&&(t=uu(t,Nc(hu(this.l1,Au(e))))),this.hasL2&&(t=uu(t,Nc(hu(this.l2,cy(e))))),ll(t,[])}))}getConfig(){return{l1:this.l1,l2:this.l2}}static fromConfig(e,t){return new e({l1:t.l1,l2:t.l2})}}iw.className="L1L2",So(iw);const ow={l1l2:"L1L2"};function uw(e){return lg(e)}function lw(e,t={}){return hg(e,Eo.getMap().classNameMap,t,"regularizer")}function cw(e){return null==e?null:"string"==typeof e?lw({className:e in ow?ow[e]:e,config:{}}):e instanceof aw?e:lw(e)}class hw extends mb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,null!=e&&(this.maxValue=e.maxValue)}call(e,t){e=sb(e);let n=vh(e);return null!=this.maxValue&&(n=Dl(n,0,this.maxValue)),n}computeOutputShape(e){return e}getConfig(){const e={maxValue:this.maxValue},t=super.getConfig();return Object.assign(e,t),e}}hw.className="ReLU",So(hw);class pw extends mb{constructor(e){super(null==e?{}:e),this.DEFAULT_ALPHA=.3,null==e&&(e={}),this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sb(e);return pc(n,this.alpha)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}pw.className="LeakyReLU",So(pw);class dw extends mb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA_INITIALIZER="zeros",null==e&&(e={}),this.supportsMasking=!0,this.alphaInitializer=Oy(e.alphaInitializer||this.DEFAULT_ALPHA_INITIALIZER),this.alphaRegularizer=cw(e.alphaRegularizer),this.alphaConstraint=Tg(e.alphaConstraint),null==e.sharedAxes)this.sharedAxes=null;else if(Array.isArray(e.sharedAxes))this.sharedAxes=e.sharedAxes;else{if("number"!=typeof e.sharedAxes)throw new Jm(`Expected sharedAxes to be a number or an array of numbers, but got ${e.sharedAxes}`);this.sharedAxes=[e.sharedAxes]}}build(e){const t=(e=ab(e)).slice(1);if(null!=this.sharedAxes)for(const e of this.sharedAxes)t[e-1]=1;this.alpha=this.addWeight("alpha",t,"float32",this.alphaInitializer,this.alphaRegularizer,!0,this.alphaConstraint);const n={};if(null!=this.sharedAxes)for(let t=1;t<e.length;++t)n[t]=e[t];this.inputSpec=[new cb({ndim:e.length,axes:n})],this.built=!0}call(e,t){return e=sb(e),uh(e,this.alpha.read())}getConfig(){const e={alphaInitializer:My(this.alphaInitializer),alphaRegularizer:uw(this.alphaRegularizer),alphaConstraint:Eg(this.alphaConstraint),sharedAxes:this.sharedAxes},t=super.getConfig();return Object.assign(e,t),e}}dw.className="PReLU",So(dw);class fw extends mb{constructor(e){if(super(null==e?{}:e),this.DEFAULT_ALPHA=1,null==e&&(e={}),null!=e.alpha&&e.alpha!==this.DEFAULT_ALPHA)throw new Qm(`Non-default alpha value (${e.alpha}) is not supported by the ELU layer yet.`);this.alpha=null==e.alpha?this.DEFAULT_ALPHA:e.alpha}call(e,t){const n=sb(e);return Zl(n)}computeOutputShape(e){return e}getConfig(){const e={alpha:this.alpha},t=super.getConfig();return Object.assign(e,t),e}}fw.className="ELU",So(fw);class mw extends mb{constructor(e){super(null==e?{}:e),this.DEFAULT_THETA=1,null==e&&(e={}),this.theta=null==e.theta?this.DEFAULT_THETA:e.theta}call(e,t){const n=sb(e);return hu(n,Ci(ic(n,this.theta),"float32"))}computeOutputShape(e){return e}getConfig(){const e={theta:this.theta},t=super.getConfig();return Object.assign(e,t),e}}mw.className="ThresholdedReLU",So(mw);class gw extends mb{constructor(e){super(null==e?{}:e),this.DEFAULT_AXIS=1,null==e&&(e={}),this.softmax=(new Zx).apply,this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis}call(e,t){const n=sb(e);return this.softmax(n,this.axis)}computeOutputShape(e){return e}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function yw(e,t,n){if("number"==typeof e)return tg(e,t);if(e.length!==t)throw new Jm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${e.length} elements.`);for(let s=0;s<t;++s){const a=e[s];if((r=a)!==parseInt(r.toString(),10))throw new Jm(`The ${n} argument must be an integer or tuple of ${t} integers. Received: ${JSON.stringify(e)} including a non-integer number ${a}`)}return e;var r}function bw(e,t,n,r,s=1){if(null==e)return e;let a;return a="same"===n?e:e-(t+(t-1)*(s-1))+1,Math.floor((a+r-1)/r)}function xw(e,t,n,r){if(null==e)return null;if("valid"===r)e=e*t+Zg([n-t,0]);else{if("same"!==r)throw new Jm(`Unsupport padding mode: ${r}.`);e*=t}return e}function ww(e,t){return Xo((()=>(Pg(t),"channelsFirst"===t?qi(e,[0,2,3,1]):e)))}function vw(e,t){return Xo((()=>(Pg(t),"channelsFirst"===t?qi(e,[0,2,3,4,1]):e)))}function kw(e,t,n,r=[1,1],s="valid",a,i,o=null){return Xo((()=>{if(null==a&&(a="channelsLast"),Pg(a),3!==e.rank&&4!==e.rank)throw new Jm(`conv2dWithBiasActivation expects input to be of rank 3 or 4, but received ${e.rank}.`);if(3!==t.rank&&4!==t.rank)throw new Jm(`conv2dWithBiasActivation expects kernel to be of rank 3 or 4, but received ${e.rank}.`);let u=ww(e,a);if("causal"===s)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");return u=Ep({x:u,filter:t,strides:r,pad:"same"===s?"same":"valid",dilations:i,dataFormat:"NHWC",bias:n,activation:o}),"channelsFirst"===a&&(u=qi(u,[0,3,1,2])),u}))}gw.className="Softmax",So(gw);class Nw extends mb{constructor(e,t){if(super(t),this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",Nw.verifyArgs(t),this.rank=e,yg(this.rank,"rank"),1!==this.rank&&2!==this.rank&&3!==this.rank)throw new Qm(`Convolution layer for rank other than 1, 2, or 3 (${this.rank}) is not implemented yet.`);if(this.kernelSize=yw(t.kernelSize,e,"kernelSize"),this.strides=yw(null==t.strides?1:t.strides,e,"strides"),this.padding=null==t.padding?"valid":t.padding,Ug(this.padding),this.dataFormat=null==t.dataFormat?"channelsLast":t.dataFormat,Pg(this.dataFormat),this.activation=rw(t.activation),this.useBias=null==t.useBias||t.useBias,this.biasInitializer=Oy(t.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.biasConstraint=Tg(t.biasConstraint),this.biasRegularizer=cw(t.biasRegularizer),this.activityRegularizer=cw(t.activityRegularizer),this.dilationRate=yw(null==t.dilationRate?1:t.dilationRate,e,"dilationRate"),1===this.rank&&Array.isArray(this.dilationRate)&&1!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or an array of a single number for 1D convolution, but received ${JSON.stringify(this.dilationRate)}`);if(2===this.rank){if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate];else if(2!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or array of two numbers for 2D convolution, but received ${JSON.stringify(this.dilationRate)}`)}else if(3===this.rank)if("number"==typeof this.dilationRate)this.dilationRate=[this.dilationRate,this.dilationRate,this.dilationRate];else if(3!==this.dilationRate.length)throw new Jm(`dilationRate must be a number or array of three numbers for 3D convolution, but received ${JSON.stringify(this.dilationRate)}`)}static verifyArgs(e){if(ng("kernelSize"in e,"required key 'kernelSize' not in config"),"number"!=typeof e.kernelSize&&!gg(e.kernelSize,"number",1,3))throw new Jm(`BaseConv expects config.kernelSize to be number or number[] with length 1, 2, or 3, but received ${JSON.stringify(e.kernelSize)}.`)}getConfig(){const e={kernelSize:this.kernelSize,strides:this.strides,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,activation:tw(this.activation),useBias:this.useBias,biasInitializer:My(this.biasInitializer),biasRegularizer:uw(this.biasRegularizer),activityRegularizer:uw(this.activityRegularizer),biasConstraint:Eg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}class Iw extends Nw{constructor(e,t){super(e,t),this.kernel=null,Iw.verifyArgs(t),this.filters=t.filters,yg(this.filters,"filters"),this.kernelInitializer=Oy(t.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.kernelConstraint=Tg(t.kernelConstraint),this.kernelRegularizer=cw(t.kernelRegularizer)}build(e){e=ab(e);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm(`The channel dimension of the input should be defined. Found ${e[t]}`);const n=e[t],r=this.kernelSize.concat([n,this.filters]);this.kernel=this.addWeight("kernel",r,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[{ndim:this.rank+2,axes:{[t]:n}}],this.built=!0}call(e,t){return Xo((()=>{let t;e=sb(e);const n=null==this.bias?null:this.bias.read(),r=xg(this.activation.getClassName());if(null!=r&&2===this.rank)t=kw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate,r);else{if(1===this.rank)t=function(e,t,n,r=1,s="valid",a,i=1){return Xo((()=>{if(null==a&&(a="channelsLast"),Pg(a),3!==e.shape.length)throw new Jm(`The input of a conv1dWithBias operation should be 3, but is ${e.shape.length} instead.`);if(3!==t.shape.length)throw new Jm(`The kernel for a conv1dWithBias operation should be 3, but is ${t.shape.length} instead`);if(null!=n&&1!==n.shape.length)throw new Jm(`The bias for a conv1dWithBias operation should be 1, but is ${t.shape.length} instead`);if("channelsFirst"===a&&(e=qi(e,[0,2,1])),"causal"===s)throw new Qm("The support for CAUSAL padding mode in conv1dWithBias is not implemented yet.");let o=Fl(e,t,r,"same"===s?"same":"valid","NWC",i);return null!=n&&(o=py(o,n)),o}))}(e,this.kernel.read(),n,this.strides[0],this.padding,this.dataFormat,this.dilationRate[0]);else if(2===this.rank)t=kw(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate);else{if(3!==this.rank)throw new Qm("convolutions greater than 3D are not implemented yet.");t=function(e,t,n,r=[1,1,1],s="valid",a,i){return Xo((()=>{if(null==a&&(a="channelsLast"),Pg(a),4!==e.rank&&5!==e.rank)throw new Jm(`conv3dWithBias expects input to be of rank 4 or 5, but received ${e.rank}.`);if(4!==t.rank&&5!==t.rank)throw new Jm(`conv3dWithBias expects kernel to be of rank 4 or 5, but received ${e.rank}.`);let o=vw(e,a);if("causal"===s)throw new Qm("The support for CAUSAL padding mode in conv3dWithBias is not implemented yet.");return o=Ml(o,t,r,"same"===s?"same":"valid","NDHWC",i),null!=n&&(o=py(o,n)),"channelsFirst"===a&&(o=qi(o,[0,4,1,2,3])),o}))}(e,this.kernel.read(),n,this.strides,this.padding,this.dataFormat,this.dilationRate)}null!=this.activation&&(t=this.activation.apply(t))}return t}))}computeOutputShape(e){e=ab(e);const t=[],n="channelsLast"===this.dataFormat?e.slice(1,e.length-1):e.slice(2);for(let e=0;e<n.length;++e){const r=bw(n[e],this.kernelSize[e],this.padding,this.strides[e],"number"==typeof this.dilationRate?this.dilationRate:this.dilationRate[e]);t.push(r)}let r=[e[0]];return"channelsLast"===this.dataFormat?(r=r.concat(t),r.push(this.filters)):(r.push(this.filters),r=r.concat(t)),r}getConfig(){const e={filters:this.filters,kernelInitializer:My(this.kernelInitializer),kernelRegularizer:uw(this.kernelRegularizer),kernelConstraint:Eg(this.kernelConstraint)},t=super.getConfig();return Object.assign(e,t),e}static verifyArgs(e){if(!("filters"in e)||"number"!=typeof e.filters||e.filters<1)throw new Jm(`Convolution layer expected config.filters to be a 'number' > 0 but got ${JSON.stringify(e.filters)}`)}}class Cw extends Iw{constructor(e){super(2,e),Cw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!gg(e.kernelSize,"number",1,2))throw new Jm(`Conv2D expects config.kernelSize to be number or number[] with length 1 or 2, but received ${JSON.stringify(e.kernelSize)}.`)}}Cw.className="Conv2D",So(Cw);class Dw extends Iw{constructor(e){super(3,e),Dw.verifyArgs(e)}getConfig(){const e=super.getConfig();return delete e.rank,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&(!Array.isArray(e.kernelSize)||1!==e.kernelSize.length&&3!==e.kernelSize.length))throw new Jm(`Conv3D expects config.kernelSize to be number or [number, number, number], but received ${JSON.stringify(e.kernelSize)}.`)}}Dw.className="Conv3D",So(Dw);class Ew extends Cw{constructor(e){if(super(e),this.inputSpec=[new cb({ndim:4})],"same"!==this.padding&&"valid"!==this.padding)throw new Jm(`Conv2DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(4!==(e=ab(e)).length)throw new Jm("Input should have rank 4; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cb({ndim:4,axes:{[t]:n}})],this.built=!0}call(e,t){return Xo((()=>{let t=sb(e);if(4!==t.shape.length)throw new Jm(`Conv2DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a;"channelsFirst"===this.dataFormat?(s=2,a=3):(s=1,a=2);const i=n[s],o=n[a],u=this.kernelSize[0],l=this.kernelSize[1],c=this.strides[0],h=this.strides[1],p=[r,xw(i,c,u,this.padding),xw(o,h,l,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qi(t,[0,2,3,1]));let d=_l(t,this.kernel.read(),p,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(d=qi(d,[0,3,1,2])),null!=this.bias&&(d=py(d,this.bias.read(),this.dataFormat)),null!=this.activation&&(d=this.activation.apply(d)),d}))}computeOutputShape(e){const t=(e=ab(e)).slice();let n,r,s;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3):(n=3,r=1,s=2);const a=this.kernelSize[0],i=this.kernelSize[1],o=this.strides[0],u=this.strides[1];return t[n]=this.filters,t[r]=xw(t[r],o,a,this.padding),t[s]=xw(t[s],u,i,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Ew.className="Conv2DTranspose",So(Ew);class Sw extends Dw{constructor(e){if(super(e),this.inputSpec=[new cb({ndim:5})],"same"!==this.padding&&"valid"!==this.padding)throw new Jm(`Conv3DTranspose currently supports only padding modes 'same' and 'valid', but received padding mode ${this.padding}`)}build(e){if(5!==(e=ab(e)).length)throw new Jm("Input should have rank 5; Received input shape: "+JSON.stringify(e));const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t])throw new Jm("The channel dimension of the inputs should be defined. Found `None`.");const n=e[t],r=this.kernelSize.concat([this.filters,n]);this.kernel=this.addWeight("kernel",r,"float32",this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint)),this.inputSpec=[new cb({ndim:5,axes:{[t]:n}})],this.built=!0}call(e,t){return Xo((()=>{let t=sb(e);if(5!==t.shape.length)throw new Jm(`Conv3DTranspose.call() expects input tensor to be rank-4, but received a tensor of rank-${t.shape.length}`);const n=t.shape,r=n[0];let s,a,i;"channelsFirst"===this.dataFormat?(i=2,s=3,a=4):(i=1,s=2,a=3);const o=n[i],u=n[s],l=n[a],c=this.kernelSize[0],h=this.kernelSize[1],p=this.kernelSize[2],d=this.strides[0],f=this.strides[1],m=this.strides[2],g=[r,xw(o,d,c,this.padding),xw(u,f,h,this.padding),xw(l,m,p,this.padding),this.filters];"channelsLast"!==this.dataFormat&&(t=qi(t,[0,2,3,4,1]));let y=Bl(t,this.kernel.read(),g,this.strides,this.padding);return"channelsLast"!==this.dataFormat&&(y=qi(y,[0,4,1,2,3])),null!==this.bias&&(y=py(y,this.bias.read(),this.dataFormat)),null!==this.activation&&(y=this.activation.apply(y)),y}))}computeOutputShape(e){const t=(e=ab(e)).slice();let n,r,s,a;"channelsFirst"===this.dataFormat?(n=1,r=2,s=3,a=4):(n=4,r=1,s=2,a=3);const i=this.kernelSize[0],o=this.kernelSize[1],u=this.kernelSize[2],l=this.strides[0],c=this.strides[1],h=this.strides[2];return t[n]=this.filters,t[r]=xw(t[r],l,i,this.padding),t[s]=xw(t[s],c,o,this.padding),t[a]=xw(t[a],h,u,this.padding),t}getConfig(){const e=super.getConfig();return delete e.dilationRate,e}}Sw.className="Conv3DTranspose",So(Sw);class Tw extends Iw{constructor(e,t){if(super(e,t),this.DEFAULT_DEPTHWISE_INITIALIZER="glorotUniform",this.DEFAULT_POINTWISE_INITIALIZER="glorotUniform",this.depthwiseKernel=null,this.pointwiseKernel=null,null==t.filters)throw new Jm("The `filters` configuration field is required by SeparableConv, but is unspecified.");if(null!=t.kernelInitializer||null!=t.kernelRegularizer||null!=t.kernelConstraint)throw new Jm("Fields kernelInitializer, kernelRegularizer and kernelConstraint are invalid for SeparableConv2D. Use depthwiseInitializer, depthwiseRegularizer, depthwiseConstraint, pointwiseInitializer, pointwiseRegularizer and pointwiseConstraint instead.");if(null!=t.padding&&"same"!==t.padding&&"valid"!==t.padding)throw new Jm(`SeparableConv${this.rank}D supports only padding modes: 'same' and 'valid', but received ${JSON.stringify(t.padding)}`);this.depthMultiplier=null==t.depthMultiplier?1:t.depthMultiplier,this.depthwiseInitializer=Oy(t.depthwiseInitializer||this.DEFAULT_DEPTHWISE_INITIALIZER),this.depthwiseRegularizer=cw(t.depthwiseRegularizer),this.depthwiseConstraint=Tg(t.depthwiseConstraint),this.pointwiseInitializer=Oy(t.depthwiseInitializer||this.DEFAULT_POINTWISE_INITIALIZER),this.pointwiseRegularizer=cw(t.pointwiseRegularizer),this.pointwiseConstraint=Tg(t.pointwiseConstraint)}build(e){if((e=ab(e)).length<this.rank+2)throw new Jm(`Inputs to SeparableConv${this.rank}D should have rank ${this.rank+2}, but received input shape: ${JSON.stringify(e)}`);const t="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[t]||e[t]<0)throw new Jm(`The channel dimension of the inputs should be defined, but found ${JSON.stringify(e[t])}`);const n=e[t],r=this.kernelSize.concat([n,this.depthMultiplier]),s=[];for(let e=0;e<this.rank;++e)s.push(1);s.push(n*this.depthMultiplier,this.filters);const a=!0;this.depthwiseKernel=this.addWeight("depthwise_kernel",r,"float32",this.depthwiseInitializer,this.depthwiseRegularizer,a,this.depthwiseConstraint),this.pointwiseKernel=this.addWeight("pointwise_kernel",s,"float32",this.pointwiseInitializer,this.pointwiseRegularizer,a,this.pointwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[this.filters],"float32",this.biasInitializer,this.biasRegularizer,a,this.biasConstraint):this.bias=null,this.inputSpec=[new cb({ndim:this.rank+2,axes:{[t]:n}})],this.built=!0}call(e,t){return Xo((()=>{let t;if(e=sb(e),1===this.rank)throw new Qm("1D separable convolution is not implemented yet.");return 2===this.rank&&("channelsFirst"===this.dataFormat&&(e=qi(e,[0,2,3,1])),t=$h(e,this.depthwiseKernel.read(),this.pointwiseKernel.read(),this.strides,this.padding,this.dilationRate,"NHWC")),this.useBias&&(t=py(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),"channelsFirst"===this.dataFormat&&(t=qi(t,[0,3,1,2])),t}))}getConfig(){const e=super.getConfig();return delete e.rank,delete e.kernelInitializer,delete e.kernelRegularizer,delete e.kernelConstraint,e.depthwiseInitializer=My(this.depthwiseInitializer),e.pointwiseInitializer=My(this.pointwiseInitializer),e.depthwiseRegularizer=uw(this.depthwiseRegularizer),e.pointwiseRegularizer=uw(this.pointwiseRegularizer),e.depthwiseConstraint=Eg(this.depthwiseConstraint),e.pointwiseConstraint=Eg(this.pointwiseConstraint),e}}Tw.className="SeparableConv";class Aw extends Tw{constructor(e){super(2,e)}}Aw.className="SeparableConv2D",So(Aw);class $w extends Iw{constructor(e){super(1,e),$w.verifyArgs(e),this.inputSpec=[{ndim:3}]}getConfig(){const e=super.getConfig();return delete e.rank,delete e.dataFormat,e}static verifyArgs(e){if("number"!=typeof e.kernelSize&&!gg(e.kernelSize,"number",1,1))throw new Jm(`Conv1D expects config.kernelSize to be number or number[] with length 1, but received ${JSON.stringify(e.kernelSize)}.`)}}$w.className="Conv1D",So($w);class Fw extends mb{constructor(e){super(e),"number"==typeof e.cropping?this.cropping=[[e.cropping,e.cropping],[e.cropping,e.cropping]]:"number"==typeof e.cropping[0]?this.cropping=[[e.cropping[0],e.cropping[0]],[e.cropping[1],e.cropping[1]]]:this.cropping=e.cropping,this.dataFormat=void 0===e.dataFormat?"channelsLast":e.dataFormat,this.inputSpec=[{ndim:4}]}computeOutputShape(e){return"channelsFirst"===this.dataFormat?[e[0],e[1],e[2]-this.cropping[0][0]-this.cropping[0][1],e[3]-this.cropping[1][0]-this.cropping[1][1]]:[e[0],e[1]-this.cropping[0][0]-this.cropping[0][1],e[2]-this.cropping[1][0]-this.cropping[1][1],e[3]]}call(e,t){return Xo((()=>{if(e=sb(e),"channelsLast"===this.dataFormat){const t=ry(e,this.cropping[0][0],e.shape[1]-this.cropping[0][0]-this.cropping[0][1],2);return ry(t,this.cropping[1][0],e.shape[2]-this.cropping[1][1]-this.cropping[1][0],3)}{const t=ry(e,this.cropping[0][0],e.shape[2]-this.cropping[0][0]-this.cropping[0][1],3);return ry(t,this.cropping[1][0],e.shape[3]-this.cropping[1][1]-this.cropping[1][0],4)}}))}getConfig(){const e={cropping:this.cropping,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Fw.className="Cropping2D",So(Fw);class Rw extends mb{constructor(e){var t;super(e),this.DEFAULT_SIZE=[2,2],this.inputSpec=[{ndim:4}],this.size=null==e.size?this.DEFAULT_SIZE:e.size,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pg(this.dataFormat),this.interpolation=null==e.interpolation?"nearest":e.interpolation,t=this.interpolation,mg(Mg,"InterpolationFormat",t)}computeOutputShape(e){if("channelsFirst"===this.dataFormat){const t=null==e[2]?null:this.size[0]*e[2],n=null==e[3]?null:this.size[1]*e[3];return[e[0],e[1],t,n]}{const t=null==e[1]?null:this.size[0]*e[1],n=null==e[2]?null:this.size[1]*e[2];return[e[0],t,n,e[3]]}}call(e,t){return Xo((()=>{let t=sb(e);const n=t.shape;if("channelsFirst"===this.dataFormat){t=qi(t,[0,2,3,1]);const e=this.size[0]*n[2],r=this.size[1]*n[3],s="nearest"===this.interpolation?Dd.resizeNearestNeighbor(t,[e,r]):Dd.resizeBilinear(t,[e,r]);return qi(s,[0,3,1,2])}{const e=this.size[0]*n[1],r=this.size[1]*n[2];return"nearest"===this.interpolation?Dd.resizeNearestNeighbor(t,[e,r]):Dd.resizeBilinear(t,[e,r])}}))}getConfig(){const e={size:this.size,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}Rw.className="UpSampling2D",So(Rw);class _w extends Nw{constructor(e){super(2,e),this.depthwiseKernel=null,this.depthMultiplier=null==e.depthMultiplier?1:e.depthMultiplier,this.depthwiseInitializer=Oy(e.depthwiseInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.depthwiseConstraint=Tg(e.depthwiseConstraint),this.depthwiseRegularizer=cw(e.depthwiseRegularizer)}build(e){if((e=ab(e)).length<4)throw new Jm(`Inputs to DepthwiseConv2D should have rank 4. Received input shape: ${JSON.stringify(e)}.`);const t="channelsFirst"===this.dataFormat?1:3;if(null==e[t]||e[t]<0)throw new Jm(`The channel dimension of the inputs to DepthwiseConv2D should be defined, but is not (${e[t]}).`);const n=e[t],r=[this.kernelSize[0],this.kernelSize[1],n,this.depthMultiplier];this.depthwiseKernel=this.addWeight("depthwise_kernel",r,null,this.depthwiseInitializer,this.depthwiseRegularizer,!0,this.depthwiseConstraint),this.useBias?this.bias=this.addWeight("bias",[n*this.depthMultiplier],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Xo((()=>{let t=function(e,t,n=[1,1],r="valid",s,a){return Xo((()=>{null==s&&(s="channelsLast"),Pg(s);let i=ww(e,s);if(4!==e.rank)throw new Jm(`Input for depthwiseConv2d is required to be 4-D, but is instead ${e.rank}-D`);if(4!==t.rank)throw new Jm(`depthwiseKernel is required to be 4-D, but is instead ${t.rank}-D`);return i=Vl(i,t,n,"same"===r?"same":"valid","NHWC",a),"channelsFirst"===s&&(i=qi(i,[0,3,1,2])),i}))}(e=sb(e),this.depthwiseKernel.read(),this.strides,this.padding,this.dataFormat,null);return this.useBias&&(t=py(t,this.bias.read(),this.dataFormat)),null!=this.activation&&(t=this.activation.apply(t)),t}))}computeOutputShape(e){e=ab(e);const t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[1]*this.depthMultiplier:e[3]*this.depthMultiplier,s=bw(t,this.kernelSize[0],this.padding,this.strides[0]),a=bw(n,this.kernelSize[1],this.padding,this.strides[1]);return"channelsFirst"===this.dataFormat?[e[0],r,s,a]:[e[0],s,a,r]}getConfig(){const e=super.getConfig();return e.depthMultiplier=this.depthMultiplier,e.depthwiseInitializer=My(this.depthwiseInitializer),e.depthwiseRegularizer=uw(this.depthwiseRegularizer),e.depthwiseConstraint=Eg(this.depthwiseRegularizer),e}}function Mw(e,t,n,r){if(Array.isArray(e)){if(null!=t||null!=n)throw new Jm("When inputs is an array, neither initialState or constants should be provided");null!=r&&(n=e.slice(e.length-r,e.length),e=e.slice(0,e.length-r)),e.length>1&&(t=e.slice(1,e.length)),e=e[0]}function s(e){return null==e||Array.isArray(e)?e:[e]}return{inputs:e,initialState:t=s(t),constants:n=s(n)}}function Ow(e,t,n,r=!1,s,a,i=!1,o=!1){return Xo((()=>{const u=t.shape.length;if(u<3)throw new Jm(`Input should be at least 3D, but is ${u}D.`);const l=[1,0].concat(Jg(2,u));if(t=qi(t,l),null!=a)throw new Qm("The rnn() functoin of the deeplearn.js backend does not support constants yet.");i&&console.warn("Backend rnn(): the unroll = true option is not applicable to the imperative deeplearn.js backend."),null!=s&&((s=Ci(Ci(s,"bool"),"float32")).rank===u-1&&(s=ec(s,-1)),s=qi(s,l)),r&&(t=Nh(t,0),null!=s&&(s=Nh(s,0)));const c=[];let h,p=n;const d=t.shape[0],f=op(t);let m,g;null!=s&&(m=op(s));for(let t=0;t<d;++t){const n=f[t],r=Xo((()=>e(n,p)));if(null==s)h=r[0],p=r[1];else{const e=Xo((()=>{const e=m[t],n=Su(Qc(e),e);return{output:uu(hu(r[0],e),hu(p[0],n)),newStates:p.map(((t,s)=>uu(hu(r[1][s],e),hu(t,n))))}}));h=e.output,p=e.newStates}o&&c.push(h)}return o&&(g=Kh(c,1)),[h,g,p]}))}_w.className="DepthwiseConv2D",So(_w);class Bw extends mb{constructor(e){let t;if(super(e),null==e.cell)throw new Jm("cell property is missing for the constructor of RNN.");if(t=Array.isArray(e.cell)?new jw({cells:e.cell}):e.cell,null==t.stateSize)throw new Jm("The RNN cell should have an attribute `stateSize` (tuple of integers, one integer per RNN state).");this.cell=t,this.returnSequences=null!=e.returnSequences&&e.returnSequences,this.returnState=null!=e.returnState&&e.returnState,this.goBackwards=null!=e.goBackwards&&e.goBackwards,this._stateful=null!=e.stateful&&e.stateful,this.unroll=null!=e.unroll&&e.unroll,this.supportsMasking=!0,this.inputSpec=[new cb({ndim:3})],this.stateSpec=null,this.states_=null,this.numConstants=null,this.keptStates=[]}getStates(){return null==this.states_?Jg(0,Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1).map((e=>null)):this.states_}setStates(e){this.states_=e}computeOutputShape(e){nb(e)&&(e=e[0]);let t=this.cell.stateSize;Array.isArray(t)||(t=[t]);const n=t[0];let r;if(r=this.returnSequences?[e[0],e[1],n]:[e[0],n],this.returnState){const n=[];for(const r of t)n.push([e[0],r]);return[r].concat(n)}return r}computeMask(e,t){return Xo((()=>{Array.isArray(t)&&(t=t[0]);const e=this.returnSequences?t:null;if(this.returnState){const t=this.states.map((e=>null));return[e].concat(t)}return e}))}get states(){if(null==this.states_){const e=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1,t=[];for(let n=0;n<e;++n)t.push(null);return t}return this.states_}set states(e){this.states_=e}build(e){if(null!=this.numConstants)throw new Qm("Constants support is not implemented in RNN yet.");nb(e)&&(e=e[0]);const t=this.stateful?e[0]:null,n=e.slice(2);this.inputSpec[0]=new cb({shape:[t,null,...n]});const r=[e[0]].concat(e.slice(2));let s;if(this.cell.build(r),s=Array.isArray(this.cell.stateSize)?this.cell.stateSize:[this.cell.stateSize],null!=this.stateSpec){if(!le(this.stateSpec.map((e=>e.shape[e.shape.length-1])),s))throw new Jm(`An initialState was passed that is not compatible with cell.stateSize. Received stateSpec=${this.stateSpec}; However cell.stateSize is ${this.cell.stateSize}`)}else this.stateSpec=s.map((e=>new cb({shape:[null,e]})));this.stateful&&this.resetStates()}resetStates(e,t=!1){Xo((()=>{if(!this.stateful)throw new Ym("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape[0];if(null==n)throw new Jm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.states_)Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Wc([n,e]))):this.states_=[Wc([n,this.cell.stateSize])];else if(null==e)Yo(this.states_),null!=this.keptStates&&(Yo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((e=>Wc([n,e]))):this.states_[0]=Wc([n,this.cell.stateSize]);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);!0===t?this.keptStates.push(this.states_.slice()):Yo(this.states_);for(let t=0;t<this.states_.length;++t){const r=e[t],s=Array.isArray(this.cell.stateSize)?this.cell.stateSize[t]:this.cell.stateSize,a=[n,s];if(!le(r.shape,a))throw new Jm(`State ${t} is incompatible with layer ${this.name}: expected shape=${a}, received shape=${r.shape}`);this.states_[t]=r}}this.states_=this.states_.map((e=>Zo(e.clone())))}))}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Mw(e,n,r,this.numConstants);e=s.inputs,n=s.initialState,r=s.constants;let a=[],i=[];if(null!=n){t.initialState=n,a=a.concat(n),this.stateSpec=[];for(const e of n)this.stateSpec.push(new cb({shape:e.shape}));i=i.concat(this.stateSpec)}if(null!=r&&(t.constants=r,a=a.concat(r),this.numConstants=r.length),a[0]instanceof hb){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Xo((()=>{const n=null==t?null:t.mask,r=null==t?null:t.training;let s=null==t?null:t.initialState;e=sb(e),null==s&&(s=this.stateful?this.states_:this.getInitialState(e));const a=Array.isArray(this.cell.stateSize)?this.cell.stateSize.length:1;if(s.length!==a)throw new Jm(`RNN Layer has ${a} state(s) but was passed ${s.length} initial state(s).`);this.unroll&&console.warn("Ignoring unroll = true for RNN layer, due to imperative backend.");const i={training:r},o=Ow(((e,t)=>{const n=this.cell.call([e].concat(t),i);return[n[0],n.slice(1)]}),e,s,this.goBackwards,n,null,this.unroll,this.returnSequences),u=o[0],l=o[1],c=o[2];this.stateful&&this.resetStates(c,r);const h=this.returnSequences?l:u;return this.returnState?[h].concat(c):h}))}getInitialState(e){return Xo((()=>{let t=Wc(e.shape);return t=Nc(t,[1,2]),t=ey(t),Array.isArray(this.cell.stateSize)?this.cell.stateSize.map((e=>e>1?iy(t,[1,e]):t)):this.cell.stateSize>1?[iy(t,[1,this.cell.stateSize])]:[t]}))}get trainableWeights(){return this.trainable?this.cell.trainableWeights:[]}get nonTrainableWeights(){return this.trainable?this.cell.nonTrainableWeights:this.cell.weights}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.cell&&this.cell.setFastWeightInitDuringBuild(e)}getConfig(){const e=super.getConfig(),t={returnSequences:this.returnSequences,returnState:this.returnState,goBackwards:this.goBackwards,stateful:this.stateful,unroll:this.unroll};null!=this.numConstants&&(t.numConstants=this.numConstants);const n=this.cell.getConfig();return this.getClassName()===Bw.className&&(t.cell={className:this.cell.getClassName(),config:n}),Object.assign({},n,e,t)}static fromConfig(e,t,n={}){const r=Ab(t.cell,n);return new e(Object.assign(t,{cell:r}))}}Bw.className="RNN",So(Bw);class zw extends mb{}class Lw extends zw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,yg(this.units,"units"),this.activation=rw(null==e.activation?this.DEFAULT_ACTIVATION:e.activation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cw(e.kernelRegularizer),this.recurrentRegularizer=cw(e.recurrentRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.kernelConstraint=Tg(e.kernelConstraint),this.recurrentConstraint=Tg(e.recurrentConstraint),this.biasConstraint=Tg(e.biasConstraint),this.dropout=Yg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){e=ab(e),this.kernel=this.addWeight("kernel",[e[e.length-1],this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Xo((()=>{if(2!==e.length)throw new Jm(`SimpleRNNCell expects 2 input Tensors, got ${e.length}.`);let n=e[1];e=e[0];const r=null!=t.training&&t.training;let s;0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hw({ones:()=>Qc(e),rate:this.dropout,training:r,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hw({ones:()=>Qc(n),rate:this.recurrentDropout,training:r,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;s=uy(null!=a?hu(e,a):e,this.kernel.read()),null!=this.bias&&(s=py(s,this.bias.read())),null!=i&&(n=hu(n,i));let o=uu(s,uy(n,this.recurrentKernel.read()));return null!=this.activation&&(o=this.activation.apply(o)),[o,o]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tw(this.activation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:uw(this.kernelRegularizer),recurrentRegularizer:uw(this.recurrentRegularizer),biasRegularizer:uw(this.biasRegularizer),activityRegularizer:uw(this.activityRegularizer),kernelConstraint:Eg(this.kernelConstraint),recurrentConstraint:Eg(this.recurrentConstraint),biasConstraint:Eg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout};return Object.assign({},e,t)}}Lw.className="SimpleRNNCell",So(Lw);class Pw extends Bw{constructor(e){e.cell=new Lw(e),super(e)}call(e,t){return Xo((()=>{null!=this.cell.dropoutMask&&(Yo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return new e(t)}}Pw.className="SimpleRNN",So(Pw);class Uw extends zw{constructor(e){if(super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",e.resetAfter)throw new Jm("GRUCell does not support reset_after parameter set to true.");this.units=e.units,yg(this.units,"units"),this.activation=rw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=rw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelRegularizer=cw(e.kernelRegularizer),this.recurrentRegularizer=cw(e.recurrentRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.kernelConstraint=Tg(e.kernelConstraint),this.recurrentConstraint=Tg(e.recurrentConstraint),this.biasConstraint=Tg(e.biasConstraint),this.dropout=Yg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=this.units,this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){const t=(e=ab(e))[e.length-1];this.kernel=this.addWeight("kernel",[t,3*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,3*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias?this.bias=this.addWeight("bias",[3*this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint):this.bias=null,this.built=!0}call(e,t){return Xo((()=>{if(2!==e.length)throw new Jm(`GRUCell expects 2 input Tensors (inputs, h, c), got ${e.length}.`);const n=null!=t.training&&t.training;let r=e[1];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hw({ones:()=>Qc(e),rate:this.dropout,training:n,count:3,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hw({ones:()=>Qc(r),rate:this.recurrentDropout,training:n,count:3,dropoutFunc:this.dropoutFunc}));const s=this.dropoutMask,a=this.recurrentDropoutMask;let i,o,u;0<this.dropout&&this.dropout<1&&(e=hu(e,s[0]));let l=uy(e,this.kernel.read());this.useBias&&(l=py(l,this.bias.read())),0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hu(r,a[0]));const c=this.recurrentKernel.read(),[h,p]=Gh(c,[2*this.units,this.units],c.rank-1),d=uy(r,h),[f,m,g]=Gh(l,3,l.rank-1),[y,b]=Gh(d,2,d.rank-1);i=this.recurrentActivation.apply(uu(f,y)),o=this.recurrentActivation.apply(uu(m,b));const x=uy(hu(o,r),p);u=this.activation.apply(uu(g,x));const w=uu(hu(i,r),hu(uu(1,xc(i)),u));return[w,w]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tw(this.activation),recurrentActivation:tw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:uw(this.kernelRegularizer),recurrentRegularizer:uw(this.recurrentRegularizer),biasRegularizer:uw(this.biasRegularizer),activityRegularizer:uw(this.activityRegularizer),kernelConstraint:Eg(this.kernelConstraint),recurrentConstraint:Eg(this.recurrentConstraint),biasConstraint:Eg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation,resetAfter:!1};return Object.assign({},e,t)}}Uw.className="GRUCell",So(Uw);class Ww extends Bw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Uw(e),super(e)}call(e,t){return Xo((()=>{null!=this.cell.dropoutMask&&(Yo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Ww.className="GRU",So(Ww);class Vw extends zw{constructor(e){super(e),this.DEFAULT_ACTIVATION="tanh",this.DEFAULT_RECURRENT_ACTIVATION="hardSigmoid",this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_RECURRENT_INITIALIZER="orthogonal",this.DEFAULT_BIAS_INITIALIZER="zeros",this.units=e.units,yg(this.units,"units"),this.activation=rw(void 0===e.activation?this.DEFAULT_ACTIVATION:e.activation),this.recurrentActivation=rw(void 0===e.recurrentActivation?this.DEFAULT_RECURRENT_ACTIVATION:e.recurrentActivation),this.useBias=null==e.useBias||e.useBias,this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.recurrentInitializer=Oy(e.recurrentInitializer||this.DEFAULT_RECURRENT_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.unitForgetBias=e.unitForgetBias,this.kernelRegularizer=cw(e.kernelRegularizer),this.recurrentRegularizer=cw(e.recurrentRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.kernelConstraint=Tg(e.kernelConstraint),this.recurrentConstraint=Tg(e.recurrentConstraint),this.biasConstraint=Tg(e.biasConstraint),this.dropout=Yg([1,Zg([0,null==e.dropout?0:e.dropout])]),this.recurrentDropout=Yg([1,Zg([0,null==e.recurrentDropout?0:e.recurrentDropout])]),this.dropoutFunc=e.dropoutFunc,this.implementation=e.implementation,this.stateSize=[this.units,this.units],this.dropoutMask=null,this.recurrentDropoutMask=null}build(e){var t;const n=(e=ab(e))[e.length-1];let r;if(this.kernel=this.addWeight("kernel",[n,4*this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.recurrentKernel=this.addWeight("recurrent_kernel",[this.units,4*this.units],null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){if(this.unitForgetBias){const e=this.biasInitializer,n=this.units;r=new((t=class extends yy{apply(t,r){const s=e.apply([n]),a=(new xy).apply([n]),i=e.apply([2*n]);return ay(ay(s,a),i)}}).className="CustomInit",t)}else r=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.units],null,r,this.biasRegularizer,!0,this.biasConstraint)}else this.bias=null;this.built=!0}call(e,t){return Xo((()=>{const n=null!=t.training&&t.training;if(3!==e.length)throw new Jm(`LSTMCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);let r=e[1];const s=e[2];e=e[0],0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hw({ones:()=>Qc(e),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc})),0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hw({ones:()=>Qc(r),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const a=this.dropoutMask,i=this.recurrentDropoutMask;let o,u,l,c;0<this.dropout&&this.dropout<1&&(e=hu(e,a[0]));let h=uy(e,this.kernel.read());0<this.recurrentDropout&&this.recurrentDropout<1&&(r=hu(r,i[0])),h=uu(h,uy(r,this.recurrentKernel.read())),this.useBias&&(h=py(h,this.bias.read()));const[p,d,f,m]=Gh(h,4,h.rank-1);o=this.recurrentActivation.apply(p),u=this.recurrentActivation.apply(d),l=uu(hu(u,s),hu(o,this.activation.apply(f))),c=this.recurrentActivation.apply(m);const g=hu(c,this.activation.apply(l));return[g,g,l]}))}getConfig(){const e=super.getConfig(),t={units:this.units,activation:tw(this.activation),recurrentActivation:tw(this.recurrentActivation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),recurrentInitializer:My(this.recurrentInitializer),biasInitializer:My(this.biasInitializer),unitForgetBias:this.unitForgetBias,kernelRegularizer:uw(this.kernelRegularizer),recurrentRegularizer:uw(this.recurrentRegularizer),biasRegularizer:uw(this.biasRegularizer),activityRegularizer:uw(this.activityRegularizer),kernelConstraint:Eg(this.kernelConstraint),recurrentConstraint:Eg(this.recurrentConstraint),biasConstraint:Eg(this.biasConstraint),dropout:this.dropout,recurrentDropout:this.recurrentDropout,implementation:this.implementation};return Object.assign({},e,t)}}Vw.className="LSTMCell",So(Vw);class Gw extends Bw{constructor(e){0===e.implementation&&console.warn("`implementation=0` has been deprecated, and now defaults to `implementation=1`. Please update your layer call."),e.cell=new Vw(e),super(e)}call(e,t){return Xo((()=>{null!=this.cell.dropoutMask&&(Yo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null);const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}static fromConfig(e,t){return 0===t.implmentation&&(t.implementation=1),new e(t)}}Gw.className="LSTM",So(Gw);class jw extends zw{constructor(e){super(e),this.cells=e.cells}get stateSize(){const e=[];for(const t of this.cells.slice().reverse())Array.isArray(t.stateSize)?e.push(...t.stateSize):e.push(t.stateSize);return e}call(e,t){return Xo((()=>{let n=e.slice(1);const r=[];for(const e of this.cells.slice().reverse())Array.isArray(e.stateSize)?r.push(n.splice(0,e.stateSize.length)):r.push(n.splice(0,1));r.reverse();const s=[];let a;for(let i=0;i<this.cells.length;++i){const o=this.cells[i];n=r[i],a=0===i?[e[0]].concat(n):[a[0]].concat(n),a=o.call(a,t),s.push(a.slice(1))}n=[];for(const e of s.slice().reverse())n.push(...e);return[a[0]].concat(n)}))}build(e){let t;nb(e)&&(e=e[0]),this.cells.forEach(((n,r)=>{Gg(`RNNCell_${r}`,(()=>{n.build(e),t=Array.isArray(n.stateSize)?n.stateSize[0]:n.stateSize,e=[e[0],t]}))})),this.built=!0}getConfig(){const e=super.getConfig(),t={cells:this.cells.map((e=>({className:e.getClassName(),config:e.getConfig()})))};return Object.assign({},e,t)}static fromConfig(e,t,n={}){const r=[];for(const e of t.cells)r.push(Ab(e,n));return new e({cells:r})}get trainableWeights(){if(!this.trainable)return[];const e=[];for(const t of this.cells)e.push(...t.trainableWeights);return e}get nonTrainableWeights(){const e=[];for(const t of this.cells)e.push(...t.nonTrainableWeights);if(!this.trainable){const t=[];for(const e of this.cells)t.push(...e.trainableWeights);return t.concat(e)}return e}getWeights(){const e=[];for(const t of this.cells)e.push(...t.weights);return ub(e)}setWeights(e){const t=[];for(const n of this.cells){const r=n.weights.length,s=e.splice(r);for(let e=0;e<n.weights.length;++e)t.push([n.weights[e],s[e]])}lb(t)}}function Hw(e){const{ones:t,rate:n,training:r=!1,count:s=1,dropoutFunc:a}=e,i=()=>null!=a?a(t(),n):dy(t(),n),o=()=>fy(i,t,r);return!s||s<=1?Zo(o().clone()):Array(s).fill(void 0).map(o).map((e=>Zo(e.clone())))}jw.className="StackedRNNCells",So(jw);class qw extends Bw{constructor(e){if(e.unroll)throw new Qm("Unrolling is not possible with convolutional RNNs.");if(Array.isArray(e.cell))throw new Qm("It is not possible at the moment to stack convolutional cells.");super(e),this.inputSpec=[new cb({ndim:5})]}call(e,t){return Xo((()=>{if(null!=this.cell.dropoutMask&&(Yo(this.cell.dropoutMask),this.cell.dropoutMask=null),null!=this.cell.recurrentDropoutMask&&(Yo(this.cell.recurrentDropoutMask),this.cell.recurrentDropoutMask=null),t&&t.constants)throw new Jm("ConvRNN2D cell does not support constants");const n=null==t?null:t.mask,r=null==t?null:t.training,s=null==t?null:t.initialState;return super.call(e,{mask:n,training:r,initialState:s})}))}computeOutputShape(e){let t=this.computeSingleOutputShape(e);return this.returnSequences||(t=[t[0],...t.slice(2)]),this.returnState&&(t=[t,...Array(2).fill([e[0],...t.slice(-3)])]),t}getInitialState(e){return Xo((()=>{const{stateSize:t}=this.cell,n=e.shape,r=this.computeSingleOutputShape(n),s=Wc([r[0],...r.slice(2)]);return Array.isArray(t)?Array(t.length).fill(s):[s]}))}resetStates(e,t=!1){Xo((()=>{if(!this.stateful)throw new Ym("Cannot call resetStates() on an RNN Layer that is not stateful.");const n=this.inputSpec[0].shape,r=this.computeSingleOutputShape(n),s=[r[0],...r.slice(2)];if(null==n[0])throw new Jm("If an RNN is stateful, it needs to know its batch size. Specify the batch size of your input tensors: \n- If using a Sequential model, specify the batch size by passing a `batchInputShape` option to your first layer.\n- If using the functional API, specify the batch size by passing a `batchShape` option to your Input layer.");if(null==this.getStates())Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wc(s))):this.states_=[Wc(s)];else if(null==e)Yo(this.states_),null!=this.keptStates&&(Yo(this.keptStates),this.keptStates=[]),Array.isArray(this.cell.stateSize)?this.states_=this.cell.stateSize.map((()=>Wc(s))):this.states_[0]=Wc(s);else{if(Array.isArray(e)||(e=[e]),e.length!==this.states_.length)throw new Jm(`Layer ${this.name} expects ${this.states_.length} state(s), but it received ${e.length} state value(s). Input received: ${e}`);t?this.keptStates.push(this.states_.slice()):Yo(this.states_);for(let t=0;t<this.states_.length;++t){const n=e[t],r=s;if(!le(n.shape,r))throw new Jm(`State ${t} is incompatible with layer ${this.name}: expected shape=${r}, received shape=${n.shape}`);this.states_[t]=n}}this.states_=this.states_.map((e=>Zo(e.clone())))}))}computeSingleOutputShape(e){const{dataFormat:t,filters:n,kernelSize:r,padding:s,strides:a,dilationRate:i}=this.cell,o="channelsFirst"===t,u=e[o?3:2],l=e[o?4:3],c=bw(u,r[0],s,a[0],i[0]),h=bw(l,r[1],s,a[1],i[1]);return[...e.slice(0,2),...o?[n,c,h]:[c,h,n]]}}qw.className="ConvRNN2D";class Kw extends Vw{constructor(e){const{filters:t,kernelSize:n,strides:r,padding:s,dataFormat:a,dilationRate:i}=e;super(Object.assign({},e,{units:t})),this.filters=t,yg(this.filters,"filters"),this.kernelSize=yw(n,2,"kernelSize"),this.kernelSize.forEach((e=>yg(e,"kernelSize"))),this.strides=yw(r||1,2,"strides"),this.strides.forEach((e=>yg(e,"strides"))),this.padding=s||"valid",Ug(this.padding),this.dataFormat=a||"channelsLast",Pg(this.dataFormat),this.dilationRate=yw(i||1,2,"dilationRate"),this.dilationRate.forEach((e=>yg(e,"dilationRate")))}build(e){var t;e=ab(e);const n="channelsFirst"===this.dataFormat?1:e.length-1;if(null==e[n])throw new Jm(`The channel dimension of the input should be defined. Found ${e[n]}`);const r=e[n],s=this.kernelSize.concat([r,4*this.filters]);this.kernel=this.addWeight("kernel",s,null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint);const a=this.kernelSize.concat([this.filters,4*this.filters]);if(this.recurrentKernel=this.addWeight("recurrent_kernel",a,null,this.recurrentInitializer,this.recurrentRegularizer,!0,this.recurrentConstraint),this.useBias){let e;if(this.unitForgetBias){const n=this.biasInitializer,r=this.filters;e=new((t=class extends yy{apply(e,t){return sy([n.apply([r]),Vc([r]),n.apply([2*r])])}}).className="CustomInit",t)}else e=this.biasInitializer;this.bias=this.addWeight("bias",[4*this.filters],null,e,this.biasRegularizer,!0,this.biasConstraint)}this.built=!0}call(e,t){return Xo((()=>{if(3!==e.length)throw new Jm(`ConvLSTM2DCell expects 3 input Tensors (inputs, h, c), got ${e.length}.`);const n=t.training||!1,r=e[0],s=e[1],a=e[2];0<this.dropout&&this.dropout<1&&null==this.dropoutMask&&(this.dropoutMask=Hw({ones:()=>Qc(r),rate:this.dropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const i=this.dropoutMask,o=(e,t,n)=>t&&t[n]?hu(t[n],e):e;let u=o(r,i,0),l=o(r,i,1),c=o(r,i,2),h=o(r,i,3);0<this.recurrentDropout&&this.recurrentDropout<1&&null==this.recurrentDropoutMask&&(this.recurrentDropoutMask=Hw({ones:()=>Qc(s),rate:this.recurrentDropout,training:n,count:4,dropoutFunc:this.dropoutFunc}));const p=this.recurrentDropoutMask;let d=o(s,p,0),f=o(s,p,1),m=o(s,p,2),g=o(s,p,3);const[y,b,x,w]=Gh(this.kernel.read(),4,3),[v,k,N,I]=this.useBias?Gh(this.bias.read(),4):[null,null,null,null];u=this.inputConv(u,y,v,this.padding),l=this.inputConv(l,b,k,this.padding),c=this.inputConv(c,x,N,this.padding),h=this.inputConv(h,w,I,this.padding);const[C,D,E,S]=Gh(this.recurrentKernel.read(),4,3);d=this.recurrentConv(d,C),f=this.recurrentConv(f,D),m=this.recurrentConv(m,E),g=this.recurrentConv(g,S);const T=this.recurrentActivation.apply(uu(u,d)),A=this.recurrentActivation.apply(uu(l,f)),$=uu(hu(A,a),hu(T,this.activation.apply(uu(c,m)))),F=hu(this.recurrentActivation.apply(uu(h,g)),this.activation.apply($));return[F,F,$]}))}getConfig(){const e=super.getConfig(),{units:t}=e,n=function(e,t){var n={};for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&t.indexOf(r)<0&&(n[r]=e[r]);if(null!=e&&"function"==typeof Object.getOwnPropertySymbols){var s=0;for(r=Object.getOwnPropertySymbols(e);s<r.length;s++)t.indexOf(r[s])<0&&Object.prototype.propertyIsEnumerable.call(e,r[s])&&(n[r[s]]=e[r[s]])}return n}(e,["units"]),r={filters:this.filters,kernelSize:this.kernelSize,padding:this.padding,dataFormat:this.dataFormat,dilationRate:this.dilationRate,strides:this.strides};return Object.assign({},n,r)}inputConv(e,t,n,r){const s=$l(e,t,this.strides,r||"valid","channelsFirst"===this.dataFormat?"NCHW":"NHWC",this.dilationRate);return n?py(s,n,this.dataFormat):s}recurrentConv(e,t){return $l(e,t,1,"same","channelsFirst"===this.dataFormat?"NCHW":"NHWC")}}Kw.className="ConvLSTM2DCell",So(Kw);class Xw extends qw{constructor(e){const t=new Kw(e);super(Object.assign({},e,{cell:t}))}static fromConfig(e,t){return new e(t)}}Xw.className="ConvLSTM2D",So(Xw);class Yw extends mb{constructor(e){super(e),this.rate=Math.max(Math.min(e.rate,1),0),this.noiseShape=e.noiseShape,this.seed=e.seed,this.supportsMasking=!0}getNoiseShape(e){if(null==this.noiseShape)return this.noiseShape;const t=e.shape,n=[];for(let e=0;e<this.noiseShape.length;++e)n.push(null==this.noiseShape[e]?t[e]:this.noiseShape[e]);return n}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);const n=sb(e);if(0<this.rate&&this.rate<1){const e=null!=t.training&&t.training,r=this.getNoiseShape(n);return fy((()=>dy(n,this.rate,r,this.seed)),(()=>n),e)}return e}))}getConfig(){const e={rate:this.rate,noiseShape:this.noiseShape,seed:this.seed},t=super.getConfig();return Object.assign(e,t),e}dispose(){return super.dispose()}}Yw.className="Dropout",So(Yw);class Zw extends Yw{constructor(e){super(e),this.inputSpec=[{ndim:3}]}getNoiseShape(e){const t=e.shape;return[t[0],1,t[2]]}}Zw.className="SpatialDropout1D",So(Zw);class Jw extends mb{constructor(e){if(super(e),this.activation=null,this.useBias=!0,this.kernel=null,this.bias=null,this.DEFAULT_KERNEL_INITIALIZER="glorotNormal",this.DEFAULT_BIAS_INITIALIZER="zeros",null==e.batchInputShape&&null==e.inputShape&&null!=e.inputDim){let t=null;null!=e.batchSize&&(t=e.batchSize),this.batchInputShape=[t,e.inputDim]}this.units=e.units,yg(this.units,"units"),this.activation=rw(e.activation),null!=e.useBias&&(this.useBias=e.useBias),this.kernelInitializer=Oy(e.kernelInitializer||this.DEFAULT_KERNEL_INITIALIZER),this.biasInitializer=Oy(e.biasInitializer||this.DEFAULT_BIAS_INITIALIZER),this.kernelConstraint=Tg(e.kernelConstraint),this.biasConstraint=Tg(e.biasConstraint),this.kernelRegularizer=cw(e.kernelRegularizer),this.biasRegularizer=cw(e.biasRegularizer),this.activityRegularizer=cw(e.activityRegularizer),this.supportsMasking=!0,this.inputSpec=[{minNDim:2}]}build(e){const t=(e=ab(e))[e.length-1];null==this.kernel&&(this.kernel=this.addWeight("kernel",[t,this.units],null,this.kernelInitializer,this.kernelRegularizer,!0,this.kernelConstraint),this.useBias&&(this.bias=this.addWeight("bias",[this.units],null,this.biasInitializer,this.biasRegularizer,!0,this.biasConstraint))),this.inputSpec=[{minNDim:2,axes:{[-1]:t}}],this.built=!0}computeOutputShape(e){const t=(e=ab(e)).slice();return t[t.length-1]=this.units,t}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);const n=sb(e),r=xg(this.activation.getClassName());let s;return null!=r?s=uy(n,this.kernel.read(),r,this.bias?this.bias.read():null):(s=uy(n,this.kernel.read()),null!=this.bias&&(s=py(s,this.bias.read())),null!=this.activation&&(s=this.activation.apply(s))),s}))}getConfig(){const e={units:this.units,activation:tw(this.activation),useBias:this.useBias,kernelInitializer:My(this.kernelInitializer),biasInitializer:My(this.biasInitializer),kernelRegularizer:uw(this.kernelRegularizer),biasRegularizer:uw(this.biasRegularizer),activityRegularizer:uw(this.activityRegularizer),kernelConstraint:Eg(this.kernelConstraint),biasConstraint:Eg(this.biasConstraint)},t=super.getConfig();return Object.assign(e,t),e}}Jw.className="Dense",So(Jw);class Qw extends mb{constructor(e){super(e=e||{}),this.inputSpec=[{minNDim:3}],this.dataFormat=e.dataFormat}computeOutputShape(e){e=ab(e);for(const t of e.slice(1))if(null==t)throw new Jm(`The shape of the input to "Flatten" is not fully defined (got ${e.slice(1)}). Make sure to pass a complete "input_shape" or "batch_input_shape" argument to the first layer in your model.`);return[e[0],Xg(e,1)]}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);let n=sb(e);if("channelsFirst"===this.dataFormat&&n.rank>1){const e=[0];for(let t=2;t<n.rank;++t)e.push(t);e.push(1),n=qi(n,e)}return function(e){if(e.rank<=1)throw new Jm(`batchFlatten requires a minimum rank of 2. Got rank: ${e.rank}.`);const t=[e.shape[0],Xg(e.shape,1)];return ll(e,t)}(n)}))}getConfig(){const e={};null!=this.dataFormat&&(e.dataFormat=this.dataFormat);const t=super.getConfig();return Object.assign(e,t),e}}Qw.className="Flatten",So(Qw);class ev extends mb{constructor(e){super(e),this.supportsMasking=!0,this.activation=rw(e.activation)}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);const n=sb(e);return this.activation.apply(n)}))}getConfig(){const e={activation:tw(this.activation)},t=super.getConfig();return Object.assign(e,t),e}}ev.className="Activation",So(ev);class tv extends mb{constructor(e){super(e),this.n=e.n,this.inputSpec=[{ndim:2}]}computeOutputShape(e){return[e[0],this.n,e[1]]}call(e,t){return Xo((()=>{return e=sb(e),t=e,n=this.n,Xo((()=>{if(2!==t.shape.length)throw new Jm(`repeat() expects a rank-2 tensor, but received a rank-${t.shape.length} tensor.`);return iy(ey(t,1),[1,n,1])}));var t,n}))}getConfig(){const e={n:this.n},t=super.getConfig();return Object.assign(e,t),e}}tv.className="RepeatVector",So(tv);class nv extends mb{constructor(e){super(e),this.targetShape=e.targetShape;for(let e=0;e<this.targetShape.length;++e)this.isUnknown(this.targetShape[e])&&(this.targetShape[e]=null)}isUnknown(e){return e<0||null==e}fixUnknownDimension(e,t){const n="Total size of new array must be unchanged.",r=t.slice();let s=1,a=null;for(let e=0;e<r.length;++e){const t=r[e];if(this.isUnknown(t)){if(null!==a)throw new Jm("Can only specifiy one unknown dimension.");a=e}else s*=t}const i=Xg(e);if(null!==a){if(0===s||i%s!=0)throw new Jm(n);r[a]=i/s}else if(i!==s)throw new Jm(n);return r}computeOutputShape(e){let t=!1;for(let n=0;n<e.length;++n)if(this.isUnknown(e[n])){t=!0;break}return t?e.slice(0,1).concat(this.targetShape):e.slice(0,1).concat(this.fixUnknownDimension(e.slice(1),this.targetShape))}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);const n=sb(e),r=n.shape,s=r.slice(0,1).concat(this.fixUnknownDimension(r.slice(1),this.targetShape));return ll(n,s)}))}getConfig(){const e={targetShape:this.targetShape},t=super.getConfig();return Object.assign(e,t),e}}nv.className="Reshape",So(nv);class rv extends mb{constructor(e){if(super(e),null==e.dims)throw new Error("Required configuration field `dims` is missing during Permute constructor call.");if(!Array.isArray(e.dims))throw new Error(`Permute constructor requires \`dims\` to be an Array, but received ${e.dims} instead.`);const t=Jg(1,e.dims.length+1);if(!le(e.dims.slice().sort(),t))throw new Error("Invalid permutation `dims`: "+JSON.stringify(e.dims)+" `dims` must contain consecutive integers starting from 1.");this.dims=e.dims,this.dimsIncludingBatch=[0].concat(this.dims),this.inputSpec=[new cb({ndim:this.dims.length+1})]}computeOutputShape(e){const t=(e=ab(e)).slice();return this.dims.forEach(((n,r)=>{t[r+1]=e[n]})),t}call(e,t){return qi(sb(e),this.dimsIncludingBatch)}getConfig(){const e={dims:this.dims},t=super.getConfig();return Object.assign(e,t),e}}rv.className="Permute",So(rv);class sv extends mb{constructor(e){super(null==e?{}:e),this.supportsMasking=!0,this.maskValue=null!=e?null==e.maskValue?0:e.maskValue:0}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={maskValue:this.maskValue};return Object.assign(t,e),t}computeMask(e,t){const n=sb(e);return Uu(Jc(n,this.maskValue),-1)}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);const n=sb(e),r=Uu(Jc(n,this.maskValue),-1,!0);return hu(n,Ci(r,n.dtype))}))}}sv.className="Masking",So(sv);class av extends mb{constructor(e){if(super(e),this.embeddings=null,this.DEFAULT_EMBEDDINGS_INITIALIZER="randomUniform",null==e.batchInputShape&&null==e.inputShape){let t=null;null!=e.batchSize&&(t=e.batchSize),null==e.inputLength?this.batchInputShape=[t,null]:this.batchInputShape=[t].concat(ag(e.inputLength))}this.inputDim=e.inputDim,yg(this.inputDim,"inputDim"),this.outputDim=e.outputDim,yg(this.outputDim,"outputDim"),this.embeddingsInitializer=Oy(e.embeddingsInitializer||this.DEFAULT_EMBEDDINGS_INITIALIZER),this.embeddingsRegularizer=cw(e.embeddingsRegularizer),this.activityRegularizer=cw(e.activityRegularizer),this.embeddingsConstraint=Tg(e.embeddingsConstraint),this.maskZero=e.maskZero,this.supportsMasking=e.maskZero,this.inputLength=e.inputLength}build(e){this.embeddings=this.addWeight("embeddings",[this.inputDim,this.outputDim],this.dtype,this.embeddingsInitializer,this.embeddingsRegularizer,!0,this.embeddingsConstraint),this.built=!0}warnOnIncompatibleInputShape(e){}computeMask(e,t){return Xo((()=>this.maskZero?(e=sb(e),Jc(e,fu(e))):null))}computeOutputShape(e){if(e=ab(e),null==this.inputLength)return[...e,this.outputDim];const t=ag(this.inputLength);if(t.length!==e.length-1)throw new Jm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);{let n=0;for(let r=0;r<t.length;++r){const s=t[r],a=e[r+1];if(null!=s&&null!=a&&s!==a)throw new Jm(`"inputLength" is ${this.inputLength}, but received input shape has shape ${e}`);null==s&&(t[n]=a),n++}}return[e[0],...t,this.outputDim]}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);let n=sb(e);"int32"!==n.dtype&&(n=Qg(n,"int32"));const r=ly(this.embeddings.read(),ll(n,[n.size]));return ll(r,ab(this.computeOutputShape(n.shape)))}))}getConfig(){const e={inputDim:this.inputDim,outputDim:this.outputDim,embeddingsInitializer:My(this.embeddingsInitializer),embeddingsRegularizer:uw(this.embeddingsRegularizer),activityRegularizer:uw(this.activityRegularizer),embeddingsConstraint:Eg(this.embeddingsConstraint),maskZero:this.maskZero,inputLength:this.inputLength},t=super.getConfig();return Object.assign(e,t),e}}av.className="Embedding",So(av);class iv extends mb{constructor(e){super(e||{}),this.supportsMasking=!0}mergeFunction(e){throw new Qm}computeElementwiseOpOutputShape(e,t){if(null==e||null==t)return null;if(e.length<t.length)return this.computeElementwiseOpOutputShape(t,e);if(0===t.length)return e;const n=e.slice(0,e.length-t.length);for(let r=0;r<t.length;++r){const s=e[e.length-t.length+r],a=t[r];if(null==s||null==a||s<0||a<0)n.push(null);else if(1===s)n.push(a);else if(1===a)n.push(s);else{if(s!==a)throw new Jm("Operands could not be broadcast together with shapes "+JSON.stringify(e)+" "+JSON.stringify(t));n.push(s)}}return n}build(e){if(Array.isArray(e)&&!Array.isArray(e[0])&&(e=[ab(e)]),e.length<2)throw new Jm(`A merge layer should be called on an Array of at least 2 inputs. Got ${e.length} input(s).`);let t=[];for(const n of e)null!=n&&null!==n[0]&&t.push(n[0]);if(t=dg(t),t.length>1)throw new Jm(`Can not merge tensors with different batch sizes. Got tensors with shapes: ${JSON.stringify(e)}.`);let n=null==e[0]?null:e[0].slice(1);for(let t=1;t<e.length;++t){const r=null==e[t]?null:e[t].slice(1);n=this.computeElementwiseOpOutputShape(n,r)}const r=e.map((e=>e.length));-1===e.indexOf(null)&&1===dg(r).length?this.reshapeRequired=!1:this.reshapeRequired=!0}call(e,t){return Xo((()=>{if(this.reshapeRequired){const t=[],n=e.map((e=>e.rank));if(-1===n.indexOf(null)){const r=Zg(n);for(let n of e){const e=n.rank;for(let t=0;t<r-e;++t)n=ey(n,1);t.push(n)}return this.mergeFunction(t)}{let n=!1;for(const r of e){const e=r.rank;if(null==e){const e=r.shape,s=e[0],a=e.slice(1).concat([s]);let i=ll(r,[s].concat(Xg(e.slice(1))));i=qi(i,[1,0]),i=ll(i,a),t.push(i),n=!0}else if(e>1){const s=Jg(1,e).concat([0]);t.push(qi(r,s)),n=!0}else t.push(r)}let r=this.mergeFunction(t);const s=r.rank;if(n)if(null==s){const e=r.shape,t=e[e.length-1],n=[t].concat(e.slice(0,e.length-1));r=ll(qi(ll(r,[-1,t]),[1,0]),n)}else if(s>1){const e=[s-1].concat(Jg(0,s-1));r=qi(r,e)}return r}}return this.mergeFunction(e)}))}computeOutputShape(e){let t;t=null==e[0]?null:e[0].slice(1);for(let n=1;n<e.length;++n){const r=null==e[n]?null:e[n].slice(1);t=this.computeElementwiseOpOutputShape(t,r)}let n=[];for(const t of e)null!=t&&null!==t[0]&&n.push(t[0]);return n=dg(n),t=1===n.length?n.concat(t):[null].concat(t),t}computeMask(e,t){return Xo((()=>{if(null==t)return null;if(!Array.isArray(t))throw new Jm("`mask` should be an Array");if(!Array.isArray(e))throw new Jm("`inputs` should be an Array");if(t.length!==e.length)throw new Jm(`The Array 'inputs' and 'mask' are expected to have the same length, but have different lengths (${e.length} vs ${t.length})`);if(t.every((e=>null==e)))return null;let n=(t=t.map((e=>null==e?e:ec(e,0))))[0];for(let e=1;e<t.length-1;++e)n=_c(n,t[e]);return n}))}}class ov extends iv{constructor(e){super(e)}mergeFunction(e){return Xo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=uu(t,e[n]);return t}))}}ov.className="Add",So(ov);class uv extends iv{constructor(e){super(e)}mergeFunction(e){return Xo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=hu(t,e[n]);return t}))}}uv.className="Multiply",So(uv);class lv extends iv{constructor(e){super(e)}mergeFunction(e){return Xo((()=>{let t=e[0].clone();for(let n=1;n<e.length;++n)t=uu(t,e[n]);return hu(1/e.length,t)}))}}lv.className="Average",So(lv);class cv extends iv{constructor(e){super(e)}mergeFunction(e){return Xo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=$u(t,e[n]);return t}))}}cv.className="Maximum",So(cv);class hv extends iv{constructor(e){super(e)}mergeFunction(e){return Xo((()=>{let t=e[0];for(let n=1;n<e.length;++n)t=Hc(t,e[n]);return t}))}}hv.className="Minimum",So(hv);class pv extends iv{constructor(e){super(e),this.DEFAULT_AXIS=-1,null==e&&(e={}),this.axis=null==e.axis?this.DEFAULT_AXIS:e.axis,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){if(!Array.isArray(e)||!Array.isArray(e[0])||1===e.length)throw new Jm("A `Concatenate` layer should be called on a list of at least 2 inputs");let t=!0;for(const n of e)if(null!=n){t=!1;break}if(t)return;const n=[];for(let t=0;t<e.length;++t){const r=e[t].slice();r.splice(this.axis,1);let s=!1;for(const e of n)if(le(e,r)){s=!0;break}s||n.push(r)}if(n.length>1)throw new Jm("A `Concatenate` layer requires inputs with matching shapes except for the concat axis. Got input shapes: "+JSON.stringify(e))}mergeFunction(e){return Xo((()=>sy(e,this.axis)))}computeOutputShape(e){if(!Array.isArray(e)||!Array.isArray(e[0]))throw new Jm("A `Concatenate` layer should be called on a list of inputs.");const t=e,n=t[0].slice(),r=this.axis<0?n.length+this.axis:this.axis;for(const e of t.slice(1)){if(null==n[r]||null==e[r]){n[r]=null;break}n[r]+=e[r]}return n}computeMask(e,t){if(null==t)return null;if(!Array.isArray(t))throw new Jm("`mask` should be an array for Concatenate");if(!Array.isArray(e))throw new Jm("`inputs` should be an array for Concatenate");if(t.length!==e.length)throw new Jm(`Mismatch in the length of mask (${t.length}) and the legnth of inputs (${e.length})`);return Xo((()=>{let n=!0;if(t.forEach((e=>{null==e||(n=!1)})),n)return null;const r=[];for(let n=0;n<e.length;++n)null==t[n]?r.push(Ci(Qc(e[n]),"bool")):t[n].rank<e[n].rank?r.push(ec(t[n],-1)):r.push(t[n]);const s=pl(r,this.axis);return Pu(s,-1,!1)}))}getConfig(){const e={axis:this.axis},t=super.getConfig();return Object.assign(e,t),e}}function dv(e,t){for(;e<0;)e+=t;return e}pv.className="Concatenate",So(pv);class fv extends iv{constructor(e){super(e),this.axes=e.axes,this.normalize=null!=e.normalize&&e.normalize,this.supportsMasking=!0,this.reshapeRequired=!1}build(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0],n=e[1];if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);if(t[r[0]]!==n[r[1]])throw new Jm(`Dimension incompatibility: ${t[r[0]]} !== ${n[r[1]]}`)}mergeFunction(e){if(2!==e.length)throw new Jm(`A \`Dot\` layer must be called on exactly 2 inputs, but received ${e.length} input(s).`);let t,n=e[0],r=e[1];return t=Array.isArray(this.axes)?this.axes.map(((t,n)=>dv(t,e[n].shape.length))):[dv(this.axes,n.shape.length),dv(this.axes,r.shape.length)],this.normalize&&(n=$b(n,t[0]),r=$b(r,t[1])),function(e,t,n){if(e.shape.length>3||t.shape.length>3)throw new Qm("batchDot is not implemented for tensors of 4D or higher rank yet");if(re(e.shape.length>=2,(()=>`batchDot requires the rank of x to be >= 2, but got ${e.shape.length}`)),re(e.shape.length>=2,(()=>`batchDot requires the rank of y to be >= 2, but got ${t.shape.length}`)),"number"==typeof n&&(n=[n,n]),"complex64"===e.dtype||"complex64"===t.dtype)throw new Qm("batchDot is not implemented for complex64-type Tensors yet.");const r=e.shape.length,s=t.shape.length;null==n&&(n=[r-1,s-2]);const a=n;return Xo((()=>{let n,i;if(r>s){n=r-s;const e=[];for(let t=0;t<n;++t)e.push(1);t=ll(t,t.shape.concat(e))}else if(s>r){n=s-r;const t=[];for(let e=0;e<n;++e)t.push(1);e=ll(e,e.shape.concat(t))}else n=0;if(2===e.shape.length&&2===t.shape.length)i=a[0]===a[1]?Nc(hu(e,t),a[0]):Nc(hu(qi(e,[1,0]),t),a[1]);else{const n=a[0]!==e.shape.length-1,r=a[1]===t.shape.length-1;i=ji(e,t,n,r)}if(n>0){let e;e=r>s?r+s-3:r-1;const t=[];for(let r=e;r<e+n;++r)t.push(r);i=qh(i,t)}return 1===i.shape.length&&(i=ec(i,1)),i}))}(n,r,t)}interpretAxes(e,t){let n;return n=Array.isArray(this.axes)?this.axes:[dv(this.axes,e.length),dv(this.axes,t.length)],n}computeOutputShape(e){re(Array.isArray(e)&&2===e.length&&Array.isArray(e[0])&&Array.isArray(e[1]),(()=>"A `Dot` layer should be called on a list of exactly 2 inputs."));const t=e[0].slice(),n=e[1].slice();if(t.length>3||n.length>3)throw new Qm("Dot layer does not support tensors of 4D or higher rank yet.");const r=this.interpretAxes(t,n);t.splice(r[0],1),n.splice(r[1],1),n.splice(0,1);const s=t.concat(n);return 1===s.length&&s.push(1),s}computeMask(e,t){return null}getConfig(){const e={axes:this.axes,normalize:this.normalize},t=super.getConfig();return Object.assign(e,t),e}}fv.className="Dot",So(fv);class mv extends mb{constructor(e){super(e),this.supportsMasking=!0,this.stddev=e.stddev}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={stddev:this.stddev};return Object.assign(t,e),t}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);const n=sb(e);return fy((()=>uu(oy(n.shape,0,this.stddev),n)),(()=>n),t.training||!1)}))}}mv.className="GaussianNoise",So(mv);class gv extends mb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Xo((()=>{this.invokeCallHook(e,t);const n=sb(e);return this.rate>0&&this.rate<1?fy((()=>{const e=Math.sqrt(this.rate/(1-this.rate));return hu(n,oy(n.shape,1,e))}),(()=>n),t.training||!1):n}))}}gv.className="GaussianDropout",So(gv);class yv extends mb{constructor(e){super(e),this.supportsMasking=!0,this.rate=e.rate,this.noiseShape=e.noiseShape}_getNoiseShape(e){return this.noiseShape||sb(e).shape}computeOutputShape(e){return e}getConfig(){const e=super.getConfig(),t={rate:this.rate};return Object.assign(t,e),t}call(e,t){return Xo((()=>{if(this.rate<1&&this.rate>0){const n=this._getNoiseShape(e),r=()=>{const t=sb(e),r=-1.7580993408473766;let s=oc(yh(n),this.rate);s=Qg(s,"float32");const a=((1-this.rate)*(1+this.rate*r**2))**-.5,i=-a*r*this.rate,o=uu(hu(t,s),hu(uu(s,-1),r));return uu(hu(o,a),i)};return fy(r,(()=>sb(e)),t.training||!1)}return e}))}}function bv(e,t,n,r,s,a=.001){let i;if(2===e.rank)i=xl(e,t,n,r,s,a);else if(3===e.rank)i=wl(e,t,n,r,s,a);else{if(4!==e.rank)throw new Qm(`batchNormalization is not implemented for array of rank ${e.rank} yet`);i=vl(e,t,n,r,s,a)}return i}yv.className="AlphaDropout",So(yv);class xv extends mb{constructor(e){null==e&&(e={}),super(e),this.supportsMasking=!0,this.axis=null==e.axis?-1:e.axis,this.momentum=null==e.momentum?.99:e.momentum,this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Oy(e.betaInitializer||"zeros"),this.gammaInitializer=Oy(e.gammaInitializer||"ones"),this.movingMeanInitializer=Oy(e.movingMeanInitializer||"zeros"),this.movingVarianceInitializer=Oy(e.movingVarianceInitializer||"ones"),this.betaConstraint=Tg(e.betaConstraint),this.gammaConstraint=Tg(e.gammaConstraint),this.betaRegularizer=cw(e.betaRegularizer),this.gammaRegularizer=cw(e.gammaRegularizer)}build(e){e=ab(e);const t=this.axis>=0?this.axis:this.axis+e.length,n=e[t];if(null==n)throw new Jm(`Axis ${t} of input tensor should have a defined dimension but the layer received an input with shape ${JSON.stringify(e)}.`);this.inputSpec=[new cb({ndim:e.length,axes:{[t]:n}})];const r=[n];this.scale&&(this.gamma=this.addWeight("gamma",r,null,this.gammaInitializer,this.gammaRegularizer,!0,this.gammaConstraint)),this.center&&(this.beta=this.addWeight("beta",r,null,this.betaInitializer,this.betaRegularizer,!0,this.betaConstraint)),this.movingMean=this.addWeight("moving_mean",r,null,this.movingMeanInitializer,null,!1),this.movingVariance=this.addWeight("moving_variance",r,null,this.movingVarianceInitializer,null,!1),this.built=!0}call(e,t){return Xo((()=>{const n=null!=t.training&&t.training,r=sb(e),s=r.shape,a=s.length,i=Jg(0,a),o=this.axis>=0?this.axis:this.axis+a;i.splice(o,1);const u=tg(1,a);u[o]=s[o];const l=i.slice();l.sort();const c=!le(l,Jg(0,a).slice(0,a-1));if(!n)return(()=>{if(c){const e=ll(this.movingMean.read(),u),t=ll(this.movingVariance.read(),u),n=this.center?ll(this.beta.read(),u):null,s=this.scale?ll(this.gamma.read(),u):null;return bv(r,e,t,n,s,this.epsilon)}return bv(r,this.movingMean.read(),this.movingVariance.read(),null==this.beta?null:this.beta.read(),null==this.gamma?null:this.gamma.read(),this.epsilon)})();const[h,p,d]=function(e,t,n,r,s=.001){return le(r.slice().sort(),Jg(0,e.rank-1))?function(e,t,n,r,s=.001){return Xo((()=>{const a=Xc(e,r),i=a.mean,o=a.variance;return[bv(e,i,o,n,t,s),i,o]}))}(e,t,n,r,s):function(e,t,n,r,s=.001){return Xo((()=>{const a=Xc(e,r),i=a.mean,o=a.variance,u=[];for(const t of Jg(0,e.rank))-1!==r.indexOf(t)?u.push(1):u.push(e.shape[t]);const l=ll(i,u),c=ll(o,u),h=null==t?null:ll(t,u),p=null==n?null:ll(n,u);return[bv(e,l,c,p,h,s),i,o]}))}(e,t,n,r,s)}(r,this.gamma.read(),this.beta.read(),i,this.epsilon),f=(e,t,n)=>{Xo((()=>{const r=1-n,s=e.read(),a=hu(Su(s,t),r);e.write(Su(s,a))}))};return(()=>{f(this.movingMean,p,this.momentum),f(this.movingVariance,d,this.momentum)})(),h}))}getConfig(){const e={axis:this.axis,momentum:this.momentum,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:My(this.betaInitializer),gammaInitializer:My(this.gammaInitializer),movingMeanInitializer:My(this.movingMeanInitializer),movingVarianceInitializer:My(this.movingVarianceInitializer),betaRegularizer:uw(this.betaRegularizer),gammaRegularizer:uw(this.gammaRegularizer),betaConstraint:Eg(this.betaConstraint),gammaConstraint:Eg(this.gammaConstraint)},t=super.getConfig();return Object.assign(e,t),e}}xv.className="BatchNormalization",So(xv);class wv extends mb{constructor(e){if(null==e&&(e={}),super(e),this.axis=null==e.axis?-1:e.axis,"number"==typeof this.axis){if(!Number.isInteger(this.axis))throw new Error(`Expected axis to be an integer, but received ${this.axis}`)}else{if(!Array.isArray(this.axis))throw new Error(`Expected axis to be an integer or an array of integers, but received ${JSON.stringify(this.axis)}`);for(const e of this.axis)if(!Number.isInteger(e))throw new Error(`Expected axis to be an array of integers, but received ${JSON.stringify(this.axis)}`)}this.epsilon=null==e.epsilon?.001:e.epsilon,this.center=null==e.center||e.center,this.scale=null==e.scale||e.scale,this.betaInitializer=Oy(e.betaInitializer||"zeros"),this.gammaInitializer=Oy(e.gammaInitializer||"ones"),this.betaRegularizer=cw(e.betaRegularizer),this.gammaRegularizer=cw(e.gammaRegularizer),this.supportsMasking=!0}build(e){const t=(e=ab(e)).length;"number"==typeof this.axis&&(this.axis=[this.axis]);for(let e=0;e<this.axis.length;++e)this.axis[e]<0&&(this.axis[e]+=t);for(const e of this.axis)if(e<0||e>=t)throw new Error(`Invalid axis: ${e}`);if(this.axis.length!==dg(this.axis).length)throw new Error(`Found duplicate axes in: ${this.axis}`);const n=this.axis.map((t=>e[t]));this.scale?this.gamma=this.addWeight("gamma",n,"float32",this.gammaInitializer,this.gammaRegularizer,!0):this.gamma=null,this.center?this.beta=this.addWeight("beta",n,"float32",this.betaInitializer,this.betaRegularizer,!0):this.beta=null,this.built=!0}call(e,t){const n=sb(e),r=n.shape,s=r.length;return Xo((()=>{let{mean:e,variance:t}=Xc(n,this.axis,!0);const a=tg(1,s);for(const e of this.axis)a[e]=r[e];const i=e=>null!=e&&e.shape.length!==s?ll(e,a):e;let o=i(this.gamma.read()),u=i(this.beta.read());const l=[],c=[];for(let e=0;e<s;++e)-1!==this.axis.indexOf(e)?(l.push(r[e]),c.push(1)):(l.push(1),c.push(r[e]));return e=nc(e,l),t=nc(t,l),o=nc(o,c),u=nc(u,c),bv(n,e,t,u,o,this.epsilon)}))}getConfig(){const e={axis:this.axis,epsilon:this.epsilon,center:this.center,scale:this.scale,betaInitializer:My(this.betaInitializer),gammaInitializer:My(this.gammaInitializer),betaRegularizer:uw(this.betaRegularizer),gammaRegularizer:uw(this.gammaRegularizer)},t=super.getConfig();return Object.assign(e,t),e}}wv.className="LayerNormalization",So(wv);class vv extends mb{constructor(e){if(null==e&&(e={}),super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,null==e.padding)this.padding=[[1,1],[1,1]];else if("number"==typeof e.padding)this.padding=[[e.padding,e.padding],[e.padding,e.padding]];else{if(e.padding=e.padding,2!==e.padding.length)throw new Jm(`ZeroPadding2D expects padding to be a length-2 array, but received a length-${e.padding.length} array.`);let t,n;if("number"==typeof e.padding[0])t=[e.padding[0],e.padding[0]],n=[e.padding[1],e.padding[1]];else{if(e.padding=e.padding,2!==e.padding[0].length)throw new Jm(`ZeroPadding2D expects height padding to be a length-2 array, but received a length-${e.padding[0].length} array.`);if(t=e.padding[0],2!==e.padding[1].length)throw new Jm(`ZeroPadding2D expects width padding to be a length-2 array, but received a length-${e.padding[1].length} array.`);n=e.padding[1]}this.padding=[t,n]}this.inputSpec=[new cb({ndim:4})]}computeOutputShape(e){let t,n;return e=ab(e),"channelsFirst"===this.dataFormat?(t=null!=e[2]&&e[2]>=0?e[2]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[3]&&e[3]>=0?e[3]+this.padding[1][0]+this.padding[1][1]:null,[e[0],e[1],t,n]):(t=null!=e[1]&&e[1]>=0?e[1]+this.padding[0][0]+this.padding[0][1]:null,n=null!=e[2]&&e[2]>=0?e[2]+this.padding[1][0]+this.padding[1][1]:null,[e[0],t,n,e[3]])}call(e,t){return Xo((()=>{return t=sb(e),n=this.padding,r=this.dataFormat,Xo((()=>{if(4!==t.rank)throw new Jm(`temporalPadding expects input tensor to be 4-D, but received a ${t.rank}-D tensor.`);if(null==n&&(n=[[1,1],[1,1]]),2!==n.length||2!==n[0].length||2!==n[1].length)throw new Jm("spatial2dPadding expects `padding` to be an Array of two Arrays, each of which is an Array of two integers.");if(null==r&&(r="channelsLast"),"channelsLast"!==r&&"channelsFirst"!==r)throw new Jm(`Unknown data format: ${r}. Supported data formats are 'channelsLast' and 'channelsFirst.`);let e;return e="channelsFirst"===r?[[0,0],[0,0],n[0],n[1]]:[[0,0],n[0],n[1],[0,0]],th(t,e)}));var t,n,r}))}getConfig(){const e={padding:this.padding,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}function kv(e,t,n,r,s,a){return Xo((()=>{let i;Pg(s),Wg(a),Ug(r),null==n&&(n=[1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=ww(e,s);const o="same"===r?"same":"valid";return i="max"===a?zc(e,t,n,o):cl(e,t,n,o),"channelsFirst"===s&&(i=qi(i,[0,3,1,2])),i}))}function Nv(e,t,n,r,s,a){return Xo((()=>{let i;Pg(s),Wg(a),Ug(r),null==n&&(n=[1,1,1]),null==r&&(r="valid"),null==s&&(s="channelsLast"),null==a&&(a="max"),e=vw(e,s);const o="same"===r?"same":"valid";return i="max"===a?Lc(e,t,n,o):hl(e,t,n,o),"channelsFirst"===s&&(i=qi(i,[0,4,1,2,3])),i}))}vv.className="ZeroPadding2D",So(vv);class Iv extends mb{constructor(e){if(null==e.poolSize&&(e.poolSize=2),super(e),"number"==typeof e.poolSize)this.poolSize=[e.poolSize];else{if(!Array.isArray(e.poolSize)||1!==e.poolSize.length||"number"!=typeof e.poolSize[0])throw new Jm(`poolSize for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.poolSize)}`);this.poolSize=e.poolSize}if(yg(this.poolSize,"poolSize"),null==e.strides)this.strides=this.poolSize;else if("number"==typeof e.strides)this.strides=[e.strides];else{if(!Array.isArray(e.strides)||1!==e.strides.length||"number"!=typeof e.strides[0])throw new Jm(`strides for 1D convolutional layer must be a number or an Array of a single number, but received ${JSON.stringify(e.strides)}`);this.strides=e.strides}yg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,Ug(this.padding),this.inputSpec=[new cb({ndim:3})]}computeOutputShape(e){const t=bw((e=ab(e))[1],this.poolSize[0],this.padding,this.strides[0]);return[e[0],t,e[2]]}call(e,t){return Xo((()=>{this.invokeCallHook(e,t),e=ey(sb(e),2);const n=this.poolingFunction(sb(e),[this.poolSize[0],1],[this.strides[0],1],this.padding,"channelsLast");return qh(n,[2])}))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides},t=super.getConfig();return Object.assign(e,t),e}}class Cv extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pg(s),Ug(r),kv(e,t,n,r,s,"max")}}Cv.className="MaxPooling1D",So(Cv);class Dv extends Iv{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pg(s),Ug(r),kv(e,t,n,r,s,"avg")}}Dv.className="AveragePooling1D",So(Dv);class Ev extends mb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(2!==e.strides.length)throw new Jm(`If the strides property of a 2D pooling layer is an Array, it is expected to have a length of 2, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides];yg(this.poolSize,"poolSize"),yg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pg(this.dataFormat),Ug(this.padding),this.inputSpec=[new cb({ndim:4})]}computeOutputShape(e){e=ab(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2];return t=bw(t,this.poolSize[0],this.padding,this.strides[0]),n=bw(n,this.poolSize[1],this.padding,this.strides[1]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n]:[e[0],t,n,e[3]]}call(e,t){return Xo((()=>(this.invokeCallHook(e,t),this.poolingFunction(sb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Sv extends Ev{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pg(s),Ug(r),kv(e,t,n,r,s,"max")}}Sv.className="MaxPooling2D",So(Sv);class Tv extends Ev{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pg(s),Ug(r),kv(e,t,n,r,s,"avg")}}Tv.className="AveragePooling2D",So(Tv);class Av extends mb{constructor(e){if(null==e.poolSize&&(e.poolSize=[2,2,2]),super(e),this.poolSize=Array.isArray(e.poolSize)?e.poolSize:[e.poolSize,e.poolSize,e.poolSize],null==e.strides)this.strides=this.poolSize;else if(Array.isArray(e.strides)){if(3!==e.strides.length)throw new Jm(`If the strides property of a 3D pooling layer is an Array, it is expected to have a length of 3, but received length ${e.strides.length}.`);this.strides=e.strides}else this.strides=[e.strides,e.strides,e.strides];yg(this.poolSize,"poolSize"),yg(this.strides,"strides"),this.padding=null==e.padding?"valid":e.padding,this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pg(this.dataFormat),Ug(this.padding),this.inputSpec=[new cb({ndim:5})]}computeOutputShape(e){e=ab(e);let t="channelsFirst"===this.dataFormat?e[2]:e[1],n="channelsFirst"===this.dataFormat?e[3]:e[2],r="channelsFirst"===this.dataFormat?e[4]:e[3];return t=bw(t,this.poolSize[0],this.padding,this.strides[0]),n=bw(n,this.poolSize[1],this.padding,this.strides[1]),r=bw(r,this.poolSize[2],this.padding,this.strides[2]),"channelsFirst"===this.dataFormat?[e[0],e[1],t,n,r]:[e[0],t,n,r,e[4]]}call(e,t){return Xo((()=>(this.invokeCallHook(e,t),this.poolingFunction(sb(e),this.poolSize,this.strides,this.padding,this.dataFormat))))}getConfig(){const e={poolSize:this.poolSize,padding:this.padding,strides:this.strides,dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class $v extends Av{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pg(s),Ug(r),Nv(e,t,n,r,s,"max")}}$v.className="MaxPooling3D",So($v);class Fv extends Av{constructor(e){super(e)}poolingFunction(e,t,n,r,s){return Pg(s),Ug(r),Nv(e,t,n,r,s,"avg")}}Fv.className="AveragePooling3D",So(Fv);class Rv extends mb{constructor(e){super(e),this.inputSpec=[new cb({ndim:3})]}computeOutputShape(e){return[e[0],e[2]]}call(e,t){throw new Qm}}class _v extends Rv{constructor(e){super(e||{})}call(e,t){return Xo((()=>{const t=sb(e);return Uc(t,1)}))}}_v.className="GlobalAveragePooling1D",So(_v);class Mv extends Rv{constructor(e){super(e||{})}call(e,t){return Xo((()=>{const t=sb(e);return kc(t,1)}))}}Mv.className="GlobalMaxPooling1D",So(Mv);class Ov extends mb{constructor(e){super(e),this.dataFormat=null==e.dataFormat?"channelsLast":e.dataFormat,Pg(this.dataFormat),this.inputSpec=[new cb({ndim:4})]}computeOutputShape(e){return"channelsLast"===this.dataFormat?[e[0],e[3]]:[e[0],e[1]]}call(e,t){throw new Qm}getConfig(){const e={dataFormat:this.dataFormat},t=super.getConfig();return Object.assign(e,t),e}}class Bv extends Ov{call(e,t){return Xo((()=>{const t=sb(e);return"channelsLast"===this.dataFormat?Uc(t,[1,2]):Uc(t,[2,3])}))}}Bv.className="GlobalAveragePooling2D",So(Bv);class zv extends Ov{call(e,t){return Xo((()=>{const t=sb(e);return"channelsLast"===this.dataFormat?kc(t,[1,2]):kc(t,[2,3])}))}}zv.className="GlobalMaxPooling2D",So(zv);class Lv extends mb{constructor(e){super(e),this.layer=e.layer}build(e){this.built=!0}get trainable(){return null!=this.layer&&this.layer.trainable}set trainable(e){null!=this.layer&&(this.layer.trainable=e)}get trainableWeights(){return this.layer.trainableWeights}get nonTrainableWeights(){return this.layer.nonTrainableWeights}get updates(){return this.layer._updates}get losses(){return this.layer.losses}getWeights(){return this.layer.getWeights()}setWeights(e){this.layer.setWeights(e)}getConfig(){const e={layer:{className:this.layer.getClassName(),config:this.layer.getConfig()}},t=super.getConfig();return Object.assign(e,t),e}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.layer&&this.layer.setFastWeightInitDuringBuild(e)}static fromConfig(e,t,n={}){const r=Ab(t.layer,n);delete t.layer;const s={layer:r};return Object.assign(s,t),new e(s)}}class Pv extends Lv{constructor(e){super(e),this.supportsMasking=!0}build(e){if((e=ab(e)).length<3)throw new Jm(`TimeDistributed layer expects an input shape >= 3D, but received input shape ${JSON.stringify(e)}`);this.inputSpec=[{shape:e}];const t=[e[0]].concat(e.slice(2));this.layer.built||(this.layer.build(t),this.layer.built=!0),super.build(e)}computeOutputShape(e){const t=[(e=ab(e))[0]].concat(e.slice(2)),n=this.layer.computeOutputShape(t),r=e[1];return[n[0],r].concat(n.slice(1))}call(e,t){return Xo((()=>Ow(((e,n)=>[sb(this.layer.call(e,t)),[]]),e=sb(e),[],!1,null,null,!1,!0)[1]))}}Pv.className="TimeDistributed",So(Pv);class Uv extends Lv{constructor(e){super(e);const t=e.layer.getConfig(),n={};n.className=e.layer.getClassName(),n.config=t,this.forwardLayer=Ab(n),t.goBackwards=!0!==t.goBackwards;const r={};var s;if(r.className=e.layer.getClassName(),r.config=t,this.backwardLayer=Ab(r),this.forwardLayer.name="forward_"+this.forwardLayer.name,this.backwardLayer.name="backward_"+this.backwardLayer.name,this.mergeMode=void 0===e.mergeMode?"concat":e.mergeMode,s=this.mergeMode,mg(zg,"BidirectionalMergeMode",s),e.weights)throw new Qm("weights support is not implemented for Bidirectional layer yet.");this._stateful=e.layer.stateful,this.returnSequences=e.layer.returnSequences,this.returnState=e.layer.returnState,this.supportsMasking=!0,this._trainable=!0,this.inputSpec=e.layer.inputSpec,this.numConstants=null}get trainable(){return this._trainable}set trainable(e){this._trainable=e,null!=this.forwardLayer&&(this.forwardLayer.trainable=e),null!=this.backwardLayer&&(this.backwardLayer.trainable=e)}getWeights(){return this.forwardLayer.getWeights().concat(this.backwardLayer.getWeights())}setWeights(e){const t=e.length,n=Math.floor(t/2);this.forwardLayer.setWeights(e.slice(0,n)),this.backwardLayer.setWeights(e.slice(n))}computeOutputShape(e){let t,n,r,s=this.forwardLayer.computeOutputShape(e);return Array.isArray(s)&&Array.isArray(s[0])||(s=[s]),this.returnState?(r=s.slice(1),t=s[0]):t=s[0],"concat"===this.mergeMode?(t[t.length-1]*=2,n=[t]):n=null==this.mergeMode?[t,t.slice()]:[t],this.returnState?null==this.mergeMode?n.concat(r).concat(r.slice()):[t].concat(r).concat(r.slice()):sg(n)}apply(e,t){let n=null==t?null:t.initialState,r=null==t?null:t.constants;null==t&&(t={});const s=Mw(e,n,r,this.numConstants);if(e=s.inputs,n=s.initialState,r=s.constants,Array.isArray(e)&&(n=e.slice(1),e=e[0]),(null==n||0===n.length)&&null==r)return super.apply(e,t);const a=[],i=[];if(null!=n){const e=n.length;if(e%2>0)throw new Jm("When passing `initialState` to a Bidrectional RNN, the state should be an Array containing the states of the underlying RNNs.");t.initialState=n,a.push(...n);const r=n.map((e=>new cb({shape:e.shape})));this.forwardLayer.stateSpec=r.slice(0,e/2),this.backwardLayer.stateSpec=r.slice(e/2),i.push(...r)}if(null!=r)throw new Qm("Support for constants in Bidirectional layers is not implemented yet.");const o=a[0]instanceof hb;for(const e of a)if(e instanceof hb!==o)throw new Jm("The initial state of a Bidirectional layer cannot be specified as a mix of symbolic and non-symbolic tensors");if(o){const n=[e].concat(a),r=this.inputSpec.concat(i),s=this.inputSpec;this.inputSpec=r;const o=super.apply(n,t);return this.inputSpec=s,o}return super.apply(e,t)}call(e,t){return Xo((()=>{const n=t.initialState;let r,s,a,i;if(null==n)r=this.forwardLayer.call(e,t),s=this.backwardLayer.call(e,t);else{const a=n.slice(0,n.length/2),i=n.slice(n.length/2);r=this.forwardLayer.call(e,Object.assign(t,{initialState:a})),s=this.backwardLayer.call(e,Object.assign(t,{initialState:i}))}return this.returnState&&(Array.isArray(r)&&(a=r.slice(1).concat(s.slice(1))),r=r[0],s=s[0]),this.returnSequences&&(s=Nh(s,1)),"concat"===this.mergeMode?i=sy([r,s]):"sum"===this.mergeMode?i=uu(r,s):"ave"===this.mergeMode?i=hu(.5,uu(r,s)):"mul"===this.mergeMode?i=hu(r,s):null==this.mergeMode&&(i=[r,s]),this.returnState?null==this.mergeMode?i.concat(a):[i].concat(a):i}))}resetStates(e){this.forwardLayer.resetStates(),this.backwardLayer.resetStates()}build(e){Gg(this.forwardLayer.name,(()=>{this.forwardLayer.build(e)})),Gg(this.backwardLayer.name,(()=>{this.backwardLayer.build(e)})),this.built=!0}computeMask(e,t){let n;if(Array.isArray(t)&&(t=t[0]),n=this.returnSequences?null==this.mergeMode?[t,t]:t:null==this.mergeMode?[null,null]:null,this.returnState){const e=this.forwardLayer.states.map((e=>null));return Array.isArray(n)?n.concat(e).concat(e):[n].concat(e).concat(e)}return n}get trainableWeights(){return this.forwardLayer.trainableWeights.concat(this.backwardLayer.trainableWeights)}get nonTrainableWeights(){return this.forwardLayer.nonTrainableWeights.concat(this.backwardLayer.nonTrainableWeights)}setFastWeightInitDuringBuild(e){super.setFastWeightInitDuringBuild(e),null!=this.forwardLayer&&this.forwardLayer.setFastWeightInitDuringBuild(e),null!=this.backwardLayer&&this.backwardLayer.setFastWeightInitDuringBuild(e)}getConfig(){const e={mergeMode:this.mergeMode},t=super.getConfig();return Object.assign(e,t),e}static fromConfig(e,t){const n=Ab(t.layer);if(delete t.layer,null!=t.numConstants)throw new Qm("Deserialization of a Bidirectional layer with numConstants present is not supported yet.");const r=t;return r.layer=n,new e(r)}}function Wv(e){return new yb(e)}function Vv(e){return new fw(e)}function Gv(e){return new hw(e)}function jv(e){return new pw(e)}function Hv(e){return new dw(e)}function qv(e){return new gw(e)}function Kv(e){return new mw(e)}function Xv(e){return new $w(e)}function Yv(e){return new Cw(e)}function Zv(e){return new Ew(e)}function Jv(e){return new Dw(e)}function Qv(e){return new Sw(e)}function ek(e){return new Aw(e)}function tk(e){return new Fw(e)}function nk(e){return new Rw(e)}function rk(e){return new _w(e)}function sk(e){return new ev(e)}function ak(e){return new Jw(e)}function ik(e){return new Yw(e)}function ok(e){return new Zw(e)}function uk(e){return new Qw(e)}function lk(e){return new tv(e)}function ck(e){return new nv(e)}function hk(e){return new rv(e)}function pk(e){return new av(e)}function dk(e){return new ov(e)}function fk(e){return new lv(e)}function mk(e){return new pv(e)}function gk(e){return new cv(e)}function yk(e){return new hv(e)}function bk(e){return new uv(e)}function xk(e){return new fv(e)}function wk(e){return new xv(e)}function vk(e){return new wv(e)}function kk(e){return new vv(e)}function Nk(e){return new Dv(e)}function Ik(e){return Nk(e)}function Ck(e){return Nk(e)}function Dk(e){return new Tv(e)}function Ek(e){return Dk(e)}function Sk(e){return Dk(e)}function Tk(e){return new Fv(e)}function Ak(e){return Tk(e)}function $k(e){return Tk(e)}function Fk(e){return new _v(e)}function Rk(e){return new Bv(e)}function _k(e){return new Mv(e)}function Mk(e){return new zv(e)}function Ok(e){return new Cv(e)}function Bk(e){return new Sv(e)}function zk(e){return new $v(e)}function Lk(e){return new Ww(e)}function Pk(e){return new Uw(e)}function Uk(e){return new Gw(e)}function Wk(e){return new Vw(e)}function Vk(e){return new Pw(e)}function Gk(e){return new Lw(e)}function jk(e){return new Xw(e)}function Hk(e){return new Kw(e)}function qk(e){return new Bw(e)}function Kk(e){return new jw(e)}function Xk(e){return new Uv(e)}function Yk(e){return new Pv(e)}Uv.className="Bidirectional",So(Uv);const Zk=_k,Jk=Mk,Qk=Ok,eN=Bk;function tN(e){return new mv(e)}function nN(e){return new gv(e)}function rN(e){return new yv(e)}function sN(e){return new sv(e)}function aN(e,t){return Ub(e,t)}function iN(e,t){return jb(e,t)}function oN(e,t){return Hb(e,t)}function uN(e,t){return Wb(e,t)}function lN(e,t){return qb(e,t)}function cN(e,t){return Gb(e,t)}function hN(e,t){return function(e,t){return Xo((()=>{const n=Vb(e,t),r=function(e,t){return Xo((()=>Ci(Nc(_c(Hl(e,1),Hl(t,0))),"float32")))}(e,t),s=uu(n,r);return Ci(ql(ic(s,0),cu(n,s),0),"float32")}))}(e,t)}function pN(e,t){return zb(e,t)}function dN(e,t){return Rb(e,t)}function fN(e,t){return _b(e,t)}function mN(e,t){return _b(e,t)}function gN(e,t){return _b(e,t)}function yN(e,t){return Fb(e,t)}function bN(e,t){return Fb(e,t)}function xN(e,t){return Fb(e,t)}function wN(e){return new iw(e)}function vN(e){return sw(t=e),new iw({l1:null!=t?t.l1:null,l2:0});var t}function kN(e){return sw(t=e),new iw({l2:null!=t?t.l2:null,l1:0});var t}class NN extends kb{constructor(){super(...arguments),this.model=null}setModel(e){if(!(e instanceof $x))throw new Error("model must be a LayersModel, not some other Container");this.model=e}}function IN(e,t){return e<t}function CN(e,t){return e>t}class DN extends NN{constructor(e){if(super(),null==e&&(e={}),e.restoreBestWeights)throw new Qm("restoreBestWeights = True is not implemented in EarlyStopping yet.");this.monitor=e.monitor||"val_loss",this.minDelta=Math.abs(e.minDelta||0),this.patience=e.patience||0,this.verbose=e.verbose||0,this.mode=e.mode||"auto",this.baseline=e.baseline,-1===["auto","min","max"].indexOf(this.mode)&&(console.warn(`EarlyStopping mode '${this.mode}' is invalid. Falling back to mode 'auto'.`),this.mode="auto"),"min"===this.mode?this.monitorFunc=IN:"max"===this.mode||-1!==this.monitor.indexOf("acc")?this.monitorFunc=CN:this.monitorFunc=IN,this.monitorFunc===IN&&(this.minDelta*=-1)}async onTrainBegin(e){this.wait=0,this.stoppedEpoch=0,null!=this.baseline?this.best=this.baseline:this.best=this.monitorFunc===IN?1/0:-1/0}async onEpochEnd(e,t){await xb(t);const n=this.getMonitorValue(t);null!=n&&(this.monitorFunc(n-this.minDelta,this.best)?(this.best=n,this.wait=0):(this.wait++,this.wait>=this.patience&&(this.stoppedEpoch=e,this.model.stopTraining=!0)))}async onTrainEnd(e){this.stoppedEpoch>0&&this.verbose&&console.log(`Epoch ${this.stoppedEpoch}: early stopping.`)}getMonitorValue(e){null==e&&(e={});const t=e[this.monitor];return null==t&&console.warn(`Metric for EarlyStopping ${this.monitor} is not available. Available metrics are: ${Object.keys(e)}`),t}}const EN={earlyStopping:function(e){return new DN(e)}};var SN,TN;je().registerFlag("KEEP_INTERMEDIATE_TENSORS",(()=>!1),(e=>{e&&console.warn("Keep intermediate tensors is ON. This will print the values of all intermediate tensors during model inference. Not all models support this mode. For details, check e2e/benchmarks/ model_config.js. This significantly impacts performance.")})),function(e){e[e.DT_INVALID=0]="DT_INVALID",e[e.DT_FLOAT=1]="DT_FLOAT",e[e.DT_DOUBLE=2]="DT_DOUBLE",e[e.DT_INT32=3]="DT_INT32",e[e.DT_UINT8=4]="DT_UINT8",e[e.DT_INT16=5]="DT_INT16",e[e.DT_INT8=6]="DT_INT8",e[e.DT_STRING=7]="DT_STRING",e[e.DT_COMPLEX64=8]="DT_COMPLEX64",e[e.DT_INT64=9]="DT_INT64",e[e.DT_BOOL=10]="DT_BOOL",e[e.DT_QINT8=11]="DT_QINT8",e[e.DT_QUINT8=12]="DT_QUINT8",e[e.DT_QINT32=13]="DT_QINT32",e[e.DT_BFLOAT16=14]="DT_BFLOAT16",e[e.DT_QINT16=15]="DT_QINT16",e[e.DT_QUINT16=16]="DT_QUINT16",e[e.DT_UINT16=17]="DT_UINT16",e[e.DT_COMPLEX128=18]="DT_COMPLEX128",e[e.DT_HALF=19]="DT_HALF",e[e.DT_RESOURCE=20]="DT_RESOURCE",e[e.DT_VARIANT=21]="DT_VARIANT",e[e.DT_UINT32=22]="DT_UINT32",e[e.DT_UINT64=23]="DT_UINT64",e[e.DT_FLOAT_REF=101]="DT_FLOAT_REF",e[e.DT_DOUBLE_REF=102]="DT_DOUBLE_REF",e[e.DT_INT32_REF=103]="DT_INT32_REF",e[e.DT_UINT8_REF=104]="DT_UINT8_REF",e[e.DT_INT16_REF=105]="DT_INT16_REF",e[e.DT_INT8_REF=106]="DT_INT8_REF",e[e.DT_STRING_REF=107]="DT_STRING_REF",e[e.DT_COMPLEX64_REF=108]="DT_COMPLEX64_REF",e[e.DT_INT64_REF=109]="DT_INT64_REF",e[e.DT_BOOL_REF=110]="DT_BOOL_REF",e[e.DT_QINT8_REF=111]="DT_QINT8_REF",e[e.DT_QUINT8_REF=112]="DT_QUINT8_REF",e[e.DT_QINT32_REF=113]="DT_QINT32_REF",e[e.DT_BFLOAT16_REF=114]="DT_BFLOAT16_REF",e[e.DT_QINT16_REF=115]="DT_QINT16_REF",e[e.DT_QUINT16_REF=116]="DT_QUINT16_REF",e[e.DT_UINT16_REF=117]="DT_UINT16_REF",e[e.DT_COMPLEX128_REF=118]="DT_COMPLEX128_REF",e[e.DT_HALF_REF=119]="DT_HALF_REF",e[e.DT_RESOURCE_REF=120]="DT_RESOURCE_REF",e[e.DT_VARIANT_REF=121]="DT_VARIANT_REF",e[e.DT_UINT32_REF=122]="DT_UINT32_REF",e[e.DT_UINT64_REF=123]="DT_UINT64_REF"}(SN||(SN={})),function(e){let t;!function(e){e[e.LEGACY=0]="LEGACY",e[e.V1=1]="V1",e[e.V2=2]="V2"}(t=e.CheckpointFormatVersion||(e.CheckpointFormatVersion={}))}(TN||(TN={}));const AN={};function $N(e,t){const n={tfOpName:e,category:"custom",inputs:[],attrs:[],customExecutor:t};AN[e]=n}function FN(e){return AN[e]}function RN(e){delete AN[e]}function _N(e,t,n,r,s){const a=t.inputParams[e];if(a&&void 0!==a.inputIndexStart){const e=a.inputIndexStart,i=0===a.inputIndexEnd?void 0:void 0===a.inputIndexEnd?e+1:a.inputIndexEnd;if("tensor"===a.type)return MN(t.inputNames[a.inputIndexStart],n,r,s);if("tensors"===a.type)return t.inputNames.slice(e,i).map((e=>MN(e,n,r,s)));const o=MN(t.inputNames.slice(e)[0],n,r,s),u=o.dataSync();return"number"===a.type?u[0]:Me(o.shape,u)}const i=t.attrParams[e];return i&&i.value}function MN(e,t,n,r){const[s,a]=zN(e);if(null!=r){const e=r.getHashTableHandleByName(s);if(null!=e)return e}const i=n.currentContextIds.find((e=>!!t[BN(s,e)]));return void 0!==i?t[BN(s,i)][a]:void 0}function ON(e,t){const[n,r,s]=zN(e);return[BN(n,t&&t.currentContextId),r,s]}function BN(e,t){return t?`${e}-${t}`:e}function zN(e){const t=e.split(":");if(1===t.length)return[e,0,void 0];const n=t[0],r=3===t.length?t[1]:void 0;return[n,Number(t[t.length-1]),r]}function LN(e,t,n){let r=_N("pad",e,t,n);if("explicit"===r){r=_N("explicitPaddings",e,t,n);const s=[[0,0],[0,0],[0,0],[0,0]];for(let e=0;e<4;e++)s[e][0]=r[2*e],s[e][1]=r[2*e+1];return s}return r}function PN(e){return e.kept?e:Di(e)}const UN=[{tfOpName:"Add",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddV2",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AddN",category:"arithmetic",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"BiasAdd",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"Sub",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"RealDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Div",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"DivNoNan",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorDiv",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mul",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Maximum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Minimum",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Pow",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SquaredDifference",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Mod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"FloorMod",category:"arithmetic",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],WN=[{tfOpName:"Abs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atan2",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ceil",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ClipByValue",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"clipValueMin",type:"number"},{start:2,name:"clipValueMax",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Complex",category:"basic_math",inputs:[{start:0,name:"real",type:"tensor"},{start:1,name:"imag",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ComplexAbs",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cos",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Cosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Elu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Exp",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Floor",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Imag",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Neg",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Real",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"Tout",name:"outputType",type:"dtype",notSupported:!0}]},{tfOpName:"Prelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"alpha",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Relu6",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Selu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sigmoid",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sin",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Rsqrt",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Square",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Tanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Sign",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Round",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Expm1",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Log1p",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Reciprocal",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Softplus",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Asinh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Acosh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Atanh",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Erf",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Prod",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axes",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LeakyRelu",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"alpha",name:"alpha",type:"number",defaultValue:.2},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"IsNan",category:"basic_math",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],VN=[{tfOpName:"EmptyTensorList",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"maxNumElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"LoopCond",category:"control",inputs:[{start:0,name:"pred",type:"tensor"}]},{tfOpName:"Switch",category:"control",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"pred",type:"tensor"}]},{tfOpName:"Merge",category:"control",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}]},{tfOpName:"Enter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"frame_name",name:"frameName",type:"string"},{tfName:"is_constant",name:"isConstant",type:"bool"}]},{tfOpName:"Exit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NextIteration",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayV3",category:"control",inputs:[{start:0,name:"size",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"dynamic_size",name:"dynamicSize",type:"bool"},{tfName:"clear_after_read",name:"clearAfterRead",type:"bool"},{tfName:"identical_element_shapes",name:"identicalElementShapes",type:"bool"},{tfName:"tensor_array_name",name:"name",type:"string"}]},{tfOpName:"TensorArrayWriteV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayReadV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"TensorArrayGatherV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape",name:"elementShape",type:"shape"}]},{tfOpName:"TensorArrayScatterV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"tensor",type:"tensor"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArrayConcatV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"element_shape_except0",name:"elementShapeExcept0",type:"shape",notSupported:!0}]},{tfOpName:"TensorArraySplitV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"tensor",type:"tensor"},{start:2,name:"lengths",type:"number[]"},{start:3,name:"flowIn",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"TensorArraySizeV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"},{start:1,name:"flowIn",type:"number"}]},{tfOpName:"TensorArrayCloseV3",category:"control",inputs:[{start:0,name:"tensorArrayId",type:"tensor"}]},{tfOpName:"StatelessIf",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"If",category:"control",inputs:[{start:0,name:"cond",type:"tensor"},{start:1,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"then_branch",name:"thenBranch",type:"func"},{tfName:"else_branch",name:"elseBranch",type:"func"}]},{tfOpName:"StatelessWhile",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"While",category:"control",inputs:[{start:0,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"cond",name:"cond",type:"func"},{tfName:"body",name:"body",type:"func"}]},{tfOpName:"TensorListScatter",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListScatterV2",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"},{start:3,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGather",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"indices",type:"number[]"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListGetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListSetItem",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"index",type:"number"},{start:2,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListReserve",category:"control",inputs:[{start:0,name:"elementShape",type:"shape"},{start:1,name:"numElements",type:"number"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListFromTensor",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListStack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"},{tfName:"num_elements",name:"numElements",type:"dtype"}]},{tfOpName:"TensorListSplit",category:"control",inputs:[{start:0,name:"tensor",type:"tensor"},{start:1,name:"elementShape",type:"shape"},{start:2,name:"lengths",type:"number[]"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListConcat",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"}],attrs:[{tfName:"element_shape",name:"elementShape",type:"shape"},{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPopBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"elementShape",type:"shape"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]},{tfOpName:"TensorListPushBack",category:"control",inputs:[{start:0,name:"tensorListId",type:"tensor"},{start:1,name:"tensor",type:"tensor"}],attrs:[{tfName:"element_dtype",name:"elementDType",type:"dtype"}]}],GN=[{tfOpName:"AvgPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[],notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPoolWithArgmax",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"include_batch_in_index",name:"includeBatchInIndex",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"AvgPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MaxPool3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"ksize",name:"kernelSize",type:"number[]"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Conv1D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"stride",name:"stride",type:"number"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NWC"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"dilation",name:"dilation",type:"number",defaultValue:1}]},{tfOpName:"Conv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"useCudnnOnGpu",name:"useCudnnOnGpu",type:"bool"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"_FusedConv2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"use_cudnn_on_gpu",name:"useCudnnOnGpu",type:"bool",defaultValue:!0},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"leakyrelu_alpha",name:"leakyreluAlpha",type:"number"}]},{tfOpName:"Conv2DBackpropInput",category:"convolution",inputs:[{start:2,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:0,name:"outputShape",type:"number[]"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]",notSupported:!0}]},{tfOpName:"DepthwiseConv2d",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"DepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"FusedDepthwiseConv2dNative",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]",defaultValue:[1,1,1,1]},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"explicit_paddings",name:"explicitPaddings",type:"number[]",defaultValue:[]}]},{tfOpName:"Conv3D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"padding",name:"pad",type:"string"},{tfName:"data_format",name:"dataFormat",type:"string",defaultValue:"NHWC"},{tfName:"dilations",name:"dilations",type:"number[]"}]},{tfOpName:"Dilation2D",category:"convolution",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"filter",type:"tensor"}],attrs:[{tfName:"strides",name:"strides",type:"number[]"},{tfName:"rates",name:"dilations",type:"number[]"},{tfName:"padding",name:"pad",type:"string"}]}],jN=[{tfOpName:"Fill",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"},{start:1,name:"value",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"LinSpace",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"num",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"OneHot",category:"creation",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"depth",type:"number"},{start:2,name:"onValue",type:"number",defaultValue:1},{start:3,name:"offValue",type:"number",defaultValue:0}],attrs:[{tfName:"axis",name:"axis",type:"number",notSupported:!0},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Ones",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"OnesLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"RandomUniform",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"minval",name:"minval",type:"number",defaultValue:0},{tfName:"maxval",name:"maxval",type:"number",defaultValue:1},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"seed",name:"seed",type:"number",defaultValue:0},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Range",category:"creation",inputs:[{start:0,name:"start",type:"number"},{start:1,name:"stop",type:"number"},{start:2,name:"step",type:"number",defaultValue:0}],attrs:[{tfName:"Tidx",name:"dtype",type:"dtype"}]},{tfOpName:"TruncatedNormal",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"means",name:"mean",type:"number",defaultValue:0},{tfName:"stddev",name:"stdDev",type:"number",defaultValue:1},{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number",defaultValue:0,notSupported:!0},{tfName:"dtype",name:"dtype",type:"dtype"},{tfName:"T",name:"T",type:"number",notSupported:!0}]},{tfOpName:"Zeros",category:"creation",inputs:[{start:0,name:"shape",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"ZerosLike",category:"creation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype"}]},{tfOpName:"Multinomial",category:"creation",inputs:[{start:0,name:"logits",type:"tensor"},{start:1,name:"numSamples",type:"number"}],attrs:[{tfName:"seed",name:"seed",type:"number"},{tfName:"seed2",name:"seed2",type:"number"},{tfName:"T",name:"dtype",type:"dtype"},{tfName:"output_dtype",name:"output_dtype",type:"dtype"}]}],HN=[{tfOpName:"NonMaxSuppressionV2",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV3",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}]},{tfOpName:"NonMaxSuppressionV4",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0},{tfName:"T_threshold",name:"threshold",type:"dtype",notSupported:!0},{tfName:"pad_to_max_output_size",name:"padToMaxOutputSize",type:"bool"}]},{tfOpName:"NonMaxSuppressionV5",category:"dynamic",inputs:[{start:0,name:"boxes",type:"tensor"},{start:1,name:"scores",type:"tensor"},{start:2,name:"maxOutputSize",type:"number"},{start:3,name:"iouThreshold",type:"number"},{start:4,name:"scoreThreshold",type:"number"},{start:5,name:"softNmsSigma",type:"number"}]},{tfOpName:"Where",category:"dynamic",inputs:[{start:0,name:"condition",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ListDiff",category:"dynamic",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"y",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],qN=[{tfOpName:"TopKV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"k",type:"number"}],attrs:[{tfName:"sorted",name:"sorted",type:"bool"}]},{tfOpName:"Unique",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"UniqueV2",category:"evaluation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]}],KN=[{tfOpName:"PlaceholderWithDefault",category:"graph",inputs:[{start:0,name:"default",type:"tensor"}],attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Placeholder",category:"graph",attrs:[{tfName:"shape",name:"shape",type:"shape"},{tfName:"dtype",name:"dtype",type:"dtype"}]},{tfOpName:"Const",category:"graph"},{tfOpName:"Identity",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IdentityN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Snapshot",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Rank",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Size",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"Shape",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"ShapeN",category:"graph",inputs:[{start:0,end:0,name:"x",type:"tensors"}]},{tfOpName:"Print",category:"graph",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"data",type:"tensors"}],attrs:[{tfName:"message",name:"message",type:"string"},{tfName:"first_n",name:"firstN",type:"number",notSupported:!0},{tfName:"summarize",name:"summarize",type:"number",defaultValue:3}]},{tfOpName:"NoOp",category:"graph",inputs:[]},{tfOpName:"StopGradient",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"FakeQuantWithMinMaxVars",category:"graph",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"min",name:"min",type:"number"},{tfName:"max",name:"max",type:"number"}]}],XN=[{tfOpName:"HashTable",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"HashTableV2",category:"hash_table",inputs:[],attrs:[{tfName:"shared_name",name:"sharedName",type:"string"},{tfName:"use_node_name_sharing",name:"useNodeNameSharing",type:"bool"},{tfName:"key_dtype",name:"keyDType",type:"dtype"},{tfName:"value_dtype",name:"valueDType",type:"dtype"}]},{tfOpName:"LookupTableImport",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableImportV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"values",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFind",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableFindV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"},{start:1,name:"keys",type:"tensor"},{start:2,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"Tin",name:"tIn",type:"dtype",notSupported:!0},{tfName:"Tout",name:"tOut",type:"dtype",notSupported:!0}]},{tfOpName:"LookupTableSize",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]},{tfOpName:"LookupTableSizeV2",category:"hash_table",inputs:[{start:0,name:"tableHandle",type:"tensor"}]}],YN=[{tfOpName:"ResizeBilinear",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"ResizeNearestNeighbor",category:"image",inputs:[{start:0,name:"images",type:"tensor"},{start:1,name:"size",type:"number[]"}],attrs:[{tfName:"align_corners",name:"alignCorners",type:"bool"},{tfName:"half_pixel_centers",name:"halfPixelCenters",type:"bool"},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"CropAndResize",category:"image",inputs:[{start:0,name:"image",type:"tensor"},{start:1,name:"boxes",type:"tensor"},{start:2,name:"boxInd",type:"tensor"},{start:3,name:"cropSize",type:"number[]"}],attrs:[{tfName:"method",name:"method",type:"string"},{tfName:"extrapolation_value",name:"extrapolationValue",type:"number"}]}],ZN=[{tfOpName:"Equal",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"NotEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Greater",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"GreaterEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Less",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LessEqual",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalAnd",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalNot",category:"logical",inputs:[{start:0,name:"a",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"LogicalOr",category:"logical",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Select",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SelectV2",category:"logical",inputs:[{start:0,name:"condition",type:"tensor"},{start:1,name:"a",type:"tensor"},{start:2,name:"b",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]}],JN=[{tfOpName:"_FusedMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"},{start:2,end:0,name:"args",type:"tensors"}],attrs:[{tfName:"num_args",name:"numArgs",type:"number"},{tfName:"fused_ops",name:"fusedOps",type:"string[]",defaultValue:[]},{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:1e-4},{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"MatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"transpose_a",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"transpose_b",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMul",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"BatchMatMulV2",category:"matrices",inputs:[{start:0,name:"a",type:"tensor"},{start:1,name:"b",type:"tensor"}],attrs:[{tfName:"adj_x",name:"transposeA",type:"bool",defaultValue:!1},{tfName:"adj_y",name:"transposeB",type:"bool",defaultValue:!1},{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Transpose",category:"matrices",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"perm",type:"number[]"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"Einsum",category:"matrices",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"equation",name:"equation",type:"string"},{tfName:"N",name:"n",type:"number",defaultValue:2},{tfName:"T",name:"dtype",type:"dtype"}]}],QN=[{tfOpName:"FusedBatchNorm",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV2",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"FusedBatchNormV3",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"scale",type:"tensor"},{start:2,name:"offset",type:"tensor"},{start:3,name:"mean",type:"tensor"},{start:4,name:"variance",type:"tensor"}],attrs:[{tfName:"epsilon",name:"epsilon",type:"number",defaultValue:.001},{tfName:"data_format",name:"dataFormat",type:"string",notSupported:!0}]},{tfOpName:"LRN",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"depth_radius",name:"radius",type:"number",defaultValue:5},{tfName:"bias",name:"bias",type:"number",defaultValue:1},{tfName:"alpha",name:"alpha",type:"number",defaultValue:1},{tfName:"beta",name:"beta",type:"number",defaultValue:.5}]},{tfOpName:"Softmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"LogSoftmax",category:"normalization",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"SparseToDense",category:"normalization",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!0,notSupported:!0}]}],eI=[{tfOpName:"Bincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}]},{tfOpName:"DenseBincount",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"size",type:"number"},{start:2,name:"weights",type:"tensor"}],attrs:[{tfName:"binary_output",name:"binaryOutput",type:"bool"}]},{tfOpName:"Max",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Mean",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Min",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Sum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"All",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Any",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"ArgMax",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"ArgMin",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"Prod",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}],attrs:[{tfName:"keep_dims",name:"keepDims",type:"bool"}]},{tfOpName:"Cumsum",category:"reduction",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}],attrs:[{tfName:"exclusive",name:"exclusive",type:"bool"},{tfName:"reverse",name:"reverse",type:"bool"}]}],tI=[{tfOpName:"ConcatV2",category:"slice_join",inputs:[{start:0,end:-1,name:"tensors",type:"tensors"},{start:-1,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"Concat",category:"slice_join",inputs:[{start:1,end:0,name:"tensors",type:"tensors"},{start:0,name:"axis",type:"number"}],attrs:[{tfName:"N",name:"n",type:"number",defaultValue:2}]},{tfOpName:"GatherV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"axis",type:"number",defaultValue:0}],attrs:[{tfName:"batch_dims",name:"batchDims",type:"number",defaultValue:0}]},{tfOpName:"Gather",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",notSupported:!0}]},{tfOpName:"Reverse",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"dims",type:"bool[]"}]},{tfOpName:"ReverseV2",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number[]"}]},{tfOpName:"Slice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"size",type:"number[]"}]},{tfOpName:"StridedSlice",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"begin",type:"number[]"},{start:2,name:"end",type:"number[]"},{start:3,name:"strides",type:"number[]"}],attrs:[{tfName:"begin_mask",name:"beginMask",type:"number",defaultValue:0},{tfName:"end_mask",name:"endMask",type:"number",defaultValue:0},{tfName:"new_axis_mask",name:"newAxisMask",type:"number",defaultValue:0},{tfName:"ellipsis_mask",name:"ellipsisMask",type:"number",defaultValue:0},{tfName:"shrink_axis_mask",name:"shrinkAxisMask",type:"number",defaultValue:0}]},{tfOpName:"Pack",category:"slice_join",inputs:[{start:0,end:0,name:"tensors",type:"tensors"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0}]},{tfOpName:"Unpack",category:"slice_join",inputs:[{start:0,name:"tensor",type:"tensor"}],attrs:[{tfName:"axis",name:"axis",type:"number",defaultValue:0},{tfName:"num",name:"num",type:"number",defaultValue:0,notSupported:!0}]},{tfOpName:"Tile",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"reps",type:"number[]"}]},{tfOpName:"Split",category:"slice_join",inputs:[{start:0,name:"axis",type:"number",defaultValue:0},{start:1,name:"x",type:"tensor"}],attrs:[{tfName:"num_split",name:"numOrSizeSplits",type:"number",defaultValue:1}]},{tfOpName:"SplitV",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"numOrSizeSplits",type:"number[]"},{start:2,name:"axis",type:"number",defaultValue:0}]},{tfOpName:"ScatterNd",category:"slice_join",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"shape",type:"number[]"}]},{tfOpName:"GatherNd",category:"slice_join",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"indices",type:"tensor"}]},{tfOpName:"SparseToDense",category:"slice_join",inputs:[{start:0,name:"sparseIndices",type:"tensor"},{start:1,name:"outputShape",type:"number[]"},{start:2,name:"sparseValues",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}],attrs:[{tfName:"validate_indices",name:"validateIndices",type:"bool",defaultValue:!1,notSupported:!0}]}],nI=[{tfOpName:"SparseFillEmptyRows",category:"sparse",inputs:[{start:0,name:"indices",type:"tensor"},{start:1,name:"values",type:"tensor"},{start:2,name:"denseShape",type:"tensor"},{start:3,name:"defaultValue",type:"tensor"}]},{tfOpName:"SparseReshape",category:"sparse",inputs:[{start:0,name:"inputIndices",type:"tensor"},{start:1,name:"inputShape",type:"tensor"},{start:2,name:"newShape",type:"tensor"}],attrs:[{tfName:"T",name:"dtype",type:"dtype",notSupported:!0}]},{tfOpName:"SparseSegmentMean",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]},{tfOpName:"SparseSegmentSum",category:"sparse",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"indices",type:"tensor"},{start:2,name:"segmentIds",type:"tensor"}]}],rI=[{tfOpName:"FFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"IFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"}]},{tfOpName:"RFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]},{tfOpName:"IRFFT",category:"spectral",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"fft_length",type:"number",notSupported:!0}]}],sI=[{tfOpName:"StringNGrams",category:"string",inputs:[{start:0,name:"data",type:"tensor"},{start:1,name:"dataSplits",type:"tensor"}],attrs:[{tfName:"separator",name:"separator",type:"string"},{tfName:"ngram_widths",name:"nGramWidths",type:"number[]"},{tfName:"left_pad",name:"leftPad",type:"string"},{tfName:"right_pad",name:"rightPad",type:"string"},{tfName:"pad_width",name:"padWidth",type:"number"},{tfName:"preserve_short_sequences",name:"preserveShortSequences",type:"bool"}],outputs:["ngrams","ngrams_splits"]},{tfOpName:"StringSplit",category:"string",inputs:[{start:0,name:"input",type:"tensor"},{start:1,name:"delimiter",type:"tensor"}],attrs:[{tfName:"skip_empty",name:"skipEmpty",type:"bool"}],outputs:["indices","values","shape"]},{tfOpName:"StringToHashBucketFast",category:"string",inputs:[{start:0,name:"input",type:"tensor"}],attrs:[{tfName:"num_buckets",name:"numBuckets",type:"number"}]}],aI=[{tfOpName:"Cast",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"SrcT",name:"sdtype",type:"dtype",notSupported:!0},{tfName:"DstT",name:"dtype",type:"dtype"}]},{tfOpName:"ExpandDims",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"axis",type:"number"}]},{tfOpName:"MirrorPad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"mode",name:"mode",type:"string"}]},{tfOpName:"Pad",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"}],attrs:[{tfName:"constant_value",name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"PadV2",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"padding",type:"number[]"},{start:2,name:"constantValue",type:"number",defaultValue:0}]},{tfOpName:"Reshape",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}]},{tfOpName:"Squeeze",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"axis",tfDeprecatedName:"squeeze_dims",name:"axis",type:"number[]"}]},{tfOpName:"SpaceToBatchND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"paddings",type:"number[]"}]},{tfOpName:"BatchToSpaceND",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"blockShape",type:"number[]"},{start:2,name:"crops",type:"number[]"}]},{tfOpName:"DepthToSpace",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"}],attrs:[{tfName:"block_size",name:"blockSize",type:"number"},{tfName:"data_format",name:"dataFormat",type:"string"}]},{tfOpName:"BroadcastTo",category:"transformation",inputs:[{start:0,name:"x",type:"tensor"},{start:1,name:"shape",type:"number[]"}],attrs:[]},{tfOpName:"BroadcastArgs",category:"transformation",inputs:[{start:0,name:"s0",type:"tensor"},{start:1,name:"s1",type:"tensor"}],attrs:[]}];class iI{static get Instance(){return this._instance||(this._instance=new this)}constructor(){const e=[].concat(...[N,I,C,D,E,S,T,A,$,F,R,_,M,O,B,z,L,P,U].map((e=>e.json)));this.opMappers=e.reduce(((e,t)=>(e[t.tfOpName]=t,e)),{})}transformGraph(e,t={}){const n=e.node,r=[],s=[],a=[],i=n.reduce(((e,t)=>(e[t.name]=this.mapNode(t),t.op.startsWith("Placeholder")?r.push(e[t.name]):"Const"===t.op?s.push(e[t.name]):null!=t.input&&0!==t.input.length||a.push(e[t.name]),e)),{});let o=[];const u=[];let l={},c={};null!=t&&(l=this.mapSignatureEntries(t.inputs),c=this.mapSignatureEntries(t.outputs));const h=Object.keys(i);h.forEach((e=>{const t=i[e];t.inputNames.forEach(((e,n)=>{const[r,,s]=ON(e),a=i[r];if(null!=a.outputs){const e=a.outputs.indexOf(s);if(-1!==e){const s=`${r}:${e}`;t.inputNames[n]=s}}t.inputs.push(a),a.children.push(t)}))})),0===Object.keys(c).length?h.forEach((e=>{const t=i[e];0===t.children.length&&u.push(t)})):Object.keys(c).forEach((e=>{const[t]=ON(e),n=i[t];null!=n&&(n.signatureKey=c[e],u.push(n))})),Object.keys(l).length>0?Object.keys(l).forEach((e=>{const[t]=ON(e),n=i[t];n&&(n.signatureKey=l[e],o.push(n))})):o=r;let p={};null!=e.library&&null!=e.library.function&&(p=e.library.function.reduce(((e,t)=>(e[t.signature.name]=this.mapFunction(t),e)),{}));const d={nodes:i,inputs:o,outputs:u,weights:s,placeholders:r,signature:t,functions:p};return a.length>0&&(d.initNodes=a),d}mapSignatureEntries(e){return Object.keys(e||{}).reduce(((t,n)=>(t[e[n].name]=n,t)),{})}mapNode(e){const t=FN(e.op)||this.opMappers[e.op]||{};null==e.attr&&(e.attr={});const n={name:e.name,op:e.op,category:t.category,inputNames:(e.input||[]).map((e=>e.startsWith("^")?e.substr(1):e)),inputs:[],children:[],inputParams:{},attrParams:{},rawAttrs:e.attr,outputs:t.outputs};return null!=t.inputs&&(n.inputParams=t.inputs.reduce(((e,t)=>(e[t.name]={type:t.type,inputIndexStart:t.start,inputIndexEnd:t.end},e)),{})),null!=t.attrs&&(n.attrParams=t.attrs.reduce(((t,n)=>{const r=n.type;let s;switch(n.type){case"string":s=uI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=uI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"string[]":s=bI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=bI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number":s=cI(e.attr,n.tfName,n.defaultValue||0),void 0===s&&n.tfDeprecatedName&&(s=cI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"number[]":s=yI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=yI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool":s=lI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=lI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"bool[]":s=wI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=wI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape":s=gI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=gI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"shape[]":s=xI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=xI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype":s=dI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=dI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"dtype[]":s=fI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=fI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"func":s=pI(e.attr,n.tfName,n.defaultValue),void 0===s&&n.tfDeprecatedName&&(s=pI(e.attr,n.tfDeprecatedName,n.defaultValue));break;case"tensor":case"tensors":break;default:throw new Error(`Unsupported param type: ${n.type} for op: ${e.op}`)}return t[n.name]={value:s,type:r},t}),{})),n}mapFunction(e){const t=e.nodeDef,n=[];let r={};null!=t&&(r=t.reduce(((e,t)=>(e[t.name]=this.mapNode(t),"Const"===t.op&&n.push(e[t.name]),e)),{}));const s=[],a=[];e.signature.inputArg.forEach((e=>{const[t]=ON(e.name),n={name:t,op:"Placeholder",inputs:[],inputNames:[],category:"graph",inputParams:{},attrParams:{dtype:{value:hI(e.type),type:"dtype"}},children:[]};n.signatureKey=e.name,s.push(n),r[t]=n})),Object.keys(r).forEach((e=>{const t=r[e];t.inputNames.forEach(((e,n)=>{const[s,,a]=ON(e),i=r[s];if(null!=i.outputs){const e=i.outputs.indexOf(a);if(-1!==e){const r=`${s}:${e}`;t.inputNames[n]=r}}t.inputs.push(i),i.children.push(t)}))}));const i=e.ret;e.signature.outputArg.forEach((e=>{const[t,n]=ON(i[e.name]),s=r[t];null!=s&&(s.defaultOutput=n,a.push(s))}));const o=this.mapArgsToSignature(e);return{nodes:r,inputs:s,outputs:a,weights:n,placeholders:[],signature:o}}mapArgsToSignature(e){return{methodName:e.signature.name,inputs:e.signature.inputArg.reduce(((e,t)=>(e[t.name]=this.mapArgToTensorInfo(t),e)),{}),outputs:e.signature.outputArg.reduce(((t,n)=>(t[n.name]=this.mapArgToTensorInfo(n,e.ret),t)),{})}}mapArgToTensorInfo(e,t){let n=e.name;return null!=t&&(n=t[n]),{name:n,dtype:e.type}}}function oI(e,t){const n=Array.isArray(e)?String.fromCharCode.apply(null,e):function(e){const t=je().global;if(void 0!==t.atob)return t.atob(e);if("undefined"!=typeof Buffer)return new Buffer(e,"base64").toString();throw new Error("Unable to decode base64 in this environment. Missing built-in atob() or Buffer()")}(e);return t?n:n.toLowerCase()}function uI(e,t,n,r=!1){const s=e[t];return null!=s?oI(s.s,r):n}function lI(e,t,n){const r=e[t];return r?r.b:n}function cI(e,t,n){const r=e[t]||{},s=null!=r.i?r.i:null!=r.f?r.f:n;return"number"==typeof s?s:parseInt(s,10)}function hI(e){switch("string"==typeof e&&(e=SN[e]),e){case SN.DT_FLOAT:case SN.DT_HALF:return"float32";case SN.DT_INT32:case SN.DT_INT64:case SN.DT_INT8:case SN.DT_UINT8:return"int32";case SN.DT_BOOL:return"bool";case SN.DT_DOUBLE:return"float32";case SN.DT_STRING:return"string";default:return null}}function pI(e,t,n){const r=e[t];return r&&r.func?r.func.name:n}function dI(e,t,n){const r=e[t];return r&&r.type?hI(r.type):n}function fI(e,t,n){const r=e[t];return r&&r.list&&r.list.type?r.list.type.map((e=>hI(e))):n}function mI(e){if(!e.unknownRank)return null!=e.dim?e.dim.map((e=>"number"==typeof e.size?e.size:parseInt(e.size,10))):[]}function gI(e,t,n){const r=e[t];return r&&r.shape?mI(r.shape):n}function yI(e,t,n){const r=e[t];return r?((r.list.f&&r.list.f.length?r.list.f:r.list.i)||[]).map((e=>"number"==typeof e?e:parseInt(e,10))):n}function bI(e,t,n,r=!1){const s=e[t];return s&&s.list&&s.list.s?s.list.s.map((e=>oI(e,r))):n}function xI(e,t,n){const r=e[t];return r&&r.list&&r.list.shape?r.list.shape.map((e=>mI(e))):n}function wI(e,t,n){const r=e[t];return r&&r.list&&r.list.b?r.list.b:n}class vI{constructor(e,t,n){this.node=e,this.tensorMap=t,this.context=n,this.inputs=[],this.attrs={},this.inputs=e.inputNames.map((e=>this.getInput(e))),null!=e.rawAttrs&&(this.attrs=Object.keys(e.rawAttrs).reduce(((e,t)=>(e[t]=this.getAttr(t),e)),{}))}getInput(e){return MN(e,this.tensorMap,this.context)}getAttr(e,t){const n=this.node.rawAttrs[e];if(null!=n.tensor)return MN(e,this.tensorMap,this.context);if(null!=n.i||null!=n.f)return cI(this.node.rawAttrs,e,t);if(null!=n.s)return uI(this.node.rawAttrs,e,t);if(null!=n.b)return lI(this.node.rawAttrs,e,t);if(null!=n.shape)return gI(this.node.rawAttrs,e,t);if(null!=n.type)return dI(this.node.rawAttrs,e,t);if(null!=n.list){if(null!=n.list.i||null!=n.list.f)return yI(this.node.rawAttrs,e,t);if(null!=n.list.s)return bI(this.node.rawAttrs,e,t);if(null!=n.list.shape)return xI(this.node.rawAttrs,e,t);if(null!=n.list.b)return wI(this.node.rawAttrs,e,t);if(null!=n.list.type)return fI(this.node.rawAttrs,e,t)}return t}}function kI(e,t,n=""){if("number"!=typeof e&&"number"!=typeof t){re(e.length===t.length,(()=>n+` Shapes ${e} and ${t} must match`));for(let r=0;r<e.length;r++){const s=e[r],a=t[r];re(s<0||a<0||s===a,(()=>n+` Shapes ${e} and ${t} must match`))}}}function NI(e){return"number"!=typeof e&&!e.some((e=>e<0))}function II(e,t,n){let r=CI(e,n);const s=!NI(r);if(s&&0===t.length)throw new Error(`Tried to calculate elements of an empty list with non-fully-defined elementShape: ${r}`);if(s&&t.forEach((e=>{r=CI(e.shape,r)})),!NI(r))throw new Error(`Non-fully-defined elementShape: ${r}`);return r}function CI(e,t){if("number"==typeof e)return t;if("number"==typeof t)return e;if(e.length!==t.length)throw new Error(`Incompatible ranks during merge: ${e} vs. ${t}`);const n=[];for(let r=0;r<e.length;++r){const s=e[r],a=t[r];if(s>=0&&a>=0&&s!==a)throw new Error(`Incompatible shape during merge: ${e} vs. ${t}`);n[r]=s>=0?s:a}return n}class DI{constructor(e,t,n,r,s,a,i){this.name=e,this.dtype=t,this.maxSize=n,this.elementShape=r,this.identicalElementShapes=s,this.dynamicSize=a,this.clearAfterRead=i,this.tensors=[],this.closed_=!1,this.idTensor=ku(0),Zo(this.idTensor)}get id(){return this.idTensor.id}get closed(){return this.closed_}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.tensor.id)||t.tensor.dispose()})),this.tensors=[],this.closed_=!0,this.idTensor.dispose()}size(){return this.tensors.length}read(e){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||e>=this.size())throw new Error(`Tried to read from index ${e}, but array size is: ${this.size()}`);const t=this.tensors[e];if(t.cleared)throw new Error(`TensorArray ${this.name}: Could not read index ${e} twice because it was cleared after a previous read (perhaps try setting clear_after_read = false?).`);return this.clearAfterRead&&(t.cleared=!0),t.read=!0,t.tensor}readMany(e){return e.map((e=>this.read(e)))}write(e,t){if(this.closed_)throw new Error(`TensorArray ${this.name} has already been closed.`);if(e<0||!this.dynamicSize&&e>=this.maxSize)throw new Error(`Tried to write to index ${e}, but array is not resizeable and size is: ${this.maxSize}`);const n=this.tensors[e]||{};if(t.dtype!==this.dtype)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e},\n          because the value dtype is ${t.dtype}, but TensorArray dtype is ${this.dtype}.`);if(0!==this.size()||null!=this.elementShape&&0!==this.elementShape.length||(this.elementShape=t.shape),kI(this.elementShape,t.shape,`TensorArray ${this.name}: Could not write to TensorArray index ${e}.`),n.read)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been read.`);if(n.written)throw new Error(`TensorArray ${this.name}: Could not write to TensorArray index ${e}, because it has already been written.`);n.tensor=t,Zo(t),n.written=!0,this.tensors[e]=n}writeMany(e,t){if(e.length!==t.length)throw new Error(`TensorArray ${this.name}: could not write multiple tensors,because the index size: ${e.length} is not the same as tensors size: ${t.length}.`);e.forEach(((e,n)=>this.write(e,t[n])))}gather(e,t){if(t&&t!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but gather requested dtype ${t}`);if(e)e=e.slice(0,this.size());else{e=[];for(let t=0;t<this.size();t++)e.push(t)}if(0===e.length)return Ta([],[0].concat(this.elementShape));const n=this.readMany(e);return kI(this.elementShape,n[0].shape,"TensorArray shape mismatch: "),Kh(n,0)}concat(e){if(e&&e!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but concat requested dtype ${e}`);if(0===this.size())return Ta([],[0].concat(this.elementShape));const t=[];for(let e=0;e<this.size();e++)t.push(e);const n=this.readMany(t);return kI(this.elementShape,n[0].shape,`TensorArray shape mismatch: tensor array shape (${this.elementShape}) vs first tensor shape (${n[0].shape})`),pl(n,0)}scatter(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);if(e.length!==t.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${e.length} vs. ${t.shape[0]}`);const n=Math.max(...e);if(!this.dynamicSize&&n>=this.maxSize)throw new Error(`Max index must be < array size (${n}  vs. ${this.maxSize})`);this.writeMany(e,op(t,0))}split(e,t){if(t.dtype!==this.dtype)throw new Error(`TensorArray dtype is ${this.dtype} but tensor has dtype ${t.dtype}`);let n=0;const r=e.map((e=>(n+=e,n)));if(n!==t.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${n}, and tensor's shape is: ${t.shape}`);if(!this.dynamicSize&&e.length!==this.maxSize)throw new Error(`TensorArray's size is not equal to the size of lengths (${this.maxSize} vs. ${e.length}), and the TensorArray is not marked as dynamically resizeable`);const s=0===n?0:t.size/n,a=[];Xo((()=>{t=ll(t,[1,n,s]);for(let n=0;n<e.length;++n){const i=[0,0===n?0:r[n-1],0],o=[1,e[n],s];a[n]=ll(fl(t,i,o),this.elementShape)}return a}));const i=[];for(let t=0;t<e.length;t++)i[t]=t;this.writeMany(i,a)}}class EI{constructor(e,t,n,r=-1){this.tensors=e,this.elementShape=t,this.elementDtype=n,null!=e&&e.forEach((e=>{if(n!==e.dtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${e.dtype}`);kI(t,e.shape,"TensorList shape mismatch: "),Zo(e)})),this.idTensor=ku(0),this.maxNumElements=r,Zo(this.idTensor)}get id(){return this.idTensor.id}copy(){return new EI([...this.tensors],this.elementShape,this.elementDtype)}clearAndClose(e){this.tensors.forEach((t=>{null!=e&&e.has(t.id)||t.dispose()})),this.tensors.length=0,this.idTensor.dispose()}size(){return this.tensors.length}stack(e,t,n=-1){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(-1!==n&&this.tensors.length!==n)throw new Error(`Operation expected a list with ${n} elements but got a list with ${this.tensors.length} elements.`);kI(e,this.elementShape,"TensorList shape mismatch: ");const r=II(this.elementShape,this.tensors,e);return Xo((()=>{const e=this.tensors.map((e=>ll(e,r)));return Kh(e,0)}))}popBack(e,t){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);if(0===this.size())throw new Error("Trying to pop from an empty list.");const n=II(this.elementShape,this.tensors,e),r=this.tensors.pop();return kI(r.shape,e,"TensorList shape mismatch: "),ll(r,n)}pushBack(e){if(e.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${this.elementDtype}`);if(kI(e.shape,this.elementShape,"TensorList shape mismatch: "),this.maxNumElements===this.size())throw new Error("Trying to push element into a full list.");Zo(e),this.tensors.push(e)}resize(e){if(e<0)throw new Error(`TensorListResize expects size to be non-negative. Got: ${e}`);if(-1!==this.maxNumElements&&e>this.maxNumElements)throw new Error(`TensorListResize input size ${e} is greater maxNumElement ${this.maxNumElements}.`);this.tensors.length=e}getItem(e,t,n){if(n!==this.elementDtype)throw new Error(`Invalid data types; op elements ${n}, but list elements ${this.elementDtype}`);if(e<0||e>this.tensors.length)throw new Error(`Trying to access element ${e} in a list with ${this.tensors.length} elements.`);if(null==this.tensors[e])throw new Error(`element at index ${e} is null.`);kI(this.tensors[e].shape,t,"TensorList shape mismatch: ");const r=II(this.elementShape,this.tensors,t);return ll(this.tensors[e],r)}setItem(e,t){if(t.dtype!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t.dtype}, but list elements ${this.elementDtype}`);if(e<0||-1!==this.maxNumElements&&e>=this.maxNumElements)throw new Error(`Trying to set element ${e} in a list with max ${this.maxNumElements} elements.`);kI(this.elementShape,t.shape,"TensorList shape mismatch: "),Zo(t),this.tensors[e]=t}gather(e,t,n){if(t!==this.elementDtype)throw new Error(`Invalid data types; op elements ${t}, but list elements ${this.elementDtype}`);kI(this.elementShape,n,"TensorList shape mismatch: "),e=e.slice(0,this.size());const r=II(this.elementShape,this.tensors,n);return 0===e.length?Ta([],[0].concat(r)):Xo((()=>{const t=e.map((e=>ll(this.tensors[e],r)));return Kh(t,0)}))}concat(e,t){if(e&&e!==this.elementDtype)throw new Error(`TensorList dtype is ${this.elementDtype} but concat requested dtype ${e}`);kI(this.elementShape,t,"TensorList shape mismatch: ");const n=II(this.elementShape,this.tensors,t);return 0===this.size()?Ta([],[0].concat(n)):Xo((()=>{const e=this.tensors.map((e=>ll(e,n)));return pl(e,0)}))}}function SI(e,t,n){const[r,s]=_N("fusedOps",e,t,n),a="biasadd"===r,i=!a,o="prelu"===s,u="fusedbatchnorm"===r,l=_N("numArgs",e,t,n);if(a){if(o&&2!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!o&&a&&1!==l)throw new Error("FusedConv2d and DepthwiseConv2d with BiasAdd must have one extra argument: bias.")}if(u)throw new Error("FusedConv2d and DepthwiseConv2d with FusedBatchNorm is not supported");const c=_N("strides",e,t,n),h=LN(e,t,n),p=_N("dataFormat",e,t,n).toUpperCase(),d=_N("dilations",e,t,n);let[f,m]=_N("args",e,t,n);return i&&(m=f,f=void 0),{stride:c,pad:h,dataFormat:p,dilations:d,biasArg:f,preluArg:m,activationFunc:s,leakyreluAlpha:_N("leakyreluAlpha",e,t,n)}}function TI(e,t,n){return{boxes:_N("boxes",e,t,n),scores:_N("scores",e,t,n),maxOutputSize:_N("maxOutputSize",e,t,n),iouThreshold:_N("iouThreshold",e,t,n),scoreThreshold:_N("scoreThreshold",e,t,n),softNmsSigma:_N("softNmsSigma",e,t,n)}}class AI{constructor(e,t){this.keyDType=e,this.valueDType=t,this.handle=ku(0),this.tensorMap=new Map,Zo(this.handle)}get id(){return this.handle.id}clearAndClose(){this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),this.handle.dispose()}size(){return this.tensorMap.size}tensorSize(){return ku(this.size(),"int32")}async import(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return this.tensorMap.forEach((e=>e.dispose())),this.tensorMap.clear(),Xo((()=>{const e=op(t),r=n.length,s=e.length;re(r===s,(()=>`The number of elements doesn't match, keys has ${r} elements, the values has ${s} elements.`));for(let t=0;t<r;t++){const r=n[t],s=e[t];Zo(s),this.tensorMap.set(r,s)}return this.handle}))}async find(e,t){this.checkKeyAndValueTensor(e,t);const n=await e.data();return Xo((()=>{const e=[];for(let r=0;r<n.length;r++){const s=n[r],a=this.findWithDefault(s,t);e.push(a)}return Kh(e)}))}findWithDefault(e,t){const n=this.tensorMap.get(e);return null!=n?n:t}checkKeyAndValueTensor(e,t){if(e.dtype!==this.keyDType)throw new Error(`Expect key dtype ${this.keyDType}, but got ${e.dtype}`);if(t.dtype!==this.valueDType)throw new Error(`Expect value dtype ${this.valueDType}, but got ${t.dtype}`)}}function $I(e,t,n,r){const s=((e,t,n)=>{switch(e.category){case"arithmetic":return Xo((()=>((e,t,n)=>{switch(e.op){case"BiasAdd":case"AddV2":case"Add":return[uu(_N("a",e,t,n),_N("b",e,t,n))];case"AddN":return[Lu(_N("tensors",e,t,n))];case"FloorMod":case"Mod":return[Kc(_N("a",e,t,n),_N("b",e,t,n))];case"Mul":return[hu(_N("a",e,t,n),_N("b",e,t,n))];case"RealDiv":case"Div":return[cu(_N("a",e,t,n),_N("b",e,t,n))];case"DivNoNan":return[Kl(_N("a",e,t,n),_N("b",e,t,n))];case"FloorDiv":return[lu(_N("a",e,t,n),_N("b",e,t,n))];case"Sub":return[Su(_N("a",e,t,n),_N("b",e,t,n))];case"Minimum":return[Hc(_N("a",e,t,n),_N("b",e,t,n))];case"Maximum":return[$u(_N("a",e,t,n),_N("b",e,t,n))];case"Pow":return[Eu(_N("a",e,t,n),_N("b",e,t,n))];case"SquaredDifference":return[Hh(_N("a",e,t,n),_N("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"basic_math":return Xo((()=>((e,t,n)=>{switch(e.op){case"Abs":case"ComplexAbs":return[Au(_N("x",e,t,n))];case"Acos":return[Bu(_N("x",e,t,n))];case"Acosh":return[zu(_N("x",e,t,n))];case"Asin":return[Gu(_N("x",e,t,n))];case"Asinh":return[ju(_N("x",e,t,n))];case"Atan":return[Hu(_N("x",e,t,n))];case"Atan2":return[qu(_N("x",e,t,n),_N("y",e,t,n))];case"Atanh":return[Ku(_N("x",e,t,n))];case"Ceil":return[Cl(_N("x",e,t,n))];case"Complex":return[Ea(_N("real",e,t,n),_N("imag",e,t,n))];case"Cos":return[zl(_N("x",e,t,n))];case"Cosh":return[Ll(_N("x",e,t,n))];case"Elu":return[Zl(_N("x",e,t,n))];case"Erf":return[Jl(_N("x",e,t,n))];case"Exp":return[Ql(_N("x",e,t,n))];case"Expm1":return[tc(_N("x",e,t,n))];case"Floor":return[sc(_N("x",e,t,n))];case"Log":return[yc(_N("x",e,t,n))];case"Log1p":return[bc(_N("x",e,t,n))];case"Imag":return[uc(_N("x",e,t,n))];case"Neg":return[xc(_N("x",e,t,n))];case"Reciprocal":return[wh(_N("x",e,t,n))];case"Real":return[xh(_N("x",e,t,n))];case"Relu":return[vh(_N("x",e,t,n))];case"Round":return[Sh(_N("x",e,t,n))];case"Selu":return[Ah(_N("x",e,t,n))];case"Sigmoid":return[dl(_N("x",e,t,n))];case"Sin":return[_h(_N("x",e,t,n))];case"Sign":return[Rh(_N("x",e,t,n))];case"Sinh":return[Mh(_N("x",e,t,n))];case"Softplus":return[wc(_N("x",e,t,n))];case"Sqrt":return[pu(_N("x",e,t,n))];case"Square":return[du(_N("x",e,t,n))];case"Tanh":return[ml(_N("x",e,t,n))];case"Tan":return[Zh(_N("x",e,t,n))];case"ClipByValue":return[Dl(_N("x",e,t,n),_N("clipValueMin",e,t,n),_N("clipValueMax",e,t,n))];case"Relu6":return[kh(_N("x",e,t,n))];case"Rsqrt":return[Th(MN(e.inputNames[0],t,n))];case"Prod":return[lh(_N("x",e,t,n),_N("axes",e,t,n))];case"LeakyRelu":return[pc(_N("x",e,t,n),_N("alpha",e,t,n))];case"Prelu":return[uh(_N("x",e,t,n),_N("alpha",e,t,n))];case"IsNan":return[hc(MN(e.inputNames[0],t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"control":return(async(e,t,n)=>{switch(e.op){case"If":case"StatelessIf":{const r=_N("thenBranch",e,t,n),s=_N("elseBranch",e,t,n),a=_N("cond",e,t,n),i=_N("args",e,t,n);return(await a.data())[0]?n.functionMap[r].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap):n.functionMap[s].executeFunctionAsync(i,n.tensorArrayMap,n.tensorListMap)}case"While":case"StatelessWhile":{const r=_N("body",e,t,n),s=_N("cond",e,t,n),a=_N("args",e,t,n),i=await n.functionMap[s].executeFunctionAsync(a,n.tensorArrayMap,n.tensorListMap),o=a.map((e=>e.id));let u=await i[0].data();i.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||e.dispose()}));let l=a;for(;u[0];){const e=l;l=await n.functionMap[r].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);const t=l.map((e=>e.id));e.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}));const a=await n.functionMap[s].executeFunctionAsync(l,n.tensorArrayMap,n.tensorListMap);u=await a[0].data(),a.forEach((e=>{e.kept||-1!==o.indexOf(e.id)||-1!==t.indexOf(e.id)||e.dispose()}))}return l}case"LoopCond":return[PN(_N("pred",e,t,n))];case"Switch":{const r=_N("pred",e,t,n);let s=_N("data",e,t,n);return s.kept||(s=PN(s)),(await r.data())[0]?[void 0,s]:[s,void 0]}case"Merge":{const r=e.inputNames.find((e=>void 0!==MN(e,t,n)));return r?[PN(MN(r,t,n))]:void 0}case"Enter":{const r=_N("frameName",e,t,n),s=_N("tensor",e,t,n);return n.enterFrame(r),[PN(s)]}case"Exit":{const r=_N("tensor",e,t,n);return n.exitFrame(),[PN(r)]}case"NextIteration":{const r=_N("tensor",e,t,n);return n.nextIteration(),[PN(r)]}case"TensorArrayV3":{const r=_N("size",e,t,n),s=_N("dtype",e,t,n),a=_N("elementShape",e,t,n),i=_N("dynamicSize",e,t,n),o=_N("clearAfterRead",e,t,n),u=_N("identicalElementShapes",e,t,n),l=_N("name",e,t,n),c=new DI(l,s,r,a,u,i,o);return n.addTensorArray(c),[c.idTensor,ku(1)]}case"TensorArrayWriteV3":{const r=_N("tensorArrayId",e,t,n),s=_N("index",e,t,n),a=_N("tensor",e,t,n),i=n.getTensorArray(r.id);return i.write(s,a),[i.idTensor]}case"TensorArrayReadV3":{const r=_N("tensorArrayId",e,t,n),s=_N("index",e,t,n);return[n.getTensorArray(r.id).read(s)]}case"TensorArrayGatherV3":{const r=_N("tensorArrayId",e,t,n),s=_N("indices",e,t,n),a=_N("dtype",e,t,n);return[n.getTensorArray(r.id).gather(s,a)]}case"TensorArrayScatterV3":{const r=_N("tensorArrayId",e,t,n),s=_N("indices",e,t,n),a=_N("tensor",e,t,n),i=n.getTensorArray(r.id);return i.scatter(s,a),[i.idTensor]}case"TensorArrayConcatV3":{const r=_N("tensorArrayId",e,t,n),s=n.getTensorArray(r.id),a=_N("dtype",e,t,n);return[s.concat(a)]}case"TensorArraySplitV3":{const r=_N("tensorArrayId",e,t,n),s=_N("tensor",e,t,n),a=_N("lengths",e,t,n),i=n.getTensorArray(r.id);return i.split(a,s),[i.idTensor]}case"TensorArraySizeV3":{const r=_N("tensorArrayId",e,t,n);return[ku(n.getTensorArray(r.id).size(),"int32")]}case"TensorArrayCloseV3":{const r=_N("tensorArrayId",e,t,n),s=n.getTensorArray(r.id);return s.clearAndClose(),[s.idTensor]}case"TensorListSetItem":{const r=_N("tensorListId",e,t,n),s=_N("index",e,t,n),a=_N("tensor",e,t,n),i=n.getTensorList(r.id);return i.setItem(s,a),[i.idTensor]}case"TensorListGetItem":{const r=_N("tensorListId",e,t,n),s=_N("index",e,t,n),a=_N("elementShape",e,t,n),i=_N("elementDType",e,t,n);return[n.getTensorList(r.id).getItem(s,a,i)]}case"TensorListScatterV2":case"TensorListScatter":{const r=_N("indices",e,t,n),s=function(e,t,n,r){if(t.length!==e.shape[0])throw new Error(`Expected len(indices) == tensor.shape[0], but saw: ${t.length} vs. ${e.shape[0]}`);const s=Math.max(...t);if(null!=r&&-1!==r&&s>=r)throw new Error(`Max index must be < array size (${s}  vs. ${r})`);const a=new EI([],n,e.dtype,r),i=op(e,0);return t.forEach(((e,t)=>{a.setItem(e,i[t])})),a}(_N("tensor",e,t,n),r,_N("elementShape",e,t,n),_N("numElements",e,t,n));return n.addTensorList(s),[s.idTensor]}case"TensorListReserve":case"EmptyTensorList":{const r=_N("elementShape",e,t,n),s=_N("elementDType",e,t,n);let a;a="TensorListReserve"===e.op?"numElements":"maxNumElements";const i=function(e,t,n){return new EI([],e,t,n)}(r,s,_N(a,e,t,n));return n.addTensorList(i),[i.idTensor]}case"TensorListGather":{const r=_N("tensorListId",e,t,n),s=_N("indices",e,t,n),a=_N("elementShape",e,t,n),i=_N("elementDType",e,t,n);return[n.getTensorList(r.id).gather(s,i,a)]}case"TensorListStack":{const r=_N("tensorListId",e,t,n),s=_N("elementShape",e,t,n),a=_N("elementDType",e,t,n),i=_N("numElements",e,t,n);return[n.getTensorList(r.id).stack(s,a,i)]}case"TensorListFromTensor":{const r=function(e,t,n){const r=e.dtype;if(e.shape.length<1)throw new Error(`Tensor must be at least a vector, but saw shape: ${e.shape}`);if(e.dtype!==n)throw new Error(`Invalid data types; op elements ${e.dtype}, but list elements ${n}`);kI(e.shape.slice(1),t,"TensorList shape mismatch: ");const s=op(e);return new EI(s,t,r)}(_N("tensor",e,t,n),_N("elementShape",e,t,n),_N("elementDType",e,t,n));return n.addTensorList(r),[r.idTensor]}case"TensorListConcat":{const r=_N("tensorListId",e,t,n),s=n.getTensorList(r.id),a=_N("dtype",e,t,n),i=_N("elementShape",e,t,n);return[s.concat(a,i)]}case"TensorListPushBack":{const r=_N("tensorListId",e,t,n),s=_N("tensor",e,t,n),a=n.getTensorList(r.id);return a.pushBack(s),[a.idTensor]}case"TensorListPopBack":{const r=_N("tensorListId",e,t,n),s=_N("elementShape",e,t,n),a=_N("elementDType",e,t,n);return[n.getTensorList(r.id).popBack(s,a)]}case"TensorListSplit":{const r=_N("tensor",e,t,n),s=_N("elementShape",e,t,n),a=function(e,t,n){let r=0;const s=t.map((e=>(r+=e,r)));if(r!==e.shape[0])throw new Error(`Expected sum of lengths to be equal to\n          tensor.shape[0], but sum of lengths is\n        ${r}, and tensor's shape is: ${e.shape}`);const a=CI(e.shape.slice(1),n),i=0===r?0:e.size/r,o=Xo((()=>{const n=[];e=ll(e,[1,r,i]);for(let r=0;r<t.length;++r){const o=[0,0===r?0:s[r-1],0],u=[1,t[r],i];n[r]=ll(fl(e,o,u),a)}return e.dispose(),n})),u=new EI([],n,e.dtype,t.length);for(let e=0;e<o.length;e++)u.setItem(e,o[e]);return u}(r,_N("lengths",e,t,n),s);return n.addTensorList(a),[a.idTensor]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"convolution":return Xo((()=>((e,t,n)=>{switch(e.op){case"Conv1D":{const r=_N("stride",e,t,n),s=_N("pad",e,t,n),a=_N("dataFormat",e,t,n).toUpperCase(),i=_N("dilation",e,t,n);return[Fl(_N("x",e,t,n),_N("filter",e,t,n),r,s,a,i)]}case"Conv2D":{const r=_N("strides",e,t,n),s=LN(e,t,n),a=_N("dataFormat",e,t,n).toUpperCase(),i=_N("dilations",e,t,n);return[$l(_N("x",e,t,n),_N("filter",e,t,n),[r[1],r[2]],s,a,[i[1],i[2]])]}case"_FusedConv2D":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=SI(e,t,n);return[Ep({x:_N("x",e,t,n),filter:_N("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"FusedDepthwiseConv2dNative":{const{stride:r,pad:s,dataFormat:a,dilations:i,biasArg:o,preluArg:u,activationFunc:l,leakyreluAlpha:c}=SI(e,t,n);return[Ap({x:_N("x",e,t,n),filter:_N("filter",e,t,n),strides:[r[1],r[2]],pad:s,dataFormat:a,dilations:[i[1],i[2]],bias:o,activation:l,preluActivationWeights:u,leakyreluAlpha:c})]}case"Conv2DBackpropInput":case"Conv2dTranspose":{const r=_N("outputShape",e,t,n),s=_N("strides",e,t,n),a=LN(e,t,n);return[_l(_N("x",e,t,n),_N("filter",e,t,n),r,[s[1],s[2]],a)]}case"DepthwiseConv2dNative":case"DepthwiseConv2d":{const r=_N("strides",e,t,n),s=LN(e,t,n),a=_N("dilations",e,t,n),i=_N("dataFormat",e,t,n).toUpperCase();return[Vl(_N("input",e,t,n),_N("filter",e,t,n),[r[1],r[2]],s,i,[a[1],a[2]])]}case"Conv3D":{const r=_N("strides",e,t,n),s=_N("pad",e,t,n),a=_N("dataFormat",e,t,n).toUpperCase(),i=_N("dilations",e,t,n);return[Ml(_N("x",e,t,n),_N("filter",e,t,n),[r[1],r[2],r[3]],s,a,[i[1],i[2],i[3]])]}case"AvgPool":{const r=_N("strides",e,t,n),s=_N("pad",e,t,n),a=_N("kernelSize",e,t,n);return[cl(_N("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPool":{const r=_N("strides",e,t,n),s=_N("pad",e,t,n),a=_N("kernelSize",e,t,n);return[zc(_N("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s)]}case"MaxPoolWithArgmax":{const r=_N("strides",e,t,n),s=_N("pad",e,t,n),a=_N("kernelSize",e,t,n),i=_N("includeBatchInIndex",e,t,n),{result:o,indexes:u}=Pc(_N("x",e,t,n),[a[1],a[2]],[r[1],r[2]],s,i);return[o,u]}case"AvgPool3D":{const r=_N("strides",e,t,n),s=_N("pad",e,t,n),a=_N("kernelSize",e,t,n);return[hl(_N("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"MaxPool3D":{const r=_N("strides",e,t,n),s=_N("pad",e,t,n),a=_N("kernelSize",e,t,n);return[Lc(_N("x",e,t,n),[a[1],a[2],a[3]],[r[1],r[2],r[3]],s)]}case"Dilation2D":{const r=_N("strides",e,t,n),s=_N("pad",e,t,n),a=_N("dilations",e,t,n),i=r[1],o=r[2],u=a[1],l=a[2];return[jl(_N("x",e,t,n),_N("filter",e,t,n),[i,o],s,[u,l],"NHWC")]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"creation":return Xo((()=>((e,t,n)=>{switch(e.op){case"Fill":{const r=_N("shape",e,t,n),s=_N("dtype",e,t,n);return[Cu(r,_N("value",e,t,n),s)]}case"LinSpace":return[mc(_N("start",e,t,n),_N("stop",e,t,n),_N("num",e,t,n))];case"Multinomial":{const r=_N("logits",e,t,n),s=_N("numSamples",e,t,n),a=_N("seed",e,t,n);return[Zc(r,s,a)]}case"OneHot":{const r=_N("indices",e,t,n),s=_N("depth",e,t,n),a=_N("onValue",e,t,n),i=_N("offValue",e,t,n);return[Hi(r,s,a,i)]}case"Ones":return[Vc(_N("shape",e,t,n),_N("dtype",e,t,n))];case"OnesLike":return[Qc(_N("x",e,t,n))];case"RandomUniform":return[yh(_N("shape",e,t,n),_N("minval",e,t,n),_N("maxval",e,t,n),_N("dtype",e,t,n))];case"Range":return[bh(_N("start",e,t,n),_N("stop",e,t,n),_N("step",e,t,n),_N("dtype",e,t,n))];case"TruncatedNormal":{const r=_N("shape",e,t,n),s=_N("mean",e,t,n),a=_N("stdDev",e,t,n),i=_N("seed",e,t,n);return[sp(r,s,a,_N("dtype",e,t,n),i)]}case"Zeros":return[Wc(_N("shape",e,t,n),_N("dtype",e,t,n))];case"ZerosLike":return[fu(_N("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"dynamic":return(async(e,t,n)=>{switch(e.op){case"NonMaxSuppressionV5":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o,softNmsSigma:u}=TI(e,t,n),l=await Dd.nonMaxSuppressionWithScoreAsync(r,s,a,i,o,u);return[l.selectedIndices,l.selectedScores]}case"NonMaxSuppressionV4":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=TI(e,t,n),u=_N("padToMaxOutputSize",e,t,n),l=await Dd.nonMaxSuppressionPaddedAsync(r,s,a,i,o,u);return[l.selectedIndices,l.validOutputs]}case"NonMaxSuppressionV3":case"NonMaxSuppressionV2":{const{boxes:r,scores:s,maxOutputSize:a,iouThreshold:i,scoreThreshold:o}=TI(e,t,n);return[await Dd.nonMaxSuppressionAsync(r,s,a,i,o)]}case"Where":{const r=Ci(_N("condition",e,t,n),"bool"),s=[await cp(r)];return r.dispose(),s}case"ListDiff":return Fh(_N("x",e,t,n),_N("y",e,t,n));default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n);case"evaluation":return Xo((()=>((e,t,n)=>{switch(e.op){case"TopKV2":{const r=_N("x",e,t,n),s=_N("k",e,t,n),a=_N("sorted",e,t,n),i=rp(r,s,a);return[i.values,i.indices]}case"Unique":{const r=_N("x",e,t,n),s=ap(r);return[s.values,s.indices]}case"UniqueV2":{const r=_N("x",e,t,n),s=_N("axis",e,t,n),a=ap(r,s);return[a.values,a.indices]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"image":return Xo((()=>((e,t,n)=>{switch(e.op){case"ResizeBilinear":{const r=_N("images",e,t,n),s=_N("size",e,t,n),a=_N("alignCorners",e,t,n),i=_N("halfPixelCenters",e,t,n);return[Dd.resizeBilinear(r,[s[0],s[1]],a,i)]}case"ResizeNearestNeighbor":{const r=_N("images",e,t,n),s=_N("size",e,t,n),a=_N("alignCorners",e,t,n),i=_N("halfPixelCenters",e,t,n);return[Dd.resizeNearestNeighbor(r,[s[0],s[1]],a,i)]}case"CropAndResize":{const r=_N("image",e,t,n),s=_N("boxes",e,t,n),a=_N("boxInd",e,t,n),i=_N("cropSize",e,t,n),o=_N("method",e,t,n),u=_N("extrapolationValue",e,t,n);return[Dd.cropAndResize(r,s,a,i,o,u)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"graph":return Xo((()=>((e,t,n)=>{switch(e.op){case"Const":return t[e.name];case"PlaceholderWithDefault":const r=_N("default",e,t,n);return[MN(e.name,t,n)||r];case"Placeholder":return[MN(e.name,t,n)];case"Identity":case"StopGradient":case"FakeQuantWithMinMaxVars":case"Snapshot":return[PN(_N("x",e,t,n))];case"IdentityN":return _N("x",e,t,n).map((e=>PN(e)));case"Shape":return[Jh(_N("x",e,t,n).shape,"int32")];case"ShapeN":return _N("x",e,t,n).map((e=>Jh(e.shape)));case"Size":return[ku(_N("x",e,t,n).size,"int32")];case"Rank":return[ku(_N("x",e,t,n).rank,"int32")];case"NoOp":return[ku(1)];case"Print":const s=_N("x",e,t,n),a=_N("data",e,t,n),i=_N("message",e,t,n),o=_N("summarize",e,t,n);console.warn("The graph has a tf.print() operation,usually used for debugging, which slows down performance."),console.log(i);for(let e=0;e<a.length;e++)console.log(Array.prototype.slice.call(a[e].dataSync()).slice(0,o));return[s];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"logical":return Xo((()=>((e,t,n)=>{switch(e.op){case"Equal":return[Hl(_N("a",e,t,n),_N("b",e,t,n))];case"NotEqual":return[Jc(_N("a",e,t,n),_N("b",e,t,n))];case"Greater":return[ic(_N("a",e,t,n),_N("b",e,t,n))];case"GreaterEqual":return[oc(_N("a",e,t,n),_N("b",e,t,n))];case"Less":return[dc(_N("a",e,t,n),_N("b",e,t,n))];case"LessEqual":return[fc(_N("a",e,t,n),_N("b",e,t,n))];case"LogicalAnd":return[_c(_N("a",e,t,n),_N("b",e,t,n))];case"LogicalNot":return[Mc(_N("a",e,t,n))];case"LogicalOr":return[Oc(_N("a",e,t,n),_N("b",e,t,n))];case"Select":case"SelectV2":return[ql(_N("condition",e,t,n),_N("a",e,t,n),_N("b",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"matrices":return Xo((()=>((e,t,n)=>{switch(e.op){case"BatchMatMul":case"BatchMatMulV2":case"MatMul":return[ji(_N("a",e,t,n),_N("b",e,t,n),_N("transposeA",e,t,n),_N("transposeB",e,t,n))];case"Einsum":return[Yl(_N("equation",e,t,n),..._N("tensors",e,t,n))];case"Transpose":return[qi(_N("x",e,t,n),_N("perm",e,t,n))];case"_FusedMatMul":const[r,s]=_N("fusedOps",e,t,n),a="biasadd"===r,i="prelu"===s,o=_N("numArgs",e,t,n),u=_N("leakyreluAlpha",e,t,n);if(a){if(i&&2!==o)throw new Error("Fused MatMul with BiasAdd and Prelu must have two extra arguments: bias and alpha.");if(!i&&1!==o)throw new Error("Fused MatMul with BiasAdd must have one extra argument: bias.")}const[l,c]=_N("args",e,t,n);return[$p({a:_N("a",e,t,n),b:_N("b",e,t,n),transposeA:_N("transposeA",e,t,n),transposeB:_N("transposeB",e,t,n),bias:l,activation:s,preluActivationWeights:c,leakyreluAlpha:u})];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"normalization":return Xo((()=>((e,t,n)=>{switch(e.op){case"FusedBatchNorm":case"FusedBatchNormV2":case"FusedBatchNormV3":return[bl(_N("x",e,t,n),_N("mean",e,t,n),_N("variance",e,t,n),_N("offset",e,t,n),_N("scale",e,t,n),_N("epsilon",e,t,n))];case"LRN":return[gc(_N("x",e,t,n),_N("radius",e,t,n),_N("bias",e,t,n),_N("alpha",e,t,n),_N("beta",e,t,n))];case"Softmax":return[Ph(_N("x",e,t,n))];case"LogSoftmax":return[Ic(_N("x",e,t,n))];case"SparseToDense":return[gp(_N("sparseIndices",e,t,n),_N("outputShape",e,t,n),_N("sparseValues",e,t,n),_N("defaultValue",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"reduction":return Xo((()=>((e,t,n)=>{switch(e.op){case"Max":{const r=_N("axis",e,t,n),s=_N("keepDims",e,t,n);return[kc(_N("x",e,t,n),r,s)]}case"Mean":{const r=_N("axis",e,t,n),s=_N("keepDims",e,t,n);return[Uc(_N("x",e,t,n),r,s)]}case"Min":{const r=_N("axis",e,t,n),s=_N("keepDims",e,t,n);return[jc(_N("x",e,t,n),r,s)]}case"Sum":{const r=_N("axis",e,t,n),s=_N("keepDims",e,t,n);return[Nc(_N("x",e,t,n),r,s)]}case"All":{const r=_N("axis",e,t,n),s=_N("keepDims",e,t,n);return[Pu(_N("x",e,t,n),r,s)]}case"Any":{const r=_N("axis",e,t,n),s=_N("keepDims",e,t,n);return[Uu(_N("x",e,t,n),r,s)]}case"ArgMax":{const r=_N("axis",e,t,n);return[Wu(_N("x",e,t,n),r)]}case"ArgMin":{const r=_N("axis",e,t,n);return[Vu(_N("x",e,t,n),r)]}case"Prod":{const r=_N("axis",e,t,n),s=_N("keepDims",e,t,n);return[lh(_N("x",e,t,n),r,s)]}case"Cumsum":{const r=_N("axis",e,t,n),s=_N("exclusive",e,t,n),a=_N("reverse",e,t,n);return[Pl(_N("x",e,t,n),r,s,a)]}case"Bincount":const r=_N("x",e,t,n),s=_N("weights",e,t,n),a=_N("size",e,t,n);return[kl(r,s,a)];case"DenseBincount":{const r=_N("x",e,t,n),s=_N("weights",e,t,n),a=_N("size",e,t,n),i=_N("binaryOutput",e,t,n);return[Ul(r,s,a,i)]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"slice_join":return Xo((()=>((e,t,n)=>{switch(e.op){case"ConcatV2":case"Concat":{const r=_N("n",e,t,n),s=_N("axis",e,t,n);let a=_N("tensors",e,t,n);return a=a.slice(0,r),[pl(a,s)]}case"Gather":{const r=_N("x",e,t,n),s=_N("indices",e,t,n);return[ac(r,Ci(s,"int32"),0)]}case"GatherV2":{const r=_N("axis",e,t,n),s=_N("batchDims",e,t,n),a=_N("x",e,t,n),i=_N("indices",e,t,n);return[ac(a,Ci(i,"int32"),r,s)]}case"Reverse":{const r=_N("dims",e,t,n),s=[];for(let e=0;e<r.length;e++)r[e]&&s.push(e);const a=_N("x",e,t,n);return[Nh(a,s)]}case"ReverseV2":{const r=_N("axis",e,t,n),s=_N("x",e,t,n);return[Nh(s,r)]}case"Slice":{const r=_N("begin",e,t,n),s=_N("size",e,t,n);return[fl(_N("x",e,t,n),r,s)]}case"StridedSlice":{const r=_N("begin",e,t,n),s=_N("end",e,t,n),a=_N("strides",e,t,n),i=_N("beginMask",e,t,n),o=_N("endMask",e,t,n),u=_N("ellipsisMask",e,t,n),l=_N("newAxisMask",e,t,n),c=_N("shrinkAxisMask",e,t,n),h=_N("x",e,t,n);return[Yh(h,r,s,a,i,o,u,l,c)]}case"Pack":return Xo((()=>{const r=_N("axis",e,t,n),s=_N("tensors",e,t,n),a=s[0].shape,i=qh(s[0]).shape,o=s.map((e=>{const t=le(e.shape,a);if(!t&&!le(qh(e).shape,i))throw new Error("the input tensors shape does not match");return t?e:ll(e,a)}));return[Kh(o,r)]}));case"Unpack":{const r=_N("axis",e,t,n),s=_N("tensor",e,t,n);return op(s,r)}case"Tile":{const r=_N("reps",e,t,n);return[nc(_N("x",e,t,n),r)]}case"Split":case"SplitV":{const r=_N("axis",e,t,n),s=_N("numOrSizeSplits",e,t,n),a=_N("x",e,t,n);return Gh(a,s,r)}case"ScatterNd":{const r=_N("indices",e,t,n),s=_N("values",e,t,n),a=_N("shape",e,t,n);return[mp(r,s,a)]}case"GatherNd":{const r=_N("x",e,t,n),s=_N("indices",e,t,n);return[yp(r,s)]}case"SparseToDense":{const r=_N("sparseIndices",e,t,n),s=_N("outputShape",e,t,n),a=_N("sparseValues",e,t,n),i=_N("defaultValue",e,t,n);return[gp(r,a,s,a.dtype===i.dtype?i:Ci(i,a.dtype))]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"sparse":return Xo((()=>((e,t,n)=>{switch(e.op){case"SparseFillEmptyRows":{const{outputIndices:r,outputValues:s,emptyRowIndicator:a,reverseIndexMap:i}=Td.sparseFillEmptyRows(_N("indices",e,t,n),_N("values",e,t,n),_N("denseShape",e,t,n),_N("defaultValue",e,t,n));return[r,s,a,i]}case"SparseReshape":{const{outputIndices:r,outputShape:s}=Td.sparseReshape(_N("inputIndices",e,t,n),_N("inputShape",e,t,n),_N("newShape",e,t,n));return[r,s]}case"SparseSegmentMean":return[Td.sparseSegmentMean(_N("data",e,t,n),_N("indices",e,t,n),_N("segmentIds",e,t,n))];case"SparseSegmentSum":return[Td.sparseSegmentSum(_N("data",e,t,n),_N("indices",e,t,n),_N("segmentIds",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"spectral":return Xo((()=>((e,t,n)=>{switch(e.op){case"FFT":return[Uh(_N("x",e,t,n))];case"IFFT":return[Wh(_N("x",e,t,n))];case"RFFT":return[jh(_N("x",e,t,n))];case"IRFFT":return[Vh(_N("x",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"string":return Xo((()=>((e,t,n)=>{switch(e.op){case"StringNGrams":{const{nGrams:r,nGramsSplits:s}=Ad.stringNGrams(_N("data",e,t,n),_N("dataSplits",e,t,n),_N("separator",e,t,n),_N("nGramWidths",e,t,n),_N("leftPad",e,t,n),_N("rightPad",e,t,n),_N("padWidth",e,t,n),_N("preserveShortSequences",e,t,n));return[r,s]}case"StringSplit":{const{indices:r,values:s,shape:a}=Ad.stringSplit(_N("input",e,t,n),_N("delimiter",e,t,n),_N("skipEmpty",e,t,n));return[r,s,a]}case"StringToHashBucketFast":return[Ad.stringToHashBucketFast(_N("input",e,t,n),_N("numBuckets",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"transformation":return Xo((()=>((e,t,n)=>{switch(e.op){case"Cast":return[Ci(_N("x",e,t,n),_N("dtype",e,t,n))];case"ExpandDims":{const r=_N("axis",e,t,n);return[ec(_N("x",e,t,n),r)]}case"Squeeze":{const r=_N("axis",e,t,n);return[qh(_N("x",e,t,n),r)]}case"Reshape":return[ll(_N("x",e,t,n),_N("shape",e,t,n))];case"MirrorPad":return[qc(_N("x",e,t,n),_N("padding",e,t,n),_N("mode",e,t,n))];case"PadV2":case"Pad":return[th(_N("x",e,t,n),_N("padding",e,t,n),_N("constantValue",e,t,n))];case"SpaceToBatchND":{const r=_N("blockShape",e,t,n),s=_N("paddings",e,t,n);return[ih(_N("x",e,t,n),r,s)]}case"BatchToSpaceND":{const r=_N("blockShape",e,t,n),s=_N("crops",e,t,n);return[yl(_N("x",e,t,n),r,s)]}case"DepthToSpace":{const r=_N("blockSize",e,t,n),s=_N("dataFormat",e,t,n).toUpperCase();return[Wl(_N("x",e,t,n),r,s)]}case"BroadcastTo":return[Il(_N("x",e,t,n),_N("shape",e,t,n))];case"BroadcastArgs":return[Nl(_N("s0",e,t,n),_N("s1",e,t,n))];default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n)));case"hash_table":return(async(e,t,n,r)=>{switch(e.op){case"HashTable":case"HashTableV2":{const s=_N("keyDType",e,t,n),a=_N("valueDType",e,t,n),i=new AI(s,a);return r.addHashTable(e.name,i),[i.handle]}case"LookupTableImport":case"LookupTableImportV2":{const s=_N("tableHandle",e,t,n,r),a=_N("keys",e,t,n),i=_N("values",e,t,n),o=r.getHashTableById(s.id);return[await o.import(a,i)]}case"LookupTableFind":case"LookupTableFindV2":{const s=_N("tableHandle",e,t,n,r),a=_N("keys",e,t,n),i=_N("defaultValue",e,t,n),o=r.getHashTableById(s.id);return[await o.find(a,i)]}case"LookupTableSize":case"LookupTableSizeV2":{const s=_N("tableHandle",e,t,n,r);return[r.getHashTableById(s.id).tensorSize()]}default:throw TypeError(`Node type ${e.op} is not implemented`)}})(e,t,n,r);case"custom":const s=FN(e.op);if(s&&s.customExecutor)return s.customExecutor(new vI(e,t,n));throw TypeError(`Custom op ${e.op} is not registered.`);default:throw TypeError(`Unknown op '${e.op}'. File an issue at https://github.com/tensorflow/tfjs/issues so we can add it, or register a custom execution with tf.registerOp()`)}})(e,t,n);return We(s)?s.then((e=>[].concat(e))):[].concat(s)}class FI{constructor(e={},t={},n={},r={}){this.weightMap=e,this.tensorArrayMap=t,this.tensorListMap=n,this.functionMap=r,this.rootContext={id:0,frameName:"",iterationId:0},this.contexts=[this.rootContext],this.lastId=0,this.generateCurrentContextIds()}newFrame(e,t){return{id:e,frameName:t,iterationId:0}}set currentContext(e){this.contexts!==e&&(this.contexts=e,this.generateCurrentContextIds())}get currentContext(){return this.contexts}get currentContextId(){return this._currentContextIds[0]}get currentContextIds(){return this._currentContextIds}generateCurrentContextIds(){const e=[];for(let t=0;t<this.contexts.length-1;t++){const n=this.contexts.slice(0,this.contexts.length-t);e.push(this.contextIdforContexts(n))}e.push(""),this._currentContextIds=e}contextIdforContexts(e){return e?e.map((e=>0===e.id&&0===e.iterationId?"":`${e.frameName}-${e.iterationId}`)).join("/"):""}enterFrame(e){this.contexts&&(this.lastId++,this.contexts=this.contexts.slice(),this.contexts.push(this.newFrame(this.lastId,e)),this._currentContextIds.unshift(this.contextIdforContexts(this.contexts)))}exitFrame(){if(!(this.contexts&&this.contexts.length>1))throw new Error("Cannot exit frame, the context is empty");this.contexts=this.contexts.slice(),this.contexts.splice(-1),this.currentContextIds.shift()}nextIteration(){if(!(this.contexts&&this.contexts.length>0))throw new Error("Cannot increase frame iteration, the context is empty");{this.contexts=this.contexts.slice(),this.lastId++;const e=Object.assign({},this.contexts[this.contexts.length-1]);e.iterationId+=1,e.id=this.lastId,this.contexts.splice(-1,1,e),this._currentContextIds.splice(0,1,this.contextIdforContexts(this.contexts))}}getWeight(e){return this.weightMap[e]}addTensorArray(e){this.tensorArrayMap[e.id]=e}getTensorArray(e){return this.tensorArrayMap[e]}addTensorList(e){this.tensorListMap[e.id]=e}getTensorList(e){return this.tensorListMap[e]}dispose(e){for(const t in this.tensorArrayMap)this.tensorArrayMap[t].clearAndClose(e);for(const t in this.tensorListMap)this.tensorListMap[t].clearAndClose(e)}}function RI(e,t,n,r){const s=new Set,a=[];let i=null,o=null;const u=new Set,l=Object.keys(e).map((e=>zN(e)[0]));let c=[];null!=r&&(c=r.map((e=>zN(e.name)[0])));const h=[...t];for(;h.length>0;){const e=h.pop();(BI(e)||zI(e)||LI(e))&&null==i&&(i=e,o=i.children.map((e=>e.name)).filter((e=>s.has(e)))),s.add(e.name),null==n[e.name]&&-1===l.indexOf(e.name)&&-1===c.indexOf(e.name)&&(0!==e.inputs.length?e.inputs.forEach((e=>{u.has(e.name)||(u.add(e.name),h.push(e))})):a.push(e.name))}return{inputs:e,outputs:t,usedNodes:s,missingInputs:a,dynamicNode:i,syncInputs:o}}const _I=["Switch","Merge","Enter","Exit","NextIteration","StatelessIf","StatelessWhile","if","While"],MI=["NonMaxSuppressionV2","NonMaxSuppressionV3","NonMaxSuppressionV5","Where"],OI=["HashTable","HashTableV2","LookupTableImport","LookupTableImportV2","LookupTableFind","LookupTableFindV2","LookupTableSize","LookupTableSizeV2"];function BI(e){return _I.indexOf(e.op)>=0}function zI(e){return MI.indexOf(e.op)>=0}function LI(e){return OI.indexOf(e.op)>=0}class PI{constructor(e,t){this.graph=e,this.parent=t,this.compiledMap=new Map,this._weightMap={},this.SEPERATOR=",",this._functions={},this._functionExecutorMap={},this.intermediateTensors={},this.keepTensorForDebug=!1,this._outputs=e.outputs,this._inputs=e.inputs,this._initNodes=e.initNodes,this._signature=e.signature,this._functions=e.functions,null!=e.functions&&Object.keys(e.functions).forEach((t=>{this._functionExecutorMap[t]=new PI(e.functions[t],this)}))}get weightIds(){return this.parent?this.parent.weightIds:this._weightIds}get functionExecutorMap(){return this.parent?this.parent.functionExecutorMap:this._functionExecutorMap}get weightMap(){return this.parent?this.parent.weightMap:this._weightMap}set weightMap(e){const t=Object.keys(e).map((t=>e[t].map((e=>e.id))));this._weightIds=[].concat(...t),this._weightMap=e}set resourceManager(e){this._resourceManager=e}get inputs(){return this._inputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get outputs(){return this._outputs.map((e=>({name:e.name,shape:e.attrParams.shape?e.attrParams.shape.value:void 0,dtype:e.attrParams.dtype?e.attrParams.dtype.value:void 0})))}get inputNodes(){return this._inputs.map((e=>e.signatureKey||e.name))}get outputNodes(){return this._outputs.map((e=>{const t=e.signatureKey||e.name;return e.defaultOutput?`${t}:${e.defaultOutput}`:t}))}get functions(){return Object.keys(this._functions).reduce(((e,t)=>(e[t]=this._functions[t].signature,e)),{})}getCompilationKey(e,t){const n=e.map((e=>e.name)).sort(),r=t.map((e=>e.name)).sort();return n.join(this.SEPERATOR)+"--"+r.join(this.SEPERATOR)}compile(e,t){const n=RI(e,t,this.weightMap,this._initNodes),{missingInputs:r,dynamicNode:s,syncInputs:a}=n;if(null!=s)throw new Error(`This execution contains the node '${s.name}', which has the dynamic op '${s.op}'. Please use model.executeAsync() instead. Alternatively, to avoid the dynamic ops, specify the inputs [${a}]`);if(r.length>0){const n=t.map((e=>e.name)),s=Object.keys(e);throw new Error(`Cannot compute the outputs [${n}] from the provided inputs [${s}]. Missing the following inputs: [${r}]`)}return function(e,t,n){const{usedNodes:r,inputs:s}=n,a=[],i=Object.keys(s).map((e=>zN(e)[0])).map((t=>e.nodes[t])),o=e.initNodes;i.forEach((e=>{r.has(e.name)&&a.push(e)})),e.weights.forEach((e=>{r.has(e.name)&&a.push(e)})),null!=o&&o.forEach((e=>{r.has(e.name)&&a.push(e)}));const u=new Set,l=[];for(;a.length>0;){const e=a.pop();u.add(e.name),t[e.name]||l.push(e),e.children.forEach((e=>{!u.has(e.name)&&r.has(e.name)&&e.inputs.every((e=>u.has(e.name)))&&a.push(e)}))}return l}(this.graph,this.weightMap,n)}execute(e,t){e=this.mapInputs(e);const n=Object.keys(e).sort();this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t);const r=n.map((e=>this.graph.nodes[zN(e)[0]])),s=t.map((e=>zN(e)[0]));let a=s.map((e=>this.graph.nodes[e]));this.resetIntermediateTensors(),0===a.length&&(a=this._outputs);const i=this.getCompilationKey(r,a);let o=this.compiledMap.get(i);null==o&&(o=this.compile(e,a),this.compiledMap.set(i,o));const u={},l={};return Xo((()=>{const n=new FI(this.weightMap,u,l,this.functionExecutorMap),r=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,s]=zN(t),a=[];a[s]=e[t],r[n]=a}));const a=this.getFrozenTensorIds(r),i={};for(let e=0;e<o.length;e++){const t=o[e];if(!r[t.name]){const e=$I(t,r,n,this._resourceManager);if(We(e))throw new Error(`The execution of the op '${t.op}' returned a promise. Please use model.executeAsync() instead.`);r[t.name]=e,this.checkTensorForDisposal(t.name,t,r,n,a,s,i)}}return null==this.parent&&n.dispose(a),t.map((e=>MN(e,r,n)))}))}getFrozenTensorIds(e){const t=[].concat.apply([],Object.keys(e).map((t=>e[t])).map((e=>e.map((e=>e.id)))));return new Set(t)}checkTensorForDisposal(e,t,n,r,s,a,i){"control"!==t.category&&-1===a.indexOf(e)&&(n[e].forEach((e=>{null!=e&&(i[e.id]=(i[e.id]||0)+t.children.length)})),t.inputs.forEach((e=>{if("control"!==e.category){const a=function(e,t,n){return t[BN(e,n.currentContextId)]}(e.name,n,r);null!=a&&a.forEach((e=>{if(e&&!e.kept&&!s.has(e.id)){const n=i[e.id];if(1===n){if(this.keepTensorForDebug){const[n,s]=ON(t.name,r);this.intermediateTensors[n]||(this.intermediateTensors[n]=[]),this.intermediateTensors[n][s]=e}else e.dispose();delete i[e.id]}else null!=n&&i[e.id]--}}))}})))}async executeAsync(e,t){return this._executeAsync(e,t)}disposeIntermediateTensors(){this.intermediateTensors&&(Object.keys(this.intermediateTensors).forEach((e=>this.intermediateTensors[e].forEach((e=>e.dispose())))),this.disposeTensorsMap())}disposeTensorsMap(){this.tensorsMap&&Object.keys(this.tensorsMap).forEach((e=>{this.tensorsMap[e].forEach((e=>{!e||e.kept||e.isDisposed||this.keepIds.has(e.id)||e.dispose()}))}))}getIntermediateTensors(){return this.tensorsMap}resetIntermediateTensors(){for(const e in this.intermediateTensors)this.intermediateTensors[e].forEach((e=>e.dispose())),delete this.intermediateTensors[e]}async _executeAsync(e,t,n=!1,r={},s={}){n||(e=this.mapInputs(e),this.checkInputs(e),this.checkInputShapeAndType(e),t=this.mapOutputs(t),this.checkOutputs(t));try{this.keepTensorForDebug=je().getBool("KEEP_INTERMEDIATE_TENSORS")}catch(e){console.warn(e.message)}this.resetIntermediateTensors();const a=new FI(this.weightMap,r,s,this.functionExecutorMap);this.tensorsMap=await this.executeWithControlFlow(e,a,t,n);const i=t.map((e=>MN(e,this.tensorsMap,a))),o=i.map((e=>e.id)),u=Object.keys(e).map((t=>e[t].id));return this.keepIds=new Set([...o,...u,...this.weightIds]),this.keepTensorForDebug||this.disposeTensorsMap(),null==this.parent&&a.dispose(this.keepIds),i}async executeFunctionAsync(e,t,n){const r=e.reduce(((e,t,n)=>(e[this.inputs[n].name]=t,e)),{});return this._executeAsync(r,this.outputNodes,!0,t,n)}async executeWithControlFlow(e,t,n,r){const s=Object.keys(e),a=s.map((e=>this.graph.nodes[zN(e)[0]])),i=n.map((e=>zN(e)[0]));let o=i.map((e=>this.graph.nodes[e]));0===o.length&&(o=this._outputs);const{usedNodes:u,missingInputs:l,dynamicNode:c,syncInputs:h}=RI(e,o,this.weightMap,this._initNodes),p=[...a,...this.graph.weights,...this._initNodes||[]].map((e=>({node:e,contexts:t.currentContext}))),d=Object.assign({},this.weightMap);Object.keys(e).forEach((t=>{const[n,r]=zN(t),s=[];s[r]=e[t],d[n]=s}));const f={},m=this.getFrozenTensorIds(d),g={};for(;p.length>0;){const e=this.processStack(a,p,t,d,g,m,i,f,u);await Promise.all(e)}null!=c||r||console.warn("This model execution did not contain any nodes with control flow or dynamic output shapes. You can use model.execute() instead.");const y=o.filter((e=>!BI(e)&&!MN(e.name,d,t))).map((e=>e.name));if(y.length>0){let e="";throw null!=c&&(e=`Alternatively, to avoid the dynamic ops, use model.execute() and specify the inputs [${h}]`),new Error(`Cannot compute the outputs [${y}] from the provided inputs [${s}]. Consider providing the following inputs: [${l}]. ${e}`)}return d}processStack(e,t,n,r,s,a,i,o,u){const l=[];for(;t.length>0;){const e=t.pop();n.currentContext=e.contexts;let c="";if("Enter"===e.node.op&&_N("isConstant",e.node,r,n)&&([c]=ON(e.node.name,n)),null==r[e.node.name]){const h=$I(e.node,r,n,this._resourceManager);c||([c]=ON(e.node.name,n));const p=n.currentContext;We(h)?l.push(h.then((l=>(r[c]=l,n.currentContext=p,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u),l)))):(r[c]=h,this.checkTensorForDisposal(c,e.node,r,n,a,i,o),this.processChildNodes(e.node,t,n,r,s,u))}else this.processChildNodes(e.node,t,n,r,s,u)}return l}processChildNodes(e,t,n,r,s,a){e.children.forEach((e=>{const[i]=ON(e.name,n);!s[i]&&a.has(e.name)&&("Merge"===e.op?e.inputNames.some((e=>!!MN(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})):e.inputNames.every((e=>!!MN(e,r,n)))&&(s[i]=!0,t.push({contexts:n.currentContext,node:e})))}))}dispose(){Object.keys(this.weightMap).forEach((e=>this.weightMap[e].forEach((e=>e.dispose()))))}checkInputShapeAndType(e){Object.keys(e).forEach((t=>{const n=e[t],[r]=zN(t),s=this.graph.nodes[r];if(s.attrParams.shape&&s.attrParams.shape.value){const e=s.attrParams.shape.value;re(e.length===n.shape.length&&n.shape.every(((t,n)=>-1===e[n]||e[n]===t)),(()=>`The shape of dict['${s.name}'] provided in model.execute(dict) must be [${e}], but was [${n.shape}]`))}s.attrParams.dtype&&s.attrParams.dtype.value&&re(n.dtype===s.attrParams.dtype.value,(()=>`The dtype of dict['${s.name}'] provided in model.execute(dict) must be ${s.attrParams.dtype.value}, but was ${n.dtype}`))}))}mapInputs(e){const t={};for(const n in e)null!=this._signature&&null!=this._signature.inputs&&null!=this._signature.inputs[n]?t[this._signature.inputs[n].name]=e[n]:t[n]=e[n];return t}checkInputs(e){const t=Object.keys(e).filter((e=>{const[t]=zN(e);return null==this.graph.nodes[t]}));if(t.length>0)throw new Error(`The dict provided in model.execute(dict) has keys: [${t}] that are not part of graph`)}mapOutputs(e){return e.map((e=>null!=this._signature&&null!=this._signature.outputs&&null!=this._signature.outputs[e]?this._signature.outputs[e].name:e),{})}checkOutputs(e){e.forEach((e=>{const[t]=zN(e);if(!this.graph.nodes[t])throw new Error(`The output '${e}' is not found in the graph`)}))}}class UI{constructor(e={},t={}){this.hashTableNameToHandle=e,this.hashTableMap=t}addHashTable(e,t){this.hashTableNameToHandle[e]=t.handle,this.hashTableMap[t.id]=t}getHashTableHandleByName(e){return this.hashTableNameToHandle[e]}getHashTableById(e){return this.hashTableMap[e]}dispose(){for(const e in this.hashTableMap)this.hashTableMap[e].clearAndClose(),delete this.hashTableMap[e];for(const e in this.hashTableNameToHandle)this.hashTableNameToHandle[e].dispose(),delete this.hashTableNameToHandle[e]}}class WI{constructor(e,t={}){this.modelUrl=e,this.loadOptions=t,this.version="n/a",null==t&&(this.loadOptions={}),this.resourceManager=new UI}get modelVersion(){return this.version}get inputNodes(){return this.executor.inputNodes}get outputNodes(){return this.executor.outputNodes}get inputs(){return this.executor.inputs}get outputs(){return this.executor.outputs}get weights(){return this.executor.weightMap}get metadata(){return this.artifacts.userDefinedMetadata}get modelSignature(){return this.signature}findIOHandler(){const e=this.modelUrl;if(null!=e.load)this.handler=e;else if(null!=this.loadOptions.requestInit)this.handler=Pi(e,this.loadOptions);else{const t=Ha(e,this.loadOptions);if(0===t.length)t.push(Pi(e,this.loadOptions));else if(t.length>1)throw new Error(`Found more than one (${t.length}) load handlers for URL '${[e]}'`);this.handler=t[0]}}async load(){if(this.findIOHandler(),null==this.handler.load)throw new Error("Cannot proceed with model loading because the IOHandler provided does not have the `load` method implemented.");const e=await this.handler.load();return this.loadSync(e)}loadSync(e){this.artifacts=e;const t=this.artifacts.modelTopology;let n;n=null!=this.artifacts.userDefinedMetadata&&null!=this.artifacts.userDefinedMetadata.signature?this.artifacts.userDefinedMetadata.signature:this.artifacts.signature,this.signature=n,this.version=`${t.versions.producer}.${t.versions.minConsumer}`;const r=Fa(this.artifacts.weightData,this.artifacts.weightSpecs);if(this.executor=new PI(iI.Instance.transformGraph(t,this.signature)),this.executor.weightMap=this.convertTensorMapToTensorsMap(r),this.executor.resourceManager=this.resourceManager,null!=e.modelInitializer&&null!=e.modelInitializer.node){const t=iI.Instance.transformGraph(e.modelInitializer);this.initializer=new PI(t),this.initializer.weightMap=this.executor.weightMap,this.initializer.resourceManager=this.resourceManager,this.initializer.executeAsync({},[])}return!0}async save(e,t){if("string"==typeof e){const t=ja(e);if(0===t.length)throw new Error(`Cannot find any save handlers for URL '${e}'`);if(t.length>1)throw new Error(`Found more than one (${t.length}) save handlers for URL '${e}'`);e=t[0]}if(null==e.save)throw new Error("GraphModel.save() cannot proceed because the IOHandler provided does not have the `save` attribute defined.");return e.save(this.artifacts)}predict(e,t){return this.execute(e,this.outputNodes)}normalizeInputs(e){if(!(e instanceof qs||Array.isArray(e)))return e;if((e=Array.isArray(e)?e:[e]).length!==this.inputNodes.length)throw new Error(`Input tensor count mismatch,the graph model has ${this.inputNodes.length} placeholders, while there are ${e.length} input tensors.`);return this.inputNodes.reduce(((t,n,r)=>(t[n]=e[r],t)),{})}normalizeOutputs(e){return e=e||this.outputNodes,Array.isArray(e)?e:[e]}execute(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=this.executor.execute(e,t);return n.length>1?n:n[0]}async executeAsync(e,t){e=this.normalizeInputs(e),t=this.normalizeOutputs(t);const n=await this.executor.executeAsync(e,t);return n.length>1?n:n[0]}getIntermediateTensors(){return this.executor.getIntermediateTensors()}disposeIntermediateTensors(){this.executor.disposeIntermediateTensors()}convertTensorMapToTensorsMap(e){return Object.keys(e).reduce(((t,n)=>(t[n]=[e[n]],t)),{})}dispose(){this.executor.dispose(),this.initializer&&this.initializer.dispose(),this.resourceManager.dispose()}}async function VI(e,t={}){if(null==e)throw new Error("modelUrl in loadGraphModel() cannot be null. Please provide a url or an IOHandler that loads the model");null==t&&(t={}),t.fromTFHub&&null==e.load&&(e.endsWith("/")||(e+="/"),e=`${e}model.json?tfjs-format=file`);const n=new WI(e,t);return await n.load(),n}const GI="3.13.0";function jI(e,t,n=new Map,r=new Set){if(null==e)return null;if("function"==typeof Blob&&e instanceof Blob)return e.slice();if(r.has(e))throw new Error("Circular references are not supported.");if(n.has(e))return n.get(e);const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep map function may not return both a value and recurse=true.");if(s.recurse){if(YI(e)){const s=Array.isArray(e)?[]:{};r.add(e);for(const a in e){const i=jI(e[a],t,n,r);s[a]=i}return r.delete(e),e.__proto__&&(s.__proto__=e.__proto__),s}throw new Error(`Can't recurse into non-iterable type: ${e}`)}return n.set(e,s.value),s.value}function HI(e,t=KI){return qI(e,t)}function qI(e,t,n=new Set){const r=e[0];if(n.has(r))throw new Error("Circular references are not supported.");const s=t(e);if(s.recurse&&null!==s.value)throw new Error("A deep zip function may not return both a value and recurse=true.");if(s.recurse){if(YI(r)){const s=Array.isArray(r)?[]:{};n.add(r);for(const a in r){const r=qI(e.map((e=>e[a])),t,n);s[a]=r}return n.delete(r),s}throw new Error(`Can't recurse into non-iterable type: ${r}`)}return s.value}function KI(e){return null===e?null:YI(e[0])?{value:null,recurse:!0}:{value:e,recurse:!1}}async function XI(e,t){const n=new Map;jI(e,t,n);for(const e of Array.from(n.keys())){const t=n.get(e);if(We(t)){const r=await t;n.set(e,r)}}return jI(e,t,n)}function YI(e){let t=!1;if(je().get("IS_BROWSER"))t=e instanceof TextDecoder;else{const{StringDecoder:r}=n(589);t=e instanceof r}return null!=e&&!ArrayBuffer.isView(e)&&(Array.isArray(e)||"object"==typeof e&&!(e instanceof qs)&&!(e instanceof Promise)&&!t)}function ZI(e){return e instanceof qs?{value:e.clone(),recurse:!1}:YI(e)?{value:null,recurse:!0}:{value:e,recurse:!1}}class JI{constructor(e){if(this.capacity=e,this.begin=0,this.end=0,null==e)throw new RangeError("Can't create a ring buffer of unknown capacity.");if(e<1)throw new RangeError("Can't create ring buffer of capacity < 1.");this.data=new Array(e),this.doubledCapacity=2*e}wrap(e){for(;e<0;)e+=this.doubledCapacity;return e%this.doubledCapacity}get(e){if(e<0)throw new RangeError("Can't get item at a negative index.");return this.data[e%this.capacity]}set(e,t){if(e<0)throw new RangeError("Can't set item at a negative index.");this.data[e%this.capacity]=t}length(){let e=this.end-this.begin;return e<0&&(e=this.doubledCapacity+e),e}isFull(){return this.length()===this.capacity}isEmpty(){return 0===this.length()}push(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.set(this.end,e),this.end=this.wrap(this.end+1)}pushAll(e){for(const t of e)this.push(t)}pop(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");this.end=this.wrap(this.end-1);const e=this.get(this.end);return this.set(this.end,void 0),e}unshift(e){if(this.isFull())throw new RangeError("Ring buffer is full.");this.begin=this.wrap(this.begin-1),this.set(this.begin,e)}shift(){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const e=this.get(this.begin);return this.set(this.begin,void 0),this.begin=this.wrap(this.begin+1),e}shuffleExcise(e){if(this.isEmpty())throw new RangeError("Ring buffer is empty.");const t=this.wrap(this.begin+e),n=this.get(t);return this.set(t,this.pop()),n}}class QI extends JI{constructor(){super(QI.INITIAL_CAPACITY)}isFull(){return!1}push(e){super.isFull()&&this.expand(),super.push(e)}unshift(e){super.isFull()&&this.expand(),super.unshift(e)}expand(){const e=2*this.capacity,t=new Array(e),n=this.length();for(let e=0;e<n;e++)t[e]=this.get(this.wrap(this.begin+e));this.data=t,this.capacity=e,this.doubledCapacity=2*this.capacity,this.begin=0,this.end=n}}function eC(e){return new rC(e)}function tC(e){return new sC(e)}QI.INITIAL_CAPACITY=32;class nC{async toArray(){const e=[];let t=await this.next();for(;!t.done;)e.push(t.value),t=await this.next();return e}async toArrayForTest(){const e=this.prefetch(100),t=[];let n=await e.next();for(;!n.done;)t.push(n.value),n=await e.next();return t}async resolveFully(){let e=await this.next();for(;!e.done;)e=await this.next()}async resolveWhile(e){let t=await this.next(),n=e(t.value);for(;!t.done&&n;)t=await this.next(),n=e(t.value)}handleErrors(e){return new hC(this,e)}filter(e){return new lC(this,e)}map(e){return new cC(this,e)}mapAsync(e){return new pC(this,e)}serialMapAsync(e){return new pC(this,e).serial()}flatmap(e){return new fC(this,e)}async forEachAsync(e){return this.map(e).resolveFully()}async serialForEach(e){return this.serialMapAsync(e).resolveWhile((e=>!0===e))}rowMajorBatch(e,t=!0){return new uC(this,e,t)}columnMajorBatch(e,t=!0,n=KI){return this.rowMajorBatch(e,t).map((e=>HI(e,n)))}concatenate(e,t){return new mC(eC([this,e]),t)}take(e){return e<0||null==e?this:new oC(this,e)}skip(e){return e<0||null==e?this:new iC(this,e)}prefetch(e){return new bC(this,e)}shuffle(e,t){return new xC(this,e,t)}serial(){return new aC(this)}}class rC extends nC{constructor(e){super(),this.items=e,this.trav=0}summary(){return`Array of ${this.items.length} items`}async next(){if(this.trav>=this.items.length)return{value:null,done:!0};const e=this.items[this.trav];return this.trav++,{value:(t=e,function(e,t){return jI(e,t)}(t,ZI)),done:!1};var t}}class sC extends nC{constructor(e){super(),this.nextFn=e}summary(){return"Function call"}async next(){try{return this.nextFn()}catch(e){throw e.message=`Error thrown while iterating through a dataset: ${e.message}`,e}}}class aC extends nC{constructor(e){super(),this.upstream=e,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Serial`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){return this.upstream.next()}}class iC extends nC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Skip`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;this.count++<this.maxCount;){const e=await this.upstream.next();if(e.done)return e;Yo(e.value)}return this.upstream.next()}}class oC extends nC{constructor(e,t){super(),this.upstream=e,this.maxCount=t,this.count=0}summary(){return`${this.upstream.summary()} -> Take`}async next(){return this.count++>=this.maxCount?{value:null,done:!0}:this.upstream.next()}}class uC extends nC{constructor(e,t,n=!0){super(),this.upstream=e,this.batchSize=t,this.enableSmallLastBatch=n,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> RowMajorBatch`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){const e=[];for(;e.length<this.batchSize;){const t=await this.upstream.next();if(t.done)return this.enableSmallLastBatch&&e.length>0?{value:e,done:!1}:{value:null,done:!0};e.push(t.value)}return{value:e,done:!1}}}class lC extends nC{constructor(e,t){super(),this.upstream=e,this.predicate=t,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> Filter`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;){const e=await this.upstream.next();if(e.done||this.predicate(e.value))return e;Yo(e.value)}}}class cC extends nC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Map`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=oa(e.value),n=this.transform(e.value),r=oa(n);for(const e of t)ia(e,r)||e.dispose();return{value:n,done:!1}}}class hC extends nC{constructor(e,t){super(),this.upstream=e,this.handler=t,this.count=0,this.lastRead=Promise.resolve({value:null,done:!1})}summary(){return`${this.upstream.summary()} -> handleErrors`}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;;)try{return await this.upstream.next()}catch(e){if(!this.handler(e))return{value:null,done:!0}}}}class pC extends nC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> AsyncMap`}async next(){const e=await this.upstream.next();if(e.done)return{value:null,done:!0};const t=oa(e.value),n=await this.transform(e.value),r=oa(n);for(const e of t)ia(e,r)||e.dispose();return{value:n,done:!1}}}class dC extends nC{constructor(){super(),this.outputQueue=new QI,this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}async serialNext(){for(;0===this.outputQueue.length();)if(!await this.pump())return{value:null,done:!0};return{value:this.outputQueue.shift(),done:!1}}}class fC extends dC{constructor(e,t){super(),this.upstream=e,this.transform=t}summary(){return`${this.upstream.summary()} -> Flatmap`}async pump(){const e=await this.upstream.next();if(e.done)return!1;const t=oa(e.value),n=this.transform(e.value),r=oa(n);this.outputQueue.pushAll(n);for(const e of t)ia(e,r)||e.dispose();return!0}}class mC extends nC{constructor(e,t){super(),this.baseErrorHandler=t,this.lastRead=null,this.iterator=null,this.moreIterators=e}summary(){return"TODO: fill in upstream of chained summaries -> Chained"}async next(){return this.lastRead=this.readFromChain(this.lastRead),this.lastRead}async readFromChain(e){if(await e,null==this.iterator){const e=await this.moreIterators.next();if(e.done)return{value:null,done:!0};this.iterator=e.value,null!=this.baseErrorHandler&&(this.iterator=this.iterator.handleErrors(this.baseErrorHandler))}const t=await this.iterator.next();return t.done?(this.iterator=null,this.readFromChain(e)):t}}var gC;!function(e){e[e.FAIL=0]="FAIL",e[e.SHORTEST=1]="SHORTEST",e[e.LONGEST=2]="LONGEST"}(gC||(gC={}));class yC extends nC{constructor(e,t=gC.FAIL){super(),this.iterators=e,this.mismatchMode=t,this.count=0,this.currentPromise=null}summary(){return"{TODO: fill in upstream of zip summaries} -> Zip"}async nextState(e){await e;let t=0,n=0;const r=await XI(this.iterators,(function(e){return e instanceof nC?{value:e.next().then((e=>(t++,e.done&&n++,e.value))),recurse:!1}:{value:null,recurse:!0}}));if(t===n)return{value:null,done:!0};if(n>0)switch(this.mismatchMode){case gC.FAIL:throw new Error(`Zipped streams should have the same length. Mismatched at element ${this.count}.`);case gC.SHORTEST:return{value:null,done:!0};case gC.LONGEST:}return this.count++,{value:r,done:!1}}async next(){return this.currentPromise=this.nextState(this.currentPromise),this.currentPromise}}class bC extends nC{constructor(e,t){super(),this.upstream=e,this.bufferSize=t,this.buffer=new JI(t)}summary(){return`${this.upstream.summary()} -> Prefetch`}refill(){for(;!this.buffer.isFull();){const e=this.upstream.next();this.buffer.push(e)}}next(){return this.refill(),this.buffer.shift()}}class xC extends bC{constructor(e,t,n){super(e,t),this.upstream=e,this.windowSize=t,this.upstreamExhausted=!1,this.random=hh.alea(n||$s().toString()),this.lastRead=Promise.resolve({value:null,done:!1})}async next(){return this.lastRead=this.lastRead.then((()=>this.serialNext())),this.lastRead}randomInt(e){return Math.floor(this.random()*e)}chooseIndex(){return this.randomInt(this.buffer.length())}async serialNext(){for(this.upstreamExhausted||this.refill();!this.buffer.isEmpty();){const e=this.chooseIndex(),t=await this.buffer.shuffleExcise(e);if(!t.done)return this.refill(),t;this.upstreamExhausted=!0}return{value:null,done:!0}}}class wC{constructor(){this.size=null}batch(e,t=!0){const n=this;let r;return re(e>0,(()=>`batchSize needs to be positive, but it is\n      ${e}`)),r=this.size===1/0||null==this.size?this.size:t?Math.ceil(this.size/e):Math.floor(this.size/e),vC((async()=>(await n.iterator()).columnMajorBatch(e,t,IC)),r)}concatenate(e){const t=this;let n;return n=this.size===1/0||e.size===1/0?1/0:null!=this.size&&null!=e.size?this.size+e.size:null,vC((async()=>(await t.iterator()).concatenate(await e.iterator())),n)}filter(e){const t=this;let n;return n=this.size===1/0?1/0:null,vC((async()=>(await t.iterator()).filter((t=>Xo((()=>e(t)))))),n)}async forEachAsync(e){return(await this.iterator()).forEachAsync(e)}map(e){const t=this;return vC((async()=>(await t.iterator()).map((t=>Xo((()=>e(t)))))),this.size)}mapAsync(e){const t=this;return vC((async()=>(await t.iterator()).mapAsync(e)),this.size)}prefetch(e){if(null==e)throw new RangeError("`Dataset.prefetch()` requires bufferSize to be specified.");const t=this;return vC((async()=>(await t.iterator()).prefetch(e)),this.size)}repeat(e){const t=this;let n;return n=null!=this.size&&e>0?this.size*e:0===e?0:null!=this.size&&(void 0===e||e<0)?1/0:null,vC((async()=>{return n=tC((async()=>({value:await t.iterator(),done:!1}))).take(e),new mC(n,r);var n,r}),n)}skip(e){const t=this;let n;return n=null!=this.size&&e>=0&&this.size>=e?this.size-e:null!=this.size&&(this.size<e||void 0===e||e<0)?0:null,vC((async()=>(await t.iterator()).skip(e)),n)}shuffle(e,t,n=!0){if(null==e||e<0)throw null==this.size?new RangeError("`Dataset.shuffle()` requires bufferSize to be specified."):new RangeError(`\`Dataset.shuffle()\` requires bufferSize to be specified.  If your data fits in main memory (for regular JS objects), and/or GPU memory (for \`tf.Tensor\`s), consider setting bufferSize to the dataset size (${this.size} elements)`);const r=this,s=hh.alea(t||$s().toString());return vC((async()=>{let t=s.int32();return n&&(t+=s.int32()),(await r.iterator()).shuffle(e,t.toString())}),this.size)}take(e){const t=this;let n;return n=null!=this.size&&this.size>e?e:null!=this.size&&this.size<=e?this.size:null,vC((async()=>(await t.iterator()).take(e)),n)}async toArray(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArray()}async toArrayForTest(){if(this.size===1/0)throw new Error("Can not convert infinite data stream to array.");return(await this.iterator()).toArrayForTest()}}function vC(e,t=null){return new class extends wC{constructor(){super(...arguments),this.size=t}async iterator(){return e()}}}function kC(e){return vC((async()=>eC(e)),e.length)}function NC(e){if(!YI(e))throw new Error("The argument to zip() must be an object or array.");let t;if(Array.isArray(e))for(let n=0;n<e.length;n++)t=null==t?e[n].size:Math.min(t,e[n].size);else if(e instanceof Object)for(const n in e)t=null==t?e[n].size:Math.min(t,e[n].size);return vC((async()=>function(e,t=gC.FAIL){return new yC(e,t)}(await XI(e,(e=>{if(e instanceof wC)return{value:e.iterator(),recurse:!1};if(YI(e))return{value:null,recurse:!0};throw new Error("Leaves of the structure passed to zip() must be Datasets, not primitives.")})),gC.SHORTEST)),t)}function IC(e){if(null===e)return null;return null==(t=e[0])||null===(n=t)||"object"!=typeof n&&"function"!=typeof n||Array.isArray(t)||"object"==typeof t&&t instanceof qs||Ie(t)?{value:function(e){if(0===e.length)throw new Error("Can't make a batch of zero elements.");return e[0]instanceof qs?Kh(e):Ta(e)}(e),recurse:!1}:{value:null,recurse:!0};var t,n}wC.MAX_BUFFER_SIZE=1e4;class CC extends wC{constructor(e){super(),this.input=e}async iterator(){return(await this.input.iterator()).decodeUTF8().split("\n").map((e=>(e.endsWith("\r")&&(e=e.slice(0,-1)),e)))}}const DC='"',EC=Symbol("out"),SC=Symbol("field"),TC=Symbol("quote"),AC=Symbol("quoteafterquote"),$C=Symbol("quoteinquote");class FC extends wC{constructor(e,t){super(),this.input=e,this.hasHeader=!0,this.fullColumnNames=null,this.columnNamesValidated=!1,this.columnConfigs=null,this.configuredColumnsOnly=!1,this.delimiter=",",this.delimWhitespace=!1,this.base=new CC(e),t||(t={}),this.hasHeader=!1!==t.hasHeader,this.fullColumnNames=t.columnNames,this.columnConfigs=t.columnConfigs,this.configuredColumnsOnly=t.configuredColumnsOnly,t.delimWhitespace?(re(null==t.delimiter,(()=>"Delimiter should not be provided when delimWhitespace is true.")),this.delimWhitespace=!0,this.delimiter=" "):this.delimiter=t.delimiter?t.delimiter:","}async columnNames(){return this.columnNamesValidated||await this.setColumnNames(),this.configuredColumnsOnly?Object.keys(this.columnConfigs):this.fullColumnNames}async setColumnNames(){const e=await this.maybeReadHeaderLine();if(!this.fullColumnNames&&!e)throw new Error("Column names must be provided if there is no header line.");this.fullColumnNames&&e&&re(e.length===this.fullColumnNames.length,(()=>"The length of provided columnNames ("+this.fullColumnNames.length.toString()+") does not match the length of the header line read from file ("+e.length.toString()+").")),this.fullColumnNames||(this.fullColumnNames=e);const t=this.fullColumnNames.reduce(((e,t)=>(e[t]=e[t]+1||1,e)),{}),n=Object.keys(t).filter((e=>t[e]>1));if(re(0===n.length,(()=>"Duplicate column names found: "+n.toString())),this.columnConfigs)for(const e of Object.keys(this.columnConfigs))if(-1===this.fullColumnNames.indexOf(e))throw new Error('The key "'+e+'" provided in columnConfigs does not match any of the column names ('+this.fullColumnNames.toString()+").");this.columnNamesValidated=!0}async maybeReadHeaderLine(){if(this.hasHeader){const e=await this.base.iterator(),t=await e.next();if(t.done)throw new Error("No data was found for CSV parsing.");const n=t.value;return this.parseRow(n,!1)}return null}async iterator(){this.columnNamesValidated||await this.setColumnNames();let e=await this.base.iterator();return this.hasHeader&&(e=e.skip(1)),e.map((e=>this.makeDataElement(e)))}makeDataElement(e){const t=this.parseRow(e),n={},r={};for(let s=0;s<this.fullColumnNames.length;s++){const a=this.fullColumnNames[s],i=this.columnConfigs?this.columnConfigs[a]:null;if(!this.configuredColumnsOnly||i){const o=t[s];let u=null;if(""===o)if(i&&void 0!==i.default)u=i.default;else{if(i&&(i.required||i.isLabel))throw new Error(`Required column ${a} is empty in this line: ${e}`);u=void 0}else{const e=Number(o);if(isNaN(e))u=i&&"bool"===i.dtype?this.getBoolean(o):o;else if(i&&i.dtype)switch(i.dtype){case"float32":default:u=e;break;case"int32":u=Math.floor(e);break;case"bool":u=this.getBoolean(o)}else u=e}i&&i.isLabel?r[a]=u:n[a]=u}}return 0===Object.keys(r).length?n:{xs:n,ys:r}}getBoolean(e){return"1"===e||"true"===e.toLowerCase()?1:0}parseRow(e,t=!0){const n=[];let r=0;const s=e.length;let a=EC;for(let t=0;t<s;t++)switch(a){case EC:switch(e.charAt(t)){case DC:r=t+1,a=TC;break;case this.delimiter:if(r=t+1," "===this.delimiter&&this.delimWhitespace)break;n.push(""),a=EC;break;default:a=SC,r=t}break;case SC:e.charAt(t)===this.delimiter&&(n.push(e.substring(r,t)),a=EC,r=t+1);break;case TC:e.charAt(t)===DC&&(a=AC);break;case AC:switch(e.charAt(t)){case this.delimiter:n.push(e.substring(r,t-1)),a=EC,r=t+1;break;case DC:a=TC;break;default:a=$C}break;case $C:e.charAt(t)===DC&&(a=TC)}if(a===AC?n.push(e.substring(r,s-1)):n.push(e.substring(r)),t&&n.length!==this.fullColumnNames.length)throw new Error(`Invalid row in csv file. Should have ${this.fullColumnNames.length} elements in a row, but got ${n}`);return n}}class RC extends nC{constructor(e){super(),this.microphoneConfig=e,this.isClosed=!1,this.fftSize=e.fftSize||1024;const t=Math.log2(this.fftSize);if(this.fftSize<0||t<4||t>14||!Number.isInteger(t))throw new Error(`Invalid fftSize: it must be a power of 2 between 2 to 4 and 2 to 14, but got ${this.fftSize}`);if(this.numFrames=e.numFramesPerSpectrogram||43,this.sampleRateHz=e.sampleRateHz,this.columnTruncateLength=e.columnTruncateLength||this.fftSize,this.audioTrackConstraints=e.audioTrackConstraints,this.smoothingTimeConstant=e.smoothingTimeConstant||0,this.includeSpectrogram=!1!==e.includeSpectrogram,this.includeWaveform=!0===e.includeWaveform,!this.includeSpectrogram&&!this.includeWaveform)throw new Error("Both includeSpectrogram and includeWaveform are false. At least one type of data should be returned.")}summary(){return"microphone"}static async create(e={}){if(je().get("IS_NODE"))throw new Error("microphone API is only supported in browser environment.");const t=new RC(e);return await t.start(),t}async start(){try{this.stream=await navigator.mediaDevices.getUserMedia({audio:null==this.audioTrackConstraints||this.audioTrackConstraints,video:!1})}catch(e){throw new Error(`Error thrown while initializing video stream: ${e.message}`)}if(!this.stream)throw new Error("Could not obtain audio from microphone.");const e=window.AudioContext||window.webkitAudioContext;if(this.audioContext=new e,this.sampleRateHz){if(this.audioContext.sampleRate!==this.sampleRateHz)throw new Error(`Mismatch in sampling rate: Expected: ${this.sampleRateHz}; Actual: ${this.audioContext.sampleRate}`)}else this.sampleRateHz=this.audioContext.sampleRate;const t=this.audioContext.createMediaStreamSource(this.stream);this.analyser=this.audioContext.createAnalyser(),this.analyser.fftSize=2*this.fftSize,this.analyser.smoothingTimeConstant=this.smoothingTimeConstant,t.connect(this.analyser),this.freqData=new Float32Array(this.fftSize),this.timeData=new Float32Array(this.fftSize)}async next(){if(this.isClosed)return{value:null,done:!0};let e,t;const n=await this.getAudioData();if(this.includeSpectrogram){const t=this.flattenQueue(n.freqDataQueue);e=this.getTensorFromAudioDataArray(t,[this.numFrames,this.columnTruncateLength,1])}if(this.includeWaveform){const e=this.flattenQueue(n.timeDataQueue);t=this.getTensorFromAudioDataArray(e,[this.numFrames*this.fftSize,1])}return{value:{spectrogram:e,waveform:t},done:!1}}async capture(){return(await this.next()).value}async getAudioData(){const e=[],t=[];let n=0;return new Promise((r=>{const s=setInterval((()=>{this.includeSpectrogram&&(this.analyser.getFloatFrequencyData(this.freqData),this.freqData[0]===-1/0&&r({freqDataQueue:e,timeDataQueue:t}),e.push(this.freqData.slice(0,this.columnTruncateLength))),this.includeWaveform&&(this.analyser.getFloatTimeDomainData(this.timeData),t.push(this.timeData.slice())),++n===this.numFrames&&(clearInterval(s),r({freqDataQueue:e,timeDataQueue:t}))}),this.fftSize/this.sampleRateHz*1e3)}))}stop(){this.isClosed||(this.isClosed=!0,this.analyser.disconnect(),this.audioContext.close(),null!=this.stream&&this.stream.getTracks().length>0&&this.stream.getTracks()[0].stop())}toArray(){throw new Error("Can not convert infinite audio stream to array.")}getSampleRate(){return this.sampleRateHz}flattenQueue(e){const t=e[0].length,n=new Float32Array(e.length*t);return e.forEach(((e,r)=>n.set(e,r*t))),n}getTensorFromAudioDataArray(e,t){const n=new Float32Array(oe(t));return n.set(e,n.length-e.length),Ta(n,t)}}class _C extends nC{constructor(e,t){if(super(),this.webcamVideoElement=e,this.webcamConfig=t,this.isClosed=!0,this.resize=!1,this.needToResize())if(this.resize=!0,this.cropSize=[this.webcamConfig.resizeHeight,this.webcamConfig.resizeWidth],this.cropBoxInd=Jh([0],"int32"),this.webcamConfig.centerCrop){const e=1*this.webcamConfig.resizeWidth/this.webcamVideoElement.width,t=1*this.webcamConfig.resizeHeight/this.webcamVideoElement.height,n=(1-e)/2,r=(1-t)/2,s=n+e,a=t+r;this.cropBox=Qh([r,n,a,s],[1,4])}else this.cropBox=Qh([0,0,1,1],[1,4])}summary(){return"webcam"}static async create(e,t={}){if(je().get("IS_NODE"))throw new Error("tf.data.webcam is only supported in browser environment.");if(!e){if(e=document.createElement("video"),!t.resizeWidth||!t.resizeHeight)throw new Error("Please provide webcam video element, or resizeWidth and resizeHeight to create a hidden video element.");e.width=t.resizeWidth,e.height=t.resizeHeight}const n=new _C(e,t);return await n.start(),n}async start(){this.webcamConfig.facingMode&&re("user"===this.webcamConfig.facingMode||"environment"===this.webcamConfig.facingMode,(()=>`Invalid webcam facing mode: ${this.webcamConfig.facingMode}. Please provide 'user' or 'environment'`));try{this.stream=await navigator.mediaDevices.getUserMedia({video:{deviceId:this.webcamConfig.deviceId,facingMode:this.webcamConfig.facingMode?this.webcamConfig.facingMode:"user",width:this.webcamVideoElement.width,height:this.webcamVideoElement.height}})}catch(e){throw e.message=`Error thrown while initializing video stream: ${e.message}`,e}if(!this.stream)throw new Error("Could not obtain video from webcam.");try{this.webcamVideoElement.srcObject=this.stream}catch(e){console.log(e),this.webcamVideoElement.src=window.URL.createObjectURL(this.stream)}return this.webcamVideoElement.play(),this.isClosed=!1,new Promise((e=>{this.webcamVideoElement.onloadedmetadata=()=>{e()}}))}async next(){if(this.isClosed)return{value:null,done:!0};let e;try{e=ro(this.webcamVideoElement)}catch(e){throw new Error(`Error thrown converting video to pixels: ${JSON.stringify(e)}`)}if(!this.resize)return{value:e,done:!1};try{return{value:this.cropAndResizeFrame(e),done:!1}}catch(e){throw new Error(`Error thrown cropping the video: ${e.message}`)}finally{e.dispose()}}needToResize(){return!(!this.webcamConfig.resizeWidth||!this.webcamConfig.resizeHeight||this.webcamVideoElement.width===this.webcamConfig.resizeWidth&&this.webcamVideoElement.height===this.webcamConfig.resizeHeight)}cropAndResizeFrame(e){return Xo((()=>{const t=ec(Ci(e,"float32"),0);let n;n=Dd.cropAndResize(t,this.cropBox,this.cropBoxInd,this.cropSize,"bilinear");const r=n.shape;return ll(n,r.slice(1))}))}async capture(){return(await this.next()).value}stop(){this.stream.getTracks().forEach((e=>e.stop()));try{this.webcamVideoElement.srcObject=null}catch(e){console.log(e),this.webcamVideoElement.src=null}this.isClosed=!0}toArray(){throw new Error("Can not convert infinite video stream to array.")}}class MC{}class OC extends nC{split(e){return new BC(this,e)}}class BC extends OC{constructor(e,t){super(),this.upstream=e,this.impl=new zC(e,t)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class zC extends dC{constructor(e,t){super(),this.upstream=e,this.separator=t,this.carryover=""}summary(){return`${this.upstream.summary()} -> Split('${this.separator}')`}async pump(){const e=await this.upstream.next();if(e.done)return""!==this.carryover&&(this.outputQueue.push(this.carryover),this.carryover="",!0);const t=e.value.split(this.separator);t[0]=this.carryover+t[0];for(const e of t.slice(0,-1))this.outputQueue.push(e);return this.carryover=t[t.length-1],!0}}class LC extends nC{decodeUTF8(){return new PC(this)}}class PC extends OC{constructor(e){super(),this.upstream=e,this.impl=new UC(e)}summary(){return this.impl.summary()}async next(){return this.impl.next()}}class UC extends dC{constructor(e){if(super(),this.upstream=e,je().get("IS_BROWSER"))this.decoder=new TextDecoder("utf-8");else{const{StringDecoder:e}=n(589);this.decoder=new e("utf8")}}summary(){return`${this.upstream.summary()} -> Utf8`}async pump(){const e=await this.upstream.next();let t,n;return!e.done&&(t=e.value,n=je().get("IS_BROWSER")?this.decoder.decode(t,{stream:!0}):this.decoder.write(Buffer.from(t.buffer)),this.outputQueue.push(n),!0)}}class WC extends LC{constructor(e,t={}){super(),this.file=e,this.options=t,re(e instanceof Uint8Array||!!je().get("IS_BROWSER")&&(e instanceof File||e instanceof Blob),(()=>"FileChunkIterator only supports File, Blob and Uint8Array right now.")),this.offset=t.offset||0,this.chunkSize=t.chunkSize||1048576}summary(){return`FileChunks ${this.file}`}async next(){if(this.offset>=(this.file instanceof Uint8Array?this.file.byteLength:this.file.size))return{value:null,done:!0};const e=new Promise(((e,t)=>{const n=this.offset+this.chunkSize;if(this.file instanceof Uint8Array)e(new Uint8Array(this.file.slice(this.offset,n)));else{const r=new FileReader;r.onload=n=>{let s=r.result;if(s instanceof ArrayBuffer&&(s=new Uint8Array(s)),!(s instanceof Uint8Array))return t(new TypeError("FileReader returned unknown type."));e(s)},r.onabort=e=>t(new Error("Aborted")),r.onerror=e=>t(new Error(e.type));const s=this.file.slice(this.offset,n);r.readAsArrayBuffer(s)}this.offset=n}));return{value:await e,done:!1}}}function VC(e){return"string"==typeof e&&"file://"===e.substr(0,7)}class GC extends MC{constructor(e,t={}){super(),this.input=e,this.options=t}async iterator(){if(VC(this.input)&&je().get("IS_NODE")){const e=n(993);this.input=e.readFileSync(this.input.substr(7))}return new WC(this.input,this.options)}}class jC extends MC{constructor(e,t={}){super(),this.url=e,this.fileOptions=t}async iterator(){return VC(this.url)?new GC(this.url,this.fileOptions).iterator():async function(e,t={},n){let r,s;var a;"string"==typeof e?r=e:(r=e.url,s={method:(a=e).method,headers:a.headers,body:a.body,mode:a.mode,credentials:a.credentials,cache:a.cache,redirect:a.redirect,referrer:a.referrer,integrity:a.integrity});const i=await(n||Fs)(r,s);if(i.ok){const e=new Uint8Array(await i.arrayBuffer());return new WC(e,t)}throw new Error(i.statusText)}(this.url,this.fileOptions)}}function HC(e,t={}){return new FC(new jC(e),t)}function qC(e){const t=tC(e);return vC((async()=>t))}function KC(e){return vC((async()=>{const t=await e();return tC((()=>t.next()))}))}async function XC(e,t){return _C.create(e,t)}async function YC(e){return RC.create(e)}const ZC="3.13.0";function JC(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the CPU backend.`))}))}const QC=lp;class eD extends q{constructor(){super(),this.blockSize=48,this.firstUse=!0,this.data=new H(this,Ho())}nextDataId(){return eD.nextDataId++}write(e,t,n){this.firstUse&&(this.firstUse=!1,je().get("IS_NODE")&&ns("\n============================\nHi there 👋. Looks like you are running TensorFlow.js in Node.js. To speed things up dramatically, install our node backend, which binds to TensorFlow C++, by running npm i @tensorflow/tfjs-node, or npm i @tensorflow/tfjs-node-gpu if you have CUDA. Then call require('@tensorflow/tfjs-node'); (-gpu suffix for CUDA) at the start of your program. Visit https://github.com/tensorflow/tfjs-node for more details.\n============================"));const r={id:this.nextDataId()};return this.data.set(r,{values:e,dtype:n,refCount:1}),r}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ee(n[0])){const s=n.map((e=>Rs(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return{dataId:r,shape:e,dtype:t}}refCount(e){return this.data.has(e)?this.data.get(e).refCount:0}incRef(e){this.data.get(e).refCount++}decRef(e){this.data.has(e)&&this.data.get(e).refCount--}move(e,t,n,r,s){this.data.set(e,{values:t,dtype:r,refCount:s})}numDataIds(){return this.data.numDataIds()}async read(e){return this.readSync(e)}readSync(e){const{dtype:t,complexTensorInfos:n}=this.data.get(e);return"complex64"===t?Jd(this.readSync(n.real.dataId),this.readSync(n.imag.dataId)):this.data.get(e).values}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>_s(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ii(e.shape,e.dtype,n)}makeOutput(e,t,n){const r=this.write(e,t,n);return Ho().makeTensorFromDataId(r,t,n,this)}disposeData(e,t=!1){if(this.data.has(e)){if(this.data.get(e).refCount--,!t&&this.data.get(e).refCount>0)return!1;const{complexTensorInfos:n}=this.data.get(e);null!=n&&(this.disposeData(n.real.dataId,!0),this.disposeData(n.imag.dataId,!0)),this.data.delete(e)}return!0}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}async time(e){const t=$s();return e(),{kernelMs:$s()-t}}memory(){return{unreliable:!0,reasons:["The reported memory is an upper bound. Due to automatic garbage collection, the true allocated memory may be less."]}}where(e){JC([e],"where");const t=this.readSync(e.dataId);return QC(e.shape,t)}dispose(){}floatPrecision(){return 32}epsilon(){return super.epsilon()}}function tD(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(JC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=oe(i.shape),c=n||i.dtype,h=we(c,l);for(let e=0;e<l;++e)h[e]=t(u[e],s);return o.makeTensorInfo(i.shape,c,h)}}function nD(e,t,n){return({inputs:r,attrs:s,backend:a})=>{const{x:i}=r;if(JC(i,e),"string"===i.dtype||"string"===n)throw new Error("unaryKernelFunc does not support string input/output");const o=a,u=o.data.get(i.dataId).values,l=n||i.dtype,c=t(u,l,s);return o.makeTensorInfo(i.shape,l,c)}}eD.nextDataId=0,au("cpu",(()=>new eD),1);const rD=tD(Ht,(e=>e>=0?e:Math.exp(e)-1)),sD={kernelName:Ht,backendName:"cpu",kernelFunc:rD};function aD(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const iD={kernelName:cn,backendName:"cpu",kernelFunc:aD};function oD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r;JC([s],"leakyRelu");const i=oe(s.shape),o=n.data.get(s.dataId).values,u=xe("float32",i);for(let e=0;e<o.length;e++)u[e]=o[e]<0?a*o[e]:o[e];return n.makeTensorInfo(s.shape,"float32",u)}const uD={kernelName:gn,backendName:"cpu",kernelFunc:oD};function lD(e){return(t,n,r,s,a)=>{const i=Zi(t,n),o=i.length,u=Re(i),l=xe(a,oe(i)),c=t.length,h=n.length,p=Re(t),d=Re(n),f=Xi(t,i),m=Xi(n,i);if(f.length+m.length===0)for(let t=0;t<l.length;++t)l[t]=e(r[t%r.length],s[t%s.length]);else for(let t=0;t<l.length;++t){const n=Ue(t,o,u),a=n.slice(-c);f.forEach((e=>a[e]=0));const i=Pe(a,c,p),g=n.slice(-h);m.forEach((e=>g[e]=0));const y=Pe(g,h,d);l[t]=e(r[i],s[y])}return[l,i]}}const cD=lD(((e,t)=>e<0?t*e:e));function hD(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t;JC([r,s],"prelu");const a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,[o,u]=cD(r.shape,s.shape,a,i,"float32");return n.makeTensorInfo(u,"float32",o)}const pD={kernelName:Qn,backendName:"cpu",kernelFunc:hD},dD=tD(sr,(e=>Math.max(0,e))),fD={kernelName:sr,backendName:"cpu",kernelFunc:dD},mD=tD(cr,(e=>Math.min(Math.max(0,e),6))),gD={kernelName:cr,backendName:"cpu",kernelFunc:mD};function yD(e){return(t,n,r)=>{const s=xe(n,t.length);for(let n=0;n<t.length;++n)s[n]=e(t[n],r);return s}}const bD=yD((e=>1/(1+Math.exp(-e)))),xD=tD(vr,(e=>1/(1+Math.exp(-e)))),wD={kernelName:vr,backendName:"cpu",kernelFunc:xD};function vD(e,t,n,r,s){if("linear"===n)return aD({inputs:{x:t},backend:e});if("relu"===n)return dD({inputs:{x:t},backend:e});if("elu"===n)return rD({inputs:{x:t},backend:e});if("relu6"===n)return mD({inputs:{x:t},backend:e});if("prelu"===n)return hD({inputs:{x:t,alpha:r},backend:e});if("leakyrelu"===n)return oD({inputs:{x:t},backend:e,attrs:{alpha:s}});if("sigmoid"===n)return xD({inputs:{x:t},backend:e});throw new Error(`Activation ${n} has not been implemented for the CPU backend.`)}function kD(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=n.makeTensorInfo(r.shape,"complex64");return n.data.get(o.dataId).complexTensorInfos={real:n.makeTensorInfo(r.shape,"float32",a),imag:n.makeTensorInfo(s.shape,"float32",i)},o}const ND={kernelName:kt,backendName:"cpu",kernelFunc:kD};function ID(e,t,n="float32"){if("complex64"===n)return kD({inputs:{real:ID(e,t,"float32"),imag:ID(e,t,"float32")},backend:e});const r=Be(oe(t),n);return e.makeTensorInfo(t,n,r)}function CD(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.real,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const DD={kernelName:nr,backendName:"cpu",kernelFunc:CD};function ED(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dtype:a}=r;if("complex64"===a){if("complex64"===s.dtype)return aD({inputs:{x:s},backend:n});const e=ID(n,s.shape,s.dtype),t=ED({inputs:{x:s},backend:n,attrs:{dtype:"float32"}}),r=kD({inputs:{real:t,imag:e},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),r}if("complex64"===s.dtype){const e=CD({inputs:{input:s},backend:n}),t=ED({inputs:{x:e},backend:n,attrs:{dtype:a}});return n.disposeIntermediateTensorInfo(e),t}if(!Ne(s.dtype,a)){const e=aD({inputs:{x:s},backend:n});return{dataId:e.dataId,shape:e.shape,dtype:a}}if("int32"===a){const e=n.data.get(s.dataId).values,t=Int32Array.from(e);return n.makeTensorInfo(s.shape,"int32",t)}if("bool"===a){const e=n.data.get(s.dataId).values,t=As([0],s.dtype),[r,a]=lD(((e,t)=>e!==t?1:0))(s.shape,[],e,t,"bool");return n.makeTensorInfo(a,"bool",r)}throw new Error(`Error in Cast: failed to cast ${s.dtype} to ${a}`)}const SD={kernelName:xt,backendName:"cpu",kernelFunc:ED};function TD(e,t,n,r){return null==n?({inputs:n,backend:s})=>{const{a,b:i}=n,o=s;JC([a,i],e);const u=o.data.get(a.dataId).values,l=o.data.get(i.dataId).values,c="string"===a.dtype?$f(u):u,h="string"===a.dtype?$f(l):l,p=r||a.dtype,[d,f]=t(a.shape,i.shape,c,h,p);return o.makeTensorInfo(f,p,d)}:({inputs:e,backend:s})=>{const{a,b:i}=e,o=s;if("complex64"===a.dtype||"complex64"===i.dtype){const e=ED({inputs:{x:a},backend:o,attrs:{dtype:"complex64"}}),t=o.data.get(e.dataId),r=t.complexTensorInfos.real,s=t.complexTensorInfos.imag,u=o.data.get(r.dataId).values,l=o.data.get(s.dataId).values,c=ED({inputs:{x:i},backend:o,attrs:{dtype:"complex64"}}),h=o.data.get(c.dataId),p=h.complexTensorInfos.real,d=h.complexTensorInfos.imag,f=o.data.get(p.dataId).values,m=o.data.get(d.dataId).values,[g,y,b]=n(a.shape,i.shape,u,l,f,m),x=o.makeTensorInfo(b,"float32",g),w=o.makeTensorInfo(b,"float32",y),v=kD({inputs:{real:x,imag:w},backend:o});return o.disposeIntermediateTensorInfo(e),o.disposeIntermediateTensorInfo(c),o.disposeIntermediateTensorInfo(x),o.disposeIntermediateTensorInfo(w),v}{const e=o.data.get(a.dataId).values,n=o.data.get(i.dataId).values,s=r||a.dtype,[u,l]=t(a.shape,i.shape,e,n,s);return o.makeTensorInfo(l,s,u)}}}function AD(e){return(t,n,r,s,a,i)=>{const o=Zi(t,n),u=oe(o),l=o.length,c=Re(o),h=xe("float32",u),p=xe("float32",u),d=Xi(t,o),f=Xi(n,o),m=Jd(r,s),g=Jd(a,i),y=t.length,b=Re(t),x=n.length,w=Re(n);if(d.length+f.length===0)for(let t=0;t<h.length;t++){const n=t%m.length,r=t%g.length,s=e(m[2*n],m[2*n+1],g[2*r],g[2*r+1]);h[t]=s.real,p[t]=s.imag}else for(let t=0;t<h.length;t++){const n=Ue(t,l,c),r=n.slice(-y);d.forEach((e=>r[e]=0));const s=Pe(r,y,b),a=n.slice(-x);f.forEach((e=>a[e]=0));const i=Pe(a,x,w),o=e(m[2*s],m[2*s+1],g[2*i],g[2*i+1]);h[t]=o.real,p[t]=o.imag}return[h,p,o]}}const $D=lD(((e,t)=>e+t)),FD=AD(((e,t,n,r)=>({real:e+n,imag:t+r}))),RD=TD(Qe,$D,FD),_D={kernelName:Qe,backendName:"cpu",kernelFunc:RD};function MD(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=oe(s.shape),o=ge(a,i),u=oe(o);re(i===u,(()=>`The new shape (${o}) has ${u} elements and the old shape (${s.shape}) has ${i} elements. The new shape and old shape must have the same number of elements.`)),n.incRef(s.dataId);const l=n.data.get(s.dataId);if(null!=l.complexTensorInfos){const e=l.complexTensorInfos.real,t=l.complexTensorInfos.imag;e.shape=o,t.shape=o}return{dataId:s.dataId,shape:o,dtype:s.dtype}}const OD={kernelName:ar,backendName:"cpu",kernelFunc:MD};function BD(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;JC([s,a],"matMul");const u=s.shape.length,l=a.shape.length,c=i?s.shape[u-2]:s.shape[u-1],h=o?a.shape[l-1]:a.shape[l-2],p=i?s.shape[u-1]:s.shape[u-2],d=o?a.shape[l-2]:a.shape[l-1],f=s.shape.slice(0,-2),m=a.shape.slice(0,-2),g=oe(f),y=oe(m),b=Zi(s.shape.slice(0,-2),a.shape.slice(0,-2)).concat([p,d]);re(c===h,(()=>`Error in matMul: inner shapes (${c}) and (${h}) of Tensors with shapes ${s.shape} and ${a.shape} and transposeA=${i} and transposeB=${o} must match.`));const x=o?[y,d,h]:[y,h,d],w=MD({inputs:{x:s},backend:n,attrs:{shape:i?[g,c,p]:[g,p,c]}}),v=MD({inputs:{x:a},backend:n,attrs:{shape:x}}),k=i?w.shape[1]:w.shape[2],N=i?w.shape[2]:w.shape[1],I=o?v.shape[1]:v.shape[2],C=Math.max(g,y),D=n.data.get(w.dataId).values,E=n.data.get(v.dataId).values,S=Re(w.shape),T=Re(v.shape),[A,$,F]=i?[S[0],1,S[1]]:[S[0],S[1],1],[R,_,M]=o?[1,T[1],T[0]]:[T[1],1,T[0]],O=N*I,B=Ii([C,N,I],w.dtype),z=B.values,L=n.blockSize;for(let e=0;e<C;e++)for(let t=0;t<N;t+=L)for(let n=0;n<I;n+=L)for(let r=0;r<k;r+=L){const s=Math.min(t+L,N),a=Math.min(n+L,I),i=Math.min(r+L,k);for(let o=t;o<s;o++)for(let t=n;t<a;t++){let n=0;for(let s=r;s<i;s++){const r=Math.min(e,g-1)*A,a=Math.min(e,y-1)*M;n+=D[r+o*$+s*F]*E[s*R+t*_+a]}z[e*O+(o*I+t)]+=n}}return n.disposeIntermediateTensorInfo(w),n.disposeIntermediateTensorInfo(v),n.makeTensorInfo(b,B.dtype,B.values)}const zD={kernelName:ft,backendName:"cpu",kernelFunc:BD},LD={kernelName:Qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;let p,d,f;const m=[];p=BD({inputs:{a:s,b:a},attrs:{transposeA:u,transposeB:l},backend:n}),i&&(d=RD({inputs:{a:p,b:i},backend:n}),m.push(p),p=d),c&&(f=vD(n,p,c,o,h),m.push(p),p=f);for(const e of m)n.disposeIntermediateTensorInfo(e);return p}};function PD(e){const t=new Float32Array(e.length);for(let n=0;n<e.length;++n)t[n]=Math.abs(e[n]);return t}const UD={kernelName:Ye,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend;JC(t,"abs");let r=new Float32Array(oe(t.shape));return r=PD(n.data.get(t.dataId).values),n.makeOutput(r,t.shape,t.dtype)}},WD=tD(Ze,(e=>Math.acos(e))),VD={kernelName:Ze,backendName:"cpu",kernelFunc:WD},GD=tD(Je,(e=>Math.acosh(e))),jD={kernelName:Je,backendName:"cpu",kernelFunc:GD},HD={kernelName:et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,r=t;JC(t,"addN");const s=r.map((e=>n.data.get(e.dataId).values)),a=Ii(r[0].shape,r[0].dtype),i=a.values;for(let e=0;e<r.length;e++){const t=s[e];for(let e=0;e<i.length;e++)i[e]+=t[e]}return n.makeTensorInfo(a.shape,a.dtype,a.values)}};function qD(e,t,n,r,s){const a=t.length,i=oe(t),o=Re(t),u=Re(s),l=xe(n,oe(s));for(let t=0;t<i;++t){const n=Ue(t,a,o),s=new Array(n.length);for(let e=0;e<s.length;e++)s[e]=n[r[e]];l[Pe(s,a,u)]=e[t]}return l}function KD(e){const{inputs:t,attrs:n,backend:r}=e,{x:s}=t,{perm:a}=n;JC(s,"transpose");const i=s.shape.length,o=new Array(i);for(let e=0;e<o.length;e++)o[e]=s.shape[a[e]];const u=qD(r.data.get(s.dataId).values,s.shape,s.dtype,a,o);return{dataId:r.write(u,o,s.dtype),shape:o,dtype:s.dtype}}const XD={kernelName:jr,backendName:"cpu",kernelFunc:KD},YD={kernelName:tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;JC(s,"all");const o=ye(a,s.shape);let u=o;const l=Ac(u,s.shape.length);let c=s;null!=l&&(c=KD({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Fc(u.length,s.shape.length)),Tc("all",u,c.shape.length);const[h,p]=Ec(c.shape,u),d=oe(p),f=Be(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n&&r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=MD({inputs:{x:g},backend:n,attrs:{shape:Sc(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},ZD={kernelName:nt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;JC(s,"any");const o=ye(a,s.shape);let u=o;const l=Ac(u,s.shape.length);let c=s;null!=l&&(c=KD({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Fc(u.length,s.shape.length)),Tc("any",u,c.shape.length);const[h,p]=Ec(c.shape,u),d=oe(p),f=Be(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];n=n||r}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=MD({inputs:{x:g},backend:n,attrs:{shape:Sc(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},JD={kernelName:rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;JC(s,"argMax");let i=ye(a,s.shape);const o=Ac(i,s.shape.length);let u=s;const l=[];null!=o&&(u=KD({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Fc(i.length,u.shape.length)),i=[i[0]],Tc("argMax",i,u.shape.length);const[c,h]=Ec(u.shape,i),p=Be(oe(c),"int32"),d=oe(h),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s>n&&(n=s,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},QD={kernelName:st,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;JC(s,"argMin");let i=ye(a,s.shape);const o=Ac(i,s.shape.length);let u=s;const l=[];null!=o&&(u=KD({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Fc(i.length,u.shape.length)),i=[i[0]],Tc("argMin",i,u.shape.length);const[c,h]=Ec(u.shape,i),p=Be(oe(c),"int32"),d=oe(h),f=n.data.get(u.dataId).values;for(let e=0;e<p.length;++e){const t=e*d;let n=f[t],r=0;for(let e=0;e<d;++e){const s=f[t+e];s<n&&(n=s,r=e)}p[e]=r}return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(c,"int32",p)}},eE=tD(at,(e=>Math.asin(e))),tE={kernelName:at,backendName:"cpu",kernelFunc:eE},nE=tD(it,(e=>Math.asinh(e))),rE={kernelName:it,backendName:"cpu",kernelFunc:nE},sE=tD(ot,(e=>Math.atan(e))),aE={kernelName:ot,backendName:"cpu",kernelFunc:sE},iE=lD(((e,t)=>Math.atan2(e,t))),oE=TD(lt,iE),uE={kernelName:lt,backendName:"cpu",kernelFunc:oE},lE=tD(ut,(e=>Math.atanh(e))),cE={kernelName:ut,backendName:"cpu",kernelFunc:lE};function hE(e,t,n,r,s,a){const i=s.strideHeight,o=s.strideWidth,u=s.dilationHeight,l=s.dilationWidth,c=s.effectiveFilterHeight,h=s.effectiveFilterWidth,p=s.padInfo.top,d=s.padInfo.left,f="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,m=Ii(s.outShape,n),g=m.values,y=s.outShape[1]*s.outShape[2]*s.outShape[3],b=s.outShape[2]*s.outShape[3],x=s.outShape[3];for(let t=0;t<s.batchSize;++t){const n=t*y,m=t*r[0];for(let t=0;t<s.inChannels;++t)for(let y=0;y<s.outHeight;++y){const w=y*i-p,v=Math.max(0,w),k=Math.min(s.inHeight,c+w),N=n+y*b;for(let n=0;n<s.outWidth;++n){const i=n*o-d,c=Math.max(0,i),p=Math.min(s.inWidth,h+i);let y=f,b=0,w=0;for(let n=v;n<k;n+=u){const s=m+n*r[1];for(let n=c;n<p;n+=l){const i=e[s+n*r[2]+t];"max"===a&&i>y?y=i:"avg"===a&&(b+=i,w++)}if(isNaN(y))break}g[N+n*x+t]="avg"===a?b/w:y}}}return m}function pE(e,t,n,r,s=!1,a=!1){const i=Ii(r.outShape,"int32"),o=r.strideHeight,u=r.strideWidth,l=r.dilationHeight,c=r.dilationWidth,h=r.effectiveFilterHeight,p=r.effectiveFilterWidth,d=r.padInfo.top,f=r.padInfo.left,m=Ii(t,n,e);for(let e=0;e<r.batchSize;++e)for(let t=0;t<r.inChannels;++t)for(let n=0;n<r.outHeight;++n){const g=n*o-d;let y=g;for(;y<0;)y+=l;const b=Math.min(r.inHeight,h+g);for(let o=0;o<r.outWidth;++o){const h=o*u-f;let d=h;for(;d<0;)d+=c;const x=Math.min(r.inWidth,p+h);let w=Number.NEGATIVE_INFINITY,v=-1;for(let n=y;n<b;n+=l){const i=n-g;for(let o=d;o<x;o+=c){const u=o-h,l=m.get(e,n,o,t);l>w&&(w=l,v=s?a?((e*r.inHeight+n)*r.inWidth+o)*r.inChannels+t:(n*r.inWidth+o)*r.inChannels+t:i*p+u)}}i.set(v,e,n,o,t)}}return i}function dE(e,t,n,r,s,a){const i=s.strideDepth,o=s.strideHeight,u=s.strideWidth,l=s.dilationDepth,c=s.dilationHeight,h=s.dilationWidth,p=s.effectiveFilterDepth,d=s.effectiveFilterHeight,f=s.effectiveFilterWidth,m=s.padInfo.front,g=s.padInfo.top,y=s.padInfo.left,b="max"===a?Number.NEGATIVE_INFINITY:Number.POSITIVE_INFINITY,x=Ii(s.outShape,n),w=x.values,v=s.outShape[1]*s.outShape[2]*s.outShape[3]*s.outShape[4],k=s.outShape[2]*s.outShape[3]*s.outShape[4],N=s.outShape[3]*s.outShape[4],I=s.outShape[4];for(let t=0;t<s.batchSize;++t){const n=t*v,x=t*r[0];for(let t=0;t<s.inChannels;++t)for(let v=0;v<s.outDepth;++v){const C=v*i-m;let D=C;for(;D<0;)D+=l;const E=Math.min(s.inDepth,p+C),S=n+v*k;for(let n=0;n<s.outHeight;++n){const i=n*o-g;let p=i;for(;p<0;)p+=c;const m=Math.min(s.inHeight,d+i),v=S+n*N;for(let n=0;n<s.outWidth;++n){const i=n*u-y;let o=i;for(;o<0;)o+=h;const d=Math.min(s.inWidth,f+i),g=v+n*I;let k=b,N=0,C=0;for(let n=D;n<E;n+=l){const s=x+n*r[1];for(let n=p;n<m;n+=c){const i=s+n*r[2];for(let n=o;n<d;n+=h){const s=e[i+n*r[3]+t];if("max"===a&&s>k?k=s:"avg"===a&&(N+=s,C++),isNaN(k))break}if(isNaN(k))break}if(isNaN(k))break}w[g+t]="avg"===a?N/C:k}}}}return x}const fE={kernelName:ct,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;JC(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;re(il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Yu(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))c=aD({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Re(s.shape),r=hE(e,s.shape,s.dtype,t,l,"avg");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},mE={kernelName:pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;JC(s,"avgPool3d");const c=Zu(s.shape,a,i,1,o,u,l),h=dE(n.data.get(s.dataId).values,s.shape,s.dtype,Re(s.shape),c,"avg");return n.makeTensorInfo(h.shape,"float32",h.values)}},gE={kernelName:dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;JC([s,a],"avgPool3DGrad");const c=Zu(a.shape,i,o,1,u,l),h=c.strideDepth,p=c.strideHeight,d=c.strideWidth,f=c.filterDepth,m=c.filterHeight,g=c.filterWidth,y=c.dilationDepth,b=c.dilationHeight,x=c.dilationWidth,w=c.effectiveFilterDepth,v=c.effectiveFilterHeight,k=c.effectiveFilterWidth,N=w-1-c.padInfo.front,I=k-1-c.padInfo.left,C=v-1-c.padInfo.top,D=Ii(a.shape,"float32"),E=1/(f*m*g),S=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-N,i=r-C,o=s-I;let u=0;for(let n=0;n<w;n+=y){const r=(a+n)/h;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let n=0;n<v;n+=b){const s=(i+n)/p;if(!(s<0||s>=c.outHeight||Math.floor(s)!==s))for(let n=0;n<k;n+=x){const a=(o+n)/d;a<0||a>=c.outWidth||Math.floor(a)!==a||(u+=S.get(e,r,s,a,t))}}}D.set(u*E,e,n,r,s,t)}return n.makeTensorInfo(D.shape,D.dtype,D.values)}},yE={kernelName:ht,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;JC([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Yu(i.shape,o,u,1,l),h=c.strideHeight,p=c.strideWidth,d=c.filterHeight,f=c.filterWidth,m=c.dilationHeight,g=c.dilationWidth,y=c.effectiveFilterHeight,b=c.effectiveFilterWidth,x=b-1-c.padInfo.left,w=y-1-c.padInfo.top,v=Ii(i.shape,"float32"),k=1/(d*f),N=n.data.get(s.dataId).values,I=Ii(s.shape,"float32",N);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inHeight;++n)for(let r=0;r<c.inWidth;++r){const s=n-w,a=r-x;let i=0;for(let n=0;n<y;n+=m){const r=(s+n)/h;if(!(r<0||r>=c.outHeight||Math.floor(r)!==r))for(let n=0;n<b;n+=g){const s=(a+n)/p;s<0||s>=c.outWidth||Math.floor(s)!==s||(i+=I.get(e,r,s,t))}}v.set(i*k,e,n,r,t)}return n.makeTensorInfo(v.shape,v.dtype,v.values)}},bE={kernelName:sn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,scale:a,offset:i,mean:o,variance:u}=t;re(o.shape.length===u.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==i||o.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==a||o.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks.")),JC([s,o,u,a,i],"batchNorm");let{varianceEpsilon:l}=r;null==l&&(l=.001);const c=n.data.get(s.dataId).values,h=n.data.get(o.dataId).values,p=n.data.get(u.dataId).values,d=a?n.data.get(a.dataId).values:new Float32Array([1]),f=i?n.data.get(i.dataId).values:new Float32Array([0]),m=new Float32Array(c.length),g=f.length,y=d.length,b=p.length,x=h.length;let w=0,v=0,k=0,N=0;for(let e=0;e<c.length;++e)m[e]=f[w++]+(c[e]-h[v++])*d[k++]/Math.sqrt(p[N++]+l),w>=g&&(w=0),v>=x&&(v=0),k>=y&&(k=0),N>=b&&(N=0);return n.makeTensorInfo(s.shape,s.dtype,m)}};function xE(e,t,n,r,s){const a=vo(r,t,n),i=oe(n),o=Re(r);if(a){const n=ko(t,o);return"string"===s?e.slice(n,n+i):e.subarray(n,n+i)}const u=Ii(r,s,"string"===s?$f(e):e),l=Ii(n,s);for(let e=0;e<l.size;++e){const n=l.indexToLoc(e),r=n.map(((e,n)=>e+t[n]));l.set(u.get(...r),...n)}return"string"===s?Ff(l.values):l.values}function wE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r;JC(s,"slice");const[o,u]=No(s,a,i);uo(s,o,u);const l=xE(n.data.get(s.dataId).values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,l)}const vE={kernelName:yr,backendName:"cpu",kernelFunc:wE},kE={kernelName:mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;JC([s],"batchToSpaceND");const o=a.reduce(((e,t)=>e*t)),u=Ld(s.shape,a,o),l=Pd(u.length,a.length),c=Ud(s.shape,a,o),h=Wd(i,a.length),p=Vd(c,i,a.length),d=MD({inputs:{x:s},backend:n,attrs:{shape:u}}),f=KD({inputs:{x:d},backend:n,attrs:{perm:l}}),m=MD({inputs:{x:f},backend:n,attrs:{shape:c}}),g=wE({inputs:{x:m},backend:n,attrs:{begin:h,size:p}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}};function NE(e,t,n,r,s){const a=oe(r),i=Be(s,n);for(let n=0;n<e.length;n++){const r=e[n];if(r<0)throw new Error("Input x must be non-negative!");r>=s||(i[r]+=a>0?t[n]:1)}return i}function IE(e,t,n,r=!1){const s=e.shape[0],a=e.shape[1],i=Ii([s,n],t.dtype);for(let o=0;o<s;o++)for(let s=0;s<a;s++){const a=e.get(o,s);if(a<0)throw new Error("Input x must be non-negative!");a>=n||(r?i.set(1,o,a):t.size>0?i.set(i.get(o,a)+t.get(o,s),o,a):i.set(i.get(o,a)+1,o,a))}return i}const CE={kernelName:gt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=NE(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,o)}},DE={kernelName:bt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.data.get(r.dataId).values,i=n.data.get(s.dataId).values,o=Zi(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},EE=yD((e=>Math.ceil(e))),SE=nD(wt,EE),TE={kernelName:wt,backendName:"cpu",kernelFunc:SE},AE=tD(vt,((e,t)=>{const n=t;return e>n.clipValueMax?n.clipValueMax:e<n.clipValueMin?n.clipValueMin:e})),$E={kernelName:vt,backendName:"cpu",kernelFunc:AE},FE={kernelName:Nt,backendName:"cpu",kernelFunc:e=>{const{x:t}=e.inputs,n=e.backend,r=new Float32Array(oe(t.shape)),s=n.data.get(t.dataId),a=s.complexTensorInfos.real,i=s.complexTensorInfos.imag,o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values;for(let e=0;e<o.length;e++){const t=o[e],n=u[e];r[e]=Math.hypot(t,n)}return n.makeOutput(r,t.shape,"float32")}};function RE(e,t,n,r){const s=we(n,oe(t));if(r&&"string"!==n){let t=0;e.forEach((e=>{const n=oe(e.shape);s.set(e.vals,t),t+=n}))}else{let r=0;e.forEach((e=>{const a="string"===n?$f(e.vals):e.vals;let i=0;for(let n=0;n<e.shape[0];++n){const o=n*t[1]+r;for(let t=0;t<e.shape[1];++t)s[o+t]=a[i++]}r+=e.shape[1]}))}return s}function _E(e){const{inputs:t,backend:n}=e,{input:r}=t,s=n.data.get(r.dataId).complexTensorInfos.imag,a=n.data.get(s.dataId).values;return n.makeTensorInfo(s.shape,s.dtype,a)}const ME={kernelName:pn,backendName:"cpu",kernelFunc:_E};function OE(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ye(s,t[0].shape)[0];let i=Md(t.map((e=>e.shape)),a);if(0===oe(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oe(e.shape)>0));if(1===o.length)return aD({inputs:{x:o[0]},backend:n});if(_d(o.map((e=>e.shape)),a),"complex64"===o[0].dtype){const e=o.map((e=>CD({inputs:{input:e},backend:n}))),t=o.map((e=>_E({inputs:{input:e},backend:n}))),r=OE({inputs:e,backend:n,attrs:{axis:a}}),s=OE({inputs:t,backend:n,attrs:{axis:a}}),i=kD({inputs:{real:r,imag:s},backend:n});return e.forEach((e=>n.disposeIntermediateTensorInfo(e))),t.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),i}const u=o.map((e=>{const t=oe(e.shape.slice(a));return MD({inputs:{x:e},backend:n,attrs:{shape:[-1,t]}})})),l=u.map((e=>({vals:n.data.get(e.dataId).values,shape:e.shape})));i=Md(u.map((e=>e.shape)),1);const c=1===u[0].shape[0],h=RE(l,i,t[0].dtype,c),p=Md(o.map((e=>e.shape)),a),d=n.makeTensorInfo(p,t[0].dtype,h);return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}const BE={kernelName:It,backendName:"cpu",kernelFunc:OE};function zE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r;JC([s,a],"conv2d");const h=ol(u),p=Ju(s.shape,a.shape,i,l,o,c,!1,h),d=p.filterHeight,f=p.filterWidth,m=p.dilationHeight,g=p.dilationWidth,y=p.padInfo.left,b=p.padInfo.top,x="channelsLast"===p.dataFormat,w=new Vs(p.outShape,s.dtype),v=Re(s.shape),k=Re(a.shape),N=v[0],I=x?v[1]:v[2],C=x?v[2]:1,D=x?1:v[1],E=w.strides[0],S=x?w.strides[1]:w.strides[2],T=x?w.strides[2]:1,A=x?1:w.strides[1],$=n.data.get(s.dataId).values,F=n.data.get(a.dataId).values,R=w.values;for(let e=0;e<p.batchSize;++e){const t=e*N,n=e*E;for(let e=0;e<p.outHeight;++e){const r=n+e*S,s=e*p.strideHeight-b;for(let e=0;e<d;++e){const n=s+e*m;if(n<0||n>=p.inHeight)continue;const a=e*k[0],i=t+n*I;for(let e=0;e<p.outWidth;++e){const t=r+e*T,n=e*p.strideWidth-y;for(let e=0;e<f;++e){const r=n+e*g;if(r<0||r>=p.inWidth)continue;const s=i+r*C;let o=a+e*k[1];for(let e=0;e<p.inChannels;++e){const n=$[s+e*D];for(let e=0;e<p.outChannels;++e)R[t+e*A]+=n*F[o+e];o+=p.outChannels}}}}}}return n.makeTensorInfo(w.shape,w.dtype,R)}const LE={kernelName:Ct,backendName:"cpu",kernelFunc:zE},PE={kernelName:Dt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r;JC([s,a],"conv2dBackpropFilter");const h=ol(u),p=Ju(s.shape,c,i,1,o,l,!1,h),{strideHeight:d,strideWidth:f,filterHeight:m,filterWidth:g}=p,y="channelsLast"===p.dataFormat,b=new Vs(p.filterShape,"float32"),x=p.padInfo.left,w=p.padInfo.top,v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=new Vs(s.shape,s.dtype,v),I=new Vs(a.shape,a.dtype,k);for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((w-e)/d)),n=Math.min(p.outHeight,(p.inHeight+w-e)/d);for(let r=0;r<g;++r){const s=Math.max(0,Math.ceil((x-r)/f)),a=Math.min(p.outWidth,(p.inWidth+x-r)/f);for(let i=0;i<p.inChannels;++i)for(let o=0;o<p.outChannels;++o){let u=0;for(let l=0;l<p.batchSize;++l)for(let c=t;c<n;++c){const t=e+c*d-w;for(let e=s;e<a;++e){const n=r+e*f-x;u+=y?N.get(l,t,n,i)*I.get(l,c,e,o):N.get(l,i,t,n)*I.get(l,o,c,e)}}b.set(u,e,r,i,o)}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},UE={kernelName:Et,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r;JC([s,a],"conv2dBackpropInput");const h=Re(a.shape),p=Re(s.shape);let d=ol(l);const f=Ju(i,a.shape,o,1,u,c,!1,d),m=new Vs(f.inShape,"float32"),g=m.values,y=n.data.get(s.dataId).values,b=n.data.get(a.dataId).values,[x,w,v]=h,{batchSize:k,filterHeight:N,filterWidth:I,inChannels:C,inHeight:D,inWidth:E,outChannels:S,outHeight:T,outWidth:A,strideHeight:$,strideWidth:F}=f;d=f.dataFormat;const R=N-1-f.padInfo.top,_=I-1-f.padInfo.left,M="channelsLast"===d,O=m.strides[0],B=M?m.strides[1]:m.strides[2],z=M?m.strides[2]:1,L=M?1:m.strides[1],P=p[0],U=M?p[1]:p[2],W=M?p[2]:1,V=M?1:p[1];for(let e=0;e<k;++e)for(let t=0;t<C;++t)for(let n=0;n<D;++n){const r=n-R,s=Math.max(0,Math.ceil(r/$)),a=Math.min(T,(N+r)/$);for(let i=0;i<E;++i){const o=i-_,u=Math.max(0,Math.ceil(o/F)),l=Math.min(A,(I+o)/F);let c=0;for(let n=s;n<a;++n){const s=n*$-r;for(let r=u;r<l;++r){const a=P*e+U*n+W*r,i=x*(N-1-s)+w*(I-1-(r*F-o))+v*t;for(let e=0;e<S;++e)c+=y[a+V*e]*b[i+e]}}g[O*e+B*n+z*i+L*t]=c}}return n.makeTensorInfo(m.shape,m.dtype,m.values)}},WE={kernelName:St,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r;JC([s,a],"conv3d");const l=Qu(s.shape,a.shape,i,u,o),{filterDepth:c,filterHeight:h,filterWidth:p,dilationDepth:d,dilationHeight:f,dilationWidth:m,padInfo:g}=l,y=g.front,b=g.left,x=g.top,w=new Vs(l.outShape,s.dtype),v=n.data.get(s.dataId).values,k=n.data.get(a.dataId).values,N=w.values,I=Re(s.shape),C=Re(a.shape);for(let e=0;e<l.batchSize;++e){const t=e*I[0],n=e*w.strides[0];for(let e=0;e<l.outDepth;++e){const r=n+e*w.strides[1],s=e*l.strideDepth-y;for(let e=0;e<c;++e){const n=s+e*d;if(n<0||n>=l.inDepth)continue;const a=e*C[0],i=t+n*I[1];for(let e=0;e<l.outHeight;++e){const t=r+e*w.strides[2],n=e*l.strideHeight-x;for(let e=0;e<h;++e){const r=n+e*f;if(r<0||r>=l.inHeight)continue;const s=a+e*C[1],o=i+r*I[2];for(let e=0;e<l.outWidth;++e){const n=t+e*l.outChannels,r=e*l.strideWidth-b;for(let e=0;e<p;++e){const t=r+e*m;if(t<0||t>=l.inWidth)continue;const a=s+e*C[2],i=o+t*l.inChannels;let u=a;for(let e=0;e<l.inChannels;++e){const t=v[i+e];for(let e=0;e<l.outChannels;++e)N[n+e]+=t*k[u+e];u+=l.outChannels}}}}}}}}return n.makeTensorInfo(w.shape,w.dtype,w.values)}},VE={kernelName:Tt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r;JC([s,a],"conv3dBackpropFilterV2");const l=Re(s.shape),c=Re(a.shape),h=Qu(s.shape,u,i,1,o),p=h.strideDepth,d=h.strideHeight,f=h.strideWidth,m=h.filterDepth,g=h.filterHeight,y=h.filterWidth,b=new Vs(h.filterShape,"float32"),x=b.values,[w,v,k,N]=b.strides,I=n.data.get(a.dataId).values,[C,D,E,S]=c,T=n.data.get(s.dataId).values,[A,$,F,R]=l,_=h.padInfo.front,M=h.padInfo.left,O=h.padInfo.top;for(let e=0;e<m;++e){const t=Math.max(0,Math.ceil((_-e)/p)),n=Math.min(h.outDepth,(h.inDepth+_-e)/p),r=e*w;for(let s=0;s<g;++s){const a=Math.max(0,Math.ceil((O-s)/d)),i=Math.min(h.outHeight,(h.inHeight+O-s)/d),o=s*v+r;for(let r=0;r<y;++r){const u=Math.max(0,Math.ceil((M-r)/f)),l=Math.min(h.outWidth,(h.inWidth+M-r)/f),c=r*k+o;for(let o=0;o<h.inChannels;++o){const m=o*N+c;for(let c=0;c<h.outChannels;++c){let g=0;for(let m=0;m<h.batchSize;++m){const h=m*A,y=m*C;for(let m=t;m<n;++m){const t=(e+m*p-_)*$+h,n=m*D+y;for(let e=a;e<i;++e){const a=(s+e*d-O)*F+t,i=e*E+n;for(let e=u;e<l;++e){const t=e*S+i;g+=T[(r+e*f-M)*R+a+o]*I[t+c]}}}}x[m+c]=g}}}}}return n.makeTensorInfo(b.shape,b.dtype,b.values)}},GE={kernelName:At,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r;JC([s],"conv3dBackpropInputV2");const l=Re(s.shape),c=Re(a.shape),h=Qu(u,a.shape,o,1,i),p=new Vs(h.inShape,"float32"),d=p.values,[f,m,g,y]=p.strides,b=n.data.get(s.dataId).values,[x,w,v,k]=l,N=n.data.get(a.dataId).values,[I,C,D,E]=c,{batchSize:S,filterDepth:T,filterHeight:A,filterWidth:$,inChannels:F,inDepth:R,inHeight:_,inWidth:M,outChannels:O,outDepth:B,outHeight:z,outWidth:L,strideDepth:P,strideHeight:U,strideWidth:W}=h,V=T-1-h.padInfo.front,G=A-1-h.padInfo.top,j=$-1-h.padInfo.left;for(let e=0;e<S;++e)for(let t=0;t<F;++t)for(let n=0;n<R;++n){const r=n-V,s=Math.max(0,Math.ceil(r/P)),a=Math.min(B,(T+r)/P);for(let i=0;i<_;++i){const o=i-G,u=Math.max(0,Math.ceil(o/U)),l=Math.min(z,(A+o)/U);for(let c=0;c<M;++c){const h=c-j,p=Math.max(0,Math.ceil(h/W)),S=Math.min(L,($+h)/W);let F=0;for(let n=s;n<a;++n){const s=n*P-r;for(let r=u;r<l;++r){const a=r*U-o;for(let i=p;i<S;++i){const o=x*e+w*n+v*r+k*i,u=I*(T-1-s)+C*(A-1-a)+D*($-1-(i*W-h))+E*t;for(let e=0;e<O;++e)F+=b[o+e]*N[u+e]}}}d[f*e+m*n+g*i+y*c+t]=F}}}return n.makeTensorInfo(p.shape,p.dtype,p.values)}},jE=tD($t,(e=>Math.cos(e))),HE={kernelName:$t,backendName:"cpu",kernelFunc:jE},qE=tD(Ft,(e=>Math.cosh(e))),KE={kernelName:Ft,backendName:"cpu",kernelFunc:qE},XE={kernelName:_t,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,[c,h,p,d]=s.shape,f=a.shape[0],[m,g]=o,y=Ii([f,m,g,d],"float32"),b=n.data.get(a.dataId).values,x=n.data.get(i.dataId).values,w=n.data.get(s.dataId).values,v=Re(s.shape),k=Re(y.shape);for(let e=0;e<f;e++){const t=4*e,n=b[t],r=b[t+1],s=b[t+2],a=b[t+3],i=x[e];if(i>=c)continue;const o=m>1?(s-n)*(h-1)/(m-1):0,f=g>1?(a-r)*(p-1)/(g-1):0;for(let t=0;t<m;t++){const c=m>1?n*(h-1)+t*o:.5*(n+s)*(h-1);if(c<0||c>h-1)for(let n=0;n<g;n++)for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}else if("bilinear"===u){const n=Math.floor(c),s=Math.ceil(c),o=c-n;for(let u=0;u<g;u++){const c=g>1?r*(p-1)+u*f:.5*(r+a)*(p-1);if(c<0||c>p-1){for(let n=0;n<d;n++){const r=n+u*k[2]+t*k[1]+e*k[0];y.values[r]=l}continue}const h=Math.floor(c),m=Math.ceil(c),b=c-h;for(let r=0;r<d;r++){let a=r+h*v[2]+n*v[1]+i*v[0];const l=w[a];a=r+m*v[2]+n*v[1]+i*v[0];const c=w[a];a=r+h*v[2]+s*v[1]+i*v[0];const p=w[a];a=r+m*v[2]+s*v[1]+i*v[0];const d=l+(c-l)*b,f=p+(w[a]-p)*b;a=r+u*k[2]+t*k[1]+e*k[0],y.values[a]=d+(f-d)*o}}}else for(let n=0;n<g;++n){const s=g>1?r*(p-1)+n*f:.5*(r+a)*(p-1);if(s<0||s>p-1){for(let r=0;r<d;r++){const s=r+n*k[2]+t*k[1]+e*k[0];y.values[s]=l}continue}const o=Math.round(s),u=Math.round(c);for(let r=0;r<d;r++){const s=r+o*v[2]+u*v[1]+i*v[0],a=r+n*k[2]+t*k[1]+e*k[0];y.values[a]=w[s]}}}}return n.makeTensorInfo(y.shape,y.dtype,y.values)}},YE={kernelName:Rt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r;JC(s,"cumsum");const u=Ac([a],s.shape.length);let l=s;null!=u&&(l=KD({inputs:{x:s},backend:n,attrs:{perm:u}}));const c=Fc(1,s.shape.length)[0];if(c!==l.shape.length-1)throw new Error(`backend.cumsum in CPU expects an inner-most axis=${l.shape.length-1} but got axis=${c}`);const h=na(l.dtype,"int32"),p=Be(oe(l.shape),h),d=n.data.get(l.dataId).values,f=l.shape[l.shape.length-1],m=o?(e,t)=>e+f-t-1:(e,t)=>e+t;for(let e=0;e<d.length;e+=f)for(let t=0;t<f;t++){const n=m(e,t);if(0===t)p[n]=i?0:d[n];else{const r=m(e,t-1);p[n]=i?d[r]+p[r]:d[n]+p[r]}}const g=n.makeTensorInfo(l.shape,h,p);if(null!=u){const e=KD({inputs:{x:g},backend:n,attrs:{perm:$c(u)}});return n.disposeIntermediateTensorInfo(g),n.disposeIntermediateTensorInfo(l),e}return g}},ZE={kernelName:Mt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=NE(n.data.get(s.dataId).values,n.data.get(a.dataId).values,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,e)}if(2===s.shape.length){const e=IE(n.bufferSync(s),n.bufferSync(a),i,o);return n.makeTensorInfo(e.shape,a.dtype,e.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}},JE={kernelName:Ot,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r;re("NHWC"===i,(()=>`Only NHWC dataFormat supported on CPU for depthToSpace. Got ${i}`));const o=s.shape[0],u=s.shape[1],l=s.shape[2],c=s.shape[3],h=u*a,p=l*a,d=c/(a*a),f=n.data.get(s.dataId).values,m=new Float32Array(o*h*p*d);let g=0;for(let e=0;e<o;++e)for(let t=0;t<h;++t){const n=Math.floor(t/a),r=t%a;for(let t=0;t<p;++t){const s=Math.floor(t/a),i=(r*a+t%a)*d;for(let t=0;t<d;++t){const r=t+i+c*(s+l*(n+u*e));m[g++]=f[r]}}}return n.makeTensorInfo([o,h,p,d],s.dtype,m)}};function QE(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;JC([s,a],"depthwiseConv2DNative");const c=Re(s.shape),h=Re(a.shape);let p=u;null==p&&(p=[1,1]),re(il(i,p),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${p}'`));const d=Ju(s.shape,a.shape,i,p,o,l,!0),{filterHeight:f,filterWidth:m,dilationHeight:g,dilationWidth:y,padInfo:b}=d,x=b.left,w=b.top,v=d.outChannels/d.inChannels,k=new Vs(d.outShape,s.dtype),N=n.data.get(s.dataId).values,I=n.data.get(a.dataId).values,C=k.values;for(let e=0;e<d.batchSize;++e){const t=e*c[0],n=e*k.strides[0];for(let e=0;e<d.outHeight;++e){const r=n+e*k.strides[1],s=e*d.strideHeight-w;for(let e=0;e<f;++e){const n=s+e*g;if(n<0||n>=d.inHeight)continue;const a=e*h[0],i=t+n*c[1];for(let e=0;e<d.outWidth;++e){const t=r+e*k.strides[2],n=e*d.strideWidth-x;for(let e=0;e<m;++e){const r=n+e*y;if(r<0||r>=d.inWidth)continue;const s=a+e*h[1],o=i+r*d.inChannels;let u=t,l=s;for(let e=0;e<d.inChannels;++e){const t=N[o+e];for(let e=0;e<v;++e)C[u+e]+=t*I[l+e];u+=v,l+=v}}}}}}return n.makeTensorInfo(k.shape,k.dtype,k.values)}const eS={kernelName:Bt,backendName:"cpu",kernelFunc:QE},tS={kernelName:zt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r;JC([s,a],"depthwiseConv2dNativeBackpropFilter");const h=Ju(s.shape,c,i,o,u,l,!0),{strideHeight:p,strideWidth:d,filterHeight:f,filterWidth:m}=h,g=new Vs(h.filterShape,"float32"),y=h.padInfo.left,b=h.padInfo.top,x=h.outChannels/h.inChannels,w=n.data.get(s.dataId).values,v=new Vs(s.shape,s.dtype,w),k=n.data.get(a.dataId).values,N=new Vs(a.shape,a.dtype,k);for(let e=0;e<f;++e){const t=Math.max(0,Math.ceil((b-e)/p)),n=Math.min(h.outHeight,(h.inHeight+b-e)/p);for(let r=0;r<m;++r){const s=Math.max(0,Math.ceil((y-r)/d)),a=Math.min(h.outWidth,(h.inWidth+y-r)/d);for(let i=0;i<h.outChannels;++i){const o=Math.trunc(i/x),u=i%x;let l=0;for(let u=0;u<h.batchSize;++u)for(let c=t;c<n;++c){const t=e+c*p-b;for(let e=s;e<a;++e){const n=r+e*d-y;l+=v.get(u,t,n,o)*N.get(u,c,e,i)}}g.set(l,e,r,o,u)}}}return n.makeTensorInfo(g.shape,g.dtype,g.values)}},nS={kernelName:Lt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r;JC([s,a],"depthwiseConv2DNativeBackpropInput");const h=Re(s.shape),p=Re(a.shape),d=Ju(c,a.shape,i,o,u,l,!0),f=new Vs(d.inShape,"float32"),m=f.values,[g,y,b]=f.strides,x=n.data.get(s.dataId).values,[w,v,k]=h,N=n.data.get(a.dataId).values,[I,C,D]=p,{batchSize:E,filterHeight:S,filterWidth:T,inChannels:A,inHeight:$,inWidth:F,outChannels:R,outHeight:_,outWidth:M,strideHeight:O,strideWidth:B}=d,z=S-1-d.padInfo.top,L=T-1-d.padInfo.left,P=R/A;for(let e=0;e<E;++e)for(let t=0;t<A;++t)for(let n=0;n<$;++n){const r=n-z,s=Math.max(0,Math.ceil(r/O)),a=Math.min(_,(S+r)/O);for(let i=0;i<F;++i){const o=i-L,u=Math.max(0,Math.ceil(o/B)),l=Math.min(M,(T+o)/B);let c=0;for(let n=s;n<a;++n){const s=n*O-r;for(let r=u;r<l;++r){const a=w*e+v*n+k*r,i=I*(S-1-s)+C*(T-1-(r*B-o))+D*t;for(let e=0;e<P;++e)c+=x[a+(t*P+e)]*N[i+e]}}m[g*e+y*n+b*i+t]=c}}return n.makeTensorInfo(f.shape,f.dtype,f.values)}},rS={kernelName:Pt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=oe(r.shape),a=n.data.get(r.dataId).values,i=Ii([s,s],r.dtype),o=i.values;for(let e=0;e<a.length;e++)o[e*s+e]=a[e];const u=[...r.shape,...r.shape];return n.makeTensorInfo(u,i.dtype,i.values)}},sS={kernelName:Ut,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s}=e,{strides:a,pad:i,dilations:o}=n,u=t,l=u.data.get(r.dataId).values,c=r.shape.length,h=u.data.get(s.dataId).values,p=s.shape.length,{batchSize:d,inHeight:f,inWidth:m,inChannels:g,outHeight:y,outWidth:b,padInfo:x,strideHeight:w,strideWidth:v,filterHeight:k,filterWidth:N,dilationHeight:I,dilationWidth:C,outShape:D}=Xu(r.shape,s.shape,a,i,"NHWC",o),E=oe(D),S=D.length,T=we(r.dtype,E);for(let e=0;e<d;++e)for(let t=0;t<y;++t){const n=t*w-x.top;for(let a=0;a<b;++a){const i=a*v-x.left;for(let o=0;o<g;++o){let u=Number.MIN_SAFE_INTEGER;for(let t=0;t<k;++t){const a=n+t*I;if(a>=0&&a<f)for(let n=0;n<N;++n){const d=i+n*C;if(d>=0&&d<m){const i=Pe([e,a,d,o],c,Re(r.shape)),f=Pe([t,n,o],p,Re(s.shape)),m=l[i]+h[f];m>u&&(u=m)}}}T[Pe([e,t,a,o],S,Re(D))]=u}}}return{dataId:u.write(As(T,r.dtype),D,r.dtype),shape:D,dtype:r.dtype}}},aS={kernelName:Vt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Me(r.shape,l.data.get(r.dataId).values),h=Me(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:C}=Xu(r.shape,s.shape,i,o,"NHWC",u);re(a.rank===C.length,(()=>`Error in ${Vt}, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const D=Me(C,l.data.get(a.dataId).values),E=ze(s.shape,s.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=0,u=0;for(let t=0;t<v;++t){const r=n+t*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*I;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=t,u=n)}}}E[o][u][a]+=D[e][t][r][a]}}}return{dataId:l.write(As(E,r.dtype),s.shape,s.dtype),shape:s.shape,dtype:s.dtype}}},iS={kernelName:Wt,backendName:"cpu",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,filter:s,dy:a}=e,{strides:i,pad:o,dilations:u}=n,l=t,c=Me(r.shape,l.data.get(r.dataId).values),h=Me(s.shape,l.data.get(s.dataId).values),{batchSize:p,inHeight:d,inWidth:f,inChannels:m,outHeight:g,outWidth:y,padInfo:b,strideHeight:x,strideWidth:w,filterHeight:v,filterWidth:k,dilationHeight:N,dilationWidth:I,outShape:C}=Xu(r.shape,s.shape,i,o,"NHWC",u);re(a.rank===C.length,(()=>`Error in ${Wt}, dy must have the same rank as output ${C.length}, but got ${a.rank}`));const D=Me(C,l.data.get(a.dataId).values),E=ze(r.shape,r.dtype);for(let e=0;e<p;++e)for(let t=0;t<g;++t){const n=t*x-b.top;for(let r=0;r<y;++r){const s=r*w-b.left;for(let a=0;a<m;++a){let i=Number.MIN_SAFE_INTEGER,o=n<0?0:n,u=s<0?0:s;for(let t=0;t<v;++t){const r=n+t*N;if(r>=0&&r<d)for(let n=0;n<k;++n){const l=s+n*I;if(l>=0&&l<f){const s=c[e][r][l][a]+h[t][n][a];s>i&&(i=s,o=r,u=l)}}}E[e][o][u][a]+=D[e][t][r][a]}}}return{dataId:l.write(As(E,r.dtype),r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},oS=lD(((e,t)=>e*t)),uS=AD(((e,t,n,r)=>({real:e*n-t*r,imag:e*r+t*n}))),lS=TD(Un,oS,uS),cS={kernelName:Un,backendName:"cpu",kernelFunc:lS};function hS(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;let o;JC(s,"sum"),o="bool"===s.dtype?ED({inputs:{x:s},backend:n,attrs:{dtype:"int32"}}):aD({inputs:{x:s},backend:n});const u=o.shape.length,l=ye(a,o.shape),c=Ac(l,u);let h=l,p=o;null!=c&&(p=KD({inputs:{x:o},backend:n,attrs:{perm:c}}),h=Fc(h.length,u)),Tc("sum",h,p.shape.length);const[d,f]=Ec(p.shape,h);let m=ID(n,d,na(p.dtype,"int32"));const g=oe(f),y=n.data.get(m.dataId).values,b=n.data.get(p.dataId).values;for(let e=0;e<y.length;++e){const t=e*g;let n=0;for(let e=0;e<g;++e)n+=b[t+e];y[e]=n}if(i){const e=m;m=MD({inputs:{x:m},backend:n,attrs:{shape:Sc(m.shape,l)}}),n.disposeIntermediateTensorInfo(e)}return n.disposeIntermediateTensorInfo(o),null!=c&&n.disposeIntermediateTensorInfo(p),m}const pS={kernelName:Ir,backendName:"cpu",kernelFunc:hS},dS={kernelName:jt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=lf(s,a.length);hf(i.length,u,a);const{path:l,steps:c}=pf(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=cf(d,u[t]);let s;df(e)?s=a[t]:(s=KD({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);le(s.shape,i)||(s=MD({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=lS({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=hS({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},fS={kernelName:qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{dy:r,y:s}=t;JC([r,s],"eluGrad");const a=new Float32Array(oe(s.shape)),i=n.data.get(s.dataId).values,o=n.data.get(r.dataId).values;for(let e=0;e<i.length;++e){const t=i[e];a[e]=t>=1?o[e]:o[e]*(t+1)}return n.makeTensorInfo(s.shape,"float32",a)}},mS=lD(((e,t)=>e===t?1:0)),gS=TD(Xt,mS,null,"bool"),yS={kernelName:Xt,backendName:"cpu",kernelFunc:gS},bS=Hd,xS=qd,wS=Kd,vS=Xd,kS=Yd,NS=Zd,IS=tD(Kt,(e=>{const t=Math.sign(e),n=Math.abs(e),r=1/(1+bS*n);return t*(1-((((NS*r+kS)*r+vS)*r+wS)*r+xS)*r*Math.exp(-n*n))})),CS={kernelName:Kt,backendName:"cpu",kernelFunc:IS},DS=yD((e=>Math.exp(e))),ES=nD(Yt,DS,"float32"),SS={kernelName:Yt,backendName:"cpu",kernelFunc:ES};function TS(e){const{inputs:t,backend:n,attrs:r}=e,{input:s}=t,{dim:a}=r,i=s.shape.length,o=s.shape.slice();let u=a;return a<0&&(re(-(i+1)<=a,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+a+1),o.splice(u,0,1),MD({inputs:{x:s},backend:n,attrs:{shape:o}})}const AS={kernelName:Zt,backendName:"cpu",kernelFunc:TS},$S=yD((e=>Math.expm1(e))),FS=nD(Jt,$S),RS={kernelName:Jt,backendName:"cpu",kernelFunc:FS},_S=lD(((e,t)=>e/t)),MS=TD(Gt,_S),OS={kernelName:Gt,backendName:"cpu",kernelFunc:MS},BS=lD(((e,t)=>e-t)),zS=AD(((e,t,n,r)=>({real:e-n,imag:t-r}))),LS=TD(Lr,BS,zS),PS={kernelName:Lr,backendName:"cpu",kernelFunc:LS};function US(e,t,n){const r=e.shape,s=r[0],a=r[1],i=n.data.get(e.dataId),o=i.complexTensorInfos.real,u=i.complexTensorInfos.imag,l=[s,a],c=oe(l),h=xe("float32",c),p=xe("float32",c);for(let e=0;e<s;e++){const r=wE({inputs:{x:o},backend:n,attrs:{begin:[e,0],size:[1,a]}}),s=wE({inputs:{x:u},backend:n,attrs:{begin:[e,0],size:[1,a]}}),i=kD({inputs:{real:r,imag:s},backend:n}),{real:l,imag:c}=WS(i,t,n),d=Jd(l,c);for(let t=0;t<a;t++){const n=rf(d,t);h[e*a+t]=n.real,p[e*a+t]=n.imag}n.disposeIntermediateTensorInfo(r),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(i)}const d=n.makeTensorInfo(l,"float32",h),f=n.makeTensorInfo(l,"float32",p),m=kD({inputs:{real:d,imag:f},backend:n});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}function WS(e,t,n){const r=oe(e.shape),s=n.data.get(e.dataId),a=n.data.get(s.complexTensorInfos.real.dataId).values,i=n.data.get(s.complexTensorInfos.imag.dataId).values;if(0==((o=r)&o-1)){const s=VS(a,i,r,t,n),o=[e.shape[0],e.shape[1]];if(t){const e=n.makeTensorInfo(o,"float32",s.real),t=n.makeTensorInfo(o,"float32",s.imag),a=n.makeTensorInfo([],"float32",Ts(r,"float32")),i=aD({inputs:{x:a},backend:n}),u=OS.kernelFunc({inputs:{a:e,b:a},backend:n}),l=OS.kernelFunc({inputs:{a:t,b:i},backend:n}),c=n.data.get(u.dataId).values,h=n.data.get(l.dataId).values;return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),{real:c,imag:h}}return s}var o;{const e=function(e,t,n){const r=new Float32Array(2*t);for(let s=0;s<t;s++){let a=0,i=0;for(let r=0;r<t;r++){const o=of(s*r,t,n),u=rf(e,r);a+=u.real*o.real-u.imag*o.imag,i+=u.real*o.imag+u.imag*o.real}n&&(a/=t,i/=t),sf(r,a,i,s)}return r}(Jd(a,i),r,t);return Qd(e)}}function VS(e,t,n,r,s){if(1===n)return{real:e,imag:t};const a=Jd(e,t),i=n/2,o=ef(a),u=o.real,l=o.imag,c=[u.length],h=s.makeTensorInfo(c,"float32",u),p=s.makeTensorInfo(c,"float32",l),d=kD({inputs:{real:h,imag:p},backend:s}),f=nf(a),m=f.real,g=f.imag,y=[m.length],b=s.makeTensorInfo(y,"float32",m),x=s.makeTensorInfo(y,"float32",g),w=kD({inputs:{real:b,imag:x},backend:s}),v=VS(u,l,i,r,s),k=v.real,N=v.imag,I=[k.length],C=s.makeTensorInfo(I,"float32",k),D=s.makeTensorInfo(I,"float32",N),E=kD({inputs:{real:C,imag:D},backend:s}),S=VS(m,g,i,r,s),T=S.real,A=S.imag,$=[T.length],F=s.makeTensorInfo($,"float32",T),R=s.makeTensorInfo($,"float32",A),_=kD({inputs:{real:F,imag:R},backend:s}),M=af(n,r),O=[M.real.length],B=s.makeTensorInfo(O,"float32",M.real),z=s.makeTensorInfo(O,"float32",M.imag),L=kD({inputs:{real:B,imag:z},backend:s}),P=lS({inputs:{a:L,b:_},backend:s}),U=RD({inputs:{a:E,b:P},backend:s}),W=LS({inputs:{a:E,b:P},backend:s}),V=CD({inputs:{input:U},backend:s}),G=CD({inputs:{input:W},backend:s}),j=_E({inputs:{input:U},backend:s}),H=_E({inputs:{input:W},backend:s}),q=OE({inputs:[V,G],backend:s,attrs:{axis:0}}),K=OE({inputs:[j,H],backend:s,attrs:{axis:0}}),X=s.data.get(q.dataId).values,Y=s.data.get(K.dataId).values;return s.disposeIntermediateTensorInfo(h),s.disposeIntermediateTensorInfo(p),s.disposeIntermediateTensorInfo(d),s.disposeIntermediateTensorInfo(b),s.disposeIntermediateTensorInfo(x),s.disposeIntermediateTensorInfo(w),s.disposeIntermediateTensorInfo(C),s.disposeIntermediateTensorInfo(D),s.disposeIntermediateTensorInfo(E),s.disposeIntermediateTensorInfo(F),s.disposeIntermediateTensorInfo(R),s.disposeIntermediateTensorInfo(_),s.disposeIntermediateTensorInfo(B),s.disposeIntermediateTensorInfo(z),s.disposeIntermediateTensorInfo(L),s.disposeIntermediateTensorInfo(P),s.disposeIntermediateTensorInfo(U),s.disposeIntermediateTensorInfo(W),s.disposeIntermediateTensorInfo(V),s.disposeIntermediateTensorInfo(j),s.disposeIntermediateTensorInfo(G),s.disposeIntermediateTensorInfo(H),s.disposeIntermediateTensorInfo(q),s.disposeIntermediateTensorInfo(K),{real:X,imag:Y}}const GS={kernelName:Qt,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=oe(r.shape),a=r.shape[r.shape.length-1],i=MD({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=US(i,!1,n),u=MD({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}};function jS(e){const{backend:t,attrs:n}=e,{shape:r,value:s,dtype:a}=n,i=a||Ae(s),o=we(i,oe(r));return function(e,t,n){e.fill(t)}(o,s),t.makeTensorInfo(r,i,o)}const HS={kernelName:en,backendName:"cpu",kernelFunc:jS},qS={kernelName:tn,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,s=n,a=xe(r.dtype,oe(r.shape)),[i,o,u,l]=r.shape,c=s.data.get(r.dataId).values;for(let e=0;e<i;e++){const t=e*u*o*l;for(let e=0;e<o;e++){const n=e*(u*l);for(let e=0;e<u;e++){const r=e*l;for(let s=0;s<l;s++){const i=Math.round(u-e-1),o=t+n+r+s;let h=c[o];i>=0&&i<u&&(h=c[t+n+i*l+s]),a[o]=h}}}}return{dataId:s.write(a,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},KS=yD((e=>Math.floor(e))),XS=nD(nn,KS),YS={kernelName:nn,backendName:"cpu",kernelFunc:XS},ZS=lD(((e,t)=>Math.floor(e/t))),JS=TD(rn,ZS,null,"int32"),QS={kernelName:rn,backendName:"cpu",kernelFunc:JS},eT={kernelName:es,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=zE({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=RD({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=vD(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}},tT={kernelName:ts,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r;let m=QE({inputs:{x:s,filter:a},backend:n,attrs:{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p}});if(i){const e=m;m=RD({inputs:{a:m,b:i},backend:n}),n.disposeIntermediateTensorInfo(e)}if(d){const e=m;m=vD(n,m,d,o,f),n.disposeIntermediateTensorInfo(e)}return m}};function nT(e,t,n,r,s,a,i,o,u){const l=Ii([r,a],n);for(let n=0;n<r;n++){const r=[];let c=0;for(let t=0;t<s;t++){const a=e[n*s+t];c+=a*i[t],r.push(a)}if(c<0||c>=u/a)throw new Error(`Invalid indices: ${r} does not index into ${o}`);for(let e=0;e<a;e++)l.values[n*a+e]=t.get(...t.indexToLoc(c*a+e))}return l}const rT={kernelName:on,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=oe(r.shape),i=s.shape,o=i[i.length-1],[u,l,c,h]=so(r,s);if(0===l)return n.makeTensorInfo(u,r.dtype,[]);const p=nT(n.data.get(s.dataId).values,n.bufferSync(r),r.dtype,l,o,c,h,r.shape,a);return n.makeTensorInfo(u,r.dtype,p.values)}};function sT(e,t,n){const r=Ii(n,e.dtype);for(let n=0;n<r.size;++n){const s=r.indexToLoc(n).slice(),a=s[0],i=s[2],o=t.locToIndex([a,i]);s[2]=t.values[o];const u=e.locToIndex(s);0<=u&&u<e.values.length&&(r.values[n]=e.values[u])}return r}const aT={kernelName:an,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r;JC([s,a],"gatherV2");const u=ye(i,s.shape)[0],l=n.data.get(a.dataId).values,c=s.shape[u];for(let e=0;e<l.length;++e){const t=l[e];re(t<=c-1&&t>=0,(()=>`GatherV2: the index value ${t} is not in [0, ${c-1}]`))}let h=o;null==o&&(h=0);const p=oe(a.shape),d=Af(s,a,u,h),f=MD({inputs:{x:s},backend:n,attrs:{shape:[d.batchSize,d.outerSize,d.dimSize,d.sliceSize]}}),m=MD({inputs:{x:a},backend:n,attrs:{shape:[d.batchSize,p/d.batchSize]}}),g=[d.batchSize,d.outerSize,p/d.batchSize,d.sliceSize],y=n.bufferSync(m),b=sT(n.bufferSync(f),y,g);return n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),n.makeTensorInfo(d.outputShape,b.dtype,b.values)}},iT=lD(((e,t)=>e>t?1:0)),oT=TD(un,iT,null,"bool"),uT={kernelName:un,backendName:"cpu",kernelFunc:oT},lT=lD(((e,t)=>e>=t?1:0)),cT=TD(ln,lT,null,"bool"),hT={kernelName:ln,backendName:"cpu",kernelFunc:cT},pT={kernelName:hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t,s=oe(r.shape),a=r.shape[r.shape.length-1],i=MD({inputs:{x:r},backend:n,attrs:{shape:[s/a,a]}}),o=US(i,!0,n),u=MD({inputs:{x:o},backend:n,attrs:{shape:r.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(o),u}},dT=tD(dn,(e=>Number.isFinite(e)?1:0),"bool"),fT={kernelName:dn,backendName:"cpu",kernelFunc:dT},mT=tD(fn,(e=>Math.abs(e)===1/0?1:0),"bool"),gT={kernelName:fn,backendName:"cpu",kernelFunc:mT},yT=tD(mn,(e=>Number.isNaN(e)?1:0),"bool"),bT={kernelName:mn,backendName:"cpu",kernelFunc:yT},xT=lD(((e,t)=>e<t?1:0)),wT=TD(yn,xT,null,"bool"),vT={kernelName:yn,backendName:"cpu",kernelFunc:wT},kT=lD(((e,t)=>e<=t?1:0)),NT=TD(bn,kT,null,"bool"),IT={kernelName:bn,backendName:"cpu",kernelFunc:NT};function CT(e,t,n){const r=(t-e)/(n-1),s=Be(n,"float32");s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+r;return s}const DT={kernelName:xn,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=CT(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},ET=yD((e=>Math.log(e))),ST=nD(wn,ET),TT={kernelName:wn,backendName:"cpu",kernelFunc:ST},AT=tD(vn,(e=>Math.log1p(e))),$T={kernelName:vn,backendName:"cpu",kernelFunc:AT},FT=lD(((e,t)=>e&&t)),RT=TD(kn,FT,null,"bool"),_T={kernelName:kn,backendName:"cpu",kernelFunc:RT},MT=tD(Nn,(e=>e?0:1),"bool"),OT={kernelName:Nn,backendName:"cpu",kernelFunc:MT},BT=lD(((e,t)=>e||t)),zT=TD(In,BT,null,"bool"),LT={kernelName:In,backendName:"cpu",kernelFunc:zT},PT={kernelName:Dn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r;JC(s,"LRN");const l=s.shape[3],c=l-1,h=n.data.get(s.dataId).values,p=oe(s.shape),d=new Float32Array(p);function f(e){const t=e%l;let n=e-t+Math.max(0,t-a);const r=e-t+Math.min(t+a,c);let s=0;for(;n<=r;n++){const e=h[n];s+=e*e}return s}for(let e=0;e<p;e++){const t=f(e),n=h[e]*Math.pow(i+o*t,-u);d[e]=n}return n.makeTensorInfo(s.shape,s.dtype,d)}},UT={kernelName:En,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r;JC(i,"LRNGrad");const h=oe(i.shape),p=i.shape[3],d=n.data.get(i.dataId).values,f=n.data.get(s.dataId).values,m=n.data.get(a.dataId).values,g=new Float32Array(h),y=h;for(let e=0;e<y;e++){const t=e%p,n=e-t+Math.max(0,t-o),r=e-t+Math.min(p,t+o+1);let s=0;for(let e=n;e<r;e++)s+=Math.pow(f[e],2);s=l*s+u;for(let t=n;t<r;t++){let n=-2*l*c*f[t]*m[e]/s;e===t&&(n+=Math.pow(s,-c)),n*=d[e],g[t]+=n}}return n.makeTensorInfo(i.shape,s.dtype,g)}};function WT(e,t,n,r){const s=xe(r,oe(n));for(let n=0;n<s.length;++n){const r=n*t;let a=e[r];for(let n=0;n<t;++n){const t=e[r+n];(Number.isNaN(t)||t>a)&&(a=t)}s[n]=a}return s}function VT(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=n;let u=s.shape;const l=u.length,c=ye(a,u);let h=c;const p=Ac(h,l);let d=o.data.get(s.dataId).values;if(null!=p){const e=new Array(l);for(let t=0;t<e.length;t++)e[t]=u[p[t]];d=qD(d,u,s.dtype,p,e),h=Fc(h.length,l),u=e}JC(s,"max"),Tc("max",h,l);const[f,m]=Ec(u,h),g=WT(d,oe(m),f,s.dtype),y=o.write(g,f,s.dtype);let b=f;return i&&(b=Sc(f,c)),{dataId:y,shape:b,dtype:s.dtype}}const GT={kernelName:Sn,backendName:"cpu",kernelFunc:VT},jT=lD(((e,t)=>Math.max(e,t))),HT=TD(Tn,jT),qT={kernelName:Tn,backendName:"cpu",kernelFunc:HT},KT={kernelName:An,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;JC(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;re(il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Yu(s.shape,a,i,1,o,u);let c;if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))c=aD({inputs:{x:s},backend:n});else{const e=n.data.get(s.dataId).values,t=Re(s.shape),r=hE(e,s.shape,s.dtype,t,l,"max");c=n.makeTensorInfo(l.outShape,s.dtype,r.values)}return c}},XT={kernelName:Fn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r;JC(s,"maxPool3d");const c=Zu(s.shape,a,i,1,o,u,l),h=dE(n.data.get(s.dataId).values,s.shape,s.dtype,Re(s.shape),c,"max");return n.makeTensorInfo(h.shape,"float32",h.values)}},YT={kernelName:Rn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,{filterSize:i,strides:o,pad:u,dimRoundingMode:l}=r;JC([s,a],"maxPool3DGrad");const c=Zu(a.shape,i,o,1,u,l),h=function(e,t){const n=Ii(t.outShape,"int32"),r=t.strideDepth,s=t.strideHeight,a=t.strideWidth,i=t.dilationDepth,o=t.dilationHeight,u=t.dilationWidth,l=t.effectiveFilterDepth,c=t.effectiveFilterHeight,h=t.effectiveFilterWidth,p=t.padInfo.front,d=t.padInfo.top,f=t.padInfo.left;for(let m=0;m<t.batchSize;++m)for(let g=0;g<t.inChannels;++g)for(let y=0;y<t.outDepth;++y){const b=y*r-p;let x=b;for(;x<0;)x+=i;const w=Math.min(t.inDepth,l+b);for(let r=0;r<t.outHeight;++r){const l=r*s-d;let p=l;for(;p<0;)p+=o;const v=Math.min(t.inHeight,c+l);for(let s=0;s<t.outWidth;++s){const d=s*a-f;let k=d;for(;k<0;)k+=u;const N=Math.min(t.inWidth,h+d);let I=Number.NEGATIVE_INFINITY,C=-1;for(let t=x;t<w;t+=i){const n=t-b;for(let r=p;r<v;r+=o){const s=r-l;for(let a=k;a<N;a+=u){const i=a-d,o=e.get(m,t,r,a,g);o>=I&&(I=o,C=n*c*h+s*c+i)}}}n.set(C,m,y,r,s,g)}}}return n}(n.bufferSync(a),c),p=c.strideDepth,d=c.strideHeight,f=c.strideWidth,m=c.dilationDepth,g=c.dilationHeight,y=c.dilationWidth,b=c.effectiveFilterDepth,x=c.effectiveFilterHeight,w=c.effectiveFilterWidth,v=b-1-c.padInfo.front,k=w-1-c.padInfo.left,N=x-1-c.padInfo.top,I=Ii(a.shape,"float32"),C=n.bufferSync(s);for(let e=0;e<c.batchSize;++e)for(let t=0;t<c.inChannels;++t)for(let n=0;n<c.inDepth;++n)for(let r=0;r<c.inHeight;++r)for(let s=0;s<c.inWidth;++s){const a=n-v,i=r-N,o=s-k;let u=0;for(let n=0;n<b;n+=m){const r=(a+n)/p;if(!(r<0||r>=c.outDepth||Math.floor(r)!==r))for(let s=0;s<x;s+=g){const a=(i+s)/d;if(!(a<0||a>=c.outHeight||Math.floor(a)!==a))for(let i=0;i<w;i+=y){const l=(o+i)/f;if(l<0||l>=c.outWidth||Math.floor(l)!==l)continue;const p=b*x*w-1-h.get(e,r,a,l,t)===n*x*w+s*w+i?1:0;0!==p&&(u+=C.get(e,r,a,l,t)*p)}}}I.set(u,e,n,r,s,t)}return n.makeTensorInfo(I.shape,I.dtype,I.values)}},ZT={kernelName:$n,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;JC([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Yu(o.shape,u,l,1,c,h),d=n.data.get(o.dataId).values,f=Ii(p.outShape,o.dtype,pE(d,o.shape,o.dtype,p).values),m=p.strideHeight,g=p.strideWidth,y=p.dilationHeight,b=p.dilationWidth,x=p.effectiveFilterHeight,w=p.effectiveFilterWidth,v=w-1-p.padInfo.left,k=x-1-p.padInfo.top,N=Ii(o.shape,"float32"),I=n.data.get(s.dataId).values,C=Ii(s.shape,"float32",I);for(let e=0;e<p.batchSize;++e)for(let t=0;t<p.inChannels;++t)for(let n=0;n<p.inHeight;++n)for(let r=0;r<p.inWidth;++r){const s=n-k,a=r-v;let i=0;for(let n=0;n<x;n+=y){const r=(s+n)/m;if(!(r<0||r>=p.outHeight||Math.floor(r)!==r))for(let s=0;s<w;s+=b){const o=(a+s)/g;if(o<0||o>=p.outWidth||Math.floor(o)!==o)continue;const u=x*w-1-f.get(e,r,o,t)===n*w+s?1:0;0!==u&&(i+=C.get(e,r,o,t)*u)}}N.set(i,e,n,r,t)}return n.makeTensorInfo(N.shape,N.dtype,N.values)}},JT={kernelName:_n,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;JC(r,"MaxPoolWithArgmax");const l=u.data.get(r.dataId).values,c=Yu(r.shape,s,a,[1,1],i),[h,p]=function(e,t,n,r,s){const a=hE(e,0,n,Re(t),s,"max"),i=pE(e,t,n,s,!0,r);return[a.values,i.values]}(l,r.shape,r.dtype,o,c),d=u.write(h,c.outShape,r.dtype),f=u.write(p,c.outShape,r.dtype);return[{dataId:d,shape:c.outShape,dtype:r.dtype},{dataId:f,shape:c.outShape,dtype:"int32"}]}},QT={kernelName:Mn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=ye(a,s.shape),u=oe(Ec(s.shape,o)[1]),l=[],c=n.makeTensorInfo([],"float32",new Float32Array([u]));l.push(c);const h=ED({inputs:{x:s},backend:n,attrs:{dtype:"float32"}});l.push(h);const p=MS({inputs:{a:h,b:c},backend:n});l.push(p);const d=hS({inputs:{x:p},backend:n,attrs:{axis:a,keepDims:i}});return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),d}},eA={kernelName:On,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;JC(s,"min");const o=ye(a,s.shape);let u=o;const l=Ac(u,s.shape.length);let c=s;null!=l&&(c=KD({inputs:{x:s},backend:n,attrs:{perm:l}}),u=Fc(u.length,s.shape.length)),Tc("min",u,c.shape.length);const[h,p]=Ec(c.shape,u),d=oe(p),f=Be(oe(h),c.dtype),m=n.data.get(c.dataId).values;for(let e=0;e<f.length;++e){const t=e*d;let n=m[t];for(let e=0;e<d;++e){const r=m[t+e];(Number.isNaN(r)||r<n)&&(n=r)}f[e]=n}null!=l&&n.disposeIntermediateTensorInfo(c);const g=n.makeTensorInfo(h,c.dtype,f);if(i){const e=MD({inputs:{x:g},backend:n,attrs:{shape:Sc(h,o)}});return n.disposeIntermediateTensorInfo(g),e}return g}},tA=lD(((e,t)=>Math.min(e,t))),nA=TD(Bn,tA),rA={kernelName:Bn,backendName:"cpu",kernelFunc:nA},sA={kernelName:zn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,mode:i}=r;JC(s,"mirrorPad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=a.map(((e,t)=>e[0]+s.shape[t])),c="reflect"===i?0:1,h=n.data.get(s.dataId).values,p=s.shape.length,d=Re(s.shape),f=oe(o),m=o.length,g=Re(o),y=xe(s.dtype,f);for(let e=0;e<f;e++){let t=Ue(e,m,g);for(let e=0;e<m;e++)t[e]<u[e]?t[e]=2*u[e]-t[e]-c:t[e]>=l[e]&&(t[e]=2*(l[e]-1)-t[e]+c);t=t.map(((e,t)=>e-u[t]));const n=Pe(t,p,d);y[e]=h[n]}return{dataId:n.write(y,o,s.dtype),shape:o,dtype:s.dtype}}},aA=lD(((e,t)=>{const n=e%t;return e<0&&t<0||e>=0&&t>=0?n:(n+t)%t})),iA=TD(Ln,aA),oA={kernelName:Ln,backendName:"cpu",kernelFunc:iA};function uA(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=s.shape.length;let o=a;if(-1===o&&(o=i-1),o!==i-1)throw Error(`Softmax along a non-last dimension is not yet supported. Logits was rank ${i} and dim was ${o}`);const u=ye([o],s.shape),l=VT({inputs:{x:s},backend:n,attrs:{reductionIndices:u,keepDims:!1}}),c=Sc(l.shape,u),h=MD({inputs:{x:l},backend:n,attrs:{shape:c}}),p=LS({inputs:{a:s,b:h},backend:n}),d=ES({inputs:{x:p},backend:n}),f=hS({inputs:{x:d},backend:n,attrs:{axis:u,keepDims:!1}}),m=MD({inputs:{x:f},backend:n,attrs:{shape:c}}),g=MS({inputs:{a:d,b:m},backend:n});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),g}const lA={kernelName:Er,backendName:"cpu",kernelFunc:uA},cA={kernelName:Pn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r;JC(s,"multinomial");const u=o?s:uA({inputs:{logits:s},backend:n,attrs:{dim:-1}}),l=u.shape[0],c=u.shape[1],h=n.data.get(u.dataId).values,p=[l,a],d=Be(oe(p),"int32");for(let e=0;e<l;++e){const t=e*c,n=new Float32Array(c-1);n[0]=h[t];for(let e=1;e<n.length;++e)n[e]=n[e-1]+h[t+e];const r=hh.alea(i.toString()),s=e*a;for(let e=0;e<a;++e){const t=r();d[s+e]=n.length;for(let r=0;r<n.length;r++)if(t<n[r]){d[s+e]=r;break}}}return o||n.disposeIntermediateTensorInfo(u),n.makeTensorInfo(p,"int32",d)}};function hA(e,t,n){const r=Ts(-1,n);return oS([],t,r,e,n)}const pA={kernelName:Wn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;JC(r,"neg");const s=n.data.get(r.dataId).values,[a,i]=hA(s,r.shape,r.dtype);return n.makeTensorInfo(i,r.dtype,a)}},dA=Gp,fA={kernelName:Gn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r;JC(s,"NonMaxSuppression");const l=n.data.get(s.dataId).values,c=n.data.get(a.dataId).values,{selectedIndices:h}=dA(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},mA=jp,gA={kernelName:jn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r;JC(s,"NonMaxSuppressionPadded");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,{selectedIndices:p,validOutputs:d}=mA(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},yA=Hp,bA={kernelName:Hn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r;JC(s,"NonMaxSuppressionWithScore");const c=n.data.get(s.dataId).values,h=n.data.get(a.dataId).values,p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=yA(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}},xA=lD(((e,t)=>e!==t?1:0)),wA=TD(Vn,xA,null,"bool"),vA={kernelName:Vn,backendName:"cpu",kernelFunc:wA},kA={kernelName:Kn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r;JC(s,"oneHot");const u=oe(s.shape),l=new Float32Array(u*a);l.fill(o);const c=n.data.get(s.dataId).values;for(let e=0;e<u;++e)c[e]>=0&&c[e]<a&&(l[e*a+c[e]]=i);return n.makeTensorInfo([...s.shape,a],"int32",l)}};function NA(e){const{inputs:t,backend:n}=e,{x:r}=t;if("string"===r.dtype)throw new Error("zerosLike is not supported for string tensors");if("complex64"===r.dtype){const e=CD({inputs:{input:r},backend:n}),t=NA({inputs:{x:e},backend:n}),s=_E({inputs:{input:r},backend:n}),a=NA({inputs:{x:s},backend:n}),i=kD({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return jS({backend:n,attrs:{shape:r.shape,value:0,dtype:r.dtype}})}const IA={kernelName:Xr,backendName:"cpu",kernelFunc:NA},CA={kernelName:qn,backendName:"cpu",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported for string tensors");if("complex64"===s.dtype){const t=CD({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=_E({inputs:{input:s},backend:r}),i=NA({inputs:{x:a},backend:r}),o=kD({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return jS({backend:r,attrs:{shape:s.shape,value:1,dtype:s.dtype}})}};function DA(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return TS({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{se(a,e.shape,"All tensors passed to stack must have matching shapes"),re(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=OE({inputs:t.map((e=>{const t=TS({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}const EA={kernelName:Xn,backendName:"cpu",kernelFunc:DA},SA={kernelName:Yn,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;JC(s,"pad");const o=a.map(((e,t)=>e[0]+s.shape[t]+e[1])),u=a.map((e=>e[0])),l=n.data.get(s.dataId).values,c=oe(s.shape),h=s.shape.length,p=Re(s.shape),d=oe(o),f=o.length,m=Re(o),g=xe(s.dtype,d);0!==i&&g.fill(i);for(let e=0;e<c;e++)g[Pe(Ue(e,h,p).map(((e,t)=>e+u[t])),f,m)]=l[e];return{dataId:n.write(g,o,s.dtype),shape:o,dtype:s.dtype}}},TA=lD(((e,t)=>Math.pow(e,t))),AA=TD(Jn,TA),$A={kernelName:Jn,backendName:"cpu",kernelFunc:AA};function FA(e,t,n,r){const[s,a]=Ec(e,r),i=na(t,"int32"),o=Be(oe(s),i),u=oe(a);for(let e=0;e<o.length;++e){const t=e*u;let r=1;for(let e=0;e<u;++e)r*=n[t+e];o[e]=r}return{outVals:o,outShape:s,outDtype:i}}const RA={kernelName:er,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;JC(s,"prod");const o=s.shape.length,u=ye(a,s.shape),l=Ac(u,o);let c=u,h=s;const p=[];null!=l&&(h=KD({inputs:{x:s},backend:n,attrs:{perm:l}}),p.push(h),c=Fc(c.length,o));const d=n.data.get(h.dataId).values,{outVals:f,outShape:m,outDtype:g}=FA(h.shape,h.dtype,d,c);let y=m;return i&&(y=Sc(m,u)),p.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(y,g,f)}};function _A(e,t,n,r){if(e===t||e<t&&n<0||t<e&&n>1)return Be(0,r);const s=Be(Math.abs(Math.ceil((t-e)/n)),r);t<e&&1===n&&(n=-1),s[0]=e;for(let e=1;e<s.length;e++)s[e]=s[e-1]+n;return s}const MA={kernelName:tr,backendName:"cpu",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,dtype:a,step:i}=n,o=_A(r,s,i,a);return t.makeTensorInfo([o.length],a,o)}},OA=tD(rr,(e=>1/e)),BA={kernelName:rr,backendName:"cpu",kernelFunc:OA},zA={kernelName:ur,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;JC(s,"resizeBilinear");const u=Re(s.shape),[l,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(oe([h,l,c,f])),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c];let x=0;const w=y[0]/b[0],v=y[1]/b[1];for(let e=0;e<h;e++)for(let t=0;t<l;t++){let n;n=i?w*(t+.5)-.5:w*t;const r=Math.max(0,Math.floor(n)),s=n-r,a=Math.min(p-1,Math.ceil(n)),o=e*u[0]+r*u[1],l=e*u[0]+a*u[1];for(let e=0;e<c;e++){let t;t=i?v*(e+.5)-.5:v*e;const n=Math.max(0,Math.floor(t)),r=t-n,a=Math.min(d-1,Math.ceil(t)),c=o+n*u[2],h=l+n*u[2],p=o+a*u[2],y=l+a*u[2];for(let e=0;e<f;e++){const t=m[c+e],n=m[h+e],a=t+(m[p+e]-t)*r,i=a+(n+(m[y+e]-n)*r-a)*s;g[x++]=i}}}return n.makeTensorInfo([h,l,c,f],"float32",g)}},LA={kernelName:lr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;JC([a,s],"resizeBilinearGrad");const o=Re(s.shape),[u,l,c,h]=s.shape,[,p,d]=a.shape,f=new Float32Array(u*l*c*h),m=[i&&p>1?l-1:l,i&&d>1?c-1:c],g=[i&&p>1?p-1:p,i&&d>1?d-1:d],y=m[0]/g[0],b=m[1]/g[1],x=n.data.get(a.dataId).values;let w=0;for(let e=0;e<u;e++){const t=e*o[0];for(let e=0;e<p;e++){const n=e*y,r=Math.floor(n),s=Math.min(Math.ceil(n),l-1),a=t+r*o[1],i=t+s*o[1],u=n-r,p=1-u;for(let e=0;e<d;e++){const t=e*b,n=Math.floor(t),r=Math.min(Math.ceil(t),c-1),s=t-n,l=1-s,d=a+n*o[2],m=a+r*o[2],g=i+n*o[2],y=i+r*o[2],v=p*l,k=p*s,N=u*l,I=u*s;for(let e=0;e<h;e++){const t=x[w++];f[d+e]+=t*v,f[m+e]+=t*k,f[g+e]+=t*N,f[y+e]+=t*I}}}}return n.makeTensorInfo([u,c,l,h],"float32",f)}},PA={kernelName:ir,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r;JC(s,"resizeNearestNeighbor");const u=Re(s.shape),[l,c]=o,[h,p,d,f]=s.shape,m=n.data.get(s.dataId).values,g=new Float32Array(h*l*c*f),y=[a&&l>1?p-1:p,a&&c>1?d-1:d],b=[a&&l>1?l-1:l,a&&c>1?c-1:c],x=y[0]/b[0],w=y[1]/b[1];let v=0;for(let e=0;e<h;e++){const t=e*u[0];for(let e=0;e<l;e++){const n=i?x*(e+.5):x*e;let r=Math.min(p-1,a?Math.round(n):Math.floor(n));i&&(r=Math.max(0,r));const s=t+r*u[1];for(let e=0;e<c;e++){const t=i?w*(e+.5):w*e;let n=Math.min(d-1,a?Math.round(t):Math.floor(t));i&&(n=Math.max(0,n));const r=s+n*u[2];for(let e=0;e<f;e++){const t=m[r+e];g[v++]=t}}}}return n.makeTensorInfo([h,l,c,f],s.dtype,g)}},UA={kernelName:or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r;JC([a,s],"resizeNearestNeighborGrad");const o=Re(s.shape),u=Re(a.shape),[l,c,h,p]=s.shape,[,d,f]=a.shape,m=new Float32Array(l*c*h*p),g=n.data.get(a.dataId).values,y=[i&&d>1?c-1:c,i&&f>1?h-1:h],b=[i&&d>1?d-1:d,i&&f>1?f-1:f],x=y[0]/b[0],w=y[1]/b[1],v=1/x,k=1/w,N=2*Math.ceil(v)+2,I=2*Math.ceil(k)+2;for(let e=0;e<l;e++){const t=e*o[0];for(let e=0;e<c;e++){const n=t+e*o[1],r=Math.floor(e*v),s=Math.floor(r-N/2);for(let r=0;r<h;r++){const a=n+r*o[2],l=Math.floor(r*k),y=Math.floor(l-I/2);for(let n=0;n<p;n++){let o=0;for(let a=0;a<N;a++){const l=a+s;if(l<0||l>=d)continue;const p=t+l*u[1],m=l*x;if(e===Math.min(c-1,i?Math.round(m):Math.floor(m)))for(let e=0;e<I;e++){const t=e+y;if(t<0||t>=f)continue;const s=p+t*u[2],a=t*w;r===Math.min(h-1,i?Math.round(a):Math.floor(a))&&(o+=g[s+n])}}m[a+n]=o}}}}return n.makeTensorInfo(s.shape,s.dtype,m)}},WA={kernelName:hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r;JC(s,"reverse");const i=s.shape.length,o=ye(a,s.shape);if(0===i)return aD({inputs:{x:s},backend:n});const u=new Vs(s.shape,s.dtype),l=n.bufferSync(s);for(let e=0;e<u.size;e++){const t=u.indexToLoc(e),n=t.slice();o.forEach((e=>n[e]=s.shape[e]-1-n[e])),u.set(l.get(...n),...t)}return n.makeTensorInfo(u.shape,u.dtype,u.values)}},VA={kernelName:Jr,backendName:"cpu",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=xe(r.dtype,oe(r.shape)),[l,c,h,p]=r.shape,[d,f]=zd(i,c,h),m=Math.sin(s),g=Math.cos(s),y=o.data.get(r.dataId).values;for(let e=0;e<l;e++){const t=e*h*c*p;for(let e=0;e<c;e++){const n=e*(h*p);for(let r=0;r<h;r++){const s=r*p;for(let i=0;i<p;i++){const o=[l,e,r,i],b=o[2],x=o[1];let w=(b-d)*g-(x-f)*m,v=(b-d)*m+(x-f)*g;w=Math.round(w+d),v=Math.round(v+f);let k=a;"number"!=typeof a&&(k=3===i?255:a[i]),w>=0&&w<h&&v>=0&&v<c&&(k=y[t+v*(h*p)+w*p+i]),u[t+n+s+i]=k}}}}return{dataId:o.write(u,r.shape,r.dtype),shape:r.shape,dtype:r.dtype}}},GA=tD(pr,(e=>{const t=Math.floor(e);return e-t<.5?Math.floor(e):e-t>.5?Math.ceil(e):t%2==0?t:t+1})),jA={kernelName:pr,backendName:"cpu",kernelFunc:GA},HA=yD((e=>1/Math.sqrt(e))),qA=nD(dr,HA),KA={kernelName:dr,backendName:"cpu",kernelFunc:qA};function XA(e,t,n,r,s,a,i,o,u,l){const c=[r/s,s],h=e.values,p=t.values;if(0===r)return Ii(n,t.dtype);const d=Ii(c,t.dtype);d.values.fill(u);for(let e=0;e<a;e++){const a=[];let u=0;for(let t=0;t<i;t++){const n=h[e*i+t];a.push(n),u+=n*o[t]}if(u<0||u>=r/s)throw new Error(`Invalid indices: ${a} does not index into ${n}`);for(let n=0;n<s;n++)l?d.values[u*s+n]+=p[e*s+n]:d.values[u*s+n]=0===t.rank?p[0]:p[e*s+n]}return d}const YA={kernelName:fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=oo(0,s,i),p=XA(n.bufferSync(s),n.bufferSync(a),i,h,l,u,o,c,0,!0);return n.makeTensorInfo(i,p.dtype,p.values)}},ZA={kernelName:mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t;JC([r,s,a],"select");const i=r.shape.length,o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=na(s.dtype,a.dtype),h=Be(oe(s.shape),c);let p=0;const d=0===i||i>1||1===s.shape.length?1:oe(s.shape.slice(1));for(let e=0;e<o.length;e++)for(let t=0;t<d;t++)1===o[e]?h[p++]=u[e]:h[p++]=l[e];return n.makeTensorInfo(s.shape,c,h)}},JA=Gd,QA=jd,e$=tD(gr,(e=>e>=0?QA*e:JA*(Math.exp(e)-1))),t$={kernelName:gr,backendName:"cpu",kernelFunc:e$},n$=tD(wr,(e=>e<0?-1:e>0?1:0)),r$={kernelName:wr,backendName:"cpu",kernelFunc:n$},s$=tD(br,(e=>Math.sin(e))),a$={kernelName:br,backendName:"cpu",kernelFunc:s$},i$=tD(xr,(e=>Math.sinh(e))),o$={kernelName:xr,backendName:"cpu",kernelFunc:i$},u$=Math.log(1.1920928955078125e-7)+2,l$=tD(kr,(e=>{const t=e>-u$,n=e<u$,r=Math.exp(e);let s;return s=n?r:t?e:Math.log(1+r),s})),c$={kernelName:kr,backendName:"cpu",kernelFunc:l$},h$={kernelName:Cr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;JC([s],"spaceToBatchND");const o=oe(a),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=SA.kernelFunc({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),c=Ld(l.shape,a,o,!1),h=Pd(c.length,a.length,!1),p=Ud(l.shape,a,o,!1),d=MD({inputs:{x:l},backend:n,attrs:{shape:c}}),f=KD({inputs:{x:d},backend:n,attrs:{perm:h}}),m=MD({inputs:{x:f},backend:n,attrs:{shape:p}});return n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),m}};function p$(e,t,n,r,s,a,i){const o=t[0],u=a[0],l=new Array(u),c=new Array(o),h=t[1];if(0===u){if(0!==o)throw new Error(gf(o));return[we(n,0),[0,h],we(s,0),l,c]}let p=!0,d=0;const f=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h];if(n<0)throw new Error(yf(t,n));if(n>=u)throw new Error(bf(t,n,u));++f[n],p=p&&n>=d,d=n}let m=!0;for(let e=0;e<u;++e){const t=0===f[e];l[e]=t,m=m&&!t,f[e]=Math.max(f[e],1),e>0&&(f[e]+=f[e-1])}if(m&&p){const t=e,n=r;for(let e=0;e<o;++e)c[e]=e;return[t,[o,h],n,l,c]}{const t=f[u-1],a=we(n,t*h),p=we(s,t),d=new Array(u).fill(0);for(let t=0;t<o;++t){const n=e[t*h],s=d[n],i=(0===n?0:f[n-1])+s;d[n]++;for(let n=0;n<h;++n)a[i*h+n]=e[t*h+n];p[i]=r[t],c[t]=i}for(let e=0;e<u;++e)if(0===d[e]){const t=0===e?0:f[e-1];a[t*h+0]=e;for(let e=1;e<h;++e)a[t*h+e]=0;p[t]=i}return[a,[t,h],p,l,c]}}const d$={kernelName:Sr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n        ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n        ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.data.get(r.dataId).values,u=n.data.get(s.dataId).values,l=n.data.get(a.dataId).values,c=n.data.get(i.dataId).values[0],[h,p,d,f,m]=p$(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}};function f$(e,t,n,r,s){const a=oe(r),i=t[0],o=s.length,u=[];let l=1,c=-1;for(let e=0;e<o;++e){const t=s[e];if(-1===t){if(-1!==c)throw new Error(xf(c,e));c=e,u.push(1)}else{if(t<0)throw new Error(wf(e,t));l*=t,u.push(t)}}if(-1!==c){if(l<=0)throw new Error("reshape cannot infer the missing input size for an empty tensor unless all specified input sizes are non-zero");const e=Math.trunc(a/l);if(l*e!==a)throw new Error(kf(r,u));u[c]=e}if(oe(u)!==a)throw new Error(Nf(r,u));const h=r.length,p=[];if(h>0){p[h-1]=1;for(let e=h-2;e>=0;--e)p[e]=p[e+1]*r[e+1]}const d=[];if(o>0){d[o-1]=1;for(let e=o-2;e>=0;--e)d[e]=d[e+1]*u[e+1]}const f=we(n,i*o);for(let t=0;t<i;++t){let n=0;for(let r=0;r<h;++r)n+=e[t*h+r]*p[r];for(let e=0;e<o;++e)f[t*o+e]=Math.trunc(n/d[e]),n%=d[e]}return[f,[i,o],u]}const m$={kernelName:Tr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape\n        ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape\n        ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.data.get(s.dataId).values),o=n.data.get(r.dataId).values,u=Array.from(n.data.get(a.dataId).values),[l,c,h]=f$(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}};function g$(e,t,n,r,s,a=!1,i=0){const o=r.length,u=[t[0],e.length/t[0]],l=u[1],c=o>0?s[o-1]+1:0;if(c<0)throw new Error("segment ids must be >= 0");const h=t.slice();h[0]=c;const p=h.reduce(((e,t)=>e*t),1),d=we(n,p);if(0===o)return c>0&&d.fill(i),[d,h];if(c<=0)throw new Error("segment ids must be >= 0");let f=0,m=1,g=0,y=s[f];for(;;){let t=0;if(m<o){if(t=s[m],y===t){++m;continue}if(y>=t)throw new Error("segment ids are not increasing")}if(y<0||y>=c)throw new Error(Df(y,c));y>g&&d.fill(i,g*l,y*l);for(let t=f;t<m;++t){const n=r[t];if(n<0||n>=u[0])throw new Error(Ef(t,r[t],u[0]));for(let t=0;t<l;t++)d[y*l+t]+=e[n*l+t]}if(a)for(let e=0;e<l;e++)d[y*l+e]/=m-f;if(f=m,++m,g=y+1,y=t,m>o)break}return g<c&&d.fill(i,g*l,c*l),[d,h]}const y$={kernelName:Ar,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n          ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n          ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=g$(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},b$={kernelName:$r,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n         ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n         ${a.shape}`);if(s.shape[0]!==a.shape[0])throw new Error("segmentIds and indices should have same size.");const i=n.data.get(r.dataId).values,o=n.data.get(s.dataId).values,u=n.data.get(a.dataId).values,[l,c]=g$(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},x$={kernelName:Fr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,sliceSize:c,strides:h,outputSize:p}=oo(0,s,o),d=XA(n.bufferSync(s),n.bufferSync(a),o,p,c,l,u,h,n.data.get(i.dataId).values[0],!1);return n.makeTensorInfo(o,d.dtype,d.values)}},w$={kernelName:Dr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ye(i,s.shape)[0],u=mf(s,a,o),l=new Array(s.shape.length).fill(0),c=s.shape.slice();return u.map((e=>{const t=[...c];t[o]=e;const r=wE({inputs:{x:s},backend:n,attrs:{begin:l,size:t}});return l[o]+=e,r}))}},v$=yD((e=>Math.sqrt(e))),k$=tD(Nr,(e=>Math.sqrt(e))),N$={kernelName:Nr,backendName:"cpu",kernelFunc:k$},I$={kernelName:_r,backendName:"cpu",kernelFunc:({inputs:e,backend:t})=>{const{x:n}=e,r=t;JC(n,"square");const s=r.data.get(n.dataId).values,a=new Float32Array(s.length);for(let e=0;e<s.length;++e){const t=s[e];a[e]=t*t}return{dataId:r.write(a,n.shape,n.dtype),shape:n.shape,dtype:n.dtype}}},C$=lD(((e,t)=>{const n=e-t;return n*n})),D$=TD(Rr,C$),E$={kernelName:Rr,backendName:"cpu",kernelFunc:D$},S$=tD(Yr,((e,t)=>{const n=t;return isNaN(e)?NaN:e>0?1:n.alpha})),T$={kernelName:Yr,backendName:"cpu",kernelFunc:S$};function A$(e,t,n,r){const s=Ii(e,t.dtype);for(let e=0;e<s.size;e++){const a=s.indexToLoc(e),i=new Array(a.length);for(let e=0;e<i.length;e++)i[e]=a[e]*n[e]+r[e];s.set(t.get(...i),...a)}return s}const $$={kernelName:Mr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r;JC(s,"stridedSlice");const{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Io(s.shape,a,i,o,u,l,c,h,p);let v;if(m)v=MD({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){re(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=co(b,x,w),t=wE({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=MD({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else{const e=A$(d,n.bufferSync(s),w,b);v=n.makeTensorInfo(f,e.dtype,e.values)}return v}};class F${constructor(e,t,n,r,s,a){this.separator=Rs(e),this.nGramWidths=t,this.leftPad=Rs(n),this.rightPad=Rs(r),this.padWidth=s,this.preserveShort=a}getPadWidth(e){return Math.min(this.padWidth<0?e-1:this.padWidth,e-1)}getNumNGrams(e,t){const n=this.getPadWidth(t);return Math.max(0,e+2*n-t+1)}createNGrams(e,t,n,r,s,a){for(let i=0;i<s;++i){const o=this.getPadWidth(a),u=Math.max(0,o-i),l=Math.max(0,o-(s-(i+1))),c=a-(u+l),h=t+(u>0?0:i-o);let p=0;p+=u*this.leftPad.length;for(let t=0;t<c;++t)p+=e[h+t].length;p+=l*this.rightPad.length,p+=(u+l+c-1)*this.separator.length,n[r+i]=new Uint8Array(p);const d=n[r+i];let f=0;const m=e=>e.forEach((e=>d[f++]=e));for(let e=0;e<u;++e)m(this.leftPad),m(this.separator);for(let t=0;t<c-1;++t)m(e[h+t]),m(this.separator);if(c>0){m(e[h+c-1]);for(let e=0;e<l;++e)m(this.separator),m(this.rightPad)}else{for(let e=0;e<l-1;++e)m(this.rightPad),m(this.separator);m(this.rightPad)}}}compute(e,t){const n=e.length,r=t.length;if(r>0){let e=t[0];if(0!==e)throw new Error(`First split value must be 0, got ${e}`);for(let s=1;s<r;++s){let r=t[s]>=e;if(r=r&&t[s]<=n,!r)throw new Error(`Invalid split value ${t[s]}, must be in [${e}, ${n}]`);e=t[s]}if(e!==n)throw new Error(`Last split value must be data size. Expected ${n}, got ${e}`)}const s=r-1,a=we("int32",r);if(0===n||0===r){const e=new Array(n);for(let e=0;e<=s;++e)a[e]=0;return[e,a]}a[0]=0;for(let e=1;e<=s;++e){const n=t[e]-t[e-1];let r=0;this.nGramWidths.forEach((e=>{r+=this.getNumNGrams(n,e)})),this.preserveShort&&n>0&&0===r&&(r=1),a[e]=a[e-1]+r}const i=new Array(a[s]);for(let n=0;n<s;++n){const r=t[n];let s=a[n];if(this.nGramWidths.forEach((a=>{const o=t[n+1]-t[n],u=this.getNumNGrams(o,a);this.createNGrams(e,r,i,s,u,a),s+=u})),this.preserveShort&&s===a[n]){const a=t[n+1]-t[n];if(0===a)continue;const o=a+2*this.padWidth,u=1;this.createNGrams(e,r,i,s,u,o)}}return[i,a]}}function R$(e,t,n,r,s,a,i,o){return new F$(n,r,s,a,i,o).compute(e,t)}const _$={kernelName:Or,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.data.get(c.dataId).values,d=n.data.get(h.dataId).values,[f,m]=R$(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}};function M$(e,t,n,r){if(!e.length)return;if(0===t.length){for(let t=0;t<e.length;++t)r.push(e.subarray(t,t+1));return}if(1===t.length){const s=t[0];let a=e.indexOf(s);for(;-1!==a;){const t=e.subarray(0,a);n&&0===t.length||r.push(t),a=(e=e.subarray(a+1)).indexOf(s)}return void(n&&0===e.length||r.push(e))}let s=0;for(let a=0;a<e.length+1;a++)if(a===e.length||-1!==t.indexOf(e[a])){const t=e.subarray(s,a);n&&0===t.length||r.push(t),s=a+1}}function O$(e,t,n){const r=e.length,s=[];let a=0,i=0;const o=new Array(r);for(let u=0;u<r;++u){const r=s.length;M$(e[u],t,n,s);const l=s.length-r;o[u]=l,a+=l,i=Math.max(i,l)}const u=we("int32",2*a),l=new Array(a),c=[r,i];let h=0;for(let e=0;e<r;++e)for(let t=0;t<o[e];++t)u[2*h]=e,u[2*h+1]=t,l[h]=s[h],++h;return[u,l,c]}const B$={kernelName:Br,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.data.get(a.dataId).values,u=n.data.get(i.dataId).values[0],[l,c,h]=O$(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}};function z$(e,t){const n=we("int32",e.length);for(let r=0;r<e.length;++r)n[r]=Ss(e[r]).modulo(t).getLowBitsUnsigned();return n}const L$={kernelName:zr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=z$(n.data.get(a.dataId).values,s);return n.makeTensorInfo(a.shape,"int32",i)}},P$=tD(Pr,(e=>Math.tan(e))),U$={kernelName:Pr,backendName:"cpu",kernelFunc:P$},W$=tD(Ur,(e=>Math.tanh(e)));function V$(e,t){const n=new Array(e.rank);for(let r=0;r<n.length;r++)n[r]=e.shape[r]*t[r];const r=Ii(n,e.dtype);for(let t=0;t<r.values.length;++t){const n=r.indexToLoc(t),s=new Array(e.rank);for(let t=0;t<s.length;t++)s[t]=n[t]%e.shape[t];const a=e.locToIndex(s);r.values[t]=e.values[a]}return r}const G$=(e,t)=>{const n=t.value-e.value;return 0===n?e.index-t.index:n};function j$(e,t,n=0,r=e.length-1){for(;r>n;){if(r-n>600){const s=r-n+1,a=t-n+1,i=Math.log(s),o=.5*Math.exp(2*i/3),u=.5*Math.sqrt(i*o*(s-o)/s)*Math.sign(a-s/2);j$(e,t,Math.max(n,Math.floor(t-a*o/s+u)),Math.min(r,Math.floor(t+(s-a)*o/s+u)))}const s=e[t];let a=n,i=r;for(Q(e,n,t),G$(e[r],s)>0&&Q(e,n,r);a<i;){for(Q(e,a,i),a++,i--;G$(e[a],s)<0;)a+=1;for(;G$(e[i],s)>0;)i-=1}0===G$(e[n],s)?Q(e,n,i):(i+=1,Q(e,i,r)),i<=t&&(n=i+1),t<=i&&(r=i-1)}}function H$(e,t,n,r,s){const a=t[t.length-1],[i,o]=[e.length/a,a],u=xe(n,i*r),l=xe("int32",i*r);for(let t=0;t<i;t++){const n=t*o,a=e.subarray(n,n+o);let i=new Array(a.length);a.forEach(((e,t)=>i[t]={value:e,index:t})),r<i.length&&(j$(i,r),i=i.slice(0,r)),s&&i.sort(G$);const c=t*r,h=u.subarray(c,c+r),p=l.subarray(c,c+r);for(let e=0;e<r;e++)h[e]=i[e].value,p[e]=i[e].index}const c=t.slice();return c[c.length-1]=r,[Ii(c,n,u),Ii(c,"int32",l)]}const q$={kernelName:Gr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=n,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=[c,f,m,d],y=Re(s.shape),b=y[0],x=y[1],w=y[2],v=xe(s.dtype,oe(g));v.fill(u);const k=r.data.get(s.dataId).values,N=r.data.get(a.dataId).values;for(let e=0;e<c;++e){const t=1===a.shape[0]?N:N.subarray(8*e,8*e+8);for(let n=0;n<f;++n)for(let r=0;r<m;++r)for(let s=0;s<d;++s){let a;const l=t[6]*r+t[7]*n+1;if(0===l)continue;const c=(t[0]*r+t[1]*n+t[2])/l,d=(t[3]*r+t[4]*n+t[5])/l,f=K$(c,p,o),m=K$(d,h,o);switch(i){case"nearest":a=Y$(k,h,p,b,x,w,e,m,f,s,u);break;case"bilinear":a=Z$(k,h,p,b,x,w,e,m,f,s,u);break;default:throw new Error(`Error in Transform: Expect 'nearest' or 'bilinear', but got ${i}`)}v[e*b+n*x+r*w+s]=a}return r.makeTensorInfo(g,s.dtype,v)}return{dataId:r.write(v,g,s.dtype),shape:s.shape,dtype:s.dtype}}};function K$(e,t,n){switch(n){case"reflect":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=2*t;n<e&&(n=e*Math.trunc(-n/e)+n),n=n<-t?n+e:-n-1}else if(n>t-1)if(t<=1)n=0;else{const e=2*t;n-=e*Math.trunc(n/e),n>=t&&(n=e-n-1)}return Z(0,n,t-1)}(e,t);case"wrap":return function(e,t){let n=e;if(n<0)if(t<=1)n=0;else{const e=t-1;n+=t*(Math.trunc(-n/e)+1)}else if(n>t-1)if(t<=1)n=0;else{const e=t-1;n-=t*Math.trunc(n/e)}return Z(0,n,t-1)}(e,t);case"nearest":return function(e,t){return Z(0,e,t-1)}(e,t);default:return function(e,t){return e}(e)}}function X$(e,t,n,r,s,a,i,o,u,l,c){return 0<=o&&o<t&&0<=u&&u<n?e[i*r+o*s+u*a+l]:c}function Y$(e,t,n,r,s,a,i,o,u,l,c){return X$(e,t,n,r,s,a,i,Math.round(o),Math.round(u),l,c)}function Z$(e,t,n,r,s,a,i,o,u,l,c){const h=Math.floor(o),p=Math.floor(u),d=h+1,f=p+1;return(d-o)*((f-u)*X$(e,t,n,r,s,a,i,h,p,l,c)+(u-p)*X$(e,t,n,r,s,a,i,h,f,l,c))+(o-h)*((f-u)*X$(e,t,n,r,s,a,i,d,p,l,c)+(u-p)*X$(e,t,n,r,s,a,i,d,f,l,c))}function J$(e,t,n,r){const s=ye(t,n)[0],a=[1,n[0],1];for(let e=0;e<s;e++)a[0]*=n[e];a[1]=n[s];for(let e=s+1;e<n.length;e++)a[2]*=n[e];const i={},o=new Int32Array(n[s]),u=new Vs(a,r,e),l=[],c=1===a[0]&&1===a[2];for(let t=0;t<n[s];t++){let n;if(c)n=e[t].toString();else{const e=[];for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)e.push(u.get(n,t,r));n=e.join(",")}if(void 0!==i[n])o[t]=i[n];else{const e=Object.keys(i).length;i[n]=e,o[t]=e,l.push(t)}}const h=a.slice();h[1]=Object.keys(i).length;const p=new Vs(h,r);l.forEach(((e,t)=>{for(let n=0;n<a[0];n++)for(let r=0;r<a[2];r++)p.set(u.get(n,e,r),n,t,r)}));const d=n.slice();return d[s]=h[1],{outputValues:p.values,outputShape:d,indices:o}}const Q$={kernelName:Kr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r;JC(s,"unsortedSegmentSum");const o=[],u=[],l=s.shape.length-a.shape.length;let c=a;for(let e=0;e<l;++e){const t=TS({inputs:{input:c},backend:n,attrs:{dim:e+1}});c=t,u.push(t)}for(let e=0;e<i;++e){const t=Ts(e,"int32"),r=n.makeTensorInfo([],"int32",t),a=gS({inputs:{a:r,b:c},backend:n}),i=ED({inputs:{x:a},backend:n,attrs:{dtype:"float32"}}),l=lS({inputs:{a:i,b:s},backend:n}),h=hS({inputs:{x:l},backend:n,attrs:{axis:0,keepDims:!1}});o.push(h),u.push(r),u.push(a),u.push(i),u.push(l),u.push(h)}const h=DA({inputs:o,backend:n,attrs:{axis:0}});return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),h}},eF=[LD,UD,VD,jD,_D,HD,YD,ZD,JD,QD,tE,rE,aE,uE,cE,fE,mE,gE,yE,zD,bE,kE,CE,DE,SD,TE,$E,ND,FE,BE,LE,PE,UE,WE,VE,GE,HE,KE,XE,YE,ZE,JE,eS,tS,nS,rS,sS,aS,iS,dS,sD,fS,yS,CS,SS,AS,RS,GS,HS,qS,YS,QS,eT,tT,rT,aT,uT,hT,iD,pT,ME,fT,gT,bT,uD,vT,IT,DT,TT,$T,_T,OT,LT,PT,UT,GT,qT,KT,XT,YT,ZT,JT,QT,eA,rA,sA,oA,cA,cS,pA,fA,gA,bA,vA,kA,CA,EA,SA,$A,pD,RA,MA,DD,OS,BA,fD,gD,OD,zA,LA,PA,UA,WA,VA,jA,KA,YA,ZA,t$,wD,r$,a$,o$,vE,lA,c$,h$,d$,m$,y$,b$,x$,w$,N$,I$,E$,T$,$$,_$,B$,L$,PS,pS,U$,{kernelName:Ur,backendName:"cpu",kernelFunc:W$},{kernelName:Wr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;JC(s,"tile");const i=V$(n.bufferSync(s),a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}},{kernelName:Vr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r;JC(s,"topk");const o=n.data.get(s.dataId).values,[u,l]=H$(o,s.shape,s.dtype,a,i);return[n.makeTensorInfo(u.shape,u.dtype,u.values),n.makeTensorInfo(l.shape,l.dtype,l.values)]}},q$,XD,{kernelName:Hr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;JC(a,"unique");const i=r.data.get(a.dataId).values,{outputValues:o,outputShape:u,indices:l}=J$(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},{kernelName:qr,backendName:"cpu",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s.shape.length,o=s.shape[a],u=new Array(i-1);let l=0;for(let e=0;e<i;e++)e!==a&&(u[l++]=s.shape[e]);const c=new Array(i).fill(0),h=s.shape.slice();h[a]=1;const p=new Array(o);for(let e=0;e<p.length;e++){c[a]=e;const t=wE({inputs:{x:s},backend:n,attrs:{begin:c,size:h}});p[e]=MD({inputs:{x:t},backend:n,attrs:{shape:u}}),n.disposeIntermediateTensorInfo(t)}return p}},Q$,IA];for(const e of eF)ls(e);const tF={},nF={alpha:!1,antialias:!1,premultipliedAlpha:!1,preserveDrawingBuffer:!1,depth:!1,stencil:!1,failIfMajorPerformanceCaveat:!0};function rF(e,t){if(!(e in tF)){const n=function(e,t){if(1!==e&&2!==e)throw new Error("Cannot get WebGL rendering context, WebGL is disabled.");const n=null==t?function(e){if("undefined"!=typeof OffscreenCanvas&&2===e)return new OffscreenCanvas(300,150);if("undefined"!=typeof document)return document.createElement("canvas");throw new Error("Cannot create a canvas in this context")}(e):t;return n.addEventListener("webglcontextlost",(t=>{t.preventDefault(),delete tF[e]}),!1),1===e?n.getContext("webgl",nF)||n.getContext("experimental-webgl",nF):n.getContext("webgl2",nF)}(e,t);if(null===n)return console.log("Could not get context for WebGL version",e),null;tF[e]=n}const n=tF[e];return null==n||n.isContextLost()?(delete tF[e],rF(e)):(n.disable(n.DEPTH_TEST),n.disable(n.STENCIL_TEST),n.disable(n.BLEND),n.disable(n.DITHER),n.disable(n.POLYGON_OFFSET_FILL),n.disable(n.SAMPLE_COVERAGE),n.enable(n.SCISSOR_TEST),n.enable(n.CULL_FACE),n.cullFace(n.BACK),tF[e])}var sF,aF,iF;function oF(e,t){return[t,e]}function uF(e){const t=oe(e);return pe(Math.ceil(t/4))}function lF(e,t){return[Math.max(1,Math.ceil(t/2)),Math.max(1,Math.ceil(e/2))]}function cF(e,t){const n=e;let r,s,a,i,o,u,l,c,h,p;return 2===je().getNumber("WEBGL_VERSION")?(r=n.R32F,s=n.R16F,a=n.RGBA16F,i=n.RGBA32F,o=n.RED,l=4,c=1,h=n.HALF_FLOAT,p=n.FLOAT,u=n.RGBA8):(r=e.RGBA,s=e.RGBA,a=e.RGBA,i=n.RGBA,o=e.RGBA,l=4,c=4,h=null!=t?t.HALF_FLOAT_OES:null,p=e.FLOAT,u=e.RGBA),{internalFormatFloat:r,internalFormatHalfFloat:s,internalFormatPackedHalfFloat:a,internalFormatPackedFloat:i,textureFormatFloat:o,downloadTextureFormat:u,downloadUnpackNumChannels:l,defaultNumChannels:c,textureTypeHalfFloat:h,textureTypeFloat:p}}function hF(e,t){const n=t();return je().getBool("DEBUG")&&function(e){const t=e.getError();if(t!==e.NO_ERROR)throw new Error("WebGL Error: "+function(e,t){switch(t){case e.NO_ERROR:return"NO_ERROR";case e.INVALID_ENUM:return"INVALID_ENUM";case e.INVALID_VALUE:return"INVALID_VALUE";case e.INVALID_OPERATION:return"INVALID_OPERATION";case e.INVALID_FRAMEBUFFER_OPERATION:return"INVALID_FRAMEBUFFER_OPERATION";case e.OUT_OF_MEMORY:return"OUT_OF_MEMORY";case e.CONTEXT_LOST_WEBGL:return"CONTEXT_LOST_WEBGL";default:return`Unknown error code ${t}`}}(e,t))}(e),n}function pF(e){return!!(je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")||0===e||5.96e-8<Math.abs(e)&&Math.abs(e)<65504)}function dF(e,t){return vF(e,(()=>e.getExtension(t)),'Extension "'+t+'" not supported on this browser.')}!function(e){e[e.DENSE=0]="DENSE",e[e.SHARED_BATCH=1]="SHARED_BATCH"}(sF||(sF={})),function(e){e[e.RENDER=0]="RENDER",e[e.UPLOAD=1]="UPLOAD",e[e.PIXELS=2]="PIXELS",e[e.DOWNLOAD=3]="DOWNLOAD"}(aF||(aF={})),function(e){e[e.UNPACKED_FLOAT16=0]="UNPACKED_FLOAT16",e[e.UNPACKED_FLOAT32=1]="UNPACKED_FLOAT32",e[e.PACKED_4X1_UNSIGNED_BYTE=2]="PACKED_4X1_UNSIGNED_BYTE",e[e.PACKED_2X2_FLOAT32=3]="PACKED_2X2_FLOAT32",e[e.PACKED_2X2_FLOAT16=4]="PACKED_2X2_FLOAT16"}(iF||(iF={}));const fF=/ERROR: [0-9]+:([0-9]+):/g;function mF(e,t){if(hF(e,(()=>e.validateProgram(t))),!1===e.getProgramParameter(t,e.VALIDATE_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Shader program validation failed.")}function gF(e,t,n,r,s,a,i){const o=e.getAttribLocation(t,n);return-1!==o&&(hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,r))),hF(e,(()=>e.vertexAttribPointer(o,s,e.FLOAT,!1,a,i))),hF(e,(()=>e.enableVertexAttribArray(o))),!0)}function yF(e,t,n,r){hF(e,(()=>function(e,t,n){(function(e,t){const n=e.MAX_COMBINED_TEXTURE_IMAGE_UNITS-1,r=t+e.TEXTURE0;if(r<e.TEXTURE0||r>n)throw new Error(`textureUnit must be in [gl.TEXTURE0, gl.TEXTURE${n}].`)})(e,n),hF(e,(()=>e.activeTexture(e.TEXTURE0+n))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,t)))}(e,t,r))),hF(e,(()=>e.uniform1i(n,r)))}function bF(e,t,n){hF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,n))),hF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,t,0)))}function xF(e,t){hF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,t))),hF(e,(()=>e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,null,0)))}function wF(e){const t=e.checkFramebufferStatus(e.FRAMEBUFFER);if(t!==e.FRAMEBUFFER_COMPLETE)throw new Error("Error binding framebuffer: "+function(e,t){switch(t){case e.FRAMEBUFFER_INCOMPLETE_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT:return"FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT";case e.FRAMEBUFFER_INCOMPLETE_DIMENSIONS:return"FRAMEBUFFER_INCOMPLETE_DIMENSIONS";case e.FRAMEBUFFER_UNSUPPORTED:return"FRAMEBUFFER_UNSUPPORTED";default:return`unknown error ${t}`}}(e,t))}function vF(e,t,n){const r=hF(e,(()=>t()));if(null==r)throw new Error(n);return r}function kF(e,t=2){return oe(e.slice(0,e.length-t))}function NF(e){if(0===e.length)throw Error("Cannot get rows and columns of an empty shape array.");return[e.length>1?e[e.length-2]:1,e[e.length-1]]}function IF(e){let t=[1,1,1];return 0===e.length||1===e.length&&1===e[0]||(t=[kF(e),...NF(e)]),t}function CF(e){return e%2==0}function DF(e,t){if(le(e=e.slice(-2),t=t.slice(-2)))return!0;if(!e.length||!t.length)return!0;if(0===e[0]||0===e[1]||0===t[0]||0===t[1])return!0;if(e.length!==t.length){const n=e.slice(-1)[0],r=t.slice(-1)[0];if(n===r)return!0;if(CF(n)&&CF(r)&&(1===e[0]||1===t[0]))return!0}return e[1]===t[1]&&CF(e[0])&&CF(t[0])}let EF,SF;function TF(e,t){return null!=e.getExtension(t)}function AF(e){try{if(null!=rF(e))return!0}catch(e){return console.log("Error when getting WebGL context: ",e),!1}return!1}function $F(e){const t=cF(e),n=e.createTexture();e.bindTexture(e.TEXTURE_2D,n),e.texImage2D(e.TEXTURE_2D,0,t.internalFormatFloat,1,1,0,t.textureFormatFloat,t.textureTypeFloat,null);const r=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,r),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,n,0);const s=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(n),e.deleteFramebuffer(r),s}function FF(e,t){Array.isArray(e)||(e=[e]),e.forEach((e=>{null!=e&&re("complex64"!==e.dtype,(()=>`${t} does not support complex64 tensors in the WebGL backend.`))}))}const RF=je();function _F(){let e,t,n,r,s,a,i,o,u,l;return 2===je().getNumber("WEBGL_VERSION")?(e="#version 300 es",t="in",n="out",r="in",s="texture",a="outputColor",i="out vec4 outputColor;",o="\n      bool isnan_custom(float val) {\n        return (val > 0.0 || val < 0.0) ? false : val != 0.0;\n      }\n\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan_custom(val.x),\n          isnan_custom(val.y), isnan_custom(val.z), isnan_custom(val.w));\n      }\n\n      #define isnan(value) isnan_custom(value)\n    ",u="",l="\n      #define round(value) newRound(value)\n      int newRound(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 newRound(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "):(e="",t="attribute",n="varying",r="varying",s="texture2D",a="gl_FragColor",i="",o="\n      #define isnan(value) isnan_custom(value)\n      bool isnan_custom(float val) {\n        return (val > 0. || val < 1. || val == 0.) ? false : true;\n      }\n      bvec4 isnan_custom(vec4 val) {\n        return bvec4(isnan(val.x), isnan(val.y), isnan(val.z), isnan(val.w));\n      }\n    ",u="\n      uniform float INFINITY;\n\n      bool isinf(float val) {\n        return abs(val) == INFINITY;\n      }\n      bvec4 isinf(vec4 val) {\n        return equal(abs(val), vec4(INFINITY));\n      }\n    ",l="\n      int round(float value) {\n        return int(floor(value + 0.5));\n      }\n\n      ivec4 round(vec4 value) {\n        return ivec4(floor(value + vec4(0.5)));\n      }\n    "),{version:e,attribute:t,varyingVs:n,varyingFs:r,texture2D:s,output:a,defineOutput:i,defineSpecialNaN:o,defineSpecialInf:u,defineRound:l}}function MF(e,t,n="index"){const r=Re(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${t}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${t}`:`index -= ${e[s]} * ${t}`};`)).join("")}function OF(e,t,n="index"){const r=Re(t);return r.map(((t,s)=>`int ${e[s]} = ${n} / outShapeStrides[${s}]; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * outShapeStrides[${s}]`:`index -= ${e[s]} * outShapeStrides[${s}]`};`)).join("")}function BF(e){const t=Re(e).map((e=>e.toString()));return`\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * ${t[0]} + coords.y * ${t[1]} + coords.z;\n  }\n`}RF.registerFlag("HAS_WEBGL",(()=>RF.getNumber("WEBGL_VERSION")>0)),RF.registerFlag("WEBGL_VERSION",(()=>AF(2)?2:AF(1)?1:0)),RF.registerFlag("WEBGL_CHECK_NUMERICAL_PROBLEMS",(()=>!1)),RF.registerFlag("WEBGL_BUFFER_SUPPORTED",(()=>2===RF.get("WEBGL_VERSION"))),RF.registerFlag("WEBGL_CPU_FORWARD",(()=>!0)),RF.registerFlag("WEBGL_FORCE_F16_TEXTURES",(()=>!1)),RF.registerFlag("WEBGL_PACK",(()=>RF.getBool("HAS_WEBGL"))),RF.registerFlag("WEBGL_PACK_NORMALIZATION",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_PACK_CLIP",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_PACK_DEPTHWISECONV",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_PACK_BINARY_OPERATIONS",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_PACK_UNARY_OPERATIONS",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_PACK_ARRAY_OPERATIONS",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_PACK_IMAGE_OPERATIONS",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_PACK_REDUCE",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_LAZILY_UNPACK",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_CONV_IM2COL",(()=>RF.getBool("WEBGL_PACK"))),RF.registerFlag("WEBGL_MAX_TEXTURE_SIZE",(()=>function(e){if(null==EF){const t=rF(e);EF=t.getParameter(t.MAX_TEXTURE_SIZE)}return EF}(RF.getNumber("WEBGL_VERSION")))),RF.registerFlag("WEBGL_MAX_TEXTURES_IN_SHADER",(()=>function(e){if(null==SF){const t=rF(e);SF=t.getParameter(t.MAX_TEXTURE_IMAGE_UNITS)}return Math.min(16,SF)}(RF.getNumber("WEBGL_VERSION")))),RF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION",(()=>{const e=RF.getNumber("WEBGL_VERSION");return 0===e?0:function(e){if(0===e)return 0;let t;const n=rF(e);return t=TF(n,"EXT_disjoint_timer_query_webgl2")&&2===e?2:TF(n,"EXT_disjoint_timer_query")?1:0,t}(e)})),RF.registerFlag("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE",(()=>RF.getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0&&!ya())),RF.registerFlag("WEBGL_RENDER_FLOAT32_CAPABLE",(()=>function(e){if(0===e)return!1;const t=rF(e);if(1===e){if(!TF(t,"OES_texture_float"))return!1}else if(!TF(t,"EXT_color_buffer_float"))return!1;return $F(t)}(RF.getNumber("WEBGL_VERSION")))),RF.registerFlag("WEBGL_RENDER_FLOAT32_ENABLED",(()=>!RF.getBool("WEBGL_FORCE_F16_TEXTURES")&&RF.getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))),RF.registerFlag("WEBGL_DOWNLOAD_FLOAT_ENABLED",(()=>function(e){if(0===e)return!1;const t=rF(e);if(1!==e){if(TF(t,"EXT_color_buffer_float"))return $F(t);const e="EXT_color_buffer_half_float";if(TF(t,e)){const n=t.getExtension(e);return function(e,t){const n=cF(e,t),r=e.createTexture();e.bindTexture(e.TEXTURE_2D,r),e.texImage2D(e.TEXTURE_2D,0,n.internalFormatHalfFloat,1,1,0,n.textureFormatFloat,n.textureTypeHalfFloat,null);const s=e.createFramebuffer();e.bindFramebuffer(e.FRAMEBUFFER,s),e.framebufferTexture2D(e.FRAMEBUFFER,e.COLOR_ATTACHMENT0,e.TEXTURE_2D,r,0);const a=e.checkFramebufferStatus(e.FRAMEBUFFER)===e.FRAMEBUFFER_COMPLETE;return e.bindTexture(e.TEXTURE_2D,null),e.bindFramebuffer(e.FRAMEBUFFER,null),e.deleteTexture(r),e.deleteFramebuffer(s),a}(t,n)}return!1}return!!TF(t,"OES_texture_float")&&!!TF(t,"WEBGL_color_buffer_float")&&$F(t)}(RF.getNumber("WEBGL_VERSION")))),RF.registerFlag("WEBGL_FENCE_API_ENABLED",(()=>{return 2===(e=RF.getNumber("WEBGL_VERSION"))&&null!=rF(e).fenceSync;var e})),RF.registerFlag("WEBGL_SIZE_UPLOAD_UNIFORM",(()=>RF.getBool("WEBGL_RENDER_FLOAT32_ENABLED")?4:0)),RF.registerFlag("WEBGL_DELETE_TEXTURE_THRESHOLD",(()=>-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_DELETE_TEXTURE_THRESHOLD must be -1 (indicating never delete) or at least 0, but got ${e}.`)})),RF.registerFlag("WEBGL_FLUSH_THRESHOLD",(()=>ya()?1:-1),(e=>{if(e<0&&-1!==e)throw new Error(`WEBGL_FLUSH_THRESHOLD must be -1 (indicating never manual flush) or at least 0, but got ${e}.`)})),RF.registerFlag("CPU_HANDOFF_SIZE_THRESHOLD",(()=>128)),RF.registerFlag("WEBGL_USE_SHAPES_UNIFORMS",(()=>!1)),RF.registerFlag("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD",(()=>1e5)),RF.registerFlag("TOPK_K_CPU_HANDOFF_THRESHOLD",(()=>128));const zF="\n  const float FLOAT_MAX = 1.70141184e38;\n  const float FLOAT_MIN = 1.17549435e-38;\n\n  lowp vec4 encode_float(highp float v) {\n    if (isnan(v)) {\n      return vec4(255, 255, 255, 255);\n    }\n\n    highp float av = abs(v);\n\n    if(av < FLOAT_MIN) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    } else if(v > FLOAT_MAX) {\n      return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n    } else if(v < -FLOAT_MAX) {\n      return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n    }\n\n    highp vec4 c = vec4(0,0,0,0);\n\n    highp float e = floor(log2(av));\n    highp float m = exp2(fract(log2(av))) - 1.0;\n\n    c[2] = floor(128.0 * m);\n    m -= c[2] / 128.0;\n    c[1] = floor(32768.0 * m);\n    m -= c[1] / 32768.0;\n    c[0] = floor(8388608.0 * m);\n\n    highp float ebias = e + 127.0;\n    c[3] = floor(ebias / 2.0);\n    ebias -= c[3] * 2.0;\n    c[2] += floor(ebias) * 128.0;\n\n    c[3] += 128.0 * step(0.0, -v);\n\n    return c / 255.0;\n  }\n",{getBroadcastDims:LF}=m;function PF(e,t,n){const r=[];if(e.forEach((e=>{const t=oe(e.shapeInfo.logicalShape);if(e.shapeInfo.isUniform?r.push(`uniform float ${e.name}${t>1?`[${t}]`:""};`):(r.push(`uniform sampler2D ${e.name};`),r.push(`uniform int offset${e.name};`)),n.enableShapeUniforms){const{uniformShape:t}=YF(n.packedInputs,e.shapeInfo.logicalShape,e.shapeInfo.texShape);switch(t.length){case 1:r.push(`uniform int ${e.name}Shape;`);break;case 2:r.push(`uniform ivec2 ${e.name}Shape;`);break;case 3:r.push(`uniform ivec3 ${e.name}Shape;`);break;case 4:r.push(`uniform ivec4 ${e.name}Shape;`)}r.push(`uniform ivec2 ${e.name}TexShape;`)}})),n.enableShapeUniforms){switch(t.logicalShape.length){case 1:r.push("uniform int outShape;");break;case 2:r.push("uniform ivec2 outShape;"),r.push("uniform int outShapeStrides;");break;case 3:r.push("uniform ivec3 outShape;"),r.push("uniform ivec2 outShapeStrides;");break;case 4:r.push("uniform ivec4 outShape;"),r.push("uniform ivec3 outShapeStrides;")}r.push("uniform ivec2 outTexShape;")}n.customUniforms&&n.customUniforms.forEach((e=>{r.push(`uniform ${e.type} ${e.name}${e.arrayIndex?`[${e.arrayIndex}]`:""};`)}));const s=r.join("\n"),a=e.map((e=>function(e,t,n=!1,r){let s="";s+=n?WF(e,r):UF(e,r);const a=e.shapeInfo.logicalShape,i=t.logicalShape;return a.length<=i.length&&(s+=n?function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=e.shapeInfo.logicalShape.length,i=t.logicalShape.length,o=LF(e.shapeInfo.logicalShape,t.logicalShape),u=XF(i),l=i-a;let c;const h=["x","y","z","w","u","v"];c=0===a?"":i<2&&o.length>=1?"coords = 0;":o.map((e=>`coords.${h[e+l]} = 0;`)).join("\n");let p="";p=i<2&&a>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${h[t+l]}`)).join(", ");let d="return outputValue;";const f=1===oe(e.shapeInfo.logicalShape),m=1===oe(t.logicalShape);if(1!==a||f||m){if(f&&!m)d=1===i?"\n        return vec4(outputValue.x, outputValue.x, 0., 0.);\n      ":"\n        return vec4(outputValue.x);\n      ";else if(o.length){const e=a-2,t=a-1;o.indexOf(e)>-1&&o.indexOf(t)>-1?d="return vec4(outputValue.x);":o.indexOf(e)>-1?d="return vec4(outputValue.x, outputValue.y, outputValue.x, outputValue.y);":o.indexOf(t)>-1&&(d="return vec4(outputValue.xx, outputValue.zz);")}}else d="\n      return vec4(outputValue.xy, outputValue.xy);\n    ";return`\n    vec4 ${s}() {\n      ${u} coords = getOutputCoords();\n      ${c}\n      vec4 outputValue = get${r}(${p});\n      ${d}\n    }\n  `}(e,t):function(e,t){const n=e.name,r=n.charAt(0).toUpperCase()+n.slice(1),s="get"+r+"AtOutCoords",a=t.texShape,i=e.shapeInfo.texShape,o=e.shapeInfo.logicalShape.length,u=t.logicalShape.length;if(!e.shapeInfo.isUniform&&o===u&&null==e.shapeInfo.flatOffset&&le(i,a))return`\n      float ${s}() {\n        return sampleTexture(${n}, resultUV);\n      }\n    `;const l=XF(u),c=LF(e.shapeInfo.logicalShape,t.logicalShape),h=u-o;let p;const d=["x","y","z","w","u","v"];p=0===o?"":u<2&&c.length>=1?"coords = 0;":c.map((e=>`coords.${d[e+h]} = 0;`)).join("\n");let f="";return f=u<2&&o>0?"coords":e.shapeInfo.logicalShape.map(((e,t)=>`coords.${d[t+h]}`)).join(", "),`\n    float ${s}() {\n      ${l} coords = getOutputCoords();\n      ${p}\n      return get${r}(${f});\n    }\n  `}(e,t)),s}(e,t,n.packedInputs,n.enableShapeUniforms))).join("\n"),i=t.texShape,o=_F(),u=function(e){return`\n    float sampleTexture(sampler2D textureSampler, vec2 uv) {\n      return ${e.texture2D}(textureSampler, uv).r;\n    }\n  `}(o);let l,c,h=function(e){return`${e.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${e.varyingFs} vec2 resultUV;\n    ${e.defineOutput}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    uniform float NAN;\n    ${e.defineSpecialNaN}\n    ${e.defineSpecialInf}\n    ${e.defineRound}\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    int idiv(int a, int b, float sign) {\n      int res = a / b;\n      int mod = imod(a, b);\n      if (sign < 0. && mod != 0) {\n        res -= 1;\n      }\n      return res;\n    }\n\n    //Based on the work of Dave Hoskins\n    //https://www.shadertoy.com/view/4djSRW\n    #define HASHSCALE1 443.8975\n    float random(float seed){\n      vec2 p = resultUV * seed;\n      vec3 p3  = fract(vec3(p.xyx) * HASHSCALE1);\n      p3 += dot(p3, p3.yzx + 19.19);\n      return fract((p3.x + p3.y) * p3.z);\n    }\n\n    ${VF}\n    ${GF}\n    ${jF}\n  `}(o);return t.isPacked?(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];return 1===r[0]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ceil(float(outTexShape[1]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.x * ${r[1]}.0);\n      }\n    `:1===r[1]?n?"\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ceil(float(outTexShape[0]) / 2.0));\n      }\n    ":`\n      int getOutputCoords() {\n        return 2 * int(resultUV.y * ${r[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      return 2 * (resTexRC.x * packedTexShape[1] + resTexRC.y);\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      return 2 * (resTexRC.x * ${r[1]} + resTexRC.y);\n    }\n  `}(0,t,n);case 2:return function(e,t,n){const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)];if(le(e,t))return n?"\n      ivec2 getOutputCoords() {\n        ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n        return 2 * ivec2(resultUV.yx * vec2(packedTexShape[0], packedTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return 2 * ivec2(resultUV.yx * vec2(${r[0]}, ${r[1]}));\n      }\n    `;const s=Math.ceil(e[1]/2);return n?"\n    ivec2 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return"\n    ivec3 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      int texelsInLogicalRow = int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec3(b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[2]/2),a=s*Math.ceil(e[1]/2);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec3(b, r, c);\n    }\n  `}(e,t,n);default:return function(e,t,n){if(n)return"\n    ivec4 getOutputCoords() {\n      ivec2 packedTexShape = ivec2(ceil(float(outTexShape[0]) / 2.0), ceil(float(outTexShape[1]) / 2.0));\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(packedTexShape[0], packedTexShape[1]));\n      int index = resTexRC.x * packedTexShape[1] + resTexRC.y;\n\n      int texelsInLogicalRow = int(ceil(float(outShape[3]) / 2.0));\n      int texelsInBatch = texelsInLogicalRow * int(ceil(float(outShape[2]) / 2.0));\n      int texelsInBatchN = texelsInBatch * outShape[1];\n\n      int b2 = index / texelsInBatchN;\n      index -= b2 * texelsInBatchN;\n\n      int b = index / texelsInBatch;\n      index -= b * texelsInBatch;\n\n      int r = 2 * (index / texelsInLogicalRow);\n      int c = imod(index, texelsInLogicalRow) * 2;\n\n      return ivec4(b2, b, r, c);\n    }\n  ";const r=[Math.ceil(t[0]/2),Math.ceil(t[1]/2)],s=Math.ceil(e[e.length-1]/2),a=s*Math.ceil(e[e.length-2]/2);let i=a,o="",u="b, r, c";for(let t=2;t<e.length-1;t++)i*=e[e.length-t-1],o=`\n      int b${t} = index / ${i};\n      index -= b${t} * ${i};\n    `+o,u=`b${t}, `+u;return`\n    ivec${e.length} getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${r[0]}, ${r[1]}));\n      int index = resTexRC.x * ${r[1]} + resTexRC.y;\n\n      ${o}\n\n      int b = index / ${a};\n      index -= b * ${a};\n\n      int r = 2 * (index / ${s});\n      int c = imod(index, ${s}) * 2;\n\n      return ivec${e.length}(${u});\n    }\n  `}(e,t,n)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(vec4 val) {\n      ${e.output} = val;\n    }\n  `}(o)):(l=function(e,t,n){switch(e.length){case 0:return"\n    int getOutputCoords() {\n      return 0;\n    }\n  ";case 1:return function(e,t,n){return 1===t[0]?n?"\n      int getOutputCoords() {\n        return int(resultUV.x * float(outTexShape[1]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.x * ${t[1]}.0);\n      }\n    `:1===t[1]?n?"\n      int getOutputCoords() {\n        return int(resultUV.y * float(outTexShape[0]));\n      }\n    ":`\n      int getOutputCoords() {\n        return int(resultUV.y * ${t[0]}.0);\n      }\n    `:n?"\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      return resTexRC.x * outTexShape[1] + resTexRC.y;\n    }\n  ":`\n    int getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      return resTexRC.x * ${t[1]} + resTexRC.y;\n    }\n  `}(0,t,n);case 2:return function(e,t,n){return le(e,t)?n?"\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(outTexShape[0], outTexShape[1]));\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        return ivec2(resultUV.yx * vec2(${t[0]}, ${t[1]}));\n      }\n    `:1===e[1]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(index, 0);\n      }\n    `:1===e[0]?n?"\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(outTexShape[0], outTexShape[1]));\n        int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n        return ivec2(0, index);\n      }\n    ":`\n      ivec2 getOutputCoords() {\n        ivec2 resTexRC = ivec2(resultUV.yx *\n                               vec2(${t[0]}, ${t[1]}));\n        int index = resTexRC.x * ${t[1]} + resTexRC.y;\n        return ivec2(0, index);\n      }\n    `:n?"\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      int r = index / outShape[1];\n      int c = index - r * outShape[1];\n      return ivec2(r, c);\n    }\n  ":`\n    ivec2 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      int r = index / ${e[1]};\n      int c = index - r * ${e[1]};\n      return ivec2(r, c);\n    }\n  `}(e,t,n);case 3:return function(e,t,n){if(n)return`\n  ivec3 getOutputCoords() {\n    ivec2 resTexRC = ivec2(resultUV.yx *\n                           vec2(outTexShape[0], outTexShape[1]));\n    int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n    ${OF(["r","c","d"],e)}\n    return ivec3(r, c, d);\n  }\n`;const r=MF(["r","c","d"],e);return`\n    ivec3 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n                             vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec3(r, c, d);\n    }\n  `}(e,t,n);case 4:return function(e,t,n){if(n)return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(outTexShape[0], outTexShape[1]));\n      int index = resTexRC.x * outTexShape[1] + resTexRC.y;\n      ${OF(["r","c","d","d2"],e)}\n      return ivec4(r, c, d, d2);\n    }\n  `;const r=MF(["r","c","d","d2"],e);return`\n    ivec4 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n      ${r}\n      return ivec4(r, c, d, d2);\n    }\n  `}(e,t,n);case 5:return function(e,t){const n=MF(["r","c","d","d2","d3"],e);return`\n    ivec5 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx * vec2(${t[0]},\n                             ${t[1]}));\n\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec5 outShape = ivec5(r, c, d, d2, d3);\n      return outShape;\n    }\n  `}(e,t);case 6:return function(e,t){const n=MF(["r","c","d","d2","d3","d4"],e);return`\n    ivec6 getOutputCoords() {\n      ivec2 resTexRC = ivec2(resultUV.yx *\n        vec2(${t[0]}, ${t[1]}));\n      int index = resTexRC.x * ${t[1]} + resTexRC.y;\n\n      ${n}\n\n      ivec6 result = ivec6(r, c, d, d2, d3, d4);\n      return result;\n    }\n  `}(e,t);default:throw new Error(`${e.length}-D output sampling is not yet supported`)}}(t.logicalShape,i,n.enableShapeUniforms),c=function(e){return`\n    void setOutput(float val) {\n      ${e.output} = vec4(val, 0, 0, 0);\n    }\n  `}(o)),n.packedInputs&&(h+=HF),[h,u,c,s,l,a,n.userCode].join("\n")}function UF(e,t=!1){const n=e.shapeInfo.logicalShape;switch(n.length){case 0:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`float ${r}() {return ${n};}`;const[s,a]=e.shapeInfo.texShape;if(1===s&&1===a)return`\n      float ${r}() {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const i=qF(n);if(t)return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `;const[o,u]=e.shapeInfo.texShape;return`\n    float ${r}() {\n      vec2 uv = uvFromFlat(${o}, ${u}, ${i});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1);if(e.shapeInfo.isUniform)return`\n      float ${r}(int index) {\n        ${KF(e)}\n      }\n    `;const s=e.shapeInfo.texShape,a=s[0],i=s[1];if(1===i&&1===a)return`\n      float ${r}(int index) {\n        return sampleTexture(${n}, halfCR);\n      }\n    `;const o=qF(n);return 1===i?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / float(${n}TexShape[0]));\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2(0.5, (float(index + ${o}) + 0.5) / ${a}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `:1===a?t?`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / float(${n}TexShape[1]), 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:`\n      float ${r}(int index) {\n        vec2 uv = vec2((float(index + ${o}) + 0.5) / ${i}.0, 0.5);\n        return sampleTexture(${n}, uv);\n      }\n    `:t?`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${n}TexShape[0], ${n}TexShape[1], index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `:`\n    float ${r}(int index) {\n      vec2 uv = uvFromFlat(${a}, ${i}, index + ${o});\n      return sampleTexture(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape;if(null!=a&&le(n,a)){if(t)return`\n      float ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `;const e=a[0];return`\n    float ${s}(int row, int col) {\n      vec2 uv = (vec2(col, row) + halfCR) / vec2(${a[1]}.0, ${e}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `}const{newShape:i,keptDims:o}=be(n),u=i;if(u.length<n.length){const n=["row","col"];return`\n      ${UF(ZF(e,u),t)}\n      float ${s}(int row, int col) {\n        return ${s}(${JF(n,o)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col) {\n        int index = round(dot(vec2(row, col), vec2(${n[1]}, 1)));\n        ${KF(e)}\n      }\n    `;const l=a[0],c=a[1],h=qF(r);return 1===c?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2(0.5, (index + 0.5) / float(${r}TexShape[0]));\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2(0.5, (index + 0.5) / ${l}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `:1===l?t?`\n      float ${s}(int row, int col) {\n        float index = dot(vec3(row, col, ${h}), vec3(${r}Shape[1], 1, 1));\n        vec2 uv = vec2((index + 0.5) / float(${r}TexShape[1]), 0.5);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col) {\n      float index = dot(vec3(row, col, ${h}), vec3(${n[1]}, 1, 1));\n      vec2 uv = vec2((index + 0.5) / ${c}.0, 0.5);\n      return sampleTexture(${r}, uv);\n    }\n  `:t?`\n      float ${s}(int row, int col) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${r}Shape[1] + col + ${h};\n        vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n  float ${s}(int row, int col) {\n    // Explicitly use integer operations as dot() only works on floats.\n    int index = row * ${n[1]} + col + ${h};\n    vec2 uv = uvFromFlat(${l}, ${c}, index);\n    return sampleTexture(${r}, uv);\n  }\n`}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[1]*n[2],i=n[2],{newShape:o,keptDims:u}=be(n),l=o;if(l.length<n.length){const n=["row","col","depth"];return`\n        ${UF(ZF(e,l),t)}\n        float ${s}(int row, int col, int depth) {\n          return ${s}(${JF(n,u)});\n        }\n      `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth) {\n        int index = round(dot(vec3(row, col, depth),\n                          vec3(${a}, ${i}, 1)));\n        ${KF(e)}\n      }\n    `;const c=e.shapeInfo.texShape,h=c[0],p=c[1],d=e.shapeInfo.flatOffset;if(p===a&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        int stride1 = ${r}Shape[2];\n        float texR = float(row);\n        float texC = dot(vec2(col, depth), vec2(stride1, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n        float ${s}(int row, int col, int depth) {\n          float texR = float(row);\n          float texC = dot(vec2(col, depth), vec2(${i}, 1));\n          vec2 uv = (vec2(texC, texR) + halfCR) /\n                     vec2(${p}.0, ${h}.0);\n          return sampleTexture(${r}, uv);\n        }\n      `;if(p===i&&null==d)return t?`\n      float ${s}(int row, int col, int depth) {\n        float texR = dot(vec2(row, col), vec2(${r}Shape[1], 1));\n        float texC = float(depth);\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n    float ${s}(int row, int col, int depth) {\n      float texR = dot(vec2(row, col), vec2(${n[1]}, 1));\n      float texC = float(depth);\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${p}.0, ${h}.0);\n      return sampleTexture(${r}, uv);\n    }\n  `;const f=qF(r);return t?`\n    float ${s}(int row, int col, int depth) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int stride0 = ${r}Shape[1] * ${r}Shape[2];\n      int stride1 = ${r}Shape[2];\n      int index = row * ${a} + col * ${i} + depth + ${f};\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index);\n      return sampleTexture(${r}, uv);\n    }\n    `:`\n      float ${s}(int row, int col, int depth) {\n        // Explicitly use integer operations as dot() only works on floats.\n        int index = row * ${a} + col * ${i} + depth + ${f};\n        vec2 uv = uvFromFlat(${h}, ${p}, index);\n        return sampleTexture(${r}, uv);\n      }\n  `}(e,t);case 4:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=n[3],i=n[2]*a,o=n[1]*i,{newShape:u,keptDims:l}=be(n);if(u.length<n.length){const n=["row","col","depth","depth2"];return`\n      ${UF(ZF(e,u),t)}\n      float ${s}(int row, int col, int depth, int depth2) {\n        return ${s}(${JF(n,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${s}(int row, int col, int depth, int depth2) {\n        int index = round(dot(vec4(row, col, depth, depth2),\n                          vec4(${o}, ${i}, ${a}, 1)));\n        ${KF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1],f=`int stride2 = ${r}Shape[3];`,m=`int stride1 = ${r}Shape[2] * stride2;`,g=`int stride0 = ${r}Shape[1] * stride1;`;if(d===o&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        ${f}\n        ${m}\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(stride1, stride2, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = float(row);\n        float texC =\n            dot(vec3(col, depth, depth2),\n                vec3(${i}, ${a}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;if(d===a&&null==c)return t?`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${r}Shape[1] * ${r}Shape[2], ${r}Shape[2], 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${r}TexShape[1], ${r}TexShape[0]);\n        return sampleTexture(${r}, uv);\n      }\n    `:`\n      float ${s}(int row, int col, int depth, int depth2) {\n        float texR = dot(vec3(row, col, depth),\n                         vec3(${n[1]*n[2]}, ${n[2]}, 1));\n        float texC = float(depth2);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${r}, uv);\n      }\n    `;const y=qF(r);return t?`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      ${f}\n      ${m}\n      ${g}\n      int index = row * stride0 + col * stride1 +\n          depth * stride2 + depth2;\n      vec2 uv = uvFromFlat(${r}TexShape[0], ${r}TexShape[1], index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `:`\n    float ${s}(int row, int col, int depth, int depth2) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} +\n          depth * ${a} + depth2;\n      vec2 uv = uvFromFlat(${p}, ${d}, index + ${y});\n      return sampleTexture(${r}, uv);\n    }\n  `}(e,t);case 5:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=t[4],a=t[3]*s,i=t[2]*a,o=t[1]*i,{newShape:u,keptDims:l}=be(t);if(u.length<t.length){const t=["row","col","depth","depth2","depth3"];return`\n      ${UF(ZF(e,u))}\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        return ${r}(${JF(t,l)});\n      }\n    `}if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float index = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${o}, ${i}, ${a}, ${s})) +\n          depth3;\n        ${KF(e)}\n      }\n    `;const c=e.shapeInfo.flatOffset,h=e.shapeInfo.texShape,p=h[0],d=h[1];if(d===o&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n                         vec4(${i}, ${a}, ${s}, 1));\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(d===s&&null==c)return`\n      float ${r}(int row, int col, int depth, int depth2, int depth3) {\n        float texR = dot(\n          vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]},\n               ${t[2]*t[3]}, ${t[3]}, 1));\n        int texC = depth3;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${d}.0, ${p}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth, int depth2, int depth3) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${o} + col * ${i} + depth * ${a} +\n          depth2 * ${s} + depth3 + ${qF(n)};\n      vec2 uv = uvFromFlat(${p}, ${d}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);case 6:return function(e){const t=e.shapeInfo.logicalShape,n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),{newShape:s,keptDims:a}=be(t);if(s.length<t.length){const t=["row","col","depth","depth2","depth3","depth4"];return`\n      ${UF(ZF(e,s))}\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        return ${r}(${JF(t,a)});\n      }\n    `}const i=t[5],o=t[4]*i,u=t[3]*o,l=t[2]*u,c=t[1]*l;if(e.shapeInfo.isUniform)return`\n      float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n        int index = round(dot(\n          vec4(row, col, depth, depth2),\n          vec4(${c}, ${l}, ${u}, ${o})) +\n          dot(\n            vec2(depth3, depth4),\n            vec2(${i}, 1)));\n        ${KF(e)}\n      }\n    `;const h=e.shapeInfo.flatOffset,p=e.shapeInfo.texShape,d=p[0],f=p[1];if(f===c&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        int texR = row;\n        float texC = dot(vec4(col, depth, depth2, depth3),\n          vec4(${l}, ${u}, ${o}, ${i})) +\n               float(depth4);\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                   vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;if(f===i&&null==h)return`\n      float ${r}(int row, int col, int depth,\n                    int depth2, int depth3, int depth4) {\n        float texR = dot(vec4(row, col, depth, depth2),\n          vec4(${t[1]*t[2]*t[3]*t[4]},\n               ${t[2]*t[3]*t[4]},\n               ${t[3]*t[4]},\n               ${t[4]})) + float(depth3);\n        int texC = depth4;\n        vec2 uv = (vec2(texC, texR) + halfCR) /\n                  vec2(${f}.0, ${d}.0);\n        return sampleTexture(${n}, uv);\n      }\n    `;return`\n    float ${r}(int row, int col, int depth,\n                  int depth2, int depth3, int depth4) {\n      // Explicitly use integer operations as dot() only works on floats.\n      int index = row * ${c} + col * ${l} + depth * ${u} +\n          depth2 * ${o} + depth3 * ${i} + depth4 + ${qF(n)};\n      vec2 uv = uvFromFlat(${d}, ${f}, index);\n      return sampleTexture(${n}, uv);\n    }\n  `}(e);default:throw new Error(`${n.length}-D input sampling is not yet supported`)}}function WF(e,t){switch(e.shapeInfo.logicalShape.length){case 0:return function(e){const t=e.name;return`\n    vec4 ${"get"+t.charAt(0).toUpperCase()+t.slice(1)}() {\n      return ${_F().texture2D}(${t}, halfCR);\n    }\n  `}(e);case 1:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=e.shapeInfo.texShape,a=_F();if(t)return`\n    vec4 ${r}(int index) {\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      vec2 uv = packedUVfrom1D(\n        packedTexShape[0], packedTexShape[1], index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `;const i=[Math.ceil(s[0]/2),Math.ceil(s[1]/2)];return`\n    vec4 ${r}(int index) {\n      vec2 uv = packedUVfrom1D(\n        ${i[0]}, ${i[1]}, index);\n      return ${a.texture2D}(${n}, uv);\n    }\n  `}(e,t);case 2:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=a[0],o=a[1],u=_F();if(null!=a&&le(n,a))return t?`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${r}TexShape[1], ${r}TexShape[0]);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `:`\n      vec4 ${s}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${o}.0, ${i}.0);\n\n        return ${u.texture2D}(${r}, uv);\n      }\n    `;if(t)return`\n    vec4 ${s}(int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom2D(valuesPerRow, packedTexShape[0], packedTexShape[1], row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `;const l=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];return`\n    vec4 ${s}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${Math.ceil(n[1]/2)}, ${l[0]}, ${l[1]}, row, col);\n      return ${u.texture2D}(${r}, uv);\n    }\n  `}(e,t);case 3:return function(e,t){const n=e.shapeInfo.logicalShape,r=e.name,s="get"+r.charAt(0).toUpperCase()+r.slice(1),a=e.shapeInfo.texShape,i=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];if(1===n[0]){const r=[1,2],a=["b","row","col"];return`\n        ${WF(ZF(e,n.slice(1)),t)}\n        vec4 ${s}(int b, int row, int col) {\n          return ${s}(${JF(a,r)});\n        }\n      `}const o=_F();if(t)return`\n    vec4 ${s}(int b, int row, int col) {\n      ivec2 packedTexShape = ivec2(ceil(float(${r}TexShape[0]) / 2.0), ceil(float(${r}TexShape[1]) / 2.0));\n      int valuesPerRow = int(ceil(float(${r}Shape[2]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${r}Shape[1]) / 2.0));\n      vec2 uv = packedUVfrom3D(\n        packedTexShape[0], packedTexShape[1], texelsInBatch, valuesPerRow, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `;const u=i[0],l=i[1],c=Math.ceil(n[2]/2);return`\n    vec4 ${s}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${u}, ${l}, ${c*Math.ceil(n[1]/2)}, ${c}, b, row, col);\n      return ${o.texture2D}(${r}, uv);\n    }\n  `}(e,t);default:return function(e,t){const n=e.name,r="get"+n.charAt(0).toUpperCase()+n.slice(1),s=_F();if(t)return`\n    vec4 ${r}(int b2, int b, int row, int col) {\n      int valuesPerRow = int(ceil(float(${n}Shape[3]) / 2.0));\n      int texelsInBatch = valuesPerRow * int(ceil(float(${n}Shape[2]) / 2.0));\n      int index = b * texelsInBatch + (row / 2) * valuesPerRow + (col / 2);\n      texelsInBatch *= ${n}Shape[1];\n      index = b2 * texelsInBatch + index;\n      ivec2 packedTexShape = ivec2(ceil(float(${n}TexShape[0]) / 2.0), ceil(float(${n}TexShape[1]) / 2.0));\n      int texR = index / packedTexShape[1];\n      int texC = index - texR * packedTexShape[1];\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(packedTexShape[1], packedTexShape[0]); return ${s.texture2D}(${n}, uv);\n    }\n  `;const a=e.shapeInfo.logicalShape,i=a.length,o=e.shapeInfo.texShape,u=[Math.ceil(o[0]/2),Math.ceil(o[1]/2)],l=u[0],c=u[1],h=Math.ceil(a[i-1]/2);let p=h*Math.ceil(a[i-2]/2),d="int b, int row, int col",f=`b * ${p} + (row / 2) * ${h} + (col / 2)`;for(let e=2;e<i-1;e++)d=`int b${e}, `+d,p*=a[i-e-1],f=`b${e} * ${p} + `+f;return`\n    vec4 ${r}(${d}) {\n      int index = ${f};\n      int texR = index / ${c};\n      int texC = index - texR * ${c};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${c}, ${l});\n      return ${s.texture2D}(${n}, uv);\n    }\n  `}(e,t)}}const VF="\nvec2 uvFromFlat(int texNumR, int texNumC, int index) {\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\nvec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n  int texelIndex = index / 2;\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",GF="\nvec2 packedUVfrom2D(int texelsInLogicalRow, int texNumR,\n  int texNumC, int row, int col) {\n  int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = texelIndex / texNumC;\n  int texC = texelIndex - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",jF="\nvec2 packedUVfrom3D(int texNumR, int texNumC,\n    int texelsInBatch, int texelsInLogicalRow, int b,\n    int row, int col) {\n  int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n  int texR = index / texNumC;\n  int texC = index - texR * texNumC;\n  return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n}\n",HF="\n  float getChannel(vec4 frag, vec2 innerDims) {\n    vec2 modCoord = mod(innerDims, 2.);\n    return modCoord.x == 0. ?\n      (modCoord.y == 0. ? frag.r : frag.g) :\n      (modCoord.y == 0. ? frag.b : frag.a);\n  }\n  float getChannel(vec4 frag, int dim) {\n    float modCoord = mod(float(dim), 2.);\n    return modCoord == 0. ? frag.r : frag.g;\n  }\n";function qF(e){return`offset${e}`}function KF(e){const t=e.name,n=oe(e.shapeInfo.logicalShape);return n<2?`return ${t};`:`\n    for (int i = 0; i < ${n}; i++) {\n      if (i == index) {\n        return ${t}[i];\n      }\n    }\n  `}function XF(e){if(e<=1)return"int";if(2===e)return"ivec2";if(3===e)return"ivec3";if(4===e)return"ivec4";if(5===e)return"ivec5";if(6===e)return"ivec6";throw Error(`GPU for rank ${e} is not yet supported`)}function YF(e,t,n){const{newShape:r,keptDims:s}=be(t),a=t.length,i=e&&3===a&&1===t[0],o=i?t.slice(1):r,u=!e&&a>1&&!le(t,n)&&r.length<a||i;return{useSqueezeShape:u,uniformShape:u?o:t,keptDims:s}}function ZF(e,t){const n=JSON.parse(JSON.stringify(e));return n.shapeInfo.logicalShape=t,n}function JF(e,t){return t.map((t=>e[t])).join(", ")}function QF(e,t){if(e.length!==t.length)throw Error(`Binary was compiled with ${e.length} inputs, but was executed with ${t.length} inputs`);e.forEach(((e,n)=>{const r=e.logicalShape,s=t[n],a=s.shape;if(!le(r,a))throw Error(`Binary was compiled with different shapes than the current args. Shapes ${r} and ${a} must match`);if(e.isUniform&&s.isUniform)return;const i=e.texShape,o=s.isUniform?null:s.texData.texShape;if(!le(i,o))throw Error(`Binary was compiled with different texture shapes than the current args. Shape ${i} and ${o} must match`)}))}function eR(e){return je().getBool("WEBGL_USE_SHAPES_UNIFORMS")&&e<=4}class tR{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outPackingScheme=sF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=_F();this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?OF(["r","c","d"],e):MF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getA(rc.x, rc.y, rc.z);\n        }\n\n        ${t.output} = result;\n      }\n    `}}class nR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outPackingScheme=sF.DENSE,this.customUniforms=[{name:"texShape",type:"ivec2"}];const t=_F();this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length),this.userCode=`\n      ivec3 outCoordsFromFlatIndex(int index) {\n        ${this.enableShapeUniforms?OF(["r","c","d"],e):MF(["r","c","d"],e)}\n        return ivec3(r, c, d);\n      }\n\n      void main() {\n        ivec2 resTexRC = ivec2(resultUV.yx * vec2(texShape[0], texShape[1]));\n        int index = 4 * (resTexRC.x * texShape[1] + resTexRC.y);\n\n        vec4 result = vec4(0.);\n\n        for (int i=0; i<4; i++) {\n          int flatIndex = index + i;\n          ivec3 rc = outCoordsFromFlatIndex(flatIndex);\n          result[i] = getChannel(getA(rc.x, rc.y, rc.z), vec2(rc.y, rc.z));\n        }\n\n        ${t.output} = result;\n      }\n    `}}class rR{constructor(e){this.variableNames=["A"],this.outTexUsage=aF.DOWNLOAD;const t=_F();this.outputShape=e,this.userCode=`\n      ${zF}\n\n      void main() {\n        float x = getAAtOutCoords();\n        ${t.output} = encode_float(x);\n      }\n    `}}class sR{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outTexUsage=aF.DOWNLOAD;const t=_F();this.outputShape=e,this.userCode=`\n      ${zF}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n        float x = getChannel(getAAtOutCoords(), vec2(coords.y, coords.z));\n        ${t.output} = encode_float(x);\n      }\n    `}}class aR{constructor(e,t=!1){this.variableNames=["A"],this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=_F();this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length);let r="result";t&&(r="floor(result * 255. + 0.5)"),this.userCode=`\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":BF(e)}\n\n      void main() {\n        ivec3 coords = getOutputCoords();\n\n        int flatIndex = getFlatIndex(coords);\n        int offset = imod(flatIndex, 4);\n\n        flatIndex = idiv(flatIndex, 4, 1.);\n\n        int r = flatIndex / texShape[1];\n        int c = imod(flatIndex, texShape[1]);\n        vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n        vec4 values = ${n.texture2D}(A, uv);\n\n        float result;\n\n        if(offset == 0) {\n          result = values[0];\n        } else if(offset == 1) {\n          result = values[1];\n        } else if(offset == 2) {\n          result = values[2];\n        } else {\n          result = values[3];\n        }\n\n        ${n.output} = vec4(${r}, 0., 0., 0.);\n      }\n    `}}class iR{constructor(e,t=!1){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.customUniforms=[{name:"texShape",type:"ivec2"}];const n=_F();this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length);let r="",s="result";t&&(s="floor(result * 255. + 0.5)");for(let t=0;t<=1;t++)for(let s=0;s<=1;s++){const a=2*t+s;r+=`\n          localCoords = coords;\n          if(localCoords[2] + ${s} < ${this.enableShapeUniforms?"outShape[2]":`${e[2]}`}) {\n          localCoords[2] += ${s};\n          if (localCoords[1] + ${t} < ${this.enableShapeUniforms?"outShape[1]":`${e[1]}`}) {\n            localCoords[1] += ${t};\n\n            flatIndex = getFlatIndex(localCoords);\n            offset = imod(flatIndex, 4);\n\n            flatIndex = idiv(flatIndex, 4, 1.);\n\n            int r = flatIndex / texShape[1];\n            int c = imod(flatIndex, texShape[1]);\n            vec2 uv = (vec2(c, r) + halfCR) / vec2(texShape[1], texShape[0]);\n            values = ${n.texture2D}(A, uv);\n\n            if (offset == 0) {\n              result[${a}] = values[0];\n            } else if (offset == 1) {\n              result[${a}] = values[1];\n            } else if (offset == 2) {\n              result[${a}] = values[2];\n            } else {\n              result[${a}] = values[3];\n            }\n          }\n        }\n        `}this.userCode=`\n        ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":BF(e)}\n\n        void main() {\n          ivec3 coords = getOutputCoords();\n\n          vec4 result = vec4(0.);\n          int flatIndex, r, c, offset;\n          ivec3 localCoords;\n          vec2 uv;\n          vec4 values;\n\n          ${r}\n\n          ${n.output} = ${s};\n        }\n    `}}function oR(e,t,n,r,s,a){!function(e,t){const n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(e<=0||t<=0)throw new Error(`Requested texture size [${e}x${t}] is invalid.`);if(e>n||t>n)throw new Error(`Requested texture size [${e}x${t}] greater than WebGL maximum on this browser / GPU [${n}x${n}].`)}(t,n);const i=function(e){return vF(e,(()=>e.createTexture()),"Unable to create WebGLTexture.")}(e),o=e.TEXTURE_2D;return hF(e,(()=>e.bindTexture(o,i))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_S,e.CLAMP_TO_EDGE))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_WRAP_T,e.CLAMP_TO_EDGE))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_MIN_FILTER,e.NEAREST))),hF(e,(()=>e.texParameteri(o,e.TEXTURE_MAG_FILTER,e.NEAREST))),1===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texImage2D(o,0,r,t,n,0,s,a,null))):hF(e,(()=>e.texStorage2D(o,1,r,t,n))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,null))),{texture:i,texShape:[n,t]}}function uR(e){return e.internalFormatFloat}function lR(e){return e.internalFormatHalfFloat}function cR(e){return e.downloadTextureFormat}function hR(e){return e.internalFormatPackedFloat}function pR(e){return e.internalFormatPackedHalfFloat}class dR{constructor(e){this.outputTexture=null,this.program=null,this.disposed=!1,this.vertexAttrsAreBound=!1,this.itemsToPoll=[];const t=je().getNumber("WEBGL_VERSION");null!=e?(this.gl=e,function(e,t){tF[e]=t}(t,e)):this.gl=rF(t);let n="WEBGL_color_buffer_float";const r="EXT_color_buffer_half_float";if(1===je().getNumber("WEBGL_VERSION")){const e="OES_texture_float",t="OES_texture_half_float";if(this.textureFloatExtension=dF(this.gl,e),TF(this.gl,t))this.textureHalfFloatExtension=dF(this.gl,t);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support half float textures, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.");if(this.colorBufferFloatExtension=this.gl.getExtension(n),TF(this.gl,r))this.colorBufferHalfFloatExtension=dF(this.gl,r);else if(je().get("WEBGL_FORCE_F16_TEXTURES"))throw new Error("GL context does not support color renderable half floats, yet the environment flag WEBGL_FORCE_F16_TEXTURES is set to true.")}else if(n="EXT_color_buffer_float",TF(this.gl,n))this.colorBufferFloatExtension=this.gl.getExtension(n);else{if(!TF(this.gl,r))throw new Error("GL context does not support color renderable floats");this.colorBufferHalfFloatExtension=this.gl.getExtension(r)}this.vertexBuffer=function(e){return function(e,t){const n=vF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),hF(e,(()=>e.bufferData(e.ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Float32Array([-1,1,0,0,1,-1,-1,0,0,0,1,1,0,1,1,1,-1,0,1,0]))}(this.gl),this.indexBuffer=function(e){return function(e,t){const n=vF(e,(()=>e.createBuffer()),"Unable to create WebGLBuffer");return hF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,n))),hF(e,(()=>e.bufferData(e.ELEMENT_ARRAY_BUFFER,t,e.STATIC_DRAW))),n}(e,new Uint16Array([0,1,2,2,1,3]))}(this.gl),this.framebuffer=function(e){return vF(e,(()=>e.createFramebuffer()),"Unable to create WebGLFramebuffer.")}(this.gl),this.textureConfig=cF(this.gl,this.textureHalfFloatExtension)}get debug(){return je().getBool("DEBUG")}dispose(){if(this.disposed)return;null!=this.program&&console.warn("Disposing a GPGPUContext that still has a bound WebGLProgram. This is probably a resource leak, delete the program with GPGPUContext.deleteProgram before disposing."),null!=this.outputTexture&&console.warn("Disposing a GPGPUContext that still has a bound output matrix texture.  This is probably a resource leak, delete the output matrix texture with GPGPUContext.deleteMatrixTexture before disposing.");const e=this.gl;hF(e,(()=>e.finish())),hF(e,(()=>e.bindFramebuffer(e.FRAMEBUFFER,null))),hF(e,(()=>e.deleteFramebuffer(this.framebuffer))),hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,null))),hF(e,(()=>e.bindBuffer(e.ELEMENT_ARRAY_BUFFER,null))),hF(e,(()=>e.deleteBuffer(this.indexBuffer))),this.disposed=!0}createFloat32MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=oF(t,n);return oR(e,s,a,uR(r),r.textureFormatFloat,e.FLOAT)}(this.gl,e,t,this.textureConfig)}createFloat16MatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=oF(t,n);return oR(e,s,a,lR(r),r.textureFormatFloat,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createUnsignedBytesMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=oF(t,n);return oR(e,s,a,cR(r),e.RGBA,e.UNSIGNED_BYTE)}(this.gl,e,t,this.textureConfig)}uploadPixelDataToTexture(e,t){this.throwIfDisposed(),function(e,t,n){hF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),n.data instanceof Uint8Array?2===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n.width,n.height,e.RGBA,e.UNSIGNED_BYTE,n.data))):hF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,n.width,n.height,0,e.RGBA,e.UNSIGNED_BYTE,n.data))):2===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,e.RGBA,e.UNSIGNED_BYTE,n))):hF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,e.RGBA,e.RGBA,e.UNSIGNED_BYTE,n))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t)}uploadDenseMatrixToTexture(e,t,n,r){this.throwIfDisposed(),function(e,t,n,r,s,a){let i,o,u;hF(e,(()=>e.bindTexture(e.TEXTURE_2D,t))),s instanceof Uint8Array?(i=new Uint8Array(n*r*4),o=e.UNSIGNED_BYTE,u=e.RGBA):(i=new Float32Array(n*r*4),o=e.FLOAT,u=a.internalFormatPackedFloat),i.set(s),2===je().getNumber("WEBGL_VERSION")?hF(e,(()=>e.texSubImage2D(e.TEXTURE_2D,0,0,0,n,r,e.RGBA,o,i))):hF(e,(()=>e.texImage2D(e.TEXTURE_2D,0,u,n,r,0,e.RGBA,o,i))),hF(e,(()=>e.bindTexture(e.TEXTURE_2D,null)))}(this.gl,e,t,n,r,this.textureConfig)}createFloat16PackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lF(t,n);return oR(e,s,a,pR(r),e.RGBA,r.textureTypeHalfFloat)}(this.gl,e,t,this.textureConfig)}createPackedMatrixTexture(e,t){return this.throwIfDisposed(),function(e,t,n,r){const[s,a]=lF(t,n);return oR(e,s,a,hR(r),e.RGBA,e.FLOAT)}(this.gl,e,t,this.textureConfig)}deleteMatrixTexture(e){this.throwIfDisposed(),this.outputTexture===e&&(xF(this.gl,this.framebuffer),this.outputTexture=null),hF(this.gl,(()=>this.gl.deleteTexture(e)))}downloadByteEncodedFloatMatrixFromOutputTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n,r){const[s,a]=oF(t,n),i=new Uint8Array(t*n*4);return hF(e,(()=>e.readPixels(0,0,s,a,r.downloadTextureFormat,e.UNSIGNED_BYTE,i))),new Float32Array(i.buffer)}(this.gl,t,n,this.textureConfig)))}downloadPackedMatrixFromBuffer(e,t,n,r,s,a){return function(e,t,n,r,s,a,i,o){const u=e,l=new Float32Array(function(e,t){const[n,r]=lF(e,t);return n*r*4}(a,i));return u.bindBuffer(u.PIXEL_PACK_BUFFER,t),u.getBufferSubData(u.PIXEL_PACK_BUFFER,0,l),u.bindBuffer(u.PIXEL_PACK_BUFFER,null),l}(this.gl,e,0,0,0,s,a,this.textureConfig)}downloadFloat32MatrixFromBuffer(e,t){return function(e,t,n){const r=e,s=new Float32Array(n);return r.bindBuffer(r.PIXEL_PACK_BUFFER,t),r.getBufferSubData(r.PIXEL_PACK_BUFFER,0,s),r.bindBuffer(r.PIXEL_PACK_BUFFER,null),s}(this.gl,e,t)}createBufferFromTexture(e,t,n){this.bindTextureToFrameBuffer(e);const r=function(e,t,n,r){const s=e.createBuffer();hF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,s)));const a=16*t*n;return hF(e,(()=>e.bufferData(e.PIXEL_PACK_BUFFER,a,e.STREAM_READ))),hF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,0))),hF(e,(()=>e.bindBuffer(e.PIXEL_PACK_BUFFER,null))),s}(this.gl,t,n,this.textureConfig);return this.unbindTextureToFrameBuffer(),r}createAndWaitForFence(){const e=this.createFence(this.gl);return this.pollFence(e)}createFence(e){let t,n;if(je().getBool("WEBGL_FENCE_API_ENABLED")){const r=e,s=r.fenceSync(r.SYNC_GPU_COMMANDS_COMPLETE,0);e.flush(),n=()=>{const e=r.clientWaitSync(s,0,0);return e===r.ALREADY_SIGNALED||e===r.CONDITION_SATISFIED},t=s}else je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")>0?(t=this.beginQuery(),this.endQuery(),n=()=>this.isQueryAvailable(t,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))):n=()=>!0;return{query:t,isFencePassed:n}}downloadMatrixFromPackedTexture(e,t,n){return this.downloadMatrixDriver(e,(()=>function(e,t,n){const r=new Float32Array(t*n*4);return hF(e,(()=>e.readPixels(0,0,n,t,e.RGBA,e.FLOAT,r))),r}(this.gl,t,n)))}createProgram(e){this.throwIfDisposed();const t=this.gl;null==this.vertexShader&&(this.vertexShader=function(e){const t=_F();return function(e,t){const n=vF(e,(()=>e.createShader(e.VERTEX_SHADER)),"Unable to create vertex WebGLShader.");if(hF(e,(()=>e.shaderSource(n,t))),hF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw console.log(e.getShaderInfoLog(n)),new Error("Failed to compile vertex shader.");return n}(e,`${t.version}\n    precision highp float;\n    ${t.attribute} vec3 clipSpacePos;\n    ${t.attribute} vec2 uv;\n    ${t.varyingVs} vec2 resultUV;\n\n    void main() {\n      gl_Position = vec4(clipSpacePos, 1);\n      resultUV = uv;\n    }`)}(t));const n=function(e){return vF(e,(()=>e.createProgram()),"Unable to create WebGLProgram.")}(t);return hF(t,(()=>t.attachShader(n,this.vertexShader))),hF(t,(()=>t.attachShader(n,e))),function(e,t){if(hF(e,(()=>e.linkProgram(t))),!1===e.getProgramParameter(t,e.LINK_STATUS))throw console.log(e.getProgramInfoLog(t)),new Error("Failed to link vertex and fragment shaders.")}(t,n),this.debug&&mF(t,n),this.vertexAttrsAreBound||(this.setProgram(n),this.vertexAttrsAreBound=function(e,t,n){return hF(e,(()=>e.bindBuffer(e.ARRAY_BUFFER,n))),gF(e,t,"clipSpacePos",n,3,20,0)&&gF(e,t,"uv",n,2,20,12)}(t,this.program,this.vertexBuffer)),n}deleteProgram(e){this.throwIfDisposed(),e===this.program&&(this.program=null),null!=e&&hF(this.gl,(()=>this.gl.deleteProgram(e)))}setProgram(e){this.throwIfDisposed(),this.program=e,null!=this.program&&this.debug&&mF(this.gl,this.program),hF(this.gl,(()=>this.gl.useProgram(e)))}getUniformLocation(e,t,n=!0){return this.throwIfDisposed(),n?function(e,t,n){return vF(e,(()=>e.getUniformLocation(t,n)),'uniform "'+n+'" not present in program.')}(this.gl,e,t):function(e,t,n){return e.getUniformLocation(t,n)}(this.gl,e,t)}getAttributeLocation(e,t){return this.throwIfDisposed(),hF(this.gl,(()=>this.gl.getAttribLocation(e,t)))}getUniformLocationNoThrow(e,t){return this.throwIfDisposed(),this.gl.getUniformLocation(e,t)}setInputMatrixTexture(e,t,n){this.throwIfDisposed(),this.throwIfNoProgram(),yF(this.gl,e,t,n)}setOutputMatrixTexture(e,t,n){this.setOutputMatrixTextureDriver(e,n,t)}setOutputPackedMatrixTexture(e,t,n){this.throwIfDisposed();const[r,s]=lF(t,n);this.setOutputMatrixTextureDriver(e,r,s)}setOutputMatrixWriteRegion(e,t,n,r){this.setOutputMatrixWriteRegionDriver(n,e,r,t)}setOutputPackedMatrixWriteRegion(e,t,n,r){throw new Error("setOutputPackedMatrixWriteRegion not implemented.")}debugValidate(){null!=this.program&&mF(this.gl,this.program),wF(this.gl)}executeProgram(){this.throwIfDisposed(),this.throwIfNoProgram();const e=this.gl;this.debug&&this.debugValidate(),hF(e,(()=>e.drawElements(e.TRIANGLES,6,e.UNSIGNED_SHORT,0)))}blockUntilAllProgramsCompleted(){this.throwIfDisposed(),hF(this.gl,(()=>this.gl.finish()))}getQueryTimerExtension(){return null==this.disjointQueryTimerExtension&&(this.disjointQueryTimerExtension=dF(this.gl,2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")?"EXT_disjoint_timer_query_webgl2":"EXT_disjoint_timer_query")),this.disjointQueryTimerExtension}getQueryTimerExtensionWebGL2(){return this.getQueryTimerExtension()}getQueryTimerExtensionWebGL1(){return this.getQueryTimerExtension()}beginQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2(),n=e.createQuery();return e.beginQuery(t.TIME_ELAPSED_EXT,n),n}const e=this.getQueryTimerExtensionWebGL1(),t=e.createQueryEXT();return e.beginQueryEXT(e.TIME_ELAPSED_EXT,t),t}endQuery(){if(2===je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")){const e=this.gl,t=this.getQueryTimerExtensionWebGL2();return void e.endQuery(t.TIME_ELAPSED_EXT)}const e=this.getQueryTimerExtensionWebGL1();e.endQueryEXT(e.TIME_ELAPSED_EXT)}async waitForQueryAndGetTime(e){return await me((()=>this.disposed||this.isQueryAvailable(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION")))),this.getQueryTime(e,je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_VERSION"))}getQueryTime(e,t){if(0===t)return null;if(2===t){const t=this.gl;return t.getQueryParameter(e,t.QUERY_RESULT)/1e6}{const t=this.getQueryTimerExtensionWebGL1();return t.getQueryObjectEXT(e,t.QUERY_RESULT_EXT)/1e6}}isQueryAvailable(e,t){if(0===t)return!0;if(2===t){const t=this.gl,n=this.getQueryTimerExtensionWebGL2(),r=t.getQueryParameter(e,t.QUERY_RESULT_AVAILABLE);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(n.GPU_DISJOINT_EXT)),r&&!this.disjoint}{const t=this.getQueryTimerExtensionWebGL1(),n=t.getQueryObjectEXT(e,t.QUERY_RESULT_AVAILABLE_EXT);return null==this.disjoint&&(this.disjoint=this.gl.getParameter(t.GPU_DISJOINT_EXT)),n&&!this.disjoint}}pollFence(e){return new Promise((t=>{this.addItemToPoll((()=>e.isFencePassed()),(()=>t()))}))}pollItems(){const e=function(e){let t=0;for(;t<e.length&&e[t]();++t);return t-1}(this.itemsToPoll.map((e=>e.isDoneFn)));for(let t=0;t<=e;++t){const{resolveFn:e}=this.itemsToPoll[t];e()}this.itemsToPoll=this.itemsToPoll.slice(e+1)}addItemToPoll(e,t){this.itemsToPoll.push({isDoneFn:e,resolveFn:t}),this.itemsToPoll.length>1||me((()=>(this.pollItems(),0===this.itemsToPoll.length)))}bindTextureToFrameBuffer(e){this.throwIfDisposed(),bF(this.gl,e,this.framebuffer),this.debug&&wF(this.gl)}unbindTextureToFrameBuffer(){null!=this.outputTexture?(bF(this.gl,this.outputTexture,this.framebuffer),this.debug&&wF(this.gl)):xF(this.gl,this.framebuffer)}downloadMatrixDriver(e,t){this.bindTextureToFrameBuffer(e);const n=t();return this.unbindTextureToFrameBuffer(),n}setOutputMatrixTextureDriver(e,t,n){this.throwIfDisposed();const r=this.gl;bF(r,e,this.framebuffer),this.debug&&wF(r),this.outputTexture=e,hF(r,(()=>r.viewport(0,0,t,n))),hF(r,(()=>r.scissor(0,0,t,n)))}setOutputMatrixWriteRegionDriver(e,t,n,r){this.throwIfDisposed(),hF(this.gl,(()=>this.gl.scissor(e,t,n,r)))}throwIfDisposed(){if(this.disposed)throw new Error("Attempted to use disposed GPGPUContext.")}throwIfNoProgram(){if(null==this.program)throw new Error("No GPU program is currently set.")}}const{addImpl:fR,bincountImpl:mR,bincountReduceImpl:gR,ceilImpl:yR,concatImpl:bR,equalImpl:xR,expImpl:wR,expm1Impl:vR,floorImpl:kR,gatherNdImpl:NR,gatherV2Impl:IR,greaterImpl:CR,greaterEqualImpl:DR,lessImpl:ER,lessEqualImpl:SR,linSpaceImpl:TR,logImpl:AR,maxImpl:$R,maximumImpl:FR,minimumImpl:RR,multiplyImpl:_R,negImpl:MR,notEqualImpl:OR,prodImpl:BR,rangeImpl:zR,rsqrtImpl:LR,sigmoidImpl:PR,simpleAbsImpl:UR,sliceImpl:WR,sparseFillEmptyRowsImpl:VR,sparseReshapeImpl:GR,sparseSegmentReductionImpl:jR,sqrtImpl:HR,stridedSliceImpl:qR,stringNGramsImpl:KR,stringSplitImpl:XR,stringToHashBucketFastImpl:YR,subImpl:ZR,tileImpl:JR,topKImpl:QR,transposeImpl:e_,uniqueImpl:t_}=V;function n_(e,t){return["x","y","z","w","u","v"].slice(0,t).map((t=>`${e}.${t}`))}function r_(e,t){return 1===t?[e]:n_(e,t)}class s_{constructor(e){if(this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.enableShapeUniforms=eR(this.outputShape.length),0===this.rank)this.userCode="\n        void main() {\n          setOutput(vec4(getA(), 0., 0., 0.));\n        }\n      ";else{const e=r_("rc",this.rank),t=XF(this.rank),n=this.getOutOfBoundsCondition(e),r=this.getSetup(e),s=this.getOutput(e);this.userCode=`\n        void main() {\n          ${t} rc = getOutputCoords();\n\n          if(${n}) {\n            setOutput(vec4(0));\n          } else {\n            ${r}\n\n            setOutput(vec4(${s}));\n          }\n        }\n      `}}getSourceCoordsArr(e){const t=[];for(let n=0;n<=1;n++)for(let r=0;r<=1;r++){let s=`${0===n?"r":"rp1"}, ${0===r?"c":"cp1"}`;for(let t=2;t<this.rank;t++)s=`${e[e.length-1-t]},`+s;t.push(s)}return t}getOutOfBoundsCondition(e){if(1===this.rank)return`rc > ${this.enableShapeUniforms?"outShape":this.outputShape[0]}`;let t="";for(let n=this.rank-2;n<this.rank;n++)t+=`${e[n]} >= ${this.enableShapeUniforms?`outShape[${n}]`:this.outputShape[n]}`,n<this.rank-1&&(t+="||");return t}getSetup(e){if(1===this.rank)return"";const t=e.slice(-2),n=this.enableShapeUniforms?`outShape[${this.rank} - 1]`:this.outputShape[this.rank-1],r=this.enableShapeUniforms?`outShape[${this.rank} - 2]`:this.outputShape[this.rank-2];return`\n      int r = ${t[0]};\n      int c = ${t[1]};\n      int rp1 = r + 1;\n      int cp1 = c + 1;\n\n      bool cEdge = cp1 >= ${n};\n      bool rEdge = rp1 >= ${r};\n    `}getOutput(e){const t=this.getSourceCoordsArr(e);return 1===this.rank?`getA(rc), (rc + 1 >= ${this.enableShapeUniforms?"outShape":this.outputShape[0]} ? 0. : getA(rc + 1)), 0, 0`:`getA(${t[0]}),\n            cEdge ? 0. : getA(${t[1]}),\n            rEdge ? 0. : getA(${t[2]}),\n            rEdge || cEdge ? 0. : getA(${t[3]})`}}class a_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"}],this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length);let n="";for(let e=0;e<4;e++){let t="thisRC = rc;";e%2==1&&(t+="thisRC.z += 1;"),e>1&&(t+="thisRC.y += 1;"),n+=`\n        ${t}\n        ${e>0?"if(thisRC.y < rows && thisRC.z < cols){":""}\n          int flatIndex = getFlatIndex(thisRC);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flatIndex);\n          vec2 inputRCInnerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${e}] =\n            getChannel(getA(inputRC.x, inputRC.y, inputRC.z), inputRCInnerDims);\n        ${e>0?"}":""}\n      `}var r,s;this.userCode=`\n      ${r=t,s=this.enableShapeUniforms,`\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${s?function(e,t,n="index"){const r=function(e,t){const n=e.length,r=e.map((e=>`${t}[${e}]`)),s=new Array(n-1);s[n-2]=r[n-1];for(let e=n-3;e>=0;--e)s[e]=`(${s[e+1]} * ${r[e+1]})`;return s}(e.map(((e,t)=>t)),t);return r.map(((t,s)=>`int ${e[s]} = ${n} / ${r[s]}; ${s===r.length-1?`int ${e[s+1]} = ${n} - ${e[s]} * ${r[s]}`:`index -= ${e[s]} * ${r[s]}`};`)).join("")}(["r","c","d"],"inputShape"):MF(["r","c","d"],r)}\n      return ivec3(r, c, d);\n    }\n  `}\n      ${this.enableShapeUniforms?"\n  int getFlatIndex(ivec3 coords) {\n    return coords.x * outShapeStrides[0] + coords.y * outShapeStrides[1] + coords.z;\n  }\n":BF(e)}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.);\n\n        ivec3 thisRC;\n        int rows = ${this.enableShapeUniforms?"outShape[1]":e[1]};\n        int cols = ${this.enableShapeUniforms?"outShape[2]":e[2]};\n\n        ${n}\n\n        setOutput(result);\n      }\n    `}}class i_{constructor(e){this.gpgpu=e,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0,this.freeTextures={},this.logEnabled=!1,this.usedTextures={}}acquireTexture(e,t,n){const r=u_(t,n),s=l_(e,r,n);s in this.freeTextures||(this.freeTextures[s]=[]),s in this.usedTextures||(this.usedTextures[s]=[]);const a=o_(e,r,this.gpgpu.gl,this.gpgpu.textureConfig,n);if(this.freeTextures[s].length>0){this.numFreeTextures--,this.numUsedTextures++,this._numBytesFree-=a,this.log();const e=this.freeTextures[s].shift();return this.usedTextures[s].push(e),e}let i;return r===iF.PACKED_2X2_FLOAT32?i=this.gpgpu.createPackedMatrixTexture(e[0],e[1]):r===iF.PACKED_2X2_FLOAT16?i=this.gpgpu.createFloat16PackedMatrixTexture(e[0],e[1]):r===iF.UNPACKED_FLOAT32?i=this.gpgpu.createFloat32MatrixTexture(e[0],e[1]):r===iF.UNPACKED_FLOAT16?i=this.gpgpu.createFloat16MatrixTexture(e[0],e[1]):r===iF.PACKED_4X1_UNSIGNED_BYTE&&(i=this.gpgpu.createUnsignedBytesMatrixTexture(e[0],e[1])),this.usedTextures[s].push(i),this.numUsedTextures++,this._numBytesAllocated+=a,this.log(),i}releaseTexture(e,t,n,r){if(null==this.freeTextures)return;const s=u_(n,r),a=l_(t,s,r);a in this.freeTextures||(this.freeTextures[a]=[]);const i=o_(t,s,this.gpgpu.gl,this.gpgpu.textureConfig,r),o=je().get("WEBGL_DELETE_TEXTURE_THRESHOLD");-1!==o&&this._numBytesAllocated>o?(this.gpgpu.deleteMatrixTexture(e.texture),this._numBytesAllocated-=i):(this.freeTextures[a].push(e),this.numFreeTextures++,this._numBytesFree+=i),this.numUsedTextures--;const u=this.usedTextures[a],l=u.indexOf(e);if(l<0)throw new Error("Cannot release a texture that was never provided by this texture manager");u.splice(l,1),this.log()}log(){if(!this.logEnabled)return;const e=this.numFreeTextures+this.numUsedTextures;console.log("Free/Used",`${this.numFreeTextures} / ${this.numUsedTextures}`,`(${e})`);const t=this._numBytesFree/this._numBytesAllocated;console.log(`Bytes allocated: ${this._numBytesAllocated}`),console.log(`Bytes unused: ${this._numBytesFree} (${Math.round(100*t)}%)`)}get numBytesAllocated(){return this._numBytesAllocated}get numBytesFree(){return this._numBytesFree}getNumUsedTextures(){return this.numUsedTextures}getNumFreeTextures(){return this.numFreeTextures}dispose(){if(null!=this.freeTextures){for(const e in this.freeTextures)this.freeTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));for(const e in this.usedTextures)this.usedTextures[e].forEach((e=>{this.gpgpu.deleteMatrixTexture(e.texture)}));this.freeTextures=null,this.usedTextures=null,this.numUsedTextures=0,this.numFreeTextures=0,this._numBytesAllocated=0,this._numBytesFree=0}}}function o_(e,t,n,r,s){const a=function(e,t){switch(e){case iF.PACKED_2X2_FLOAT32:return hR(t);case iF.PACKED_2X2_FLOAT16:return pR(t);case iF.UNPACKED_FLOAT32:return uR(t);case iF.UNPACKED_FLOAT16:return lR(t);case iF.PACKED_4X1_UNSIGNED_BYTE:return cR(t);default:throw new Error(`Unknown physical texture type ${e}`)}}(t,r);let i;if(s){const[t,n]=lF(e[0],e[1]);i=t*n}else{const[t,n]=oF(e[0],e[1]);i=t*n}const o=function(e,t){const n=e;if(t===n.R32F)return 4;if(t===n.R16F)return 2;if(t===n.RGBA32F)return 16;if(t===e.RGBA)return 16;if(t===n.RGBA16F)return 8;if(t===n.RGBA8)return 4;throw new Error(`Unknown internal format ${t}`)}(n,a);return i*o}function u_(e,t){if(e===aF.UPLOAD)return iF.PACKED_2X2_FLOAT32;if(e===aF.RENDER||null==e)return function(e){return je().getBool("WEBGL_RENDER_FLOAT32_ENABLED")?e?iF.PACKED_2X2_FLOAT32:iF.UNPACKED_FLOAT32:e?iF.PACKED_2X2_FLOAT16:iF.UNPACKED_FLOAT16}(t);if(e===aF.DOWNLOAD||e===aF.PIXELS)return iF.PACKED_4X1_UNSIGNED_BYTE;throw new Error(`Unknown logical texture type ${e}`)}function l_(e,t,n){return`${e[0]}_${e[1]}_${t}_${n}`}class c_{constructor(e,t){this.variableNames=["A"],this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length),this.userCode=`\n      float unaryOperation(float x) {\n        ${t}\n      }\n\n      void main() {\n        float x = getAAtOutCoords();\n        float y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}const h_="return abs(x);",p_="return x;";class d_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length),this.userCode=`\n      vec4 unaryOperation(vec4 x) {\n        ${t}\n      }\n\n      void main() {\n        vec4 x = getAAtOutCoords();\n        vec4 y = unaryOperation(x);\n\n        setOutput(y);\n      }\n    `}}class f_{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!1,this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length);const t=e.length,n=r_("rc",t),r=XF(t),s=function(e,t){if(1===e)return"rc";let n="";for(let r=0;r<e;r++)n+=t[r],r<e-1&&(n+=",");return n}(t,n),a=n.slice(-2),i=t<=1?"rc":`vec2(${a.join(",")})`;this.userCode=`\n      void main() {\n        ${r} rc = getOutputCoords();\n        vec4 packedInput = getA(${s});\n\n        setOutput(getChannel(packedInput, ${i}));\n      }\n    `}}const m_=lp,g_={},y_=je().getNumber("CPU_HANDOFF_SIZE_THRESHOLD");class b_ extends q{constructor(e){if(super(),this.pendingRead=new WeakMap,this.pendingDisposal=new WeakSet,this.dataRefCount=new WeakMap,this.numBytesInGPU=0,this.uploadWaitMs=0,this.downloadWaitMs=0,this.lastGlFlushTime=0,this.warnedAboutMemory=!1,this.pendingDeletes=0,this.disposed=!1,!je().getBool("HAS_WEBGL"))throw new Error("WebGL is not supported on this device");let t;if(null!=e){if(e instanceof dR)t=e;else{const n=rF(je().getNumber("WEBGL_VERSION"),e);t=new dR(n)}this.binaryCache={},this.gpgpuCreatedLocally=!1}else{const e=rF(je().getNumber("WEBGL_VERSION"));t=new dR(e),this.binaryCache=((n=je().getNumber("WEBGL_VERSION"))in g_||(g_[n]={}),g_[n]),this.gpgpuCreatedLocally=!0}var n;this.gpgpu=t,this.canvas=this.gpgpu.gl.canvas,this.textureManager=new i_(this.gpgpu),this.numMBBeforeWarning=null==je().global.screen?1024:je().global.screen.height*je().global.screen.width*window.devicePixelRatio*600/1024/1024,this.texData=new H(this,Ho())}nextDataId(){return b_.nextDataId++}numDataIds(){return this.texData.numDataIds()-this.pendingDeletes}write(e,t,n){if((je().getBool("WEBGL_CHECK_NUMERICAL_PROBLEMS")||je().getBool("DEBUG"))&&this.checkNumericalProblems(e),"complex64"===n&&null!=e)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");const r={id:this.nextDataId()};return this.texData.set(r,{shape:t,dtype:n,values:e,usage:aF.UPLOAD,refCount:1}),r}refCount(e){return this.texData.has(e)?this.texData.get(e).refCount:0}incRef(e){this.texData.get(e).refCount++}decRef(e){this.texData.has(e)&&this.texData.get(e).refCount--}move(e,t,n,r,s){if(je().getBool("DEBUG")&&this.checkNumericalProblems(t),"complex64"===r)throw new Error("Cannot write to a complex64 dtype. Please use tf.complex(real, imag).");this.texData.set(e,{shape:n,dtype:r,values:t,usage:aF.UPLOAD,refCount:s})}disposeIntermediateTensorInfo(e){this.disposeData(e.dataId)}readSync(e){const t=this.texData.get(e),{values:n,dtype:r,complexTensorInfos:s,slice:a,shape:i,isPacked:o}=t;if(null!=a){let t;t=o?new d_(i,p_):new c_(i,p_);const n=this.runWebGLProgram(t,[{dataId:e,shape:i,dtype:r}],r),s=this.readSync(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if("string"===r)return n;const u=null!=this.activeTimers;let l,c;return u&&(l=$s()),c="complex64"===r?Jd(this.readSync(s.real.dataId),this.readSync(s.imag.dataId)):this.getValuesFromTexture(e),u&&(this.downloadWaitMs+=$s()-l),this.convertAndCacheOnCPU(e,c)}async read(e){if(this.pendingRead.has(e)){const t=this.pendingRead.get(e);return new Promise((e=>t.push(e)))}const t=this.texData.get(e),{values:n,shape:r,slice:s,dtype:a,complexTensorInfos:i,isPacked:o}=t;if(null!=s){let t;t=o?new d_(r,p_):new c_(r,p_);const n=this.runWebGLProgram(t,[{dataId:e,shape:r,dtype:a}],a),s=this.read(n.dataId);return this.disposeIntermediateTensorInfo(n),s}if(null!=n)return this.convertAndCacheOnCPU(e);if(je().getBool("DEBUG")&&!je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")&&2===je().getNumber("WEBGL_VERSION"))throw new Error("tensor.data() with WEBGL_DOWNLOAD_FLOAT_ENABLED=false and WEBGL_VERSION=2 not yet supported.");let u,l,c=null;if("complex64"!==a&&je().get("WEBGL_BUFFER_SUPPORTED")){u=this.decode(e);const t=this.texData.get(u.dataId);c=this.gpgpu.createBufferFromTexture(t.texture.texture,...uF(r))}if(this.pendingRead.set(e,[]),"complex64"!==a&&await this.gpgpu.createAndWaitForFence(),"complex64"===a){const e=await Promise.all([this.read(i.real.dataId),this.read(i.imag.dataId)]);l=Jd(e[0],e[1])}else if(null==c)l=this.getValuesFromTexture(e);else{const e=oe(r);l=this.gpgpu.downloadFloat32MatrixFromBuffer(c,e)}if(null!=u&&this.disposeIntermediateTensorInfo(u),null!=c){const e=this.gpgpu.gl;hF(e,(()=>e.deleteBuffer(c)))}const h=this.convertAndCacheOnCPU(e,l),p=this.pendingRead.get(e);return this.pendingRead.delete(e),p.forEach((e=>e(h))),this.pendingDisposal.has(e)&&(this.pendingDisposal.delete(e),this.disposeData(e)&&Ho().removeDataId(e,this),this.pendingDeletes--),h}readToGPU(e,t={}){const n=this.texData.get(e),{values:r,shape:s,slice:a,dtype:i,isPacked:o,texture:u}=n;if("complex64"===i)throw new Error("Does not support reading texture for complex64 dtype.");if(null!=a){let n;n=o?new d_(s,p_):new c_(s,p_);const r=this.runWebGLProgram(n,[{dataId:e,shape:s,dtype:i}],i),a=this.readToGPU(r,t);return this.disposeIntermediateTensorInfo(r),a}if(null==u)throw null!=r?new Error("Data is not on GPU but on CPU."):new Error("There is no data on GPU or CPU.");const l=this.decode(e,t.customTexShape),c=Ho().makeTensorFromDataId(l.dataId,l.shape,l.dtype),h=this.texData.get(l.dataId);return Object.assign({tensorRef:c},h.texture)}bufferSync(e){const t=this.readSync(e.dataId);let n=t;if("string"===e.dtype)try{n=t.map((e=>_s(e)))}catch(e){throw new Error("Failed to decode encoded string bytes into utf-8")}return Ii(e.shape,e.dtype,n)}checkNumericalProblems(e){if(null!=e)for(let t=0;t<e.length;t++){const n=e[t];if(!pF(n)){if(je().getBool("WEBGL_RENDER_FLOAT32_CAPABLE"))throw Error(`The value ${n} cannot be represented with your current settings. Consider enabling float32 rendering: 'tf.env().set('WEBGL_RENDER_FLOAT32_ENABLED', true);'`);throw Error(`The value ${n} cannot be represented on this device.`)}}}getValuesFromTexture(e){const{shape:t,dtype:n,isPacked:r}=this.texData.get(e),s=oe(t);if(je().getBool("WEBGL_DOWNLOAD_FLOAT_ENABLED")){const n=this.decode(e),r=this.texData.get(n.dataId),a=this.gpgpu.downloadMatrixFromPackedTexture(r.texture.texture,...uF(t)).subarray(0,s);return this.disposeIntermediateTensorInfo(n),a}const a=je().getBool("WEBGL_PACK")&&!0===r,i=a?IF(t):t,o=a?new sR(i):new rR(i),u=this.runWebGLProgram(o,[{shape:i,dtype:n,dataId:e}],"float32"),l=this.texData.get(u.dataId),c=this.gpgpu.downloadByteEncodedFloatMatrixFromOutputTexture(l.texture.texture,l.texShape[0],l.texShape[1]).subarray(0,s);return this.disposeIntermediateTensorInfo(u),c}timerAvailable(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0}time(e){const t=this.activeTimers,n=[];let r=!1;null==this.programTimersStack?(this.programTimersStack=n,r=!0):this.activeTimers.push(n),this.activeTimers=n,e();const s=ie(this.activeTimers.map((e=>e.query))).filter((e=>null!=e)),a=ie(this.activeTimers.map((e=>e.name))).filter((e=>null!=e));this.activeTimers=t,r&&(this.programTimersStack=null);const i={uploadWaitMs:this.uploadWaitMs,downloadWaitMs:this.downloadWaitMs,kernelMs:null,wallMs:null};return(async()=>{if(je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0){const e=await Promise.all(s);i.kernelMs=ee(e),i.getExtraProfileInfo=()=>e.map(((e,t)=>({name:a[t],ms:e}))).map((e=>`${e.name}: ${e.ms}`)).join(", ")}else i.kernelMs={error:"WebGL query timers are not supported in this environment."};return this.uploadWaitMs=0,this.downloadWaitMs=0,i})()}memory(){return{unreliable:!1,numBytesInGPU:this.numBytesInGPU,numBytesInGPUAllocated:this.textureManager.numBytesAllocated,numBytesInGPUFree:this.textureManager.numBytesFree}}startTimer(){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?this.gpgpu.beginQuery():{startMs:$s(),endMs:null}}endTimer(e){return je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0?(this.gpgpu.endQuery(),e):(e.endMs=$s(),e)}async getQueryTime(e){if(je().getNumber("WEBGL_DISJOINT_QUERY_TIMER_EXTENSION_RELIABLE")>0)return this.gpgpu.waitForQueryAndGetTime(e);const t=e;return t.endMs-t.startMs}disposeData(e,t=!1){if(this.pendingDisposal.has(e))return!1;if(!this.texData.has(e))return!0;if(t?this.texData.get(e).refCount=0:this.texData.get(e).refCount--,!t&&this.texData.get(e).refCount>0)return!1;if(this.pendingRead.has(e))return this.pendingDisposal.add(e),this.pendingDeletes++,!1;this.releaseGPUData(e);const{complexTensorInfos:n}=this.texData.get(e);return null!=n&&(this.disposeData(n.real.dataId,t),this.disposeData(n.imag.dataId,t)),this.texData.delete(e),!0}releaseGPUData(e){const{texture:t,dtype:n,texShape:r,usage:s,isPacked:a,slice:i}=this.texData.get(e),o=i&&i.origDataId||e,u=this.dataRefCount.get(o);u>1?this.dataRefCount.set(o,u-1):(this.dataRefCount.delete(o),null!=t&&(this.numBytesInGPU-=this.computeBytes(r,n),this.textureManager.releaseTexture(t,r,s,a)));const l=this.texData.get(e);l.texture=null,l.texShape=null,l.isPacked=!1,l.slice=null}getTexture(e){return this.uploadToGPU(e),this.texData.get(e).texture.texture}getDataInfo(e){return this.texData.get(e)}shouldExecuteOnCPU(e,t=y_){return je().getBool("WEBGL_CPU_FORWARD")&&e.every((e=>null==this.texData.get(e.dataId).texture&&oe(e.shape)<t))}getGPGPUContext(){return this.gpgpu}where(e){ns("tf.where() in webgl locks the UI thread. Call tf.whereAsync() instead");const t=e.dataSync();return m_(e.shape,t)}packedUnaryOp(e,t,n){const r=new d_(e.shape,t),s=this.compileAndRun(r,[e],n);return Ho().makeTensorFromDataId(s.dataId,s.shape,s.dtype)}abs(e){if(this.shouldExecuteOnCPU([e])&&"complex64"!==e.dtype){const t=UR(this.texData.get(e.dataId).values);return this.makeOutput(e.shape,e.dtype,t)}if(je().getBool("WEBGL_PACK_UNARY_OPERATIONS"))return this.packedUnaryOp(e,h_,e.dtype);const t=new c_(e.shape,h_),n=this.compileAndRun(t,[e]);return Ho().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}makeTensorInfo(e,t,n){let r;if("string"===t&&null!=n&&n.length>0&&Ee(n[0])){const s=n.map((e=>Rs(e)));r=this.write(s,e,t)}else r=this.write(n,e,t);return this.texData.get(r).usage=null,{dataId:r,shape:e,dtype:t}}makeOutput(e,t,n){const{dataId:r}=this.makeTensorInfo(e,t,n);return Ho().makeTensorFromDataId(r,e,t,this)}unpackTensor(e){const t=new f_(e.shape);return this.runWebGLProgram(t,[e],e.dtype)}packTensor(e){const t=new s_(e.shape);return this.runWebGLProgram(t,[e],e.dtype,null,!0)}packedReshape(e,t){const n=[kF(e.shape),...NF(e.shape)],r={dtype:e.dtype,shape:n,dataId:e.dataId},s=[kF(t),...NF(t)],a=new a_(s,n),i=[n],o=this.runWebGLProgram(a,[r],e.dtype,i,!0);return{dataId:o.dataId,shape:t,dtype:o.dtype}}decode(e,t){const n=this.texData.get(e),{isPacked:r,shape:s,dtype:a}=n;null!=t&&re(oe(s)<=t[0]*t[1]*4,(()=>"customTexShape is too small. Row * Column * 4 should be equal or larger than the size of the tensor data."));const i=IF(s);let o;o=r?new nR(i):new tR(i);const u=[null!=t?t:uF(i)];return{dtype:a,shape:s,dataId:this.runWebGLProgram(o,[{shape:i,dtype:a,dataId:e}],a,u,!0,t).dataId}}runWebGLProgram(e,t,n,r,s=!1,a){const i=this.makeTensorInfo(e.outputShape,n),o=this.texData.get(i.dataId);if(e.packedOutput&&(o.isPacked=!0),e.outPackingScheme===sF.DENSE){const t=null!=a?a:uF(e.outputShape);o.texShape=t.map((e=>2*e))}if(null!=e.outTexUsage&&(o.usage=e.outTexUsage),0===oe(i.shape))return o.values=xe(i.dtype,0),i;const u=[],l=t.map((t=>{if("complex64"===t.dtype)throw new Error("GPGPUProgram does not support complex64 input. For complex64 dtypes, please separate the program into real and imaginary parts.");let n=this.texData.get(t.dataId);if(null==n.texture){if(!e.packedInputs&&oe(t.shape)<=je().getNumber("WEBGL_SIZE_UPLOAD_UNIFORM"))return{shape:t.shape,texData:null,isUniform:!0,uniformValues:n.values};e.packedInputs&&(n.isPacked=!0,n.shape=t.shape)}if(this.uploadToGPU(t.dataId),!!n.isPacked!=!!e.packedInputs)t=n.isPacked?this.unpackTensor(t):this.packTensor(t),u.push(t),n=this.texData.get(t.dataId);else if(n.isPacked&&!DF(n.shape,t.shape)){const e=t,r=t.shape;t.shape=n.shape,t=this.packedReshape(t,r),u.push(t),n=this.texData.get(t.dataId),e.shape=r}return{shape:t.shape,texData:n,isUniform:!1}}));this.uploadToGPU(i.dataId);const c={shape:i.shape,texData:o,isUniform:!1},h=function(e,t,n){let r="";t.concat(n).forEach((t=>{const s=null!=t.texData&&null!=t.texData.slice&&t.texData.slice.flatOffset>0;if(e.enableShapeUniforms&&!t.isUniform){const a=t.texData.texShape,{useSqueezeShape:i,uniformShape:o,keptDims:u}=YF(e.packedInputs,t.shape,a);let l="",c="",h="";if(1===o.length&&e.packedInputs){const e=[Math.ceil(a[0]/2),Math.ceil(a[1]/2)];l=`${e[0]>1}_${e[1]>1}`}else if(2!==o.length||e.packedInputs){if(o.length>2&&!e.packedInputs){const e=Re(o);h=`${e[0]===a[1]}_${e[e.length-1]===a[1]}`}}else c=`${o[0]>1}_${o[1]>1}`;const p=t.shape.length,d=2===o.length&&le(t.shape,a),f=1===oe(t.shape),m=Xi(t.shape,n.shape),g=!e.packedInputs&&p===n.shape.length&&le(a,n.texData.texShape),y=e.packedInputs||o.length>2?"":`${a[0]>1}_${a[1]>1}`;r+=`${p}_${g}_${i?u:""}_${o.length}_${f}_${m}_${d}_${l}_${c}_${h}_${y}_${s}`}else{const e=t.isUniform?"uniform":t.texData.texShape;r+=`${t.shape}_${e}_${s}`}}));const s=e.userCode;let a=e.constructor.name;return a+="_"+r+"_"+s+`${je().getNumber("WEBGL_VERSION")}`,a}(e,l,c),p=this.getAndSaveBinary(h,(()=>function(e,t,n,r){const s=n.map(((e,n)=>{const r={logicalShape:e.shape,texShape:e.isUniform?null:e.texData.texShape,isUniform:e.isUniform,isPacked:!e.isUniform&&e.texData.isPacked,flatOffset:null};return null!=e.texData&&null!=e.texData.slice&&e.texData.slice.flatOffset>0&&(r.flatOffset=e.texData.slice.flatOffset),{name:t.variableNames[n],shapeInfo:r}})),a=s.map((e=>e.shapeInfo)),i={logicalShape:r.shape,texShape:r.texData.texShape,isUniform:!1,isPacked:r.texData.isPacked,flatOffset:null},o=PF(s,i,t),u=function(e,t){const n=vF(e,(()=>e.createShader(e.FRAGMENT_SHADER)),"Unable to create fragment WebGLShader.");if(hF(e,(()=>e.shaderSource(n,t))),hF(e,(()=>e.compileShader(n))),!1===e.getShaderParameter(n,e.COMPILE_STATUS))throw function(e,t){const n=fF.exec(t);if(null==n)return console.log(`Couldn't parse line number in error: ${t}`),void console.log(e);const r=+n[1],s=e.split("\n"),a=s.length.toString().length+2,i=s.map(((e,t)=>fe((t+1).toString(),a)+e));let o=0;for(let e=0;e<i.length;e++)o=Math.max(i[e].length,o);const u=i.slice(0,r-1),l=i.slice(r-1,r),c=i.slice(r);console.log(u.join("\n")),console.log(t.split("\n")[0]),console.log(`%c ${fe(l[0],o)}`,"border:1px solid red; background-color:#e3d2d2; color:#a61717"),console.log(c.join("\n"))}(t,e.getShaderInfoLog(n)),new Error("Failed to compile fragment shader.");return n}(e.gl,o),l=e.createProgram(u);let c=null;const h=e.getUniformLocation(l,"NAN",!1);1===je().getNumber("WEBGL_VERSION")&&(c=e.getUniformLocation(l,"INFINITY",!1));const p=!1,d={},f={},m={};for(let n=0;n<t.variableNames.length;n++){const r=t.variableNames[n];d[r]=e.getUniformLocation(l,r,p),d[`offset${r}`]=e.getUniformLocation(l,`offset${r}`,p),t.enableShapeUniforms&&(f[`${r}Shape`]=e.getUniformLocation(l,`${r}Shape`,p),m[`${r}TexShape`]=e.getUniformLocation(l,`${r}TexShape`,p))}let g,y,b;t.enableShapeUniforms&&(g=e.getUniformLocation(l,"outShape",p),b=e.getUniformLocation(l,"outShapeStrides",p),y=e.getUniformLocation(l,"outTexShape",p));const x=[];return t.customUniforms&&t.customUniforms.forEach(((t,n)=>{x[n]=e.getUniformLocation(l,t.name,p)})),{program:t,fragmentShader:u,source:o,webGLProgram:l,uniformLocations:d,customUniformLocations:x,inShapeInfos:a,outShapeInfo:i,infLoc:c,nanLoc:h,inShapesLocations:f,inTexShapesLocations:m,outShapeLocation:g,outShapeStridesLocation:b,outTexShapeLocation:y}}(this.gpgpu,e,l,c))),d=null!=this.activeTimers;let f;d&&(f=this.startTimer()),function(e,t,n,r,s){t.program.enableShapeUniforms||(QF(t.inShapeInfos,n),QF([t.outShapeInfo],[r]));const a=r.texData.texture,i=r.texData.texShape;r.texData.isPacked?e.setOutputPackedMatrixTexture(a.texture,i[0],i[1]):e.setOutputMatrixTexture(a.texture,i[0],i[1]),e.setProgram(t.webGLProgram),1===je().getNumber("WEBGL_VERSION")&&null!==t.infLoc&&e.gl.uniform1f(t.infLoc,1/0),null!==t.nanLoc&&e.gl.uniform1f(t.nanLoc,NaN),n.forEach(((n,r)=>{const s=t.program.variableNames[r],a=t.uniformLocations[s],i=t.uniformLocations[`offset${s}`],o=t.inShapesLocations[`${s}Shape`],u=t.inTexShapesLocations[`${s}TexShape`];if(o){const{uniformShape:r}=YF(t.program.packedInputs,n.shape,n.texData.texShape);switch(r.length){case 1:e.gl.uniform1iv(o,new Int32Array(r));break;case 2:e.gl.uniform2iv(o,new Int32Array(r));break;case 3:e.gl.uniform3iv(o,new Int32Array(r));break;case 4:e.gl.uniform4iv(o,new Int32Array(r))}}if(u&&e.gl.uniform2i(u,n.texData.texShape[0],n.texData.texShape[1]),null!=a)if(n.isUniform)if(oe(n.shape)<2)e.gl.uniform1f(a,n.uniformValues[0]);else{let t=n.uniformValues;t instanceof Float32Array||(t=new Float32Array(t)),e.gl.uniform1fv(a,t)}else null!=n.texData.slice&&null!=i&&e.gl.uniform1i(i,n.texData.slice.flatOffset),e.setInputMatrixTexture(n.texData.texture.texture,a,r)}));const o=t.outShapeLocation;if(o)switch(r.shape.length){case 1:e.gl.uniform1iv(o,new Int32Array(r.shape));break;case 2:e.gl.uniform2iv(o,new Int32Array(r.shape));break;case 3:e.gl.uniform3iv(o,new Int32Array(r.shape));break;case 4:e.gl.uniform4iv(o,new Int32Array(r.shape))}if(t.outShapeStridesLocation){const n=Re(r.shape);switch(r.shape.length){case 2:e.gl.uniform1iv(t.outShapeStridesLocation,new Int32Array(n));break;case 3:e.gl.uniform2iv(t.outShapeStridesLocation,new Int32Array(n));break;case 4:e.gl.uniform3iv(t.outShapeStridesLocation,new Int32Array(n))}}t.outTexShapeLocation&&e.gl.uniform2i(t.outTexShapeLocation,r.texData.texShape[0],r.texData.texShape[1]),t.program.customUniforms&&s&&t.program.customUniforms.forEach(((n,r)=>{const a=t.customUniformLocations[r],i=s[r];if("float"===n.type)e.gl.uniform1fv(a,i);else if("vec2"===n.type)e.gl.uniform2fv(a,i);else if("vec3"===n.type)e.gl.uniform3fv(a,i);else if("vec4"===n.type)e.gl.uniform4fv(a,i);else if("int"===n.type)e.gl.uniform1iv(a,i);else if("ivec2"===n.type)e.gl.uniform2iv(a,i);else if("ivec3"===n.type)e.gl.uniform3iv(a,i);else{if("ivec4"!==n.type)throw Error(`uniform type ${n.type} is not supported yet.`);e.gl.uniform4iv(a,i)}})),e.executeProgram()}(this.gpgpu,p,l,c,r),u.forEach((e=>this.disposeIntermediateTensorInfo(e))),d&&(f=this.endTimer(f),this.activeTimers.push({name:e.constructor.name,query:this.getQueryTime(f)}));const m=je().get("WEBGL_FLUSH_THRESHOLD");if(m>0){const e=$s();e-this.lastGlFlushTime>m&&(this.gpgpu.gl.flush(),this.lastGlFlushTime=e)}if(!je().getBool("WEBGL_LAZILY_UNPACK")&&o.isPacked&&!1===s){const e=this.unpackTensor(i);return this.disposeIntermediateTensorInfo(i),e}return i}compileAndRun(e,t,n,r,s=!1){return n=n||t[0].dtype,this.runWebGLProgram(e,t,n,r,s)}getAndSaveBinary(e,t){return e in this.binaryCache||(this.binaryCache[e]=t()),this.binaryCache[e]}getTextureManager(){return this.textureManager}dispose(){this.disposed||(je().getBool("IS_TEST")||Object.keys(this.binaryCache).forEach((e=>{this.gpgpu.deleteProgram(this.binaryCache[e].webGLProgram),delete this.binaryCache[e]})),this.textureManager.dispose(),null!=this.canvas&&"undefined"!=typeof HTMLCanvasElement&&this.canvas instanceof HTMLCanvasElement?this.canvas.remove():this.canvas=null,this.gpgpuCreatedLocally&&(this.gpgpu.program=null,this.gpgpu.dispose()),this.disposed=!0)}floatPrecision(){return null==this.floatPrecisionValue&&(this.floatPrecisionValue=Xo((()=>{if(!je().get("WEBGL_RENDER_FLOAT32_ENABLED")){const e=je().getBool("DEBUG");je().set("DEBUG",!1);const t=this.abs(ku(1e-8)).dataSync()[0];if(je().set("DEBUG",e),t>0)return 32}return 16}))),this.floatPrecisionValue}epsilon(){return 32===this.floatPrecision()?1e-7:1e-4}uploadToGPU(e){const t=this.texData.get(e),{shape:n,dtype:r,values:s,texture:a,usage:i,isPacked:o}=t;if(null!=a)return;const u=null!=this.activeTimers;let l;u&&(l=$s());let c=t.texShape;if(null==c&&(c=function(e,t=!1){let n=je().getNumber("WEBGL_MAX_TEXTURE_SIZE");if(t&&(n*=2,1===(e=e.map(((t,n)=>n>=e.length-2?J(e[n]):e[n]))).length&&(e=[2,e[0]])),2!==e.length){const t=be(e);e=t.newShape}let r=oe(e);if(e.length<=1&&r<=n)return[1,r];if(2===e.length&&e[0]<=n&&e[1]<=n)return e;if(3===e.length&&e[0]*e[1]<=n&&e[2]<=n)return[e[0]*e[1],e[2]];if(3===e.length&&e[0]<=n&&e[1]*e[2]<=n)return[e[0],e[1]*e[2]];if(4===e.length&&e[0]*e[1]*e[2]<=n&&e[3]<=n)return[e[0]*e[1]*e[2],e[3]];if(4===e.length&&e[0]<=n&&e[1]*e[2]*e[3]<=n)return[e[0],e[1]*e[2]*e[3]];if(t){const t=kF(e);let n=2,s=2;return e.length&&([n,s]=NF(e)),r=t*(n/2)*(s/2),pe(r).map((e=>2*e))}return pe(r)}(n,o),t.texShape=c),null!=s){const e=IF(n);let a,i=c[1],h=c[0];const p=s instanceof Uint8Array||s instanceof Uint8ClampedArray;!o&&p||([i,h]=lF(c[0],c[1])),a=o?new iR(e,p):new aR(e,p);const d=p?[h,i]:c,f=this.makeTensorInfo(d,r),m=this.texData.get(f.dataId);m.usage=p?aF.PIXELS:aF.UPLOAD,m.texShape=d,this.gpgpu.uploadDenseMatrixToTexture(this.getTexture(f.dataId),i,h,s);const g=[[h,i]],y=!0,b=this.runWebGLProgram(a,[f],r,g,y),x=this.texData.get(b.dataId);t.texture=x.texture,t.texShape=x.texShape,t.isPacked=x.isPacked,t.usage=x.usage,this.disposeIntermediateTensorInfo(f),this.texData.delete(b.dataId),t.values=null,u&&(this.uploadWaitMs+=$s()-l)}else{const e=this.acquireTexture(c,i,r,o);t.texture=e}}convertAndCacheOnCPU(e,t){const n=this.texData.get(e),{dtype:r}=n;return this.releaseGPUData(e),null!=t&&(n.values=function(e,t){if("float32"===t||"complex64"===t)return e;if("int32"===t||"bool"===t){const n="int32"===t?new Int32Array(e.length):new Uint8Array(e.length);for(let t=0;t<n.length;++t)n[t]=Math.round(e[t]);return n}throw new Error(`Unknown dtype ${t}`)}(t,r)),n.values}acquireTexture(e,t,n,r){if(this.numBytesInGPU+=this.computeBytes(e,n),!this.warnedAboutMemory&&this.numBytesInGPU>1024*this.numMBBeforeWarning*1024){const e=(this.numBytesInGPU/1024/1024).toFixed(2);this.warnedAboutMemory=!0,console.warn(`High memory usage in GPU: ${e} MB, most likely due to a memory leak`)}return this.textureManager.acquireTexture(e,t,r)}computeBytes(e,t){return e[0]*e[1]*Ce(t)}}b_.nextDataId=0,ba()&&au("webgl",(()=>new b_),2);class x_{constructor(e,t,n){this.variableNames=["A","B"],this.outputShape=Zi(t,n),this.enableShapeUniforms=eR(this.outputShape.length),this.userCode=`\n      float binaryOperation(float a, float b) {\n        ${e}\n      }\n\n      void main() {\n        float a = getAAtOutCoords();\n        float b = getBAtOutCoords();\n        setOutput(binaryOperation(a, b));\n      }\n    `}}class w_{constructor(e,t,n,r=!1){this.variableNames=["A","B"],this.supportsBroadcasting=!0,this.packedInputs=!0,this.packedOutput=!0,this.outputShape=Zi(t,n);const s=this.outputShape.length;this.enableShapeUniforms=eR(s);let a="";if(r)if(0===s||1===oe(this.outputShape))a="\n          result.y = 0.;\n          result.z = 0.;\n          result.w = 0.;\n        ";else if(a=`\n          ${XF(s)} coords = getOutputCoords();\n        `,1===s)this.enableShapeUniforms?a+="\n            result.y = (coords + 1) >= outShape ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          ":a+=`\n            result.y = (coords + 1) >= ${this.outputShape[0]} ? 0. : result.y;\n            result.z = 0.;\n            result.w = 0.;\n          `;else{const e=r_("coords",s);this.enableShapeUniforms?a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= outShape[${s} - 2];\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= outShape[${s} - 1];\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `:a+=`\n            bool nextRowOutOfBounds =\n              (${e[s-2]} + 1) >= ${this.outputShape[s-2]};\n            bool nextColOutOfBounds =\n              (${e[s-1]} + 1) >= ${this.outputShape[s-1]};\n            result.y = nextColOutOfBounds ? 0. : result.y;\n            result.z = nextRowOutOfBounds ? 0. : result.z;\n            result.w = nextColOutOfBounds || nextRowOutOfBounds ? 0. : result.w;\n          `}this.userCode=`\n      vec4 binaryOperation(vec4 a, vec4 b) {\n        ${e}\n      }\n\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n\n        vec4 result = binaryOperation(a, b);\n        ${a}\n\n        setOutput(result);\n      }\n    `}}function v_(e){const{inputs:t,backend:n}=e,{x:r}=t;return n.incRef(r.dataId),{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}const k_={kernelName:cn,backendName:"webgl",kernelFunc:v_};function N_(e){const{inputs:t,backend:n}=e,{real:r,imag:s}=t,a=n.makeTensorInfo(r.shape,"complex64"),i=n.texData.get(a.dataId),o=v_({inputs:{x:r},backend:n}),u=v_({inputs:{x:s},backend:n});return i.complexTensorInfos={real:o,imag:u},a}const I_={kernelName:kt,backendName:"webgl",kernelFunc:N_},C_="return (a < 0.) ? b * a : a;",D_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",E_={kernelName:gn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{alpha:a}=r,i=n.makeTensorInfo([],"float32",Ts(a,"float32")),o=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_(D_,s.shape,i.shape):new x_(C_,s.shape,i.shape),u=n.runWebGLProgram(o,[s,i],"float32");return n.disposeIntermediateTensorInfo(i),u}},S_="return (a < 0.) ? b * a : a;",T_="\n  vec4 aLessThanZero = vec4(lessThan(a, vec4(0.)));\n  return (aLessThanZero * (b * a)) + ((vec4(1.0) - aLessThanZero) * a);\n",A_={kernelName:Qn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r,alpha:s}=t,a=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_(T_,r.shape,s.shape):new x_(S_,r.shape,s.shape);return n.runWebGLProgram(a,[r,s],"float32")}};function $_({opSnippet:e,packedOpSnippet:t,cpuKernelImpl:n,dtype:r}){return({inputs:s,backend:a})=>{const{x:i}=s,o=a,u=r||i.dtype;if(o.shouldExecuteOnCPU([i])&&null!=n){const e=o.texData.get(i.dataId),t=n(e.values,u);return o.makeTensorInfo(i.shape,u,t)}let l;return l=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")&&null!=t?new d_(i.shape,t):new c_(i.shape,e),o.runWebGLProgram(l,[i],u)}}function F_({opSnippet:e,packedOpSnippet:t,checkOutOfBounds:n=!1,supportsComplex:r=!1,cpuKernelImpl:s,dtype:a}){return({inputs:i,backend:o})=>{const{a:u,b:l}=i,c=o;if(r&&"complex64"===u.dtype){const t=c.texData.get(u.dataId),n=c.texData.get(l.dataId),[r,s]=[[t.complexTensorInfos.real,n.complexTensorInfos.real],[t.complexTensorInfos.imag,n.complexTensorInfos.imag]].map((t=>{const[n,r]=t,s={dataId:n.dataId,dtype:n.dtype,shape:u.shape},a={dataId:r.dataId,dtype:r.dtype,shape:l.shape},i=new x_(e,u.shape,l.shape);return c.runWebGLProgram(i,[s,a],na(n.dtype,r.dtype))})),a=N_({inputs:{real:r,imag:s},backend:c});return c.disposeIntermediateTensorInfo(r),c.disposeIntermediateTensorInfo(s),a}const h=a||na(u.dtype,l.dtype);if(("string"===u.dtype||"string"===l.dtype||c.shouldExecuteOnCPU([u,l]))&&null!=s){const e=c.texData.get(u.dataId).values,t=c.texData.get(l.dataId).values,n="string"===u.dtype?$f(e):e,r="string"===u.dtype?$f(t):t,[a,i]=s(u.shape,l.shape,n,r,h),o=c.makeTensorInfo(i,h);return c.texData.get(o.dataId).values=a,o}let p;return p=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")&&null!=t?new w_(t,u.shape,l.shape,n):new x_(e,u.shape,l.shape),c.runWebGLProgram(p,[u,l],h)}}function R_(e,t=!1){if("linear"===e)return"return x;";if("relu"===e)return t?"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n";if("elu"===e)return t?"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n":"return (x >= 0.0) ? x : (exp(x) - 1.0);";if("relu6"===e)return t?"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n":"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n";if("prelu"===e)return t?T_:S_;if("leakyrelu"===e)return t?D_:C_;if("sigmoid"===e)return"return 1.0 / (1.0 + exp(-1.0 * x));";throw new Error(`Activation ${e} has not been implemented for the WebGL backend.`)}class __{constructor(e,t,n,r=!1,s=!1,a=!1,i=null,o=!1,u=!1){this.variableNames=["matrixA","matrixB"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=n,this.enableShapeUniforms=eR(this.outputShape.length);const l=r?e[1]:e[2],c=Math.ceil(l/2),h=r?"i * 2, rc.y":"rc.y, i * 2",p=s?"rc.z, i * 2":"i * 2, rc.z",d=r?["a.xxyy","a.zzww"]:["a.xxzz","a.yyww"],f=s?["b.xzxz","b.ywyw"]:["b.xyxy","b.zwzw"];let m="",g="";i&&(m=o?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${i}\n        }`:u?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${i}\n        }`:`vec4 activation(vec4 x) {\n          ${i}\n        }`,g="result = activation(result);");const y=a?"result += getBiasAtOutCoords();":"";a&&this.variableNames.push("bias"),o&&this.variableNames.push("preluActivationWeights"),u&&this.variableNames.push("leakyreluAlpha");let b="rc.x",x="rc.x";e[0]<t[0]?b=`int(min(float(rc.x), ${e[0]-1}.))`:t[0]<e[0]&&(x=`int(min(float(rc.x), ${t[0]-1}.))`),this.userCode=`\n      ${m}\n      // Don't use uniform for sharedDimensionPacked for performance.\n      const float sharedDimension = ${c}.0;\n\n      vec4 dot2x2ARowBCol(ivec3 rc) {\n        vec4 result = vec4(0);\n        for (int i = 0; i < ${c}; i++) {\n          int batchA = ${b};\n          int batchB = ${x};\n          vec4 a = getMatrixA(batchA, ${h});\n          vec4 b = getMatrixB(batchB, ${p});\n\n          // These swizzled products need to be separately added.\n          // See: https://github.com/tensorflow/tfjs/issues/1735\n          result += (${d[0]} * ${f[0]});\n          result += (${d[1]} * ${f[1]});\n        }\n        return result;\n      }\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n        vec4 result = dot2x2ARowBCol(rc);\n\n        ${y}\n\n        ${g}\n\n        setOutput(result);\n      }\n    `}}class M_{constructor(e,t,n){this.variableNames=["AReal","AImag","BReal","BImag"],this.outputShape=Zi(t,n),this.userCode=`\n      float binaryOpComplex(\n          float areal, float aimag, float breal, float bimag) {\n        ${e}\n      }\n\n      void main() {\n        float areal = getARealAtOutCoords();\n        float aimag = getAImagAtOutCoords();\n        float breal = getBRealAtOutCoords();\n        float bimag = getBImagAtOutCoords();\n        setOutput(binaryOpComplex(areal, aimag, breal, bimag));\n      }\n    `}}const O_="return a * b;";function B_(e){const{inputs:t,backend:n}=e,{a:r,b:s}=t,a=na(r.dtype,s.dtype);if("complex64"===r.dtype){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),a=new M_("return areal * breal - aimag * bimag;",r.shape,s.shape),i=new M_("return areal * bimag + aimag * breal;",r.shape,s.shape),o=[{dataId:e.complexTensorInfos.real.dataId,dtype:e.complexTensorInfos.real.dtype,shape:r.shape},{dataId:e.complexTensorInfos.imag.dataId,dtype:e.complexTensorInfos.imag.dtype,shape:r.shape},{dataId:t.complexTensorInfos.real.dataId,dtype:t.complexTensorInfos.real.dtype,shape:s.shape},{dataId:t.complexTensorInfos.imag.dataId,dtype:t.complexTensorInfos.imag.dtype,shape:s.shape}],u=n.runWebGLProgram(a,o,"float32"),l=n.runWebGLProgram(i,o,"float32"),c=N_({inputs:{real:u,imag:l},backend:n});return n.disposeIntermediateTensorInfo(u),n.disposeIntermediateTensorInfo(l),c}if(n.shouldExecuteOnCPU([r,s])){const e=n.texData.get(r.dataId),t=n.texData.get(s.dataId),[i,o]=_R(r.shape,s.shape,e.values,t.values,a),u=n.makeTensorInfo(o,a);return n.texData.get(u.dataId).values=i,u}let i;return i=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_(O_,r.shape,s.shape):new x_(O_,r.shape,s.shape),n.runWebGLProgram(i,[r,s],a)}const z_={kernelName:Un,backendName:"webgl",kernelFunc:B_};function L_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{shape:a}=r,i=n,o=oe(s.shape),u=ge(a,o),l=oe(u);re(o===l,(()=>`The new shape (${u}) has ${l} elements and the old shape (${s.shape}) has ${o} elements. The new shape and old shape must have the same number of elements.`));const c=i.texData.get(s.dataId);return!c.isPacked||DF(s.shape,u)||null!==c.texture&&DF(c.shape,u)?(i.incRef(s.dataId),{dataId:s.dataId,shape:u,dtype:s.dtype}):function(e,t,n){const r=[kF(e.shape),...NF(e.shape)],s={dtype:e.dtype,shape:r,dataId:e.dataId},a=[kF(t),...NF(t)],i=new a_(a,r),o=[r],u=n.runWebGLProgram(i,[s],e.dtype,o,!0);return{dataId:u.dataId,shape:t,dtype:u.dtype}}(s,u,i)}const P_={kernelName:ar,backendName:"webgl",kernelFunc:L_};class U_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];const i=4*Math.floor(n/4),o=n%4;let u="sumValue += dot(values, ones);";if(null!=t){const e=1/t;u=`sumValue += dot(values * ${ce(e)?e.toPrecision(2):e}, ones);`}let l="";s%n>0&&(l=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return 0.0;\n        }\n      `),this.userCode=`\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${l}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${i}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${u}\n        }\n\n        int inIdx = inOffset + ${i};\n        if (${1===o}) {\n          vec4 values = vec4(getValue(batch, inIdx), 0.0, 0.0, 0.0);\n\n          ${u}\n        } else if (${2===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1), 0.0, 0.0);\n\n          ${u}\n        } else if (${3===o}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2), 0.0);\n\n          ${u}\n        }\n        setOutput(sumValue);\n      }\n    `}}class W_{constructor(e,t){this.variableNames=["x"];const{windowSize:n,batchSize:r,inSize:s,outSize:a}=e;this.outputShape=[r,a];let i="0.0",o="";"prod"===t?i="1.0":"min"===t?(i="1.0 / 1e-20",o="min"):"max"===t&&(i="-1.0 / 1e-20",o="max");let u=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"sum"===t?u="sumValue":"prod"===t?u="prodValue":"all"===t?u="allValue":"any"===t&&(u="anyValue");const l=4*Math.floor(n/4),c=n%4;let h=`\n      if (${"sum"===t}) {\n        sumValue += dot(values, ones);\n      } else if (${"prod"===t}) {\n        vec2 tmp = vec2(values[0], values[1]) * vec2(values[2], values[3]);\n        prodValue *= tmp[0] * tmp[1];\n      } else {\n        minMaxValue = ${o}(values, minMaxValue);\n        if (${"min"===t} || ${"max"===t}) {\n          minMaxValue = ${o}(values, minMaxValue);\n          bvec4 isNaN = isnan(values);\n          if (isNaN.r || isNaN.g || isNaN.b || isNaN.a) {\n            minMaxValue = vec4(NAN);\n          }\n        }\n      }\n    `,p="vec4";"all"===t?(i="1.0",h="\n        bool reducedAllValue = all(values);\n        float floatedReducedAllValue = float(reducedAllValue);\n        allValue = float(allValue >= 1.0 && floatedReducedAllValue >= 1.0);\n      ",p="bvec4"):"any"===t&&(i="0.0",h="\n        bool reducedAnyValue = any(values);\n        float floatedReducedAnyValue = float(reducedAnyValue);\n        anyValue = float(anyValue >= 1.0 || floatedReducedAnyValue >= 1.0);\n      ",p="bvec4");let d="";s%n>0&&(d=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `),this.userCode=`\n      const float initializationValue = ${i};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float getValue(int batch, int inIdx) {\n        ${d}\n        return getX(batch, inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${n};\n\n        vec4 minMaxValue = vec4(${i});\n        float prodValue = 1.0;\n        float sumValue = 0.0;\n        float allValue = 1.0;\n        float anyValue = 0.0;\n\n        for (int i = 0; i < ${l}; i += 4) {\n          int inIdx = inOffset + i;\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          ${h}\n        }\n\n        int inIdx = inOffset + ${l};\n        if (${1===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${2===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          ${h}\n        } else if (${3===c}) {\n          ${p} values = ${p}(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          ${h}\n        }\n        setOutput(${u});\n      }\n    `}}function V_(e,t,n,r){const s=function(e){const t=[];for(;0===t.length||1!==t[t.length-1].outSize;){const n=t.length?t[t.length-1].outSize:e[1],r=Bd(n);t.push({inSize:n,windowSize:r,outSize:Math.ceil(n/r)})}return t}(e.shape);let a=e;for(let i=0;i<s.length;i++){const{inSize:o,windowSize:u,outSize:l}=s[i];let c,h;c="mean"===n?0===i?new U_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},o):new U_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l}):new W_({windowSize:u,inSize:o,batchSize:e.shape[0],outSize:l},n),h=a,a=r.runWebGLProgram(c,[a],t),h.dataId!==e.dataId&&r.disposeIntermediateTensorInfo(h)}return a}class G_{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];this.outputShape=n,this.rank=n.length;const r=XF(this.rank),s=function(e){const t=e.length;if(t>6)throw Error(`Transpose for rank ${t} is not yet supported`);const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u","resRC.v"],r=new Array(t);for(let t=0;t<e.length;t++)r[e[t]]=n[t];return r.join()}(t);this.userCode=`\n    void main() {\n      ${r} resRC = getOutputCoords();\n      setOutput(getA(${s}));\n    }\n    `}}class j_{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0;const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[t[r]];if(this.outputShape=n,this.rank=n.length,this.rank>6)throw Error(`Packed transpose for rank ${this.rank} is not yet supported.`);const r=XF(this.rank),s=n_("rc",this.rank),a=new Array(this.rank);for(let e=0;e<t.length;e++)a[t[e]]=s[e];const i=`vec2(${a.slice(-2).join()})`,o=`++${s[this.rank-1]} < ${n[this.rank-1]}`,u=`getChannel(getA(${a.join()}), ${i})`;this.userCode=`\n    void main() {\n      ${r} rc = getOutputCoords();\n      vec4 result = vec4(0.);\n      result[0] = ${u};\n      if(${o}) {\n        result[1] = ${u};\n      }\n      --${s[this.rank-1]};\n      if(++${s[this.rank-2]} < ${n[this.rank-2]}) {\n        result[2] = ${u};\n        if(${o}) {\n          result[3] = ${u};\n        }\n      }\n      setOutput(result);\n    }\n    `}}function H_(e,t,n){const r=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new j_(e.shape,t):new G_(e.shape,t);return n.runWebGLProgram(r,[e],e.dtype)}function q_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r;return function(e,t,n,r){const s=t,a=e.shape.length,i=ye(s,e.shape);let o=i;const u=Ac(o,a),l=null!=u;let c=e;l&&(c=H_(e,u,r),o=Fc(o.length,a)),Tc("sum",o,a);const[h,p]=Ec(c.shape,o);let d=h;n&&(d=Sc(h,i));const f=oe(p),m=L_({inputs:{x:c},attrs:{shape:[oe(e.shape)/f,f]},backend:r}),g=V_(m,ra(e.dtype),"sum",r),y=L_({inputs:{x:g},attrs:{shape:d},backend:r});return r.disposeIntermediateTensorInfo(m),r.disposeIntermediateTensorInfo(g),l&&r.disposeIntermediateTensorInfo(c),y}(s,a,i,n)}const K_={kernelName:Ir,backendName:"webgl",kernelFunc:q_};function X_(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{perm:a}=r,i=n,o=s.shape.length,u=new Array(o);for(let e=0;e<u.length;e++)u[e]=s.shape[a[e]];let l;if(i.shouldExecuteOnCPU([s])){const e=i.texData.get(s.dataId).values,t=e_(e,s.shape,s.dtype,a,u);l=i.makeTensorInfo(u,s.dtype),i.texData.get(l.dataId).values=t}else l=H_(s,a,i);return l}const Y_={kernelName:jr,backendName:"webgl",kernelFunc:X_};function Z_({a:e,b:t,transposeA:n,transposeB:r,backend:s,bias:a=null,preluActivationWeights:i=null,leakyreluAlpha:o=0,activation:u=null}){const l=e.shape.length,c=t.shape.length,h=n?e.shape[l-2]:e.shape[l-1],p=r?t.shape[c-1]:t.shape[c-2],d=n?e.shape[l-1]:e.shape[l-2],f=r?t.shape[c-2]:t.shape[c-1],m=e.shape.slice(0,-2),g=t.shape.slice(0,-2),y=oe(m),b=oe(g),x=Zi(e.shape.slice(0,-2),t.shape.slice(0,-2)).concat([d,f]);re(h===p,(()=>`Error in matMul: inner shapes (${h}) and (${p}) of Tensors with shapes ${e.shape} and ${t.shape} and transposeA=${n} and transposeB=${r} must match.`));const w=n?[y,h,d]:[y,d,h],v=r?[b,f,p]:[b,p,f],k=L_({inputs:{x:e},backend:s,attrs:{shape:w}}),N=L_({inputs:{x:t},backend:s,attrs:{shape:v}}),I=[k,N],C=Math.max(y,b),D=n?k.shape[1]:k.shape[2],E=null!=a,S=null!=i,T="leakyrelu"===u,A=null!=u?R_(u,!0):null;let $;if((1===d||1===f)&&D>1e3&&!1===(E||S||T||null!=A)){let e=k,t=N;n&&(e=X_({inputs:{x:k},backend:s,attrs:{perm:[0,2,1]}}),I.push(e)),r&&(t=X_({inputs:{x:N},backend:s,attrs:{perm:[0,2,1]}}),I.push(t));const a=1===f;let i=e;1!==f&&(i=L_({inputs:{x:e},backend:s,attrs:{shape:[C,D,1]}}),I.push(i));const o=1===f?2:1;let u=t;a&&(u=L_({inputs:{x:t},backend:s,attrs:{shape:[C,1,D]}}),I.push(u));const l=B_({inputs:{a:i,b:u},backend:s});$=q_({inputs:{x:l},backend:s,attrs:{axis:o,keepDims:!0}}),I.push(l)}else{const u=na(e.dtype,t.dtype),l=new __(w,v,[C,d,f],n,r,E,A,S,T),c=[k,N];if(null!=a&&c.push(a),S&&c.push(i),T){const e=s.makeTensorInfo([],"float32",Ts(o,"float32"));c.push(e),I.push(e)}$=s.runWebGLProgram(l,c,u)}const F=L_({inputs:{x:$},backend:s,attrs:{shape:x}});I.push($);for(const e of I)s.disposeIntermediateTensorInfo(e);return F}const J_={kernelName:Qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a,bias:i,preluActivationWeights:o}=t,{transposeA:u,transposeB:l,activation:c,leakyreluAlpha:h}=r;return Z_({a:s,b:a,transposeA:u,transposeB:l,backend:n,bias:i,preluActivationWeights:o,leakyreluAlpha:h,activation:c})}},Q_="return abs(x);",eM={kernelName:Ye,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])&&"complex64"!==r.dtype){const e=n.texData.get(r.dataId),t=UR(e.values);return n.makeTensorInfo(r.shape,r.dtype,t)}let s;return s=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new d_(r.shape,Q_):new c_(r.shape,Q_),n.runWebGLProgram(s,[r],r.dtype)}},tM=$_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return acos(x);\n"}),nM={kernelName:Ze,backendName:"webgl",kernelFunc:tM},rM=$_({opSnippet:"if (isnan(x)) return x;\n  if (x < 1.0) return NAN;\nreturn log(x + sqrt(x * x - 1.0));"}),sM={kernelName:Je,backendName:"webgl",kernelFunc:rM},aM="return a + b;",iM=F_({opSnippet:aM,packedOpSnippet:aM,supportsComplex:!0,cpuKernelImpl:fR}),oM={kernelName:Qe,backendName:"webgl",kernelFunc:iM};class uM{constructor(e,t){this.outputShape=[],this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`float v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        float result = ${r};\n        setOutput(result);\n      }\n    `}}class lM{constructor(e,t){this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.variableNames=t.map(((e,t)=>`T${t}`));const n=[];this.variableNames.forEach((e=>{n.push(`vec4 v${e} = get${e}AtOutCoords();`)}));const r=this.variableNames.map((e=>`v${e}`)).join(" + ");this.userCode=`\n      void main() {\n        ${n.join("\n        ")}\n\n        vec4 result = ${r};\n        setOutput(result);\n      }\n    `}}const cM={kernelName:et,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,s=n;if(1===s.length)return v_({inputs:{x:s[0]},backend:r});if(s.length>je().get("WEBGL_MAX_TEXTURES_IN_SHADER")){const t=Math.floor(s.length/2),n=e({inputs:s.slice(0,t),backend:r}),a=e({inputs:s.slice(t),backend:r});return e({inputs:[n,a],backend:r})}const a=s.map((e=>e.dtype)).reduce(((e,t)=>na(e,t))),i=s.map((e=>e.shape)),o=je().getBool("WEBGL_PACK")?new lM(s[0].shape,i):new uM(s[0].shape,i);return r.runWebGLProgram(o,s,a)}},hM={kernelName:tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=ye(a,s.shape);let l=u;const c=Ac(l,o);let h=s;null!=c&&(h=X_({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Fc(l.length,o)),Tc("all",l,o);const[p,d]=Ec(h.shape,l),f=L_({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=V_(f,f.dtype,"all",n);let g;return g=L_(i?{inputs:{x:m},backend:n,attrs:{shape:Sc(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},pM={kernelName:nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=ye(a,s.shape);let l=u;const c=Ac(l,o);let h=s;null!=c&&(h=X_({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Fc(l.length,o)),Tc("any",l,o);const[p,d]=Ec(h.shape,l),f=L_({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=V_(f,f.dtype,"any",n);let g;return g=L_(i?{inputs:{x:m},backend:n,attrs:{shape:Sc(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}};class dM{constructor(e,t,n){this.variableNames=["A"];const{windowSize:r,batchSize:s,outSize:a}=e;n||this.variableNames.push("bestIndicesA"),this.outputShape=[s,a];const i="max"===t?">":"<",o=n?"inOffset + i;":"round(getBestIndicesA(batch, inOffset + i));";this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = outIdx * ${r};\n\n        int bestIndex = inOffset;\n        float bestValue = getA(batch, bestIndex);\n\n        for (int i = 0; i < ${r}; i++) {\n          int inIdx = ${o};\n          float candidate = getA(batch, inIdx);\n          if (candidate ${i} bestValue) {\n            bestValue = candidate;\n            bestIndex = inIdx;\n          }\n        }\n        setOutput(float(bestIndex));\n      }\n    `}}class fM{constructor(e,t,n,r){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,re(e.length>2,(()=>`Packed arg${n.charAt(0).toUpperCase()+n.slice(1)} supports only inputs with rank above 2.`));const s=e[e.length-1],a=Math.ceil(s/t);this.outputShape=e.slice(0,-1),a>1&&this.outputShape.push(a),r||this.variableNames.push("bestIndicesA");const i=this.outputShape,o=i.length,u=XF(o),l=r_("coords",o);let c,h;if(1===a){h=o+1;const e=XF(h);c=`\n        ${e} sourceLocR = ${e}(${l.join()}, 0);\n        ++${l[o-1]};\n        ${e} sourceLocG = ${e}(${l.join()}, 0);\n        ++${l[o-2]};\n        ${e} sourceLocA = ${e}(${l.join()}, 0);\n        --${l[o-1]};\n        ${e} sourceLocB = ${e}(${l.join()}, 0);\n        --${l[o-2]};`}else h=o,c=`\n        ${u} sourceLocR = coords;\n        ++${l[o-1]};\n        ${u} sourceLocG = coords;\n        ++${l[o-2]};\n        ${u} sourceLocA = coords;\n        --${l[o-1]};\n        ${u} sourceLocB = coords;\n        --${l[o-2]};`;const p=["x","y","z","w","u","v"].slice(0,h),d="."+p[h-1],f=p.map((e=>"int "+e)),m=r_("sourceLocR",h-1).concat("inIdx.r"),g=r_("sourceLocG",h-1).concat("inIdx.g"),y=r_("sourceLocB",h-1).concat("inIdx.b"),b=r_("sourceLocA",h-1).concat("inIdx.a"),x="max"===n?"greaterThan":"lessThan",w=r?"":`\n          inIdx = round(vec4(getBestIndicesAChannel(${m.join()}),\n                             getBestIndicesAChannel(${g.join()}),\n                             getBestIndicesAChannel(${y.join()}),\n                             getBestIndicesAChannel(${b.join()})));`,v=`vec4(\n            getAChannel(${m.join()}),\n            hasNextCol ? getAChannel(${g.join()}) : 0.,\n            hasNextRow ? getAChannel(${y.join()}) : 0.,\n            hasNextRow && hasNextCol ? getAChannel(${b.join()}) : 0.)`,k=r?"":`\n      float getBestIndicesAChannel(${f.join()}) {\n        return getChannel(getBestIndicesA(${p.join()}),\n                                          vec2(${p.slice(-2).join()}));\n      }`;this.userCode=`\n      float getAChannel(${f.join()}) {\n        return getChannel(getA(${p.join()}),\n                               vec2(${p.slice(-2).join()}));\n      }\n      ${k}\n      void main() {\n        ${u} coords = getOutputCoords();\n        bool hasNextCol = ${l[o-1]} < ${i[o-1]-1};\n        bool hasNextRow = ${l[o-2]} < ${i[o-2]-1};\n        ${c}\n        ivec4 srcIdx = ivec4(sourceLocR${d}, sourceLocG${d},\n          sourceLocB${d}, sourceLocA${d}) * ${t};\n        ivec4 inIdx = srcIdx;\n        vec4 bestIndex = vec4(inIdx);\n        vec4 bestValue = ${v};\n\n        for (int i = 0; i < ${t}; i++) {\n          inIdx = srcIdx;\n          ${w}\n          vec4 candidate = ${v};\n          bvec4 nan = isnan(candidate);\n          bvec4 replace = bvec4(\n            vec4(${x}(candidate, bestValue)) * (vec4(1.0) - vec4(nan)));\n\n          bestValue = vec4(replace.x  ? candidate.x : bestValue.x,\n                           replace.y  ? candidate.y : bestValue.y,\n                           replace.z  ? candidate.z : bestValue.z,\n                           replace.w  ? candidate.w : bestValue.w);\n          bestIndex = mix(bestIndex, vec4(inIdx), vec4(replace));\n          srcIdx++;\n        }\n        setOutput(bestIndex);\n      }\n    `}}function mM(e,t,n,r=null){let s=t.shape[0],a=t.shape[1];null!=r&&(s=r.shape[0],a=r.shape[1]);const i=Bd(a),o={windowSize:i,inSize:a,batchSize:s,outSize:Math.ceil(a/i)},u=new dM(o,n,null==r),l=[t];null!=r&&l.push(r);const c=e.runWebGLProgram(u,l,"int32");if(1===c.shape[1])return c;const h=mM(e,t,n,c);return e.disposeIntermediateTensorInfo(c),h}function gM(e,t,n,r=null){const s=null!=r?r.shape:t.shape,a=Bd(s[s.length-1]),i=new fM(s,a,n,null==r),o=null==r?[t]:[t,r],u=e.runWebGLProgram(i,o,"int32");if(u.shape.length===t.shape.length){const r=gM(e,t,n,u);return e.disposeIntermediateTensorInfo(u),r}return u}function yM(e,t,n,r){const s=[n];if(Tc("arg"+r.charAt(0).toUpperCase()+r.slice(1),s,t.shape.length),!je().getBool("WEBGL_PACK_REDUCE")||t.shape.length<=2){const n=[],a=e.texData.get(t.dataId);let i=t;null!==a&&a.isPacked&&(i=e.unpackTensor(t),n.push(i));const[o,u]=Ec(i.shape,s),l=oe(u),c=L_({inputs:{x:i},backend:e,attrs:{shape:[-1,l]}});n.push(c);const h=mM(e,c,r);n.push(h);const p=L_({inputs:{x:h},backend:e,attrs:{shape:o}});return n.forEach((t=>e.disposeIntermediateTensorInfo(t))),p}return gM(e,t,r)}const bM={kernelName:rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=ye(a,s.shape);const o=Ac(i,s.shape.length);let u=s;const l=[];null!=o&&(u=X_({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Fc(i.length,u.shape.length)),Tc("argMax",[i[0]],u.shape.length);const c=yM(n,u,i[0],"max");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},xM={kernelName:st,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a}=r;let i=ye(a,s.shape);const o=Ac(i,s.shape.length);let u=s;const l=[];null!=o&&(u=X_({inputs:{x:s},backend:n,attrs:{perm:o}}),l.push(u),i=Fc(i.length,u.shape.length)),Tc("argMin",[i[0]],u.shape.length);const c=yM(n,u,i[0],"min");return l.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}},wM=$_({opSnippet:"if (isnan(x)) return x;\n  if (abs(x) > 1.) {\n    return NAN;\n  }\n  return asin(x);\n"}),vM={kernelName:at,backendName:"webgl",kernelFunc:wM},kM=$_({opSnippet:"if (isnan(x)) return x;return log(x + sqrt(x * x + 1.0));"}),NM={kernelName:it,backendName:"webgl",kernelFunc:kM},IM=$_({opSnippet:"if (isnan(x)) return x;\n  return atan(x);\n"}),CM={kernelName:ot,backendName:"webgl",kernelFunc:IM},DM=F_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return atan(a, b);\n",packedOpSnippet:"\n  vec4 result = atan(a, b);\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),EM={kernelName:lt,backendName:"webgl",kernelFunc:DM},SM=$_({opSnippet:"if (isnan(x)) return x;\n  if ((x < -1.0) || (x > 1.0)) return NAN;\nreturn (log(1.0 + x) - log(1.0 - x)) / 2.0;"}),TM={kernelName:ut,backendName:"webgl",kernelFunc:SM};class AM{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideHeight,o=e.strideWidth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterHeight,h=e.effectiveFilterWidth,p=e.padInfo.top,d=e.padInfo.left;this.outputShape=e.outShape;const f="avg"===t,m=`((batch  * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + d`,g=`(xR * ${e.inWidth} + xC) * ${e.inChannels} + d`;let y="0.0";if(f||(y="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec2 strides = ivec2(${i}, ${o});\n        const ivec2 pads = ivec2(${p}, ${d});\n\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int batch = coords[0];\n          int d = coords[3];\n\n          ivec2 xRCCorner = coords.yz * strides - pads;\n          int xRCorner = xRCCorner.x;\n          int xCCorner = xRCCorner.y;\n\n          // max/min x(?, ?, d) to get y(yR, yC, d).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n          float avgValue = 0.0;\n\n          for (int wR = 0; wR < ${c};\n              wR += ${u}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${h};\n                wC += ${l}) {\n              int xC = xCCorner + wC;\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float value = getX(batch, xR, xC, d);\n\n              // If a min / max value has already been found, use it. If not,\n              // use the current value.\n              float currMinMaxValue = mix(\n                  value, minMaxValue, minMaxValueFound);\n              if (value ${t} currMinMaxValue) {\n                minMaxValue = value;\n                minMaxValueFound = 1.0;\n                minMaxPosition = ${r?s?m:g:`wR * ${h} + wC`};\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let b=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(b="avgValue / count");const x=4*Math.floor(a/4),w=a%4,v=`\n      if (${f}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec2 strides = ivec2(${i}, ${o});\n      const ivec2 pads = ivec2(${p}, ${d});\n      const float initializationValue = ${y};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xR, int xC, int d) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xR, xC, d);\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d = coords[3];\n\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // max/min x(?, ?, d) to get y(yR, yC, d).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${y});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wR = 0; wR < ${c};\n            wR += ${u}) {\n          int xR = xRCorner + wR;\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${x}; wC += 4) {\n            int xC = xCCorner + wC * ${l};\n\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              getValue(batch, xR, xC + 3 * ${l}, d)\n            );\n\n            ${v}\n          }\n\n          int xC = xCCorner + ${x};\n          if (${1===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              initializationValue,\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${2===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              initializationValue,\n              initializationValue\n            );\n\n            ${v}\n          } else if (${3===w}) {\n            vec4 values = vec4(\n              getValue(batch, xR, xC, d),\n              getValue(batch, xR, xC + ${l}, d),\n              getValue(batch, xR, xC + 2 * ${l}, d),\n              initializationValue\n            );\n\n            ${v}\n          }\n        }\n        setOutput(${b});\n      }\n    `}}class $M{constructor(e,t,n,r=!1,s=!1){if(this.variableNames=["x"],"avg"===t&&n)throw new Error("Cannot compute positions for average pool.");const a=e.filterWidth,i=e.strideDepth,o=e.strideHeight,u=e.strideWidth,l=e.dilationDepth,c=e.dilationHeight,h=e.dilationWidth,p=e.effectiveFilterDepth,d=e.effectiveFilterHeight,f=e.effectiveFilterWidth,m=e.padInfo.front,g=e.padInfo.top,y=e.padInfo.left;this.outputShape=e.outShape;const b="avg"===t;let x="0.0";if(b||(x="-1.0 / 1e-20"),n){const t=">=";return void(this.userCode=`\n        const ivec3 strides =\n            ivec3(${i}, ${o}, ${u});\n        const ivec3 pads = ivec3(${m}, ${g}, ${y});\n\n        void main() {\n          ivec5 coords = getOutputCoords();\n          int batch = coords.x;\n          int ch = coords.u;\n\n          ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n          int xDCorner = xCorner.x;\n          int xRCorner = xCorner.y;\n          int xCCorner = xCorner.z;\n\n          // max/min x(?, ?, ?, ch) to get y(yD, yR, yC, ch).\n          // ? = to be determined\n          float minMaxValue = 0.0;\n          float minMaxValueFound = 0.0;\n          int minMaxPosition = 0;\n\n          for (int wD = 0; wD < ${p};\n              wD += ${l}) {\n            int xD = xDCorner + wD;\n\n            if (xD < 0 || xD >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int wR = 0; wR < ${d};\n                wR += ${c}) {\n              int xR = xRCorner + wR;\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int wC = 0; wC < ${f};\n                  wC += ${h}) {\n                int xC = xCCorner + wC;\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float value = getX(batch, xD, xR, xC, ch);\n\n                // If a min / max value has already been found, use it. If not,\n                // use the current value.\n                float currMinMaxValue = mix(\n                    value, minMaxValue, minMaxValueFound);\n                if (value ${t} currMinMaxValue) {\n                  minMaxValue = value;\n                  minMaxValueFound = 1.0;\n                  minMaxPosition = ${r?s?`(((batch * ${e.inDepth} + xD) * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`((xD * ${e.inHeight} + xR) * ${e.inWidth} + xC) * ${e.inChannels} + ch`:`wD * ${d} * ${f} +\n                      wR * ${f} + wC`};\n                }\n              }\n            }\n          }\n          setOutput(float(minMaxPosition));\n        }\n      `)}let w=`${t}(${t}(${t}(minMaxValue[0], minMaxValue[1]), minMaxValue[2]), minMaxValue[3])`;"avg"===t&&(w="avgValue / count");const v=4*Math.floor(a/4),k=a%4,N=`\n      if (${b}) {\n        avgValue += dot(values, ones);\n      } else {\n        minMaxValue = max(values, minMaxValue);\n      }\n    `;this.userCode=`\n      const ivec3 strides =\n        ivec3(${i}, ${o}, ${u});\n      const ivec3 pads = ivec3(${m}, ${g}, ${y});\n      const float initializationValue = ${x};\n      const vec4 ones = vec4(1.0, 1.0, 1.0, 1.0);\n\n      float count = 0.0;\n\n      float getValue(int batch, int xD, int xR, int xC, int ch) {\n        if (xC < 0 || xC >= ${e.inWidth}) {\n          return initializationValue;\n        }\n        count += 1.0;\n        return getX(batch, xD, xR, xC, ch);\n      }\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 xCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xDCorner = xCorner.x;\n        int xRCorner = xCorner.y;\n        int xCCorner = xCorner.z;\n\n        // max/min x(?, ?, ?, d) to get y(yD, yR, yC, ch).\n        // ? = to be determined\n        vec4 minMaxValue = vec4(${x});\n        float avgValue = 0.0;\n        count = 0.0;\n\n        for (int wD = 0; wD < ${p};\n            wD += ${l}) {\n          int xD = xDCorner + wD;\n\n          if (xD < 0 || xD >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${d};\n            wR += ${c}) {\n            int xR = xRCorner + wR;\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${v}; wC += 4) {\n              int xC = xCCorner + wC * ${h};\n\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                getValue(batch, xD, xR, xC + 3 * ${h}, ch)\n              );\n\n              ${N}\n            }\n\n            int xC = xCCorner + ${v};\n            if (${1===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                initializationValue,\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${2===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                initializationValue,\n                initializationValue\n              );\n\n              ${N}\n            } else if (${3===k}) {\n              vec4 values = vec4(\n                getValue(batch, xD, xR, xC, ch),\n                getValue(batch, xD, xR, xC + ${h}, ch),\n                getValue(batch, xD, xR, xC + 2 * ${h}, ch),\n                initializationValue\n              );\n\n              ${N}\n            }\n          }\n          setOutput(${w});\n        }\n      }\n    `}}const FM={kernelName:ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;FF(s,"avgPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;re(il(i,1),(()=>`Error in avgPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Yu(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))return v_({inputs:{x:s},backend:n});const c=new AM(l,"avg",!1);return n.runWebGLProgram(c,[s],"float32")}},RM={kernelName:pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dimRoundingMode:u,dataFormat:l}=r,c=Zu(s.shape,a,i,[1,1,1],o,u,l),h=new $M(c,"avg",!1);return n.runWebGLProgram(h,[s],"float32")}};class _M{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterHeight,u=e.effectiveFilterWidth,l=o-1-e.padInfo.top,c=u-1-e.padInfo.left,h=1/(t*n);this.userCode=`\n      const ivec2 pads = ivec2(${l}, ${c});\n      const float avgMultiplier = float(${h});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${o};\n            wR += ${a}) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${u};\n            wC+= ${i}) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n\n            dotProd += dyValue * avgMultiplier;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class MM{constructor(e){this.variableNames=["dy"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.effectiveFilterDepth,h=e.effectiveFilterHeight,p=e.effectiveFilterWidth,d=c-1-e.padInfo.front,f=h-1-e.padInfo.top,m=p-1-e.padInfo.left,g=1/(t*n*r);this.userCode=`\n      const ivec3 pads = ivec3(${d}, ${f}, ${m});\n      const float avgMultiplier = float(${g});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, d) with pos mask(:, :, :, ch) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${c};\n            wD += ${o}) {\n          float dyD = float(dyDCorner + wD) / ${s}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${h};\n              wR += ${u}) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${p};\n                wC += ${l}) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n\n              dotProd += dyValue * avgMultiplier;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const OM={kernelName:dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Zu(i.shape,o,u,[1,1,1],l,c),p=new MM(h);return n.runWebGLProgram(p,[s],i.dtype)}},BM={kernelName:ht,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a;FF([s,a],"avgPoolGrad");const{filterSize:o,strides:u,pad:l}=r,c=Yu(i.shape,o,u,1,l),h=new _M(c);return n.runWebGLProgram(h,[s],i.dtype)}},zM={kernelName:ft,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{a:s,b:a}=t,{transposeA:i,transposeB:o}=r;return Z_({a:s,b:a,transposeA:i,transposeB:o,backend:n})}};class LM{constructor(e,t,n,r,s,a){this.outputShape=[],this.variableNames=["x","mean","variance"],Zi(e,t),Zi(e,n);let i="0.0";null!=r&&(Zi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="1.0";null!=s&&(Zi(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        float x = getXAtOutCoords();\n        float mean = getMeanAtOutCoords();\n        float variance = getVarianceAtOutCoords();\n        float offset = ${i};\n        float scale = ${o};\n        float inv = scale * inversesqrt(variance + float(${a}));\n        setOutput(dot(vec3(x, -mean, offset), vec3(inv, inv, 1)));\n      }\n    `}}class PM{constructor(e,t,n,r,s,a){this.packedInputs=!0,this.packedOutput=!0,this.variableNames=["x","mean","variance"],Zi(e,t),Zi(e,n);let i="vec4(0.0)";null!=r&&(Zi(e,r),this.variableNames.push("offset"),i="getOffsetAtOutCoords()");let o="vec4(1.0)";null!=s&&(Zi(e,s),this.variableNames.push("scale"),o="getScaleAtOutCoords()"),this.outputShape=e,this.userCode=`\n      void main() {\n        vec4 offset = ${i};\n        vec4 scale = ${o};\n\n        vec4 x = getXAtOutCoords();\n        vec4 mean = getMeanAtOutCoords();\n        vec4 variance = getVarianceAtOutCoords();\n\n        vec4 inv = scale * inversesqrt(variance + vec4(${a}));\n\n        setOutput((x - mean) * inv + offset);\n      }\n    `}}const UM={kernelName:sn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r,mean:s,variance:a,offset:i,scale:o}=e;re(s.shape.length===a.shape.length,(()=>"Batch normalization gradient requires mean and variance to have equal ranks.")),re(null==i||s.shape.length===i.shape.length,(()=>"Batch normalization gradient requires mean and offset to have equal ranks.")),re(null==o||s.shape.length===o.shape.length,(()=>"Batch normalization gradient requires mean and scale to have equal ranks."));let{varianceEpsilon:u}=n;null==u&&(u=.001);const l=[r,s,a];let c=null;null!=i&&(c=i.shape,l.push(i));let h=null;null!=o&&(h=o.shape,l.push(o));const p=je().getBool("WEBGL_PACK_NORMALIZATION")?new PM(r.shape,s.shape,a.shape,c,h,u):new LM(r.shape,s.shape,a.shape,c,h,u);return t.runWebGLProgram(p,l,l[0].dtype)}};class WM{constructor(e){this.variableNames=["source"],this.outputShape=e,this.rank=e.length;const t=XF(this.rank);this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const n=function(e){if(1===e)return"sourceLoc";if(e<=6)return VM.slice(0,e).map((e=>"sourceLoc."+e)).join(",");throw Error(`Slicing for rank ${e} is not yet supported`)}(this.rank);let r;r=`\n        ${t} sourceLoc;\n        ${t} coords = getOutputCoords();\n        ${e.map(((e,t)=>`sourceLoc.${VM[t]} = start[${t}] + coords.${VM[t]};`)).join("\n")}\n      `,this.userCode=`\n      void main() {\n        ${r}\n        setOutput(getSource(${n}));\n      }\n    `}}const VM=["x","y","z","w","u","v"];class GM{constructor(e){this.variableNames=["source"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=e,this.rank=e.length,this.customUniforms=[{name:"start",arrayIndex:this.rank,type:"int"}];const t=XF(this.rank),n=r_("coords",this.rank),r=r_("sourceLoc",this.rank),s=1===this.rank?"sourceLoc":`vec2(${r.slice(-2).join()})`,a=`getChannel(getSource(${r.join()}), ${s})`,i=`\n      result.x = ${a};\n      if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n        ++${r[this.rank-1]};\n        result.y = ${a};\n        --${r[this.rank-1]};\n      }\n    `,o=1===this.rank?"":`\n      --${n[this.rank-1]};\n      if (++${n[this.rank-2]} < ${e[this.rank-2]}) {\n        ++${r[this.rank-2]};\n        result.z = ${a};\n        if (++${n[this.rank-1]} < ${e[this.rank-1]}) {\n          ++${r[this.rank-1]};\n          result.w = ${a};\n        }\n      }\n    `,u=this.rank<=4?`sourceLoc = coords +\n            ${t}(${e.map(((e,t)=>`start[${t}]`)).join()});`:e.map(((e,t)=>`${r[t]} = ${n[t]} + start[${t}];`)).join("\n");this.userCode=`\n      void main() {\n        ${t} coords = getOutputCoords();\n        ${t} sourceLoc;\n        ${u}\n        vec4 result = vec4(0.);\n        ${i}\n        ${o}\n        setOutput(result);\n      }\n    `}}function jM(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,size:i}=r,[o,u]=No(s,a,i);if(uo(s,o,u),0===oe(u))return n.makeTensorInfo(u,s.dtype,[]);if(n.shouldExecuteOnCPU([s])||"string"===s.dtype){const e=n.texData.get(s.dataId),t=WR(e.values,o,u,s.shape,s.dtype);return n.makeTensorInfo(u,s.dtype,t)}const{isPacked:l}=n.texData.get(s.dataId),c=vo(s.shape,o,u);if(l||!c){const e=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new GM(u):new WM(u),t=[o];return n.runWebGLProgram(e,[s],s.dtype,t)}return n.uploadToGPU(s.dataId),function(e,t,n,r){const s=r.texData.get(e.dataId),a=r.makeTensorInfo(n,e.dtype),i=r.texData.get(a.dataId);Object.assign(i,s),i.refCount=1,i.shape=n,i.dtype=e.dtype;let o=ko(t,Re(e.shape));s.slice&&(o+=s.slice.flatOffset),i.slice={flatOffset:o,origDataId:s.slice&&s.slice.origDataId||e.dataId};const u=r.dataRefCount.get(i.slice.origDataId)||1;return r.dataRefCount.set(i.slice.origDataId,u+1),a}(s,o,u,n)}const HM={kernelName:yr,backendName:"webgl",kernelFunc:jM},qM={kernelName:mt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,crops:i}=r;re(s.shape.length<=4,(()=>"batchToSpaceND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=Ld(s.shape,a,o),l=Pd(u.length,a.length),c=Ud(s.shape,a,o),h=Wd(i,a.length),p=Vd(c,i,a.length),d=[],f=L_({inputs:{x:s},backend:n,attrs:{shape:u}}),m=X_({inputs:{x:f},backend:n,attrs:{perm:l}}),g=L_({inputs:{x:m},backend:n,attrs:{shape:c}}),y=jM({inputs:{x:g},backend:n,attrs:{begin:h,size:p}});return d.push(f),d.push(m),d.push(g),d.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}},KM={kernelName:gt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i}=r,o=n.readSync(s.dataId),u=n.readSync(a.dataId),l=mR(o,u,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,l)}},XM={kernelName:bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{s0:r,s1:s}=t,a=n.readSync(r.dataId),i=n.readSync(s.dataId),o=Zi(Array.from(a),Array.from(i));return n.makeTensorInfo([o.length],"int32",Int32Array.from(o))}},YM=F_({opSnippet:"return float(a != b);",cpuKernelImpl:OR,dtype:"bool"}),ZM={kernelName:Vn,backendName:"webgl",kernelFunc:YM};function JM(e){const{inputs:t,backend:n}=e,{input:r}=t;return v_({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.real},backend:n})}const QM={kernelName:nr,backendName:"webgl",kernelFunc:JM},eO={kernelName:xt,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r,attrs:s}=t,{x:a}=n,{dtype:i}=s;if("complex64"===i){if("complex64"===a.dtype)return v_({inputs:{x:a},backend:r});const t=Wc(a.shape),n=e({inputs:{x:a},backend:r,attrs:{dtype:"float32"}}),s=N_({inputs:{real:n,imag:t},backend:r});return t.dispose(),r.disposeIntermediateTensorInfo(n),s}if("complex64"===a.dtype){const t=JM({inputs:{input:a},backend:r}),n=e({inputs:{x:t},backend:r,attrs:{dtype:i}});return r.disposeIntermediateTensorInfo(t),n}if(!Ne(a.dtype,i)){const e=v_({inputs:{x:a},backend:r});return{dataId:e.dataId,shape:e.shape,dtype:i}}if("int32"===i)return function(e,t){const n=new c_(e.shape,"return float(int(x));"),r=t.runWebGLProgram(n,[e],"int32");return{dataId:r.dataId,shape:r.shape,dtype:r.dtype}}(a,r);if("bool"===i){const e=r.makeTensorInfo([],"bool",xe("bool",1)),t=YM({inputs:{a,b:e},backend:r});return r.disposeIntermediateTensorInfo(e),t}throw new Error(`Error in Cast: failed to cast ${a.dtype} to ${i}`)}},tO="return ceil(x);",nO=$_({opSnippet:tO,packedOpSnippet:tO,cpuKernelImpl:yR}),rO={kernelName:wt,backendName:"webgl",kernelFunc:nO};class sO{constructor(e){this.variableNames=["A"],this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n\n      void main() {\n        float value = getAAtOutCoords();\n        if (isnan(value)) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, minVal, maxVal));\n      }\n    "}}class aO{constructor(e){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"minVal",type:"float"},{name:"maxVal",type:"float"}],this.outputShape=e,this.userCode="\n      void main() {\n        vec4 value = getAAtOutCoords();\n\n        if (any(isnan(value))) {\n          setOutput(value);\n          return;\n        }\n\n        setOutput(clamp(value, vec4(minVal), vec4(maxVal)));\n      }\n    "}}const iO={kernelName:vt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{clipValueMin:a,clipValueMax:i}=r;let o;o=je().getBool("WEBGL_PACK_CLIP")?new aO(s.shape):new sO(s.shape);const u=[[a],[i]];return n.runWebGLProgram(o,[s],s.dtype,u)}};class oO{constructor(e){this.variableNames=["real","imag"],this.outputShape=e,this.userCode="\n      void main() {\n        float re = abs(getRealAtOutCoords());\n        float im = abs(getImagAtOutCoords());\n        float mx = max(re, im);\n\n        // sadly the length function in glsl is not underflow-safe\n        // (at least not on Intel GPUs). So the safe solution is\n        // to ensure underflow-safety in all cases.\n        setOutput(\n          mx == 0.0 ? 0.0 : mx * length(vec2(1, min(re, im)/mx))\n        );\n      }\n    "}}function uO(e,t){return{dataId:t.dataId,dtype:t.dtype,shape:e.shape}}const lO={kernelName:Nt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=n.texData.get(r.dataId),a=new oO(r.shape),i=[uO(r,s.complexTensorInfos.real),uO(r,s.complexTensorInfos.imag)];return n.runWebGLProgram(a,i,i[0].dtype)}};class cO{constructor(e){this.outputShape=[],this.outputShape=Md(e,1),this.variableNames=e.map(((e,t)=>`T${t}`));const t=new Array(e.length-1);t[0]=e[0][1];for(let n=1;n<t.length;n++)t[n]=t[n-1]+e[n][1];const n=[`if (yC < ${t[0]}) setOutput(getT0(yR, yC));`];for(let e=1;e<t.length;e++){const r=t[e-1];n.push(`else if (yC < ${t[e]}) setOutput(getT${e}(yR, yC-${r}));`)}const r=t.length,s=t[t.length-1];n.push(`else setOutput(getT${r}(yR, yC-${s}));`),this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int yR = coords.x;\n        int yC = coords.y;\n\n        ${n.join("\n        ")}\n      }\n    `}}class hO{constructor(e,t){this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[],this.outputShape=Md(e,t);const n=this.outputShape,r=n.length,s=XF(r),a=r_("coords",r),i=["x","y","z","w","u","v"].slice(0,r);this.variableNames=e.map(((e,t)=>`T${t}`));const o=new Array(e.length-1);o[0]=e[0][t];for(let n=1;n<o.length;n++)o[n]=o[n-1]+e[n][t];const u=i[t],l=i.slice(-2),c=i.join();let h=`if (${u} < ${o[0]}) {\n        return getChannel(\n            getT0(${c}), vec2(${l.join()}));\n        }`;for(let e=1;e<o.length;e++){const t=o[e-1];h+=`\n        if (${u} < ${o[e]}  && ${u} >= ${o[e-1]}) {\n          return getChannel(\n            getT${e}(${pO(i,u,t)}),\n            vec2(${pO(l,u,t)}));\n        }`}const p=o.length,d=o[o.length-1];h+=`\n        return getChannel(\n          getT${p}(${pO(i,u,d)}),\n          vec2(${pO(l,u,d)}));`,this.userCode=`\n      float getValue(${i.map((e=>"int "+e))}) {\n        ${h}\n      }\n\n      void main() {\n        ${s} coords = getOutputCoords();\n        vec4 result = vec4(getValue(${a}), 0., 0., 0.);\n\n        ${a[r-1]} = ${a[r-1]} + 1;\n        if (${a[r-1]} < ${n[r-1]}) {\n          result.g = getValue(${a});\n        }\n\n        ${a[r-2]} = ${a[r-2]} + 1;\n        if (${a[r-2]} < ${n[r-2]}) {\n          result.a = getValue(${a});\n        }\n\n        ${a[r-1]} = ${a[r-1]} - 1;\n        if (${a[r-2]} < ${n[r-2]} &&\n            ${a[r-1]} < ${n[r-1]}) {\n          result.b = getValue(${a});\n        }\n        setOutput(result);\n      }\n    `}}function pO(e,t,n){const r=e.indexOf(t);return e.map(((e,t)=>t===r?`${e} - ${n}`:e)).join()}function dO(e){const{inputs:t,backend:n}=e,{input:r}=t;return v_({inputs:{x:n.texData.get(r.dataId).complexTensorInfos.imag},backend:n})}const fO={kernelName:pn,backendName:"webgl",kernelFunc:dO};function mO(e,t,n){const r=e[0].dtype;if("complex64"===r){const r=e.map((e=>JM({inputs:{input:e},backend:n}))),s=e.map((e=>dO({inputs:{input:e},backend:n}))),a=mO(r,t,n),i=mO(s,t,n),o=N_({inputs:{real:a,imag:i},backend:n});return r.forEach((e=>n.disposeIntermediateTensorInfo(e))),s.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.disposeIntermediateTensorInfo(a),n.disposeIntermediateTensorInfo(i),o}let s=n.shouldExecuteOnCPU(e);if("string"===r&&(s=!0),s){const s=e.map((e=>{const r=oe(e.shape.slice(t));return L_({inputs:{x:e},backend:n,attrs:{shape:[-1,r]}})})),a=s.map((e=>({vals:n.readSync(e.dataId),shape:e.shape}))),i=Md(s.map((e=>e.shape)),1),o=1===s[0].shape[0],u=bR(a,i,r,o),l=Md(e.map((e=>e.shape)),t),c=n.makeTensorInfo(l,r,u);return s.forEach((e=>n.disposeIntermediateTensorInfo(e))),c}if(e.length>je().getNumber("WEBGL_MAX_TEXTURES_IN_SHADER")){const r=Math.floor(e.length/2),s=mO(e.slice(0,r),t,n),a=mO(e.slice(r),t,n),i=mO([s,a],t,n);return n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}if(je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")&&e[0].shape.length>1){const s=new hO(e.map((e=>e.shape)),t);return n.runWebGLProgram(s,e,r)}const{tensors2D:a,outShape:i}=function(e,t,n){const r=Md(e.map((e=>e.shape)),t);return{tensors2D:e.map((e=>L_({inputs:{x:e},attrs:{shape:[-1,oe(e.shape.slice(t))]},backend:n}))),outShape:r}}(e,t,n),o=new cO(a.map((e=>e.shape))),u=n.runWebGLProgram(o,a,r);a.forEach((e=>n.disposeIntermediateTensorInfo(e)));const l=L_({inputs:{x:u},attrs:{shape:i},backend:n});return n.disposeIntermediateTensorInfo(u),l}function gO(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r,a=ye(s,t[0].shape)[0],i=Md(t.map((e=>e.shape)),a);if(0===oe(i))return n.makeTensorInfo(i,t[0].dtype,[]);const o=t.filter((e=>oe(e.shape)>0));return 1===o.length?v_({inputs:{x:o[0]},backend:n}):(_d(o.map((e=>e.shape)),a),mO(o,a,n))}const yO={kernelName:It,backendName:"webgl",kernelFunc:gO};class bO{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.outputShape=e.outShape;const a=e.padInfo.top,i=e.padInfo.left,o=e.strideHeight,u=e.strideWidth,l=e.dilationHeight,c=e.dilationWidth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4,m="channelsLast"===e.dataFormat,g=m?1:2,y=m?2:3,b=m?3:1;let x="",w="";n&&(x=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,w="result = activation(result);");const v=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${x}\n\n      const ivec2 strides = ivec2(${o}, ${u});\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d2 = coords[${b}];\n\n        ivec2 xRCCorner =\n            ivec2(coords[${g}], coords[${y}]) * strides - pads;\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, d2) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${h}; wR++) {\n          int xR = xRCorner + wR * ${l};\n\n          if (xR < 0 || xR >= ${e.inHeight}) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${p}; wC++) {\n            int xC = xCCorner + wC * ${c};\n\n            if (xC < 0 || xC >= ${e.inWidth}) {\n              continue;\n            }\n\n            for (int d1 = 0; d1 < ${d}; d1 += 4) {\n              vec4 wValues = vec4(\n                getW(wR, wC, d1, d2),\n                getW(wR, wC, d1 + 1, d2),\n                getW(wR, wC, d1 + 2, d2),\n                getW(wR, wC, d1 + 3, d2)\n              );\n\n              if (${m}) {\n                vec4 xValues = vec4(\n                  getX(batch, xR, xC, d1),\n                  getX(batch, xR, xC, d1 + 1),\n                  getX(batch, xR, xC, d1 + 2),\n                  getX(batch, xR, xC, d1 + 3)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec4 xValues = vec4(\n                  getX(batch, d1, xR, xC),\n                  getX(batch, d1 + 1, xR, xC),\n                  getX(batch, d1 + 2, xR, xC),\n                  getX(batch, d1 + 3, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n\n            if (${1===f}) {\n\n              if (${m}) {\n                dotProd +=\n                    getX(batch, xR, xC, ${d}) *\n                    getW(wR, wC, ${d}, d2);\n              } else {\n                dotProd +=\n                    getX(batch, ${d}, xR, xC) *\n                    getW(wR, wC, ${d}, d2);\n              }\n\n            } else if (${2===f}) {\n              vec2 wValues = vec2(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2)\n              );\n\n              if (${m}) {\n                vec2 xValues = vec2(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec2 xValues = vec2(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            } else if (${3===f}) {\n              vec3 wValues = vec3(\n                getW(wR, wC, ${d}, d2),\n                getW(wR, wC, ${d} + 1, d2),\n                getW(wR, wC, ${d} + 2, d2)\n              );\n\n              if (${m}) {\n                vec3 xValues = vec3(\n                  getX(batch, xR, xC, ${d}),\n                  getX(batch, xR, xC, ${d} + 1),\n                  getX(batch, xR, xC, ${d} + 2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else {\n                vec3 xValues = vec3(\n                  getX(batch, ${d}, xR, xC),\n                  getX(batch, ${d} + 1, xR, xC),\n                  getX(batch, ${d} + 2, xR, xC)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n\n            }\n          }\n        }\n\n        float result = dotProd;\n        ${v}\n        ${w}\n        setOutput(result);\n      }\n    `}}class xO{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const t=e.padInfo.front,n=e.padInfo.top,r=e.padInfo.left,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=e.dilationDepth,u=e.dilationHeight,l=e.dilationWidth,c=e.filterDepth,h=e.filterHeight,p=e.filterWidth,d=4*Math.floor(e.inChannels/4),f=e.inChannels%4;this.userCode=`\n      const ivec3 strides = ivec3(${s}, ${a}, ${i});\n      const ivec3 pads = ivec3(${t}, ${n}, ${r});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d2 = coords.u;\n\n        ivec3 xFRCCorner = ivec3(coords.y, coords.z, coords.w) * strides - pads;\n        int xFCorner = xFRCCorner.x;\n        int xRCorner = xFRCCorner.y;\n        int xCCorner = xFRCCorner.z;\n\n        // Convolve x(?, ?, ?, d1) with w(:, :, :, d1, d2) to get\n        // y(yF, yR, yC, d2). ? = to be determined. : = across all\n        // values in that axis.\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${c}; wF++) {\n          int xF = xFCorner + wF * ${o};\n\n          if (xF < 0 || xF >= ${e.inDepth}) {\n            continue;\n          }\n\n          for (int wR = 0; wR < ${h}; wR++) {\n            int xR = xRCorner + wR * ${u};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int wC = 0; wC < ${p}; wC++) {\n              int xC = xCCorner + wC * ${l};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              for (int d1 = 0; d1 < ${d}; d1 += 4) {\n                vec4 xValues = vec4(\n                  getX(batch, xF, xR, xC, d1),\n                  getX(batch, xF, xR, xC, d1 + 1),\n                  getX(batch, xF, xR, xC, d1 + 2),\n                  getX(batch, xF, xR, xC, d1 + 3)\n                );\n                vec4 wValues = vec4(\n                  getW(wF, wR, wC, d1, d2),\n                  getW(wF, wR, wC, d1 + 1, d2),\n                  getW(wF, wR, wC, d1 + 2, d2),\n                  getW(wF, wR, wC, d1 + 3, d2)\n                );\n\n                dotProd += dot(xValues, wValues);\n              }\n\n              if (${1===f}) {\n                dotProd +=\n                  getX(batch, xF, xR, xC, ${d}) *\n                  getW(wF, wR, wC, ${d}, d2);\n              } else if (${2===f}) {\n                vec2 xValues = vec2(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1)\n                );\n                vec2 wValues = vec2(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              } else if (${3===f}) {\n                vec3 xValues = vec3(\n                  getX(batch, xF, xR, xC, ${d}),\n                  getX(batch, xF, xR, xC, ${d} + 1),\n                  getX(batch, xF, xR, xC, ${d} + 2)\n                );\n                vec3 wValues = vec3(\n                  getW(wF, wR, wC, ${d}, d2),\n                  getW(wF, wR, wC, ${d} + 1, d2),\n                  getW(wF, wR, wC, ${d} + 2, d2)\n                );\n                dotProd += dot(xValues, wValues);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class wO{constructor(e,t){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"inputShape",type:"ivec3"},{name:"pad",type:"ivec2"},{name:"stride",type:"ivec2"},{name:"dilation",type:"ivec2"},{name:"inChannels",type:"int"},{name:"itemsPerBlockRow",type:"int"},{name:"outWidth",type:"int"}],this.outputShape=e,this.enableShapeUniforms=eR(this.outputShape.length);const{dataFormat:n}=t,r=_F(),s="channelsLast"===n,a=s?0:1,i=s?1:2,o=this.enableShapeUniforms?"if(blockIndex < outShape[1] && pos < outShape[0]) {":`if(blockIndex < ${e[1]} && pos < ${e[0]}) {`;let u="";for(let e=0;e<=1;e++)for(let t=0;t<=1;t++)u+=`\n          blockIndex = rc.y + ${t};\n          pos = rc.x + ${e};\n\n          ${o}\n            offsetY = int(blockIndex / outWidth) * stride[0] - pad[0];\n            d0 = offsetY + dilation[0] * (pos / itemsPerBlockRow);\n\n            if(d0 < inputShape[${a}] && d0 >= 0) {\n              // Use custom imod instead mod. On Intel GPU, mod may generate\n              // unexpected value.\n              // https://github.com/tensorflow/tfjs/issues/5447\n              offsetX = imod(blockIndex, outWidth) * stride[1] - pad[1];\n              d1 = offsetX + dilation[1] * (imod(pos, itemsPerBlockRow) /\n                  inChannels);\n\n              if(d1 < inputShape[${i}] && d1 >= 0) {\n\n                ch = imod(pos, inChannels);\n\n                if (${s}) {\n                  innerDims = vec2(d1, ch);\n                  result[${2*e+t}] = getChannel(\n                    getA(d0, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                } else {\n                  innerDims = vec2(d0, d1);\n                  result[${2*e+t}] = getChannel(\n                    getA(ch, int(innerDims.x),\n                    int(innerDims.y)), innerDims);\n                }\n              }\n            }\n          }\n        `;this.userCode=`\n      void main() {\n        ivec2 rc = getOutputCoords();\n\n        vec4 result = vec4(0);\n\n        int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n        vec2 innerDims;\n\n        ${u}\n\n        ${r.output} = result;\n      }\n    `}}function vO({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const u=e.shape,l=r.texData.get(e.dataId),c=n.inChannels,h=u[0]*u[1]*u[2],p=n.outChannels,d="channelsLast"===n.dataFormat;let f;const m=[];if((1!==h&&1!==p||!(c>1e3))&&l.isPacked&&d&&null!=l.texture&&u[2]%2!=0&&le(l.shape.slice(-3),u.slice(-3))){const c=u[0]*u[1]*(u[2]+1),h={dataId:e.dataId,shape:[1,c,n.inChannels],dtype:e.dtype},p=l.shape;l.shape=l.shape.slice(),l.shape[l.shape.length-2]++,re(DF(l.shape,h.shape),(()=>`packed reshape ${l.shape} to ${h.shape} isn't free`));const d=L_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}});m.push(d);const g=Z_({a:h,b:d,backend:r,transposeA:!1,transposeB:!1,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i}),y=r.texData.get(g.dataId);re(y.isPacked,(()=>"batchMatMul result is expected to be packed")),l.shape=p,y.shape=n.outShape,f=v_({inputs:{x:g},backend:r}),f.shape=n.outShape,m.push(g)}else{const l=L_({inputs:{x:e},backend:r,attrs:{shape:[1,d?u[0]*u[1]*u[2]:u[0]*u[2]*u[3],n.inChannels]}}),c=L_({inputs:{x:t},backend:r,attrs:{shape:[1,n.inChannels,n.outChannels]}}),h=Z_({a:l,b:c,transposeA:!1,transposeB:!1,backend:r,bias:s,activation:o,preluActivationWeights:a,leakyreluAlpha:i});f=L_({inputs:{x:h},backend:r,attrs:{shape:n.outShape}}),m.push(l),m.push(c),m.push(h)}for(const e of m)r.disposeIntermediateTensorInfo(e);return f}function kO({x:e,filter:t,convInfo:n,backend:r,bias:s=null,preluActivationWeights:a=null,leakyreluAlpha:i=0,activation:o=null}){const{filterWidth:u,filterHeight:l,inChannels:c,outWidth:h,outHeight:p,dataFormat:d}=n,f="channelsLast"===d,m=u*l*c,g=p*h,y=[m,g],b=[],x=L_({inputs:{x:e},backend:r,attrs:{shape:e.shape.slice(1)}}),w=L_({inputs:{x:t},backend:r,attrs:{shape:[1,m,oe(t.shape)/m]}});b.push(x),b.push(w);const v=new wO(y,n),k=[x.shape,[n.padInfo.top,n.padInfo.left],[n.strideHeight,n.strideWidth],[n.dilationHeight,n.dilationWidth],[n.inChannels],[n.filterWidth*n.inChannels],[n.outWidth]],N=r.runWebGLProgram(v,[x],"float32",k),I=L_({inputs:{x:N},backend:r,attrs:{shape:[1,y[0],y[1]]}});b.push(N),b.push(I);const C=null!=s,D=null!=a,E="leakyrelu"===o,S=o?R_(o,!0):null,T=new __(I.shape,w.shape,[1,g,n.outChannels],!0,!1,C,S,D,E),A=[I,w];if(s&&A.push(s),D&&A.push(a),E){const e=r.makeTensorInfo([],"float32",Ts(i,"float32"));A.push(e),b.push(e)}const $=r.runWebGLProgram(T,A,"float32"),F=L_({inputs:{x:$},backend:r,attrs:{shape:f?[1,p,h,n.outChannels]:[1,n.outChannels,p,h]}});b.push($);for(const e of b)r.disposeIntermediateTensorInfo(e);return F}const NO={kernelName:Ct,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dataFormat:u,dilations:l,dimRoundingMode:c}=r,h=ol(u),p=Ju(s.shape,a.shape,i,l,o,c,!1,h);let d;if(1!==p.filterHeight||1!==p.filterWidth||1!==p.dilationHeight||1!==p.dilationWidth||1!==p.strideHeight||1!==p.strideWidth||"SAME"!==p.padInfo.type&&"VALID"!==p.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])d=kO({x:s,filter:a,convInfo:p,backend:n});else{const e=new bO(p);d=n.runWebGLProgram(e,[s,a],"float32")}else d=vO({x:s,filter:a,convInfo:p,backend:n});const f=L_({inputs:{x:d},backend:n,attrs:{shape:p.outShape}});return n.disposeIntermediateTensorInfo(d),f}};class IO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a="channelsLast"===e.dataFormat;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int d2 = coords.w;\n\n        // Convolve x(?, ?, d1) with dy(:, :, d2) to get dw(wR, wC, d1, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              if (${a}) {\n                float dyValue = getDy(b, yR, yC, d2);\n                float xValue = getX(b, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              } else {\n                float dyValue = getDy(b, d2, yR, yC);\n                float xValue = getX(b, d1, xR, xC);\n                dotProd += (xValue * dyValue);\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class CO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a="channelsLast"===e.dataFormat,i=t-1-e.padInfo.top,o=n-1-e.padInfo.left,u=a?1:2,l=a?2:3,c=a?3:1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[${c}];\n\n        ivec2 dyCorner = ivec2(coords[${u}], coords[${l}]) - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        // Convolve dy(?, ?, d2) with w(:, :, d1, d2) to compute dx(xR, xC, d1).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n\n              if (${a}) {\n                float xValue = getDy(batch, idyR, idyC, d2);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              } else {\n                float xValue = getDy(batch, d2, idyR, idyC);\n                float wValue = getW(wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class DO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.padInfo.front,a=e.padInfo.top,i=e.padInfo.left;this.userCode=`\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int wF = coords.x;\n        int wR = coords.y;\n        int wC = coords.z;\n        int d1 = coords.w;\n        int d2 = coords.u;\n\n        float dotProd = 0.0;\n\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yF = 0; yF < ${e.outDepth}; yF++) {\n            int xF = wF + yF * ${t} - ${s};\n\n            if (xF < 0 || xF >= ${e.inDepth}) {\n              continue;\n            }\n\n            for (int yR = 0; yR < ${e.outHeight}; yR++) {\n              int xR = wR + yR * ${n} - ${a};\n\n              if (xR < 0 || xR >= ${e.inHeight}) {\n                continue;\n              }\n\n              for (int yC = 0; yC < ${e.outWidth}; yC++) {\n                int xC = wC + yC * ${r} - ${i};\n\n                if (xC < 0 || xC >= ${e.inWidth}) {\n                  continue;\n                }\n\n                float dyValue = getDy(b, yF, yR, yC, d2);\n                float xValue = getX(b, xF, xR, xC, d1);\n                dotProd += (xValue * dyValue);\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class EO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterDepth,n=e.filterHeight,r=e.filterWidth,s=e.strideDepth,a=e.strideHeight,i=e.strideWidth,o=t-1-e.padInfo.front,u=n-1-e.padInfo.top,l=r-1-e.padInfo.left;this.userCode=`\n      const ivec3 pads = ivec3(${o}, ${u}, ${l});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.u;\n\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyFCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        float dotProd = 0.0;\n        for (int wF = 0; wF < ${t}; wF++) {\n          float dyF = float(dyFCorner + wF) / ${s}.0;\n\n          if (dyF < 0.0 || dyF >= ${e.outDepth}.0 || fract(dyF) > 0.0) {\n            continue;\n          }\n          int idyF = int(dyF);\n\n          int wFPerm = ${t} - 1 - wF;\n\n          for (int wR = 0; wR < ${n}; wR++) {\n            float dyR = float(dyRCorner + wR) / ${a}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n              fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            int wRPerm = ${n} - 1 - wR;\n\n            for (int wC = 0; wC < ${r}; wC++) {\n              float dyC = float(dyCCorner + wC) / ${i}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              int wCPerm = ${r} - 1 - wC;\n\n              for (int d2 = 0; d2 < ${e.outChannels}; d2++) {\n                float xValue = getDy(batch, idyF, idyR, idyC, d2);\n                float wValue = getW(wFPerm, wRPerm, wCPerm, d1, d2);\n                dotProd += xValue * wValue;\n              }\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const SO={kernelName:Dt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,dataFormat:u,dimRoundingMode:l,filterShape:c}=r,h=ol(u),p=Ju(s.shape,c,i,1,o,l,!1,h),d=new IO(p);return n.runWebGLProgram(d,[s,a],"float32")}},TO={kernelName:Et,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{inputShape:i,strides:o,pad:u,dataFormat:l,dimRoundingMode:c}=r,h=ol(l),p=Ju(i,a.shape,o,1,u,c,!1,h),d=new CO(p);return n.runWebGLProgram(d,[s,a],"float32")}},AO={kernelName:St,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Qu(s.shape,a.shape,i,u,o),c=new xO(l);return n.runWebGLProgram(c,[s,a],"float32")}},$O={kernelName:Tt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,pad:o,filterShape:u}=r,l=Qu(s.shape,u,i,1,o),c=new DO(l);return n.runWebGLProgram(c,[s,a],"float32")}},FO={kernelName:At,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{pad:i,strides:o,inputShape:u}=r,l=Qu(u,a.shape,o,1,i),c=new EO(l);return n.runWebGLProgram(c,[s,a],"float32")}},RO=$_({opSnippet:"if (isnan(x)) return x;\n  return cos(x);\n"}),_O={kernelName:$t,backendName:"webgl",kernelFunc:RO},MO=$_({opSnippet:"\n  float e2x = exp(-x);\n  return (e2x + 1.0 / e2x) / 2.0;\n"}),OO={kernelName:Ft,backendName:"webgl",kernelFunc:MO};class BO{constructor(e,t,n,r,s){this.variableNames=["Image","Boxes","BoxInd"],this.outputShape=[];const[a,i,o,u]=e,[l]=t,[c,h]=n;this.outputShape=[l,c,h,u];const p="bilinear"===r?1:0,[d,f]=[i-1+".0",o-1+".0"],[m,g,y]=c>1?[""+(i-1)/(c-1),"(y2-y1) * height_ratio",`y1*${d} + float(y)*(height_scale)`]:["0.0","0.0",`0.5 * (y1+y2) * ${d}`],[b,x,w]=h>1?[""+(o-1)/(h-1),"(x2-x1) * width_ratio",`x1*${f} + float(x)*(width_scale)`]:["0.0","0.0",`0.5 * (x1+x2) * ${f}`];this.userCode=`\n      const float height_ratio = float(${m});\n      const float width_ratio = float(${b});\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int y = coords[1];\n        int x = coords[2];\n        int d = coords[3];\n\n        // get box vals\n        float y1 = getBoxes(b,0);\n        float x1 = getBoxes(b,1);\n        float y2 = getBoxes(b,2);\n        float x2 = getBoxes(b,3);\n\n        // get image in batch index\n        int bInd = round(getBoxInd(b));\n        if(bInd < 0 || bInd >= ${a}) {\n          return;\n        }\n\n        float height_scale = ${g};\n        float width_scale = ${x};\n\n        float in_y = ${y};\n        if( in_y < 0.0 || in_y > ${d} ) {\n          setOutput(float(${s}));\n          return;\n        }\n        float in_x = ${w};\n        if( in_x < 0.0 || in_x > ${f} ) {\n          setOutput(float(${s}));\n          return;\n        }\n\n        vec2 sourceFracIndexCR = vec2(in_x,in_y);\n        if(${p} == 1) {\n          // Compute the four integer indices.\n          ivec2 sourceFloorCR = ivec2(sourceFracIndexCR);\n          ivec2 sourceCeilCR = ivec2(ceil(sourceFracIndexCR));\n\n          float topLeft = getImage(b, sourceFloorCR.y, sourceFloorCR.x, d);\n          float bottomLeft = getImage(b, sourceCeilCR.y, sourceFloorCR.x, d);\n          float topRight = getImage(b, sourceFloorCR.y, sourceCeilCR.x, d);\n          float bottomRight = getImage(b, sourceCeilCR.y, sourceCeilCR.x, d);\n\n          vec2 fracCR = sourceFracIndexCR - vec2(sourceFloorCR);\n\n          float top = topLeft + (topRight - topLeft) * fracCR.x;\n          float bottom = bottomLeft + (bottomRight - bottomLeft) * fracCR.x;\n          float newValue = top + (bottom - top) * fracCR.y;\n          setOutput(newValue);\n        } else {\n          // Compute the coordinators of nearest neighbor point.\n          ivec2 sourceNearestCR = ivec2(floor(\n            sourceFracIndexCR + vec2(0.5,0.5)));\n          float newValue = getImage(b, sourceNearestCR.y, sourceNearestCR.x, d);\n          setOutput(newValue);\n        }\n      }\n    `}}const zO={kernelName:_t,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{image:s,boxes:a,boxInd:i}=t,{cropSize:o,method:u,extrapolationValue:l}=r,c=new BO(s.shape,a.shape,o,u,l);return n.runWebGLProgram(c,[s,a,i],"float32")}};class LO{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"index",type:"float"}],this.outputShape=e;const r=e.length,s=t?"0.0":`getX(${PO(r,"coords")})`,a=e[e.length-1];let i="",o="";t?(i=n?"end != "+(a-1):"end != 0",o=n?"end + 1":"end - 1"):(i=n?`end + pow2 < ${a}`:"end >= pow2",o=n?"end + pow2":"end - pow2"),this.userCode=`\n      void main() {\n        ${XF(r)} coords = getOutputCoords();\n        int end = ${UO(r,"coords")};\n        float val = ${s};\n        int pow2 = int(pow(2.0, index));\n        if (${i}) {\n          int idx = ${o};\n          ${UO(r,"coords")} = idx;\n          val += getX(${PO(r,"coords")});\n        }\n        setOutput(val);\n      }\n    `}}function PO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.x, ${t}.y`;if(3===e)return`${t}.x, ${t}.y, ${t}.z`;if(4===e)return`${t}.x, ${t}.y, ${t}.z, ${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}function UO(e,t){if(1===e)return`${t}`;if(2===e)return`${t}.y`;if(3===e)return`${t}.z`;if(4===e)return`${t}.w`;throw Error(`Cumulative sum for rank ${e} is not yet supported`)}const WO={kernelName:Rt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,exclusive:i,reverse:o}=r,u=s.shape.length,l=Ac([a],u);let c=s;null!=l&&(c=X_({inputs:{x:s},backend:n,attrs:{perm:l}}));const h=Fc(1,u)[0];if(h!==u-1)throw new Error(`WebGL cumsum shader expects an inner-most axis=${s.shape.length-1} but got axis=${a}`);const p=c.shape[h];let d=v_({inputs:{x:c},backend:n});for(let e=0;e<=Math.ceil(Math.log2(p))-1;e++){const t=new LO(c.shape,!1,o),r=[[e]],s=d;d=n.runWebGLProgram(t,[d],d.dtype,r),n.disposeIntermediateTensorInfo(s)}if(i){const e=new LO(c.shape,i,o),t=d;d=n.runWebGLProgram(e,[d],d.dtype),n.disposeIntermediateTensorInfo(t)}if(null!=l){const e=X_({inputs:{x:d},backend:n,attrs:{perm:$c(l)}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(c),e}return d}},VO={kernelName:Mt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,weights:a}=t,{size:i,binaryOutput:o}=r;if(1===s.shape.length){const e=n.readSync(s.dataId),t=n.readSync(a.dataId),r=mR(e,t,a.dtype,a.shape,i);return n.makeTensorInfo([i],a.dtype,r)}if(2===s.shape.length){const e=n.bufferSync(s),t=n.bufferSync(a),r=gR(e,t,i,o);return n.makeTensorInfo(r.shape,a.dtype,r.values)}throw new Error(`Error in denseBincount: input must be at most rank 2, but got rank${s.shape.length}.`)}};class GO{constructor(e,t,n){this.variableNames=["x"],this.outputShape=[],this.outputShape=e,this.blockSize=t,this.dataFormat=n,this.userCode=`\n    void main() {\n      ivec4 coords = getOutputCoords();\n      int b = coords[0];\n      int h = ${this.getHeightCoordString()};\n      int w = ${this.getWidthCoordString()};\n      int d = ${this.getDepthCoordString()};\n\n      int in_h = h / ${t};\n      int offset_h = imod(h, ${t});\n      int in_w = w / ${t};\n      int offset_w = imod(w, ${t});\n      int offset_d = (offset_h * ${t} + offset_w) *\n        ${this.getOutputDepthSize()};\n      int in_d = d + offset_d;\n\n      float result = ${this.getInputSamplingString()};\n      setOutput(result);\n    }\n  `}getHeightCoordString(){return"NHWC"===this.dataFormat?"coords[1]":"coords[2]"}getWidthCoordString(){return"NHWC"===this.dataFormat?"coords[2]":"coords[3]"}getDepthCoordString(){return"NHWC"===this.dataFormat?"coords[3]":"coords[1]"}getOutputDepthSize(){return"NHWC"===this.dataFormat?this.outputShape[3]:this.outputShape[1]}getInputSamplingString(){return"NHWC"===this.dataFormat?"getX(b, in_h, in_w, in_d)":"getX(b, in_d, in_h, in_w)"}}const jO={kernelName:Ot,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockSize:a,dataFormat:i}=r,o=s.shape[0],u=("NHWC"===i?s.shape[1]:s.shape[2])*a,l=("NHWC"===i?s.shape[2]:s.shape[3])*a,c=("NHWC"===i?s.shape[3]:s.shape[1])/(a*a),h=new GO("NHWC"===i?[o,u,l,c]:[o,c,u,l],a,i);return n.runWebGLProgram(h,[s],s.dtype)}};class HO{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=eR(this.outputShape.length);const a=e.filterHeight,i=e.filterWidth,o=e.outChannels/e.inChannels;let u="",l="";n&&(u=r?`float activation(float a) {\n          float b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`float activation(float a) {\n          float b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`\n          float activation(float x) {\n            ${n}\n          }\n        `,l="result = activation(result);");const c=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${u}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${o};\n        int q = d2 - d1 * ${o};\n\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        // Convolve x(?, ?, d1) with w(:, :, d1, q) to get y(yR, yC, d2).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        // TO DO(dsmilkov): Flatten the two for loops and vec4 the operations.\n        for (int wR = 0; wR < ${a}; wR++) {\n          int xR = xRCorner + wR * dilations[0];\n\n          if (xR < 0 || xR >= inDims[0]) {\n            continue;\n          }\n\n          for (int wC = 0; wC < ${i}; wC++) {\n            int xC = xCCorner + wC * dilations[1];\n\n            if (xC < 0 || xC >= inDims[1]) {\n              continue;\n            }\n\n            float xVal = getX(batch, xR, xC, d1);\n            float wVal = getW(wR, wC, d1, q);\n            dotProd += xVal * wVal;\n          }\n        }\n\n        float result = dotProd;\n        ${c}\n        ${l}\n        setOutput(result);\n      }\n    `}}class qO{constructor(e,t=!1,n=null,r=!1,s=!1){this.variableNames=["x","W"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"pads",type:"ivec2"},{name:"strides",type:"ivec2"},{name:"dilations",type:"ivec2"},{name:"inDims",type:"ivec2"}],this.outputShape=e.outShape,this.enableShapeUniforms=eR(this.outputShape.length);const a=e.outChannels/e.inChannels,i=e.padInfo.left,o=e.strideWidth,u=e.dilationWidth,l=e.filterHeight,c=e.filterWidth,h=c;let p="\n      int xR; int xC; int xCOffset;\n      vec4 wTexel; vec4 previous; vec4 final;";for(let e=0;e<c;e++)p+=`\n          vec4 xTexelC${2*e};\n          int xTexelC${2*e}Ready;\n          vec4 xTexelC${2*e+1};\n          int xTexelC${2*e+1}Ready;\n          vec4 xC${e};`;p+=`\n    for (int r = 0; r < ${l}; r++) {\n      `;for(let e=0;e<c;e++)p+=`\n          xTexelC${2*e} = vec4(0.0);\n          xTexelC${2*e}Ready = 0;\n          xTexelC${2*e+1} = vec4(0.0);\n          xTexelC${2*e+1}Ready = 0;\n          xC${e} = vec4(0.0);`;p+="\n        xR = xRCorner + r * dilations[0];\n        if (xR >=0 && xR < inDims[0]) {\n      ";for(let e=0;e<(h+1)/2;e++){const t=2*e;if(p+=`\n          xC = xCCorner + ${t*u};\n          `,1===o){if(t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1;\n                if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n              `,p+=1===u&&t>0?`\n                xC${t} = vec4(xTexelC${t-2}.zw, xTexelC${t}.xy);\n                `:`\n                  xCOffset = xC + 1 - 2;\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1]) {\n                    previous = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      previous.zw = vec2(0.0);\n                    }\n\n                    xC${t} = vec4(previous.zw, xTexelC${t}.xy);\n                  } else {\n                    xC${t} = vec4(0.0, 0.0, xTexelC${t}.xy);\n                  }\n                  `):p+=`\n                if (xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xC${t} = xTexelC${t};\n                `,t+1<c)){const e=i%2==0?J(u):u;u%2==0&&i%2==1||u%2!=0&&i%2!=1?(p+=`\n                  xCOffset = xC + imod(pads[1], 2) + ${e};\n\n                  if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                    xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n\n                    // Need to manually clear unused channels in case\n                    // we're reading from recycled texture.\n                    if (xCOffset + 1 >= inDims[1]) {\n                      xTexelC${t+1}.zw = vec2(0.0);\n                    }\n                    xTexelC${t+1}Ready = 1;\n                  }\n                  `,u>1&&(p+=`\n                    xCOffset -= 2;\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                      xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                      xTexelC${t}Ready = 1;\n                    }\n                    `),p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.xy);\n                  `):p+=1===e?`\n                    xC${t+1} = xTexelC${t};\n                    `:`\n                    xCOffset = xC + ${e};\n\n                    if (xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                      xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                      if (xCOffset + 1 >= inDims[1]) {\n                        xTexelC${t+1}.zw = vec2(0.0);\n                      }\n                      xTexelC${t+1}Ready = 1;\n                    }\n\n                    xC${t+1} = xTexelC${t+1};\n                    `}}else t<c&&(i%2==1?(p+=`\n                xCOffset = xC + 1 - strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xCOffset, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                if(xC + 1 >= 0 && xC + 1 < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xC + 1, d1);\n                  // Need to manually clear unused channels in case\n                  // we're reading from recycled texture.\n                  if (xC + 2 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.0);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n              `,t+1<c&&(p+=`\n                  final = vec4(0.0);\n                  xCOffset = xC + 1 + strides[1];\n                  if(xCOffset >= 0 && xCOffset < inDims[1]) {\n                    final = getX(batch, xR, xCOffset, d1);\n                  }\n                  xC${t+1} = vec4(xTexelC${t+1}.xy, final.xy);\n                `)):(p+=`\n                if(xC >= 0 && xC < inDims[1] && xTexelC${t}Ready == 0) {\n                  xTexelC${t} = getX(batch, xR, xC, d1);\n                  if (xC + 1 >= inDims[1]) {\n                    xTexelC${t}.zw = vec2(0.0);\n                  }\n                  xTexelC${t}Ready = 1;\n                }\n\n                xCOffset = xC + strides[1];\n                if(xCOffset >= 0 && xCOffset < inDims[1] && xTexelC${t+1}Ready == 0) {\n                  xTexelC${t+1} = getX(batch, xR, xCOffset, d1);\n                  if (xCOffset + 1 >= inDims[1]) {\n                    xTexelC${t+1}.zw = vec2(0.);\n                  }\n                  xTexelC${t+1}Ready = 1;\n                }\n\n                xC${t} = vec4(\n                  xTexelC${t}.xy, xTexelC${t+1}.xy);\n              `,t+1<c&&(p+=`\n                  xC${t+1} = vec4(xTexelC${t}.zw, xTexelC${t+1}.zw);\n                `)));t<c&&(p+=`\n            wTexel = getW(r, ${t}, d1, q);\n            dotProd += xC${t} * vec4(wTexel.xz, wTexel.xz);\n          `,t+1<c&&(p+=`\n              wTexel = getW(r, ${t+1}, d1, q);\n              dotProd += xC${t+1} * vec4(wTexel.xz, wTexel.xz);\n            `))}p+="\n    }\n  ",p+="\n      }\n    ";let d="",f="";n&&(d=r?`vec4 activation(vec4 a) {\n          vec4 b = getPreluActivationWeightsAtOutCoords();\n          ${n}\n        }`:s?`vec4 activation(vec4 a) {\n          vec4 b = getLeakyreluAlphaAtOutCoords();\n          ${n}\n        }`:`vec4 activation(vec4 x) {\n          ${n}\n        }`,f="result = activation(result);");const m=t?"result += getBiasAtOutCoords();":"";t&&this.variableNames.push("bias"),r&&this.variableNames.push("preluActivationWeights"),s&&this.variableNames.push("leakyreluAlpha"),this.userCode=`\n      ${d}\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        ivec2 xRCCorner = coords.yz * strides - pads;\n        int d2 = coords.w;\n        int d1 = d2 / ${a};\n        int q = d2 - d1 * ${a};\n        int xRCorner = xRCCorner.x;\n        int xCCorner = xRCCorner.y;\n\n        //intialize dotProd with a small epsilon seems to reduce GPU accuracy loss.\n        vec4 dotProd = vec4(0.000000000000001);\n\n        ${p}\n\n        vec4 result = dotProd - vec4(0.000000000000001);\n        ${m}\n        ${f}\n        setOutput(result);\n      }\n    `}}const KO={kernelName:Bt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u,dimRoundingMode:l}=r;let c=u;null==c&&(c=[1,1]),re(il(i,c),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${i} and dilations '${c}'`));const h=Ju(s.shape,a.shape,i,c,o,l,!0);let p;p=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&h.strideWidth<=2&&h.outChannels/h.inChannels==1?new qO(h):new HO(h);const d=[[h.padInfo.top,h.padInfo.left],[h.strideHeight,h.strideWidth],[h.dilationHeight,h.dilationWidth],[h.inHeight,h.inWidth]];return n.runWebGLProgram(p,[s,a],"float32",d)}};class XO{constructor(e){this.variableNames=["x","dy"],this.outputShape=e.filterShape;const t=e.strideHeight,n=e.strideWidth,r=e.padInfo.top,s=e.padInfo.left,a=e.outChannels/e.inChannels;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int wR = coords.x;\n        int wC = coords.y;\n        int d1 = coords.z;\n        int dm = coords.w;\n        int d2 = d1 * ${a} + dm;\n\n        float dotProd = 0.0;\n\n        // TO DO: Vec4 over the batch size\n        for (int b = 0; b < ${e.batchSize}; b++) {\n          for (int yR = 0; yR < ${e.outHeight}; yR++) {\n            int xR = wR + yR * ${t} - ${r};\n\n            if (xR < 0 || xR >= ${e.inHeight}) {\n              continue;\n            }\n\n            for (int yC = 0; yC < ${e.outWidth}; yC++) {\n              int xC = wC + yC * ${n} - ${s};\n\n              if (xC < 0 || xC >= ${e.inWidth}) {\n                continue;\n              }\n\n              float dyValue = getDy(b, yR, yC, d2);\n              float xValue = getX(b, xR, xC, d1);\n              dotProd += (xValue * dyValue);\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class YO{constructor(e){this.variableNames=["dy","W"],this.outputShape=e.inShape;const t=e.filterHeight,n=e.filterWidth,r=e.strideHeight,s=e.strideWidth,a=t-1-e.padInfo.top,i=n-1-e.padInfo.left,o=e.outChannels/e.inChannels;this.userCode=`\n      const ivec2 pads = ivec2(${a}, ${i});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords[0];\n        int d1 = coords[3];\n        ivec2 dyCorner = coords.yz - pads;\n        int dyRCorner = dyCorner.x;\n        int dyCCorner = dyCorner.y;\n\n        float dotProd = 0.0;\n\n        for (int wR = 0; wR < ${t}; wR++) {\n          float dyR = float(dyRCorner + wR) / ${r}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          int wRPerm = ${t} - 1 - wR;\n\n          for (int wC = 0; wC < ${n}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${s}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            int wCPerm = ${n} - 1 - wC;\n\n            // TO DO: Vec4 over the channelMul\n            for (int dm = 0; dm < ${o}; dm++) {\n              int d2 = d1 * ${o} + dm;\n              float xValue = getDy(batch, idyR, idyC, d2);\n              float wValue = getW(wRPerm, wCPerm, d1, dm);\n              dotProd += xValue * wValue;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const ZO={kernelName:zt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,dy:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,filterShape:c}=r,h=Ju(s.shape,c,i,o,u,l,!0),p=new XO(h);return n.runWebGLProgram(p,[s,a],"float32")}},JO={kernelName:Lt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,filter:a}=t,{strides:i,dilations:o,pad:u,dimRoundingMode:l,inputShape:c}=r,h=Ju(c,a.shape,i,o,u,l,!0),p=new YO(h);return n.runWebGLProgram(p,[s,a],"float32")}};class QO{constructor(e){this.variableNames=["X"],this.outputShape=[e,e],this.userCode="\n      void main() {\n          ivec2 coords = getOutputCoords();\n          float val = coords[0] == coords[1] ? getX(coords[0]) : 0.0;\n          setOutput(val);\n      }\n    "}}const eB={kernelName:Pt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t,s=[...r.shape,...r.shape],a=oe(r.shape),i=L_({inputs:{x:r},backend:n,attrs:{shape:[a]}}),o=new QO(a),u=n.runWebGLProgram(o,[i],i.dtype),l=L_({inputs:{x:u},backend:n,attrs:{shape:s}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(u),l}};class tB{constructor(e){this.variableNames=["x","W"],this.outputShape=e.outShape;const{inHeight:t,inWidth:n,padInfo:r,strideHeight:s,strideWidth:a,filterHeight:i,filterWidth:o,dilationHeight:u,dilationWidth:l}=e,{top:c,left:h}=r;this.userCode=`\n      const ivec2 strides = ivec2(${s}, ${a});\n      const ivec2 pads = ivec2(${c}, ${h});\n      const float neg_infinity = -3.4e38;\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int batch = coords.x;\n        int d1 = coords.w;\n        ivec2 outTopLeftCorner =\n            coords.yz * strides - pads;\n        int hBeg = outTopLeftCorner.x;\n        int wBeg = outTopLeftCorner.y;\n\n        float curVal = neg_infinity;\n        for (int h = 0; h < ${i}; h++) {\n          int hIn = hBeg + h * ${u};\n\n          if (hIn >= 0 && hIn < ${t}) {\n            for (int w = 0; w < ${o}; w++) {\n              int wIn = wBeg + w * ${l};\n\n              if (wIn >= 0 && wIn < ${n}) {\n                float xVal = getX(batch, hIn, wIn, d1);\n                float wVal = getW(h, w, d1);\n\n                float val = xVal + wVal;\n                if (val > curVal) {\n                  curVal = val;\n                }\n              }\n            }\n          }\n        }\n\n        float result = curVal;\n        setOutput(result);\n      }\n    `}}const nB={kernelName:Ut,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a}=t,{strides:i,pad:o,dilations:u}=r,l=Xu(s.shape,a.shape,i,o,"NHWC",u);let c;const h=new tB(l);c=n.runWebGLProgram(h,[s,a],"float32");const p=L_({inputs:{x:c},backend:n,attrs:{shape:l.outShape}});return n.disposeIntermediateTensorInfo(c),p}},rB={kernelName:jt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{equation:s}=r,a=t,{allDims:i,summedDims:o,idDims:u}=lf(s,a.length);hf(i.length,u,a);const{path:l,steps:c}=pf(o,u),h=c.length;let p=null,d=i.length;const f=[];for(let e=0;e<h;++e){for(const t of c[e]){const{permutationIndices:e,expandDims:r}=cf(d,u[t]);let s;df(e)?s=a[t]:(s=X_({inputs:{x:a[t]},backend:n,attrs:{perm:e}}),f.push(s));const i=s.shape.slice();for(let e=0;e<r.length;++e)i.splice(r[e],0,1);le(s.shape,i)||(s=L_({inputs:{x:s},backend:n,attrs:{shape:i}}),f.push(s)),null===p?p=s:(p=B_({inputs:{a:s,b:p},backend:n}),f.push(p))}e<h-1&&(l[e]>=0&&(p=q_({inputs:{x:p},backend:n,attrs:{axis:l[e]-(i.length-d),keepDims:!1}}),f.push(p)),d--)}for(const e of f)e!==p&&n.disposeIntermediateTensorInfo(e);return p}},sB=$_({opSnippet:"return (x >= 0.0) ? x : (exp(x) - 1.0);",packedOpSnippet:"\n  vec4 result;\n\n  result.r = (x.r >= 0.0) ? x.r : (exp(x.r) - 1.0);\n  result.g = (x.g >= 0.0) ? x.g : (exp(x.g) - 1.0);\n  result.b = (x.b >= 0.0) ? x.b : (exp(x.b) - 1.0);\n  result.a = (x.a >= 0.0) ? x.a : (exp(x.a) - 1.0);\n\n  return result;\n"}),aB={kernelName:Ht,backendName:"webgl",kernelFunc:sB},iB={kernelName:qt,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n}=e,{dy:r,y:s}=t,a=je().getBool("WEBGL_PACK_BINARY_OPERATIONS")?new w_("\n  vec4 bGTEZero = vec4(greaterThanEqual(b, vec4(0.)));\n  return (bGTEZero * a) + ((vec4(1.0) - bGTEZero) * (a * (b + vec4(1.0))));\n",r.shape,s.shape):new x_("return (b >= 1.0) ? a : a * (b + 1.0);",r.shape,s.shape);return n.runWebGLProgram(a,[r,s],r.dtype)}},oB=F_({opSnippet:"return float(a == b);",packedOpSnippet:"\n  return vec4(equal(a, b));\n",dtype:"bool",cpuKernelImpl:xR}),uB={kernelName:Xt,backendName:"webgl",kernelFunc:oB},lB=$_({opSnippet:`\n  // Error function is calculated approximately with elementary function.\n  // See "Handbook of Mathematical Functions with Formulas,\n  // Graphs, and Mathematical Tables", Abramowitz and Stegun.\n  float p = ${Hd};\n  float a1 = ${qd};\n  float a2 = ${Kd};\n  float a3 = ${Xd};\n  float a4 = ${Yd};\n  float a5 = ${Zd};\n\n  float sign = sign(x);\n  x = abs(x);\n  float t = 1.0 / (1.0 + p * x);\n  return sign * (1.0 - (((((a5*t + a4)*t) + a3)*t + a2)*t + a1)*t*exp(-x*x));\n`}),cB={kernelName:Kt,backendName:"webgl",kernelFunc:lB},hB=$_({opSnippet:"if (isnan(x)) return x;\n  return exp(x);\n",packedOpSnippet:"\n  vec4 result = exp(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:wR,dtype:"float32"}),pB={kernelName:Yt,backendName:"webgl",kernelFunc:hB};function dB(e){const{inputs:t,attrs:n,backend:r}=e,{dim:s}=n,{input:a}=t,i=a.shape.length,o=a.shape.slice();let u=s;return s<0&&(re(-(i+1)<=s,(()=>`Axis must be in the interval [${-(i+1)}, ${i}]`)),u=i+s+1),o.splice(u,0,1),L_({inputs:{x:a},backend:r,attrs:{shape:o}})}const fB={kernelName:Zt,backendName:"webgl",kernelFunc:dB},mB="return exp(x) - 1.0;",gB=$_({opSnippet:mB,packedOpSnippet:mB,cpuKernelImpl:vR}),yB={kernelName:Jt,backendName:"webgl",kernelFunc:gB};class bB{constructor(e,t,n){this.variableNames=["real","imag"];const r=t[1];this.outputShape=t;const s=n?`2.0 * ${Math.PI}`:`-2.0 * ${Math.PI}`,a=n?`${r}.0`:"1.0";let i;if("real"===e)i="return real * expR - imag * expI;";else{if("imag"!==e)throw new Error(`FFT component must be either "real" or "imag", got ${e}.`);i="return real * expI + imag * expR;"}this.userCode=`\n      const float exponentMultiplier = ${s};\n\n      float unaryOpComplex(float real, float expR, float imag, float expI) {\n        ${i}\n      }\n\n      float mulMatDFT(int batch, int index) {\n        float indexRatio = float(index) / float(${r});\n        float exponentMultiplierTimesIndexRatio =\n            exponentMultiplier * indexRatio;\n\n        float result = 0.0;\n\n        for (int i = 0; i < ${r}; i++) {\n          // x = (-2|2 * PI / N) * index * i;\n          float x = exponentMultiplierTimesIndexRatio * float(i);\n          float expR = cos(x);\n          float expI = sin(x);\n          float real = getReal(batch, i);\n          float imag = getImag(batch, i);\n\n          result +=\n              unaryOpComplex(real, expR, imag, expI) / ${a};\n        }\n\n        return result;\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        setOutput(mulMatDFT(coords[0], coords[1]));\n      }\n    `}}function xB(e,t,n){const r=n.texData.get(e.dataId),s=oe(e.shape),a=e.shape[e.shape.length-1],i=L_({inputs:{x:e},backend:n,attrs:{shape:[s/a,a]}}),o=i.shape,u=new bB("real",o,t),l=new bB("imag",o,t),c=[{dataId:r.complexTensorInfos.real.dataId,dtype:r.complexTensorInfos.real.dtype,shape:o},{dataId:r.complexTensorInfos.imag.dataId,dtype:r.complexTensorInfos.imag.dtype,shape:o}],h=n.runWebGLProgram(u,c,"float32"),p=n.runWebGLProgram(l,c,"float32"),d=N_({inputs:{real:h,imag:p},backend:n});n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p);const f=L_({inputs:{x:d},backend:n,attrs:{shape:e.shape}});return n.disposeIntermediateTensorInfo(i),n.disposeIntermediateTensorInfo(d),f}const wB={kernelName:Qt,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return xB(r,!1,n)}};class vB{constructor(e,t){this.outputShape=[],this.customUniforms=[{name:"value",type:"float"}],this.variableNames=["x"],this.outputShape=e,this.userCode="\n      void main() {\n        // Input can be obtained from uniform value.\n        setOutput(value);\n      }\n    "}}function kB(e){const{backend:t,attrs:n}=e,{shape:r,value:s}=n;let{dtype:a}=n;if(a=a||Ae(s),"string"===a){const e=we(a,oe(r));return e.fill(s),t.makeTensorInfo(r,a,e)}{const e=new vB(r,s),n=[[s]];return t.runWebGLProgram(e,[],a,n)}}const NB={kernelName:en,backendName:"webgl",kernelFunc:kB};class IB{constructor(e){this.variableNames=["Image"],this.outputShape=[];const t=e[2];this.outputShape=e,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n\n          int coordX = ${t} - x - 1;\n          float outputValue;\n          if(coordX >= 0 && coordX < ${t}) {\n            outputValue = getImage(coords[0], coords[1], coordX, coords[3]);\n          } else {\n            outputValue = getImage(coords[0], coords[1], coords[2], coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const CB={kernelName:tn,backendName:"webgl",kernelFunc:({inputs:e,backend:t})=>{const{image:n}=e,r=t,s=new IB(n.shape);return r.runWebGLProgram(s,[n],n.dtype)}},DB="return floor(x);",EB=$_({opSnippet:DB,packedOpSnippet:DB,cpuKernelImpl:kR}),SB={kernelName:nn,backendName:"webgl",kernelFunc:EB},TB=F_({opSnippet:"\n  float s = sign(a) * sign(b);\n  int ia = round(a);\n  int ib = round(b);\n  if (ib != 0) {\n    // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n    return float(idiv(ia, ib, s));\n  } else {\n    return NAN;\n  }\n",packedOpSnippet:"\n  ivec4 ia = round(a);\n  ivec4 ib = round(b);\n  bvec4 cond = notEqual(ib, ivec4(0));\n  ivec4 result = ivec4(0);\n  vec4 s = sign(a) * sign(b);\n\n  // Windows (D3D) wants guaranteed non-zero int division at compile-time.\n  if (cond[0]) {\n    result[0] = idiv(ia[0], ib[0], s[0]);\n  }\n  if (cond[1]) {\n    result[1] = idiv(ia[1], ib[1], s[1]);\n  }\n  if (cond[2]) {\n    result[2] = idiv(ia[2], ib[2], s[2]);\n  }\n  if (cond[3]) {\n    result[3] = idiv(ia[3], ib[3], s[3]);\n  }\n  return vec4(result);\n",dtype:"int32"}),AB={kernelName:rn,backendName:"webgl",kernelFunc:TB};class $B{constructor(e){this.variableNames=["A"];const t=_F(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n        vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${r}.0, ${n}.0);\n\n        vec4 values = ${t.texture2D}(A, uv);\n        float value;\n        if (depth == 0) {\n          value = values.r;\n        } else if (depth == 1) {\n          value = values.g;\n        } else if (depth == 2) {\n          value = values.b;\n        } else if (depth == 3) {\n          value = values.a;\n        }\n\n        setOutput(floor(value * 255.0 + 0.5));\n      }\n    `}}class FB{constructor(e){this.variableNames=["A"],this.packedInputs=!1,this.packedOutput=!0;const t=_F(),[n,r]=e;this.outputShape=e,this.userCode=`\n      void main() {\n        ivec3 coords = getOutputCoords();\n        int texR = coords[0];\n        int texC = coords[1];\n        int depth = coords[2];\n\n        vec4 result = vec4(0.);\n\n        for(int row=0; row<=1; row++) {\n          for(int col=0; col<=1; col++) {\n            texC = coords[1] + row;\n            depth = coords[2] + col;\n\n            vec2 uv = (vec2(texC, texR) + halfCR) /\n                       vec2(${r}.0, ${n}.0);\n            vec4 values = ${t.texture2D}(A, uv);\n            float value;\n            if (depth == 0) {\n              value = values.r;\n            } else if (depth == 1) {\n              value = values.g;\n            } else if (depth == 2) {\n              value = values.b;\n            } else if (depth == 3) {\n              value = values.a;\n            }\n\n            result[row * 2 + col] = floor(value * 255.0 + 0.5);\n          }\n        }\n\n        ${t.output} = result;\n      }\n    `}}const RB={kernelName:Zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e;let{pixels:s}=t;const{numChannels:a}=r,i="undefined"!=typeof HTMLVideoElement&&s instanceof HTMLVideoElement,o="undefined"!=typeof HTMLImageElement&&s instanceof HTMLImageElement,[u,l]=i?[s.videoWidth,s.videoHeight]:[s.width,s.height],c=[l,u],h=[l,u,a];(o||i)&&(null==_B&&(_B=document.createElement("canvas").getContext("2d")),_B.canvas.width=u,_B.canvas.height=l,_B.drawImage(s,0,0,u,l),s=_B.canvas);const p=n.makeTensorInfo(c,"int32");n.texData.get(p.dataId).usage=aF.PIXELS,n.gpgpu.uploadPixelDataToTexture(n.getTexture(p.dataId),s);const d=je().getBool("WEBGL_PACK")?new FB(h):new $B(h),f=n.runWebGLProgram(d,[p],"int32");return n.disposeData(p.dataId),f}};let _B;const MB={kernelName:es,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dataFormat:c,dilations:h,dimRoundingMode:p,activation:d,leakyreluAlpha:f}=r,m=ol(c),g=Ju(s.shape,a.shape,u,h,l,p,!1,m);let y;const b=[];if(1!==g.filterHeight||1!==g.filterWidth||1!==g.dilationHeight||1!==g.dilationWidth||1!==g.strideHeight||1!==g.strideWidth||"SAME"!==g.padInfo.type&&"VALID"!==g.padInfo.type)if(je().getBool("WEBGL_CONV_IM2COL")&&1===s.shape[0])y=kO({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});else{const e=null!=i,t=null!=o,r="leakyrelu"===d,u=d?R_(d,!1):null,l=new bO(g,e,u,t,r),c=[s,a];if(i&&c.push(i),o&&c.push(o),r){const e=n.makeTensorInfo([],"float32",Ts(f,"float32"));c.push(e),b.push(e)}y=n.runWebGLProgram(l,c,"float32")}else y=vO({x:s,filter:a,convInfo:g,backend:n,bias:i,activation:d,preluActivationWeights:o,leakyreluAlpha:f});const x=L_({inputs:{x:y},backend:n,attrs:{shape:g.outShape}});return b.push(y),b.forEach((e=>n.disposeIntermediateTensorInfo(e))),x}},OB={kernelName:ts,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,filter:a,bias:i,preluActivationWeights:o}=t,{strides:u,pad:l,dilations:c,dimRoundingMode:h,activation:p,leakyreluAlpha:d}=r,f=[];let m=c;null==m&&(m=[1,1]),re(il(u,m),(()=>`Error in depthwiseConv2d: Either strides or dilations must be 1. Got strides ${u} and dilations '${m}'`));const g=Ju(s.shape,a.shape,u,m,l,h,!0),y=je().getBool("WEBGL_PACK_DEPTHWISECONV")&&g.strideWidth<=2&&g.outChannels/g.inChannels==1,b=p?R_(p,y):null,x=[s,a],w=null!=i,v=null!=o,k="leakyrelu"===p;if(w&&x.push(i),v&&x.push(o),k){const e=n.makeTensorInfo([],"float32",Ts(d,"float32"));x.push(e),f.push(e)}let N;N=y?new qO(g,w,b,v,k):new HO(g,w,b,v,k);const I=[[g.padInfo.top,g.padInfo.left],[g.strideHeight,g.strideWidth],[g.dilationHeight,g.dilationWidth],[g.inHeight,g.inWidth]],C=n.runWebGLProgram(N,x,"float32",I);return f.forEach((e=>n.disposeIntermediateTensorInfo(e))),C}};class BB{constructor(e,t,n){this.sliceDim=e,this.strides=t,this.variableNames=["x","indices"],this.outputShape=n;const r=XF(t.length),s=XF(n.length),a=this.sliceDim>1?"strides[j]":"strides";this.userCode=`\n        ${r} strides = ${r}(${this.strides});\n         void main() {\n          ${s} coords = getOutputCoords();\n          int flattenIndex = 0;\n          for (int j = 0; j < ${this.sliceDim}; j++) {\n            int index = round(getIndices(coords[0], j));\n            flattenIndex += index * ${a};\n          }\n          setOutput(getX(flattenIndex, coords[1]));\n        }\n      `}}const zB={kernelName:on,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{params:r,indices:s}=t,a=s.shape,i=a[a.length-1],o=oe(r.shape),[u,l,c,h]=so(r,s),p=L_({inputs:{x:s},backend:n,attrs:{shape:[l,i]}}),d=L_({inputs:{x:r},backend:n,attrs:{shape:[oe(r.shape)/c,c]}});if(n.shouldExecuteOnCPU([r,s])||"string"===r.dtype){const e=n.readSync(s.dataId),t=n.bufferSync(r),a=NR(e,t,r.dtype,l,i,c,h,r.shape,o);return n.makeTensorInfo(u,r.dtype,a.values)}const f=new BB(i,h,[l,c]),m=n.runWebGLProgram(f,[d,p],d.dtype),g=L_({inputs:{x:m},backend:n,attrs:{shape:u}});return n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(m),g}};class LB{constructor(e,t){this.variableNames=["A","indices"],this.outputShape=t,this.rank=t.length;const n=XF(this.rank),r=function(e,t){const n=["resRC.x","resRC.y","resRC.z","resRC.w"],r=[];for(let t=0;t<e.length;t++)2===t?r.push("index"):r.push(`${n[t]}`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${n} resRC = getOutputCoords();\n        int index = int(getIndices(resRC.x, resRC.z));\n        float inBounds = (index >= 0) && (index < ${e[2]}) ? 1.0 : 0.0;\n        setOutput(inBounds * getA(${r}));\n      }\n    `}}function PB(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,indices:a}=t,{axis:i,batchDims:o}=r,u=ye(i,s.shape)[0];if(je().get("DEBUG")){const e=n.readSync(a.dataId),t=s.shape[u];for(let n=0;n<e.length;++n){const r=e[n];re(r<=t-1&&r>=0,(()=>`GatherV2: the index value ${r} is not in [0, ${t-1}]`))}}const l=Af(s,a,u,o),c=oe(a.shape),h=[],p=L_({inputs:{x:s},backend:n,attrs:{shape:[l.batchSize,l.outerSize,l.dimSize,l.sliceSize]}}),d=L_({inputs:{x:a},backend:n,attrs:{shape:[l.batchSize,c/l.batchSize]}});h.push(p),h.push(d);const f=[l.batchSize,l.outerSize,c/l.batchSize,l.sliceSize];if(n.shouldExecuteOnCPU([s,a])||"string"===s.dtype){const e=n.bufferSync(d),t=n.bufferSync(p),r=IR(t,e,f);return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),n.makeTensorInfo(l.outputShape,r.dtype,r.values)}const m=new LB(p.shape,f),g=n.runWebGLProgram(m,[p,d],p.dtype);h.push(g);const y=L_({inputs:{x:g},backend:n,attrs:{shape:l.outputShape}});return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),y}const UB={kernelName:an,backendName:"webgl",kernelFunc:PB},WB=F_({opSnippet:"return float(a > b);",packedOpSnippet:"\n  return vec4(greaterThan(a, b));\n",cpuKernelImpl:CR,dtype:"bool"}),VB={kernelName:un,backendName:"webgl",kernelFunc:WB},GB=F_({opSnippet:"return float(a >= b);",packedOpSnippet:"\n  return vec4(greaterThanEqual(a, b));\n",dtype:"bool",cpuKernelImpl:DR}),jB={kernelName:ln,backendName:"webgl",kernelFunc:GB},HB={kernelName:hn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{input:r}=t;return xB(r,!0,n)}},qB=$_({opSnippet:"return float(!isnan(x) && !isinf(x));",dtype:"bool"}),KB={kernelName:dn,backendName:"webgl",kernelFunc:qB},XB=$_({opSnippet:"return float(isinf(x));",dtype:"bool"}),YB={kernelName:fn,backendName:"webgl",kernelFunc:XB},ZB=$_({opSnippet:"return float(isnan(x));",dtype:"bool"}),JB={kernelName:mn,backendName:"webgl",kernelFunc:ZB},QB=F_({opSnippet:"return float(a < b);",packedOpSnippet:"\n  return vec4(lessThan(a, b));\n",cpuKernelImpl:ER,dtype:"bool"}),ez={kernelName:yn,backendName:"webgl",kernelFunc:QB},tz=F_({opSnippet:"return float(a <= b);",packedOpSnippet:"\n  return vec4(lessThanEqual(a, b));\n",cpuKernelImpl:SR,dtype:"bool"}),nz={kernelName:bn,backendName:"webgl",kernelFunc:tz},rz={kernelName:xn,backendName:"webgl",kernelFunc:function(e){const{backend:t,attrs:n}=e,{start:r,stop:s,num:a}=n,i=TR(r,s,a);return t.makeTensorInfo([i.length],"float32",i)}},sz=$_({opSnippet:"if (isnan(x)) return x;\n  return x < 0.0 ? 0./0. : log(x);\n",packedOpSnippet:"\n  vec4 result = log(x);\n  bvec4 isNaN = isnan(x);\n  result.r = isNaN.r ? x.r : (x.r < 0.0 ? 0./0. : result.r);\n  result.g = isNaN.g ? x.g : (x.g < 0.0 ? 0./0. : result.g);\n  result.b = isNaN.b ? x.b : (x.b < 0.0 ? 0./0. : result.b);\n  result.a = isNaN.a ? x.a : (x.a < 0.0 ? 0./0. : result.a);\n  return result;\n",cpuKernelImpl:AR}),az={kernelName:wn,backendName:"webgl",kernelFunc:sz},iz=$_({opSnippet:"if (isnan(x)) return x;\n  return log(1.0 + x);\n"}),oz={kernelName:vn,backendName:"webgl",kernelFunc:iz},uz=F_({opSnippet:"return float(a >= 1.0 && b >= 1.0);",packedOpSnippet:"\n  return vec4(\n    vec4(greaterThanEqual(a, vec4(1.0))) *\n    vec4(greaterThanEqual(b, vec4(1.0))));\n",dtype:"bool"}),lz={kernelName:kn,backendName:"webgl",kernelFunc:uz},cz=$_({opSnippet:"return float(!(x >= 1.0));"}),hz={kernelName:Nn,backendName:"webgl",kernelFunc:cz},pz=F_({opSnippet:"return float(a >= 1.0 || b >= 1.0);",packedOpSnippet:"\n  return min(\n    vec4(greaterThanEqual(a, vec4(1.0))) +\n    vec4(greaterThanEqual(b, vec4(1.0))),\n    vec4(1.0));\n",dtype:"bool"}),dz={kernelName:In,backendName:"webgl",kernelFunc:pz};class fz{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[];const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n        int d = coords[3];\n        float x = getX(b, r, c, d);\n        float sum = 0.0;\n        for (int j = -${a}; j <= ${a}; j++) {\n          int idx = d + j;\n          if (idx >= 0 && idx <=  ${i}) {\n            float z = getX(b, r, c, idx);\n            sum += z * z;\n          }\n        }\n        float val = x * ${o};\n        setOutput(val);\n      }\n    `}}class mz{constructor(e,t,n,r,s){this.variableNames=["x"],this.outputShape=[],this.packedInputs=!0,this.packedOutput=!0;const a=t,i=e[3]-1;let o;this.outputShape=e;const u=`float(${n}) + float(${r}) * sum`;o=.5===s?`inversesqrt(${u})`:1===s?`1.0/(${u})`:`exp(log(${u}) * float(-${s}));`,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords.x;\n        int r = coords.y;\n        int c = coords.z;\n        int d = coords.w;\n\n        bool hasNextCol = d < ${this.outputShape[3]};\n        bool hasNextRow = c < ${this.outputShape[2]};\n\n        vec4 sum = vec4(0.);\n        vec4 xFragAtOutputCoords = getX(b, r, c, d);\n\n        vec4 xAtOutputCoords = vec4(\n          getChannel(xFragAtOutputCoords, vec2(c, d)),\n          hasNextCol ?\n            getChannel(xFragAtOutputCoords, vec2(c, d + 1)) : 0.0,\n          hasNextRow ?\n            getChannel(xFragAtOutputCoords , vec2(c + 1, d)) : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getChannel(xFragAtOutputCoords, vec2(c + 1, d + 1)) : 0.0\n        );\n\n        int firstChannel = d - ${a};\n        vec2 cache = vec2(0.);\n        if(firstChannel >= 0){\n          vec4 firstChannelFrag = getX(b, r, c, firstChannel);\n          cache.x = getChannel(firstChannelFrag, vec2(c, firstChannel));\n            if(hasNextRow){\n              cache.y = getChannel(firstChannelFrag, vec2(c + 1, firstChannel));\n            }\n        }\n\n        ivec2 depth = ivec2(d, d + 1);\n        for (int j = - ${a}; j <= ${a}; j++) {\n          ivec2 idx = depth + j;\n          bvec2 aboveLowerBound = greaterThanEqual(idx, ivec2(0));\n          bvec2 belowUpperBound = lessThanEqual(idx, ivec2(${i}));\n\n          bool depthInRange = aboveLowerBound.x && belowUpperBound.x;\n          bool depthPlusOneInRange = aboveLowerBound.y && belowUpperBound.y;\n\n          if(depthInRange || depthPlusOneInRange){\n            vec4 z = vec4(0.);\n            vec4 xFragAtCurrentDepth;\n            z.xz = cache.xy;\n            if(depthPlusOneInRange && hasNextCol){\n              xFragAtCurrentDepth = idx.y != d ?\n                getX(b, r, c, idx.y) : xFragAtOutputCoords;\n              z.y = getChannel(xFragAtCurrentDepth, vec2(c, idx.y));\n              if(hasNextRow){\n                z.w = getChannel(xFragAtCurrentDepth, vec2(c + 1, idx.y));\n              }\n            }\n            cache.xy = z.yw;\n            sum += z * z;\n          }\n        }\n        vec4 result = xAtOutputCoords * ${o};\n        setOutput(result);\n      }\n    `}}const gz={kernelName:Dn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{depthRadius:a,bias:i,alpha:o,beta:u}=r,l=je().getBool("WEBGL_PACK_NORMALIZATION")?new mz(s.shape,a,i,o,u):new fz(s.shape,a,i,o,u);return n.runWebGLProgram(l,[s],s.dtype)}};class yz{constructor(e,t,n,r,s){this.variableNames=["inputImage","outputImage","dy"],this.outputShape=[],this.outputShape=e,this.depth=e[3],this.depthRadius=t,this.bias=n,this.alpha=r,this.beta=s,this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int r = coords[1];\n        int c = coords[2];\n\n        float result = 0.0;\n        for (int d = 0; d < ${this.depth}; ++d) {\n          int depthBegin = int(max(0.0, float(d - ${t})));\n          int depthEnd = int(min(float(${this.depth}),\n              float(d + ${t} + 1)));\n\n          const int MIN_DEPTH_BEGIN = 0;\n          const int MAX_DEPTH_END = ${this.depth};\n\n          float norm = 0.0;\n          for (int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k) {\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd) {\n              norm += getInputImage(b, r, c, k) * getInputImage(b, r, c, k);\n            }\n            else {\n              break;\n            }\n          }\n\n          norm = float(${r}) * norm + float(${n});\n\n          for(int k = MIN_DEPTH_BEGIN; k < MAX_DEPTH_END; ++k){\n            if (k < depthBegin){\n              continue;\n            }\n            else if (k >= depthBegin && k < depthEnd){\n              float dyi = -2.0 * float(${r})\n                * float(${s})\n                * getInputImage(b ,r ,c, k) * getOutputImage(b, r, c, d)\n                / norm;\n              if (k == d) {\n                dyi += pow(norm, -1.0 * ${s});\n              }\n              if (k == coords[3]) {\n                dyi *= getDy(b, r, c, d);\n                result += dyi;\n              }\n            }\n            else {\n              break;\n            }\n          }\n      }\n      setOutput(result);\n      }\n    `}}const bz={kernelName:En,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s,y:a,dy:i}=t,{depthRadius:o,bias:u,alpha:l,beta:c}=r,h=new yz(s.shape,o,u,l,c);return n.runWebGLProgram(h,[s,a,i],s.dtype)}};function xz(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reductionIndices:a,keepDims:i}=r,o=s.shape.length,u=ye(a,s.shape);let l=u;const c=Ac(l,o),h=null!=c,p=n.shouldExecuteOnCPU([s]);let d=s;if(h){if(p){const e=n.texData.get(d.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=s.shape[c[e]];const r=e_(e,s.shape,s.dtype,c,t);d=n.makeTensorInfo(t,s.dtype),n.texData.get(d.dataId).values=r}else d=H_(s,c,n);l=Fc(l.length,o)}Tc("max",l,o);const[f,m]=Ec(d.shape,l);let g,y=f;if(i&&(y=Sc(f,u)),p){const e=n.texData.get(d.dataId).values,t=$R(e,oe(m),y,s.dtype);g=n.makeTensorInfo(y,s.dtype),n.texData.get(g.dataId).values=t}else g=function(e,t,n,r){const s=oe(t),a=L_({inputs:{x:e},attrs:{shape:[oe(e.shape)/s,s]},backend:r}),i=V_(a,e.dtype,"max",r),o=L_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(d,m,y,n);return h&&n.disposeIntermediateTensorInfo(d),g}const wz={kernelName:Sn,backendName:"webgl",kernelFunc:xz},vz=F_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return max(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(max(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:FR}),kz={kernelName:Tn,backendName:"webgl",kernelFunc:vz},Nz={kernelName:An,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t;FF(s,"maxPool");const{filterSize:a,strides:i,pad:o,dimRoundingMode:u}=r;re(il(i,1),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${i} and dilations '1'`));const l=Yu(s.shape,a,i,1,o,u);if(1===l.filterWidth&&1===l.filterHeight&&le(l.inShape,l.outShape))return v_({inputs:{x:s},backend:n});const c=new AM(l,"max",!1);return n.runWebGLProgram(c,[s],s.dtype)}},Iz={kernelName:Fn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{filterSize:a,strides:i,pad:o,dataFormat:u,dimRoundingMode:l}=r,c=Zu(s.shape,a,i,[1,1,1],o,l,u),h=new $M(c,"max",!1);return n.runWebGLProgram(h,[s],s.dtype)}};class Cz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideHeight,n=e.strideWidth,r=e.dilationHeight,s=e.effectiveFilterHeight,a=e.effectiveFilterWidth,i=s-1-e.padInfo.top,o=a-1-e.padInfo.left,u=s*a-1;this.userCode=`\n      const ivec2 pads = ivec2(${i}, ${o});\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n\n        ivec2 dyRCCorner = coords.yz - pads;\n        int dyRCorner = dyRCCorner.x;\n        int dyCCorner = dyRCCorner.y;\n\n        // Convolve dy(?, ?, d) with pos mask(:, :, d) to get dx(xR, xC, d).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n        for (int wR = 0; wR < ${s};\n          wR += ${r}) {\n          float dyR = float(dyRCorner + wR) / ${t}.0;\n\n          if (dyR < 0.0 || dyR >= ${e.outHeight}.0 || fract(dyR) > 0.0) {\n            continue;\n          }\n          int idyR = int(dyR);\n\n          for (int wC = 0; wC < ${a}; wC++) {\n            float dyC = float(dyCCorner + wC) / ${n}.0;\n\n            if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                fract(dyC) > 0.0) {\n              continue;\n            }\n            int idyC = int(dyC);\n\n            float dyValue = getDy(b, idyR, idyC, d);\n            int maxPosValue = ${u} - int(getMaxPos(b, idyR, idyC, d));\n\n            // Get the current value, check it against the value from the\n            // position matrix.\n            int curPosValue = wR * ${a} + wC;\n            float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n            dotProd += dyValue * mask;\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}class Dz{constructor(e){this.variableNames=["dy","maxPos"],this.outputShape=e.inShape;const t=e.strideDepth,n=e.strideHeight,r=e.strideWidth,s=e.dilationDepth,a=e.dilationHeight,i=e.dilationWidth,o=e.effectiveFilterDepth,u=e.effectiveFilterHeight,l=e.effectiveFilterWidth,c=o-1-e.padInfo.front,h=u-1-e.padInfo.top,p=l-1-e.padInfo.left,d=o*u*l-1;this.userCode=`\n      const ivec3 pads = ivec3(${c}, ${h}, ${p});\n\n      void main() {\n        ivec5 coords = getOutputCoords();\n        int batch = coords.x;\n        int ch = coords.u;\n\n        ivec3 dyCorner = ivec3(coords.y, coords.z, coords.w) - pads;\n        int dyDCorner = dyCorner.x;\n        int dyRCorner = dyCorner.y;\n        int dyCCorner = dyCorner.z;\n\n        // Convolve dy(?, ?, ?, ch) with pos mask(:, :, :, d) to get\n        // dx(xD, xR, xC, ch).\n        // ? = to be determined. : = across all values in that axis.\n        float dotProd = 0.0;\n\n        for (int wD = 0; wD < ${o};\n           wD += ${s}) {\n          float dyD = float(dyDCorner + wD) / ${t}.0;\n\n          if (dyD < 0.0 || dyD >= ${e.outDepth}.0 || fract(dyD) > 0.0) {\n            continue;\n          }\n          int idyD = int(dyD);\n\n          for (int wR = 0; wR < ${u};\n              wR += ${a}) {\n            float dyR = float(dyRCorner + wR) / ${n}.0;\n\n            if (dyR < 0.0 || dyR >= ${e.outHeight}.0 ||\n                fract(dyR) > 0.0) {\n              continue;\n            }\n            int idyR = int(dyR);\n\n            for (int wC = 0; wC < ${l};\n                wC += ${i}) {\n              float dyC = float(dyCCorner + wC) / ${r}.0;\n\n              if (dyC < 0.0 || dyC >= ${e.outWidth}.0 ||\n                  fract(dyC) > 0.0) {\n                continue;\n              }\n              int idyC = int(dyC);\n\n              float dyValue = getDy(batch, idyD, idyR, idyC, ch);\n              int maxPosValue = ${d} -\n                  int(getMaxPos(batch, idyD, idyR, idyC, ch));\n\n              // Get the current value, check it against the value from the\n              // position matrix.\n              int curPosValue =\n                  wD * ${u} * ${l} +\n                  wR * ${l} + wC;\n              float mask = float(maxPosValue == curPosValue ? 1.0 : 0.0);\n\n              dotProd += dyValue * mask;\n            }\n          }\n        }\n        setOutput(dotProd);\n      }\n    `}}const Ez={kernelName:Rn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a}=t,i=a,{filterSize:o,strides:u,pad:l,dimRoundingMode:c}=r,h=Zu(i.shape,o,u,[1,1,1],l,c),p=new $M(h,"max",!0),d=n.runWebGLProgram(p,[i],i.dtype),f=new Dz(h),m=n.runWebGLProgram(f,[s,d],i.dtype);return n.disposeIntermediateTensorInfo(d),m}},Sz={kernelName:$n,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{dy:s,input:a,output:i}=t,o=a;FF([a,i],"maxPoolGrad");const{filterSize:u,strides:l,pad:c,dimRoundingMode:h}=r,p=Yu(o.shape,u,l,1,c,h),d=new AM(p,"max",!0),f=n.runWebGLProgram(d,[o],o.dtype),m=new Cz(p),g=n.runWebGLProgram(m,[s,f],o.dtype);return n.disposeIntermediateTensorInfo(f),g}},Tz={kernelName:_n,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{filterSize:s,strides:a,pad:i,includeBatchInIndex:o}=t,u=n;re(4===r.shape.length,(()=>`Error in maxPool: input must be rank 4 but got rank ${r.shape.length}.`));const l=[1,1];re(il(a,l),(()=>`Error in maxPool: Either strides or dilations must be 1. Got strides ${a} and dilations '${l}'`));const c=Yu(r.shape,s,a,l,i),[h,p]=function(e,t,n,r){let s=new AM(n,"max",!1);const a=r.runWebGLProgram(s,[e],"float32");return s=new AM(n,"max",!0,!0,t),[a,r.runWebGLProgram(s,[e],"float32")]}(r,o,c,u);return[h,p]}},Az={kernelName:Mn,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{x:r}=e,{keepDims:s,axis:a}=t,i=n,o=r.shape.length,u=ye(a,r.shape);let l=u;const c=Ac(l,o),h=null!=c,p=i.shouldExecuteOnCPU([r]),d=[];let f=r;if(h){if(p){const e=i.texData.get(f.dataId).values,t=new Array(o);for(let e=0;e<t.length;e++)t[e]=r.shape[c[e]];const n=e_(e,r.shape,r.dtype,c,t);f=i.makeTensorInfo(t,r.dtype),i.texData.get(f.dataId).values=n}else f=H_(r,c,i);d.push(f),l=Fc(l.length,o)}Tc("sum",l,o);const[m,g]=Ec(f.shape,l);let y=m;s&&(y=Sc(m,u));const b=function(e,t,n,r){const s=oe(t),a=L_({inputs:{x:e},attrs:{shape:[oe(e.shape)/s,s]},backend:r}),i=V_(a,"float32","mean",r),o=L_({inputs:{x:i},attrs:{shape:n},backend:r});return r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}(f,g,y,i);for(const e of d)i.disposeIntermediateTensorInfo(e);return b}},$z={kernelName:On,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=ye(a,s.shape);let l=u;const c=Ac(l,o);let h=s;null!=c&&(h=X_({inputs:{x:s},backend:n,attrs:{perm:c}}),l=Fc(l.length,s.shape.length)),Tc("min",l,o);const[p,d]=Ec(h.shape,l),f=L_({inputs:{x:h},backend:n,attrs:{shape:[-1,oe(d)]}}),m=V_(f,f.dtype,"min",n);let g;return g=L_(i?{inputs:{x:m},backend:n,attrs:{shape:Sc(p,u)}}:{inputs:{x:m},backend:n,attrs:{shape:p}}),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(m),null!=c&&n.disposeIntermediateTensorInfo(h),g}},Fz=F_({opSnippet:"\n  if (isnan(a)) return a;\n  if (isnan(b)) return b;\n\n  return min(a, b);\n",packedOpSnippet:"\n  vec4 result = vec4(min(a, b));\n  vec4 isNaN = min(vec4(isnan(a)) + vec4(isnan(b)), vec4(1.0));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n",cpuKernelImpl:RR}),Rz={kernelName:Bn,backendName:"webgl",kernelFunc:Fz};class _z{constructor(e,t,n){this.variableNames=["x"],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=XF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r),u="reflect"===n?0:1;this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        for (int i = 0; i < ${r}; i++) {\n          if (outC[i] < start[i]) {\n            outC[i] = start[i] * 2 - outC[i] - ${u};\n          } else if(outC[i] >= end[i]) {\n            outC[i] = (end[i] - 1) * 2 - outC[i] + ${u};\n          }\n        }\n        ${s} coords = outC - start;\n        setOutput(getX(${o}));\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start) {\n            outC = start * 2 - outC - ${u};\n          } else if(outC >= end) {\n            outC = (end - 1) * 2 - outC + ${u};\n          }\n          setOutput(getX(outC - start));\n        }\n      `}}class Mz{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=XF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=r_("rc",r),u=r_("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h="reflect"===n?0:1;let p="";if(1===r){const e=`\n        ${s} source = rc;\n        if (source < start) {\n          source = start * 2 - source - ${h};\n        } else if (source >= end) {\n          source = (end - 1) * 2 - source + ${h};\n        }\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n      `}else{const e=`\n        ${s} source = rc;\n        ${s} lt = ${s}(lessThan(source, start));\n        ${s} gte = ${s}(greaterThanEqual(source, end));\n        ${s} orig = 1 - (lt + gte);\n        source = orig * source +\n                lt * (start * 2 - source - ${h}) +\n                gte * ((end - 1) * 2 - source + ${h});\n        source -= start;\n      `;p=`\n        ${s} rc = outputLoc;\n        ${e}\n        result[0] = getChannel(getX(${u.join()}), ${c});\n        ${o[r-1]} += 1;\n        if(${l}) {\n          ${e}\n          result[1] = getChannel(getX(${u.join()}), ${c});\n        }\n        rc = outputLoc;\n        ${o[r-2]} += 1;\n        if(${o[r-2]} < ${this.outputShape[r-2]}) {\n          ${e}\n          result[2] = getChannel(getX(${u.join()}), ${c});\n          ${o[r-1]} += 1;\n          if(${l}) {\n            ${e}\n            result[3] = getChannel(getX(${u.join()}), ${c});\n          }\n        }\n      `}this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${p}\n        setOutput(result);\n      }\n    `}}const Oz={kernelName:zn,backendName:"webgl",kernelFunc:({inputs:e,backend:t,attrs:n})=>{const{x:r}=e,{paddings:s,mode:a}=n,i=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new Mz(r.shape,s,a):new _z(r.shape,s,a);return t.runWebGLProgram(i,[r],r.dtype)}},Bz=F_({opSnippet:"if (b == 0.0) return NAN;\n  return mod(a, b);",packedOpSnippet:"\n  vec4 result = mod(a, b);\n  vec4 isNaN = vec4(equal(b, vec4(0.0)));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),zz={kernelName:Ln,backendName:"webgl",kernelFunc:Bz};class Lz{constructor(e,t,n){this.variableNames=["probs"],this.customUniforms=[{name:"seed",type:"float"}],this.outputShape=[e,n],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n\n        float r = random(seed);\n        float cdf = 0.0;\n\n        for (int i = 0; i < ${t-1}; i++) {\n          cdf += getProbs(batch, i);\n\n          if (r < cdf) {\n            setOutput(float(i));\n            return;\n          }\n        }\n\n        // If no other event happened, last event happened.\n        setOutput(float(${t-1}));\n      }\n    `}}const Pz=F_({opSnippet:"\nif (a == b) {\n  return 1.0;\n};\nreturn a / b;",packedOpSnippet:"\n  // vec4 one = vec4(equal(a, b));\n  // return one + (vec4(1.0) - one) * a / b;\n  vec4 result = a / b;\n  if(a.x == b.x) {\n    result.x = 1.;\n  }\n  if(a.y == b.y) {\n    result.y = 1.;\n  }\n  if(a.z == b.z) {\n    result.z = 1.;\n  }\n  if(a.w == b.w) {\n    result.w = 1.;\n  }\n\n  return result;\n",checkOutOfBounds:!0}),Uz={kernelName:Gt,backendName:"webgl",kernelFunc:Pz},Wz="return a - b;",Vz=F_({opSnippet:Wz,packedOpSnippet:Wz,supportsComplex:!0,cpuKernelImpl:ZR}),Gz={kernelName:Lr,backendName:"webgl",kernelFunc:Vz};function jz(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{dim:a}=r,i=ye([a],s.shape),o=xz({inputs:{x:s},backend:n,attrs:{reductionIndices:i,keepDims:!1}}),u=Sc(o.shape,i),l=L_({inputs:{x:o},backend:n,attrs:{shape:u}}),c=Vz({inputs:{a:s,b:l},backend:n}),h=hB({inputs:{x:c},backend:n}),p=q_({inputs:{x:h},backend:n,attrs:{axis:i,keepDims:!1}}),d=L_({inputs:{x:p},backend:n,attrs:{shape:u}}),f=Pz({inputs:{a:h,b:d},backend:n});return n.disposeIntermediateTensorInfo(o),n.disposeIntermediateTensorInfo(l),n.disposeIntermediateTensorInfo(c),n.disposeIntermediateTensorInfo(h),n.disposeIntermediateTensorInfo(p),n.disposeIntermediateTensorInfo(d),f}const Hz={kernelName:Er,backendName:"webgl",kernelFunc:jz},qz={kernelName:Pn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{logits:s}=t,{numSamples:a,seed:i,normalized:o}=r,u=o?s:jz({inputs:{logits:s},backend:n,attrs:{dim:s.shape.length-1}}),l=u.shape[0],c=u.shape[1],h=new Lz(l,c,a),p=[[i]],d=n.runWebGLProgram(h,[u],"int32",p);return o||n.disposeIntermediateTensorInfo(u),d}},Kz={kernelName:Wn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{x:r}=t;if(n.shouldExecuteOnCPU([r])){const e=n.texData.get(r.dataId),[t,s]=MR(e.values,r.shape,r.dtype);return n.makeTensorInfo(s,r.dtype,t)}let s;return s=je().getBool("WEBGL_PACK_UNARY_OPERATIONS")?new d_(r.shape,"\n  vec4 result = -x;\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"):new c_(r.shape,"if (isnan(x)) return x;\n  return -x;\n"),n.runWebGLProgram(s,[r],r.dtype)}},Xz=Gp,Yz={kernelName:Gn,backendName:"webgl",kernelFunc:function(e){ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u}=r,l=n.readSync(s.dataId),c=n.readSync(a.dataId),{selectedIndices:h}=Xz(l,c,i,o,u);return n.makeTensorInfo([h.length],"int32",new Int32Array(h))}},Zz=jp,Jz={kernelName:jn,backendName:"webgl",kernelFunc:function(e){ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,padToMaxOutputSize:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),{selectedIndices:p,validOutputs:d}=Zz(c,h,i,o,u,l);return[n.makeTensorInfo([p.length],"int32",new Int32Array(p)),n.makeTensorInfo([],"int32",new Int32Array([d]))]}},Qz=Hp,eL={kernelName:Hn,backendName:"webgl",kernelFunc:function(e){ns("tf.nonMaxSuppression() in webgl locks the UI thread. Call tf.nonMaxSuppressionAsync() instead");const{inputs:t,backend:n,attrs:r}=e,{boxes:s,scores:a}=t,{maxOutputSize:i,iouThreshold:o,scoreThreshold:u,softNmsSigma:l}=r,c=n.readSync(s.dataId),h=n.readSync(a.dataId),p=i,d=o,f=u,m=l,{selectedIndices:g,selectedScores:y}=Qz(c,h,p,d,f,m);return[n.makeTensorInfo([g.length],"int32",new Int32Array(g)),n.makeTensorInfo([y.length],"float32",new Float32Array(y))]}};class tL{constructor(e,t,n,r){this.variableNames=["indices"],this.outputShape=[e,t],this.userCode=`\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int index = round(getIndices(coords.x));\n        setOutput(mix(float(${r}), float(${n}),\n                      float(index == coords.y)));\n      }\n    `}}const nL={kernelName:Kn,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{indices:s}=t,{depth:a,onValue:i,offValue:o}=r,u=oe(s.shape),l=new tL(u,a,i,o),c=L_({inputs:{x:s},backend:n,attrs:{shape:[u]}}),h=n.runWebGLProgram(l,[c],s.dtype);n.disposeIntermediateTensorInfo(c);const p=L_({inputs:{x:h},backend:n,attrs:{shape:[...s.shape,a]}});return n.disposeIntermediateTensorInfo(h),p}};function rL(e){const{inputs:t,backend:n}=e,{x:r}=t;if("complex64"===r.dtype){const e=JM({inputs:{input:r},backend:n}),t=rL({inputs:{x:e},backend:n}),s=dO({inputs:{input:r},backend:n}),a=rL({inputs:{x:s},backend:n}),i=N_({inputs:{real:t,imag:a},backend:n});return n.disposeIntermediateTensorInfo(e),n.disposeIntermediateTensorInfo(t),n.disposeIntermediateTensorInfo(s),n.disposeIntermediateTensorInfo(a),i}return kB({attrs:{shape:r.shape,dtype:r.dtype,value:"string"===r.dtype?"":0},backend:n})}const sL={kernelName:Xr,backendName:"webgl",kernelFunc:rL},aL={kernelName:qn,backendName:"webgl",kernelFunc:function e(t){const{inputs:n,backend:r}=t,{x:s}=n;if("string"===s.dtype)throw new Error("onesLike is not supported under string dtype");if("complex64"===s.dtype){const t=JM({inputs:{input:s},backend:r}),n=e({inputs:{x:t},backend:r}),a=dO({inputs:{input:s},backend:r}),i=rL({inputs:{x:a},backend:r}),o=N_({inputs:{real:n,imag:i},backend:r});return r.disposeIntermediateTensorInfo(t),r.disposeIntermediateTensorInfo(n),r.disposeIntermediateTensorInfo(a),r.disposeIntermediateTensorInfo(i),o}return kB({attrs:{shape:s.shape,dtype:s.dtype,value:1},backend:r})}},iL={kernelName:Xn,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{axis:s}=r;if(1===t.length)return dB({inputs:{input:t[0]},backend:n,attrs:{dim:s}});const a=t[0].shape,i=t[0].dtype;t.forEach((e=>{se(a,e.shape,"All tensors passed to stack must have matching shapes"),re(i===e.dtype,(()=>"All tensors passed to stack must have matching dtypes"))}));const o=[],u=gO({inputs:t.map((e=>{const t=dB({inputs:{input:e},backend:n,attrs:{dim:s}});return o.push(t),t})),backend:n,attrs:{axis:s}});return o.forEach((e=>n.disposeIntermediateTensorInfo(e))),u}};class oL{constructor(e,t,n){this.variableNames=["x"],this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=XF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=["coords[0]","coords[1]","coords[2]","coords[3]"].slice(0,r);this.userCode=1!==r?`\n      ${s} start = ${s}(${a});\n      ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outC = getOutputCoords();\n        if (any(lessThan(outC, start)) || any(greaterThanEqual(outC, end))) {\n          setOutput(value);\n        } else {\n          ${s} coords = outC - start;\n          setOutput(getX(${o}));\n        }\n      }\n    `:`\n        int start = ${a};\n        int end = ${i};\n\n        void main() {\n          int outC = getOutputCoords();\n          if (outC < start || outC >= end) {\n            setOutput(value);\n          } else {\n            setOutput(getX(outC - start));\n          }\n        }\n      `}}class uL{constructor(e,t,n){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0,this.customUniforms=[{name:"value",type:"float"}],this.outputShape=t.map(((t,n)=>t[0]+e[n]+t[1]));const r=e.length,s=XF(r),a=t.map((e=>e[0])).join(","),i=t.map(((t,n)=>t[0]+e[n])).join(","),o=r_("rc",r),u=r_("source",r),l=`${o[r-1]} < ${this.outputShape[r-1]}`,c=1===r?"source":`vec2(${u.slice(-2).join()})`,h=[`${s} rc = outputLoc;`,`${o[r-1]} += 1;\n       if(${l}) {\n      `,1===r?"":`}\n       rc = outputLoc;\n       ${o[r-2]} += 1;\n       if(${o[r-2]} < ${this.outputShape[r-2]}) {`,1===r?"":`  ${o[r-1]} += 1;\n         if(${l}) {`],p=1===r?"rc < start || rc >= end":"any(lessThan(rc, start)) || any(greaterThanEqual(rc, end))";let d="";for(let e=0,t=1===r?2:4;e<t;e++)d+=`\n        ${h[e]}\n        if (${p}) {\n          result[${e}] = float(value);\n        } else {\n          ${s} source = rc - start;\n          result[${e}] = getChannel(getX(${u.join()}), ${c});\n        }\n      `;d+=1===r?"} ":"}}",this.userCode=`\n      const ${s} start = ${s}(${a});\n      const ${s} end = ${s}(${i});\n\n      void main() {\n        ${s} outputLoc = getOutputCoords();\n        vec4 result = vec4(0.);\n        ${d}\n        setOutput(result);\n      }\n    `}}const lL=e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{paddings:a,constantValue:i}=r;if(0===oe(s.shape)){const e=a.map(((e,t)=>e[0]+s.shape[t]+e[1]));return kB({backend:n,attrs:{shape:e,value:i,dtype:s.dtype}})}const o=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new uL(s.shape,a,i):new oL(s.shape,a,i),u=[[i]];return n.runWebGLProgram(o,[s],s.dtype,u)},cL={kernelName:Yn,backendName:"webgl",kernelFunc:lL},hL=F_({opSnippet:"\n  if(a < 0.0 && floor(b) < b){\n    return NAN;\n  }\n  if (b == 0.0) {\n    return 1.0;\n  }\n  return (round(mod(b, 2.0)) != 1) ?\n      pow(abs(a), b) : sign(a) * pow(abs(a), b);\n",packedOpSnippet:"\n  // isModRound1 has 1 for components with round(mod(b, 2.0)) == 1, 0 otherwise.\n  vec4 isModRound1 = vec4(equal(round(mod(b, 2.0)), ivec4(1)));\n  vec4 multiplier = sign(a) * isModRound1 + (vec4(1.0) - isModRound1);\n  vec4 result = multiplier * pow(abs(a), b);\n\n  // Ensure that a^0 = 1, including 0^0 = 1 as this correspond to TF and JS\n  bvec4 isExpZero = equal(b, vec4(0.0));\n  result.r = isExpZero.r ? 1.0 : result.r;\n  result.g = isExpZero.g ? 1.0 : result.g;\n  result.b = isExpZero.b ? 1.0 : result.b;\n  result.a = isExpZero.a ? 1.0 : result.a;\n\n  vec4 isNaN = vec4(lessThan(a, vec4(0.0))) * vec4(lessThan(floor(b), b));\n  \n  result.r = isNaN.r > 0. ? NAN : result.r;\n  result.g = isNaN.g > 0. ? NAN : result.g;\n  result.b = isNaN.b > 0. ? NAN : result.b;\n  result.a = isNaN.a > 0. ? NAN : result.a;\n\n  return result;\n"}),pL={kernelName:Jn,backendName:"webgl",kernelFunc:hL},dL={kernelName:er,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{axis:a,keepDims:i}=r,o=s.shape.length,u=[],l=ye(a,s.shape);let c=l;const h=Ac(c,o);let p,d=s;if(null!=h&&(d=X_({inputs:{x:s},backend:n,attrs:{perm:h}}),c=Fc(c.length,o),u.push(d)),Tc("prod",c,o),n.shouldExecuteOnCPU([d])){const e=n.texData.get(d.dataId).values,{outVals:t,outShape:r,outDtype:s}=BR(d.shape,d.dtype,e,c);p=n.makeTensorInfo(r,s,t)}else{const[e,t]=Ec(d.shape,c),r=oe(t),a=L_({inputs:{x:d},backend:n,attrs:{shape:[-1,r]}}),i=V_(a,ra(s.dtype),"prod",n);p=L_({inputs:{x:i},backend:n,attrs:{shape:e}}),u.push(a),u.push(i)}if(i){u.push(p);const e=Sc(p.shape,l);p=L_({inputs:{x:p},backend:n,attrs:{shape:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),p}},fL=e=>{const{backend:t,attrs:n}=e,{start:r,stop:s,step:a,dtype:i}=n,o=zR(r,s,a,i);return t.makeTensorInfo([o.length],i,o)},mL={kernelName:tr,backendName:"webgl",kernelFunc:fL},gL=$_({opSnippet:"return 1.0 / x;"}),yL={kernelName:rr,backendName:"webgl",kernelFunc:gL},bL=$_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : x;\n",packedOpSnippet:"\n  vec4 result = x * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),xL={kernelName:sr,backendName:"webgl",kernelFunc:bL},wL=$_({opSnippet:"if (isnan(x)) return x;\n  return (x < 0.0) ? 0.0 : min(6.0, x);\n",packedOpSnippet:"\n  vec4 result = min(x, vec4(6.)) * vec4(greaterThanEqual(x, vec4(0.0)));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n"}),vL={kernelName:cr,backendName:"webgl",kernelFunc:wL};class kL{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC - vec2(0.5)":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec2 sourceFloorRC = ivec2(max(sourceFracIndexRC, vec2(0.0)));\n        ivec2 sourceCeilRC = ivec2(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        float topLeft = getA(b, sourceFloorRC.x, sourceFloorRC.y, d);\n        float bottomLeft = getA(b, sourceCeilRC.x, sourceFloorRC.y, d);\n        float topRight = getA(b, sourceFloorRC.x, sourceCeilRC.y, d);\n        float bottomRight = getA(b, sourceCeilRC.x, sourceCeilRC.y, d);\n\n        vec2 fracRC = sourceFracIndexRC - vec2(sourceFloorRC);\n\n        float top = topLeft + (topRight - topLeft) * fracRC.y;\n        float bottom = bottomLeft + (bottomRight - bottomLeft) * fracRC.y;\n        float newValue = top + (bottom - top) * fracRC.x;\n\n        setOutput(newValue);\n      }\n    `}}class NL{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n];let h;h=s?"(vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC - vec3(0.5)":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${h};\n\n        // Compute the four integer indices.\n        ivec3 sourceFloorRC = ivec3(max(sourceFracIndexRC, vec3(0.0)));\n        ivec3 sourceCeilRC = ivec3(\n          min(inputShapeRC - 1.0, ceil(sourceFracIndexRC)));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        // In parallel, construct four corners for all four components in\n        // packed 2x2 cell.\n        vec4 topLeft = vec4(\n          getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 bottomLeft = vec4(\n          getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceFloorRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceFloorRC.z, d + 1) : 0.0);\n\n        vec4 topRight = vec4(\n          getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceFloorRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceFloorRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec4 bottomRight = vec4(\n          getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d),\n          hasNextCol ? getAValue(b, sourceCeilRC.x, sourceCeilRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceCeilRC.x, sourceCeilRC.z, d + 1) : 0.0);\n\n        vec3 fracRC = sourceFracIndexRC - vec3(sourceFloorRC);\n\n        vec4 top = mix(topLeft, topRight, fracRC.yyzz);\n        vec4 bottom = mix(bottomLeft, bottomRight, fracRC.yyzz);\n        vec4 newValue = mix(top, bottom, fracRC.x);\n\n        setOutput(newValue);\n      }\n    `}}const IL={kernelName:ur,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new NL(s.shape,u,l,a,i):new kL(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],"float32")}};class CL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(startRLerp - float(winHeight / 2));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(startCLerp - float(winWidth / 2));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float dxR = float(dyR) * heightScale;\n            int topDxRIndex = int(floor(dxR));\n            int bottomDxRIndex = int(min(ceil(dxR), ${r-1}.0));\n            float dxRLerp = dxR - float(topDxRIndex);\n            float inverseDxRLerp = 1.0 - dxRLerp;\n\n            float dxC = float(dyC) * widthScale;\n            int leftDxCIndex = int(floor(dxC));\n            int rightDxCIndex = int(min(ceil(dxC), ${s-1}.0));\n            float dxCLerp = dxC - float(leftDxCIndex);\n            float inverseDxCLerp = 1.0 - dxCLerp;\n\n            if (r == topDxRIndex && c == leftDxCIndex) {\n              // topLeft\n              accumulator +=\n                getDy(b, dyR, dyC, d) * inverseDxRLerp * inverseDxCLerp;\n            }\n\n            if (r == topDxRIndex && c == rightDxCIndex) {\n              // topRight\n              accumulator += getDy(b, dyR, dyC, d) * inverseDxRLerp * dxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == leftDxCIndex) {\n              // bottomLeft\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * inverseDxCLerp;\n            }\n\n            if (r == bottomDxRIndex && c == rightDxCIndex) {\n              // bottomRight\n              accumulator += getDy(b, dyR, dyC, d) * dxRLerp * dxCLerp;\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const DL={kernelName:lr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new CL(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class EL{constructor(e,t,n,r,s){this.variableNames=["A"],this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec2(yRC) + vec2(0.5)) * effectiveInputOverOutputRatioRC, vec2(0.0))":"vec2(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec2 effectiveInputOverOutputRatioRC = vec2(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]});\n      const vec2 inputShapeRC = vec2(${i}.0, ${o}.0);\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        ivec2 yRC = coords.yz;\n\n        // Fractional source index.\n        vec2 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec2 sourceNearestRC = ivec2(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n        float newValue = getA(b, sourceNearestRC.x, sourceNearestRC.y, d);\n\n        setOutput(newValue);\n      }\n    `}}class SL{constructor(e,t,n,r,s){this.variableNames=["A"],this.packedInputs=!0,this.packedOutput=!0,this.outputShape=[];const[a,i,o,u]=e;this.outputShape=[a,t,n,u];const l=[r&&t>1?i-1:i,r&&n>1?o-1:o],c=[r&&t>1?t-1:t,r&&n>1?n-1:n],h=r?"0.5":"0.0";let p;p=s?"max((vec3(yRC) + vec3(0.5)) * effectiveInputOverOutputRatioRC, vec3(0.0))":"vec3(yRC) * effectiveInputOverOutputRatioRC",this.userCode=`\n      const vec3 effectiveInputOverOutputRatioRC = vec3(\n          ${l[0]/c[0]},\n          ${l[1]/c[1]},\n          ${l[1]/c[1]});\n      const vec3 inputShapeRC = vec3(${i}.0, ${o}.0,\n                                     ${o}.0);\n\n      float getAValue(int b, int r, int c, int d) {\n        return getChannel(getA(b, r, c, d), vec2(c, d));\n      }\n\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        // Calculate values for next column in yRC.z.\n        ivec3 yRC = coords.yzz + ivec3(0, 0, 1);\n\n        // Fractional source index.\n        vec3 sourceFracIndexRC = ${p};\n\n        // Compute the coordinators of nearest neighbor point.\n        ivec3 sourceNearestRC = ivec3(\n          min(inputShapeRC - 1.0, floor(sourceFracIndexRC + ${h})));\n\n        // Should we calculate next column and row elements in 2x2 packed cell.\n        bool hasNextCol = d < ${u-1};\n        bool hasNextRow = coords.z < ${n-1};\n\n        vec4 newValue = vec4(\n          getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d),\n          hasNextCol ? getAValue(b, sourceNearestRC.x, sourceNearestRC.y, d + 1)\n                     : 0.0,\n          hasNextRow ? getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d)\n                     : 0.0,\n          (hasNextRow && hasNextCol) ?\n            getAValue(b, sourceNearestRC.x, sourceNearestRC.z, d + 1) : 0.0);\n\n        setOutput(newValue);\n      }\n    `}}const TL={kernelName:ir,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s}=t,{alignCorners:a,halfPixelCenters:i,size:o}=r,[u,l]=o,c=je().getBool("WEBGL_PACK_IMAGE_OPERATIONS")?new SL(s.shape,u,l,a,i):new EL(s.shape,u,l,a,i);return n.runWebGLProgram(c,[s],s.dtype)}};class AL{constructor(e,t,n){this.variableNames=["dy"],this.outputShape=[],this.outputShape=t;const[,r,s]=t,[,a,i]=e,o=[n&&a>1?r-1:r,n&&i>1?s-1:s],u=[n&&a>1?a-1:a,n&&i>1?i-1:i],l=o[0]/u[0],c=o[1]/u[1],h=1/l,p=1/c,d=2*Math.ceil(h)+2,f=2*Math.ceil(p)+2;this.userCode=`\n      void main() {\n        ivec4 coords = getOutputCoords();\n        int b = coords[0];\n        int d = coords[3];\n        int r = coords[1];\n        int c = coords[2];\n\n        float accumulator = 0.0;\n\n        const float heightScale = float(${l});\n        const float widthScale = float(${c});\n\n        const float invHeightScale = float(${h});\n        const float invWidthScale = float(${p});\n\n        const int winHeight = int(${d});\n        const int winWidth = int(${f});\n\n        // Compute bounds for where in dy we will look\n        float startRLerp = floor(float(r) * invHeightScale);\n        int startDyR = int(floor(startRLerp - float(winHeight / 2)));\n\n        float startCLerp = floor(float(c) * invWidthScale);\n        int startDyC = int(floor(startCLerp - float(winWidth / 2)));\n\n        // Loop over dy\n        for (int dyROffset = 0; dyROffset < winHeight; dyROffset++) {\n          int dyR = dyROffset + startDyR;\n\n          // Guard against the window exceeding the bounds of dy\n          if (dyR < 0 || dyR >= ${a}) {\n            continue;\n          }\n\n          for (int dyCOffset = 0; dyCOffset < winWidth; dyCOffset++) {\n            int dyC = dyCOffset + startDyC;\n\n            // Guard against the window exceeding the bounds of dy\n            if (dyC < 0 || dyC >= ${i}) {\n              continue;\n            }\n\n            float sourceFracRow =\n              float(${o[0]}) *\n                (float(dyR) / float(${u[0]}));\n\n            float sourceFracCol =\n                float(${o[1]}) *\n                  (float(dyC) / float(${u[1]}));\n\n            int sourceNearestRow = int(min(\n                float(int(${r}) - 1),\n                ${n} ? float(round(sourceFracRow)) :\n                                  float(floor(sourceFracRow))));\n\n            int sourceNearestCol = int(min(\n                float(int(${s}) - 1),\n                ${n} ? float(round(sourceFracCol)) :\n                                  float(floor(sourceFracCol))));\n\n            if (r == sourceNearestRow && c == sourceNearestCol) {\n              accumulator += getDy(b, dyR, dyC, d);\n            }\n          }\n        }\n        // End loop over dy\n\n        setOutput(accumulator);\n      }\n    `}}const $L={kernelName:or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{images:s,dy:a}=t,{alignCorners:i}=r,o=new AL(a.shape,s.shape,i);return n.runWebGLProgram(o,[a],a.dtype)}};class FL{constructor(e,t){this.variableNames=["x"];const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);if(this.outputShape=e,1===n)return void(this.userCode=`\n        void main() {\n          int coord = getOutputCoords();\n          setOutput(getX(${e[0]} - coord - 1));\n        }\n      `);const r=e.map(((n,r)=>(n=>-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - coords[${n}] - 1`:`coords[${n}]`)(r))).join(","),s=XF(n);this.userCode=`\n      void main() {\n        ${s} coords = getOutputCoords();\n        setOutput(getX(${r}));\n      }\n    `}}class RL{constructor(e,t){this.variableNames=["x"],this.packedInputs=!0,this.packedOutput=!0;const n=e.length;if(n>4)throw new Error(`WebGL backend: Reverse of rank-${n} tensor is not yet supported`);this.outputShape=e;const r=r_("rc",n),s=`${r[n-1]} + 1 < ${this.outputShape[n-1]}`,a=`${r[n-2]} + 1 < ${this.outputShape[n-2]}`,i=XF(n);function o(n){const r=e.map(((r,s)=>function(n,r){return-1!==t.indexOf(n)&&1!==e[n]?`${e[n]} - ${r[n]} - 1`:`${r[n]}`}(s,n)));return`getChannel(getX(${r.join(",")}), vec2(${r.slice(-2).join(",")}))`}this.userCode=1===n?`\n        void main(){\n          int rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = getChannel(getX(${e[0]} - rc - 1),\n            ${e[0]} - rc - 1);\n          if(${s}){\n              result.g = getChannel(getX(${e[0]} - (rc  + 1) - 1),\n                ${e[0]} - (rc  + 1) - 1);\n          }\n          setOutput(result);\n        }\n      `:`\n        void main() {\n          ${i} rc = getOutputCoords();\n          vec4 result = vec4(0.);\n          result.r = ${function(e){return o(e)}(r.slice())};\n          if(${s}){\n            result.g = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",o(e)}(r.slice())};\n          }\n          if(${a}) {\n            result.b = ${function(e){return e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            if(${s}) {\n              result.a = ${function(e){return e[n-1]="("+e[n-1]+" + 1)",e[n-2]="("+e[n-2]+" + 1)",o(e)}(r.slice())};\n            }\n          }\n          setOutput(result);\n        }\n    `}}const _L={kernelName:hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{dims:a}=r,i=s.shape.length,o=ye(a,s.shape);if(0===i)return v_({inputs:{x:s},backend:n});const u=je().getBool("WEBGL_PACK_ARRAY_OPERATIONS")?new RL(s.shape,o):new FL(s.shape,o);return n.runWebGLProgram(u,[s],s.dtype)}};class ML{constructor(e,t){this.variableNames=["Image"],this.outputShape=[],this.customUniforms=[{name:"params",type:"vec4"}];const n=e[1],r=e[2];this.outputShape=e;let s="";s="number"==typeof t?`float outputValue = ${t.toFixed(2)};`:`\n        vec3 fill = vec3(${t.join(",")});\n        float outputValue = fill[coords[3]];`,this.userCode=`\n        void main() {\n          ivec4 coords = getOutputCoords();\n          int x = coords[2];\n          int y = coords[1];\n          float coordXFloat = (float(x) - params[0]) * params[3] -\n            (float(y) - params[1]) * params[2];\n          float coordYFloat = (float(x) - params[0]) * params[2] +\n            (float(y) - params[1]) * params[3];\n          int coordX = int(round(coordXFloat + params[0]));\n          int coordY = int(round(coordYFloat + params[1]));\n          ${s}\n          if(coordX >= 0 && coordX < ${r} && coordY >= 0 && coordY < ${n}) {\n            outputValue = getImage(coords[0], coordY, coordX, coords[3]);\n          }\n          setOutput(outputValue);\n        }\n    `}}const OL={kernelName:Jr,backendName:"webgl",kernelFunc:({inputs:e,attrs:t,backend:n})=>{const{image:r}=e,{radians:s,fillValue:a,center:i}=t,o=n,u=new ML(r.shape,a),[l,c]=zd(i,r.shape[1],r.shape[2]),h=[[l,c,Math.sin(s),Math.cos(s)]];return o.runWebGLProgram(u,[r],r.dtype,h)}},BL=$_({opSnippet:"\n  // OpenGL ES does not support round function.\n  // The algorithm is based on banker's rounding.\n  float base = floor(x);\n  if ((x - base) < 0.5) {\n    return floor(x);\n  } else if ((x - base) > 0.5) {\n    return ceil(x);\n  } else {\n    if (mod(base, 2.0) == 0.0) {\n      return base;\n    } else {\n      return base + 1.0;\n    }\n  }\n"}),zL={kernelName:pr,backendName:"webgl",kernelFunc:BL},LL=$_({opSnippet:"return inversesqrt(x);",cpuKernelImpl:LR}),PL={kernelName:dr,backendName:"webgl",kernelFunc:LL};class UL{constructor(e,t,n,r,s,a,i=!0){this.variableNames=["updates","indices","defaultValue"],this.outputShape=a;const o=XF(s.length),u=XF(a.length);let l="";1===n?l="i":2===n&&(l="i, j");const c=`getIndices(${l})`;let h="";1===r?h="i":2===r&&(h="i, coords[1]");const p=`getUpdates(${h})`,d=t>1?"strides[j]":"strides";this.userCode=`\n        ${o} strides = ${o}(${s});\n\n        void main() {\n          ${u} coords = getOutputCoords();\n          float sum = 0.0;\n          bool found = false;\n          for (int i = 0; i < ${e}; i++) {\n            int flattenedIndex = 0;\n            for (int j = 0; j < ${t}; j++) {\n              int index = round(${c});\n              flattenedIndex += index * ${d};\n            }\n            if (flattenedIndex == coords[0]) {\n              sum += ${p};\n              found = true;\n            }\n          }\n          setOutput(mix(getDefaultValue(), sum, float(found)));\n        }\n      `}}const WL={kernelName:fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{indices:s,updates:a}=t,{shape:i}=r,{sliceRank:o,numUpdates:u,sliceSize:l,strides:c,outputSize:h}=oo(0,s,i),p=[h/l,l];if(0===h)return n.makeTensorInfo(i,s.dtype);const d=L_({inputs:{x:s},backend:n,attrs:{shape:[u,o]}}),f=L_({inputs:{x:a},backend:n,attrs:{shape:[u,l]}}),m=n.makeTensorInfo([],"float32",new Float32Array([0])),g=new UL(u,o,d.shape.length,f.shape.length,c,p),y=n.runWebGLProgram(g,[f,d,m],f.dtype),b=L_({inputs:{x:y},backend:n,attrs:{shape:i}});return n.disposeIntermediateTensorInfo(d),n.disposeIntermediateTensorInfo(f),n.disposeIntermediateTensorInfo(y),n.disposeIntermediateTensorInfo(m),b}};class VL{constructor(e,t,n){let r,s;if(this.variableNames=["c","a","b"],this.outputShape=t,n>4)throw Error(`Where for rank ${n} is not yet supported`);if(1===n)s="resRC",r="resRC";else{const n=["resRC.x","resRC.y","resRC.z","resRC.w"],a=[],i=[];for(let r=0;r<t.length;r++)i.push(`${n[r]}`),r<e&&a.push(`${n[r]}`);r=a.join(),s=i.join()}const a=XF(n);this.userCode=`\n      void main() {\n        ${a} resRC = getOutputCoords();\n        float cVal = getC(${r});\n        if (cVal >= 1.0) {\n          setOutput(getA(${s}));\n        } else {\n          setOutput(getB(${s}));\n        }\n      }\n    `}}const GL={kernelName:mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{condition:r,t:s,e:a}=t,i=new VL(r.shape.length,s.shape,s.shape.length);return n.runWebGLProgram(i,[r,s,a],na(s.dtype,a.dtype))}},jL=$_({opSnippet:`\n  // Stable and Attracting Fixed Point (0, 1) for Normalized Weights.\n  // see: https://arxiv.org/abs/1706.02515\n  float scaleAlpha = ${Gd};\n  float scale = ${jd};\n  return (x >= 0.0) ? scale * x : scaleAlpha * (exp(x) - 1.0);\n`}),HL={kernelName:gr,backendName:"webgl",kernelFunc:jL},qL=$_({opSnippet:"if (isnan(x)) return x;\n  return 1.0 / (1.0 + exp(-1.0 * x));\n",packedOpSnippet:"\n  vec4 result = 1.0 / (1.0 + exp(-1.0 * x));\n  bvec4 isNaN = isnan(x);\n\n  result.r = isNaN.r ? x.r : result.r;\n  result.g = isNaN.g ? x.g : result.g;\n  result.b = isNaN.b ? x.b : result.b;\n  result.a = isNaN.a ? x.a : result.a;\n\n  return result;\n",cpuKernelImpl:PR}),KL={kernelName:vr,backendName:"webgl",kernelFunc:qL},XL=$_({opSnippet:"\n  if (isnan(x)) { return 0.0; }\n  return sign(x);\n"}),YL={kernelName:wr,backendName:"webgl",kernelFunc:XL},ZL=$_({opSnippet:"if (isnan(x)) return x;\n  return sin(x);\n"}),JL={kernelName:br,backendName:"webgl",kernelFunc:ZL},QL=$_({opSnippet:"\n  float e2x = exp(x);\n  return (e2x - 1.0 / e2x) / 2.0;\n"}),eP={kernelName:xr,backendName:"webgl",kernelFunc:QL},tP=$_({opSnippet:"\n  float epsilon = 1.1920928955078125e-7;\n  float threshold = log(epsilon) + 2.0;\n\n  bool too_large = x > -threshold;\n  bool too_small = x < threshold;\n\n  float result;\n  float exp_x = exp(x);\n\n  if (too_large){\n    result = x;\n  }\n  else if (too_small){\n    result = exp_x;\n  }\n  else{\n    result = log(exp_x + 1.0);\n  }\n  return result;\n"}),nP={kernelName:kr,backendName:"webgl",kernelFunc:tP},rP={kernelName:Cr,backendName:"webgl",kernelFunc:e=>{const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{blockShape:a,paddings:i}=r;re(s.shape.length<=4,(()=>"spaceToBatchND for rank > 4 with a WebGL backend not implemented yet"));const o=a.reduce(((e,t)=>e*t)),u=[[0,0]];u.push(...i);for(let e=1+a.length;e<s.shape.length;++e)u.push([0,0]);const l=[],c=lL({inputs:{x:s},backend:n,attrs:{paddings:u,constantValue:0}}),h=Ld(c.shape,a,o,!1),p=Pd(h.length,a.length,!1),d=Ud(c.shape,a,o,!1),f=L_({inputs:{x:c},backend:n,attrs:{shape:h}}),m=X_({inputs:{x:f},backend:n,attrs:{perm:p}}),g=L_({inputs:{x:m},backend:n,attrs:{shape:d}});return l.push(c),l.push(f),l.push(m),l.forEach((e=>n.disposeIntermediateTensorInfo(e))),g}},sP={kernelName:Sr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{indices:r,values:s,denseShape:a,defaultValue:i}=t;if(1!==a.shape.length)throw new Error(`Dense shape must be a vector, saw:\n         ${a.shape}`);if(2!==r.shape.length)throw new Error(`Indices must be a matrix, saw:\n         ${r.shape}`);if(1!==s.shape.length)throw new Error(`Values must be a vector, saw:\n         ${s.shape}`);if(0!==i.shape.length)throw new Error(`Default value must be a scalar, saw:\n        ${i.shape}`);const o=n.readSync(r.dataId),u=n.readSync(s.dataId),l=n.readSync(a.dataId),c=n.readSync(i.dataId)[0],[h,p,d,f,m]=VR(o,r.shape,r.dtype,u,s.dtype,l,c);return[n.makeTensorInfo(p,r.dtype,h),n.makeTensorInfo([p[0]],s.dtype,d),n.makeTensorInfo([f.length],"bool",new Uint8Array(f.map((e=>Number(e))))),n.makeTensorInfo([m.length],r.dtype,new Int32Array(m))]}},aP={kernelName:Tr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{inputIndices:r,inputShape:s,newShape:a}=t;if(2!==r.shape.length)throw new Error(`Input indices should be a matrix but received shape ${r.shape}`);if(1!==s.shape.length)throw new Error(`Input shape should be a vector but received shape ${s.shape}`);if(1!==a.shape.length)throw new Error(`Target shape should be a vector but received shape ${a.shape}`);const i=Array.from(n.readSync(s.dataId)),o=n.readSync(r.dataId),u=Array.from(n.readSync(a.dataId)),[l,c,h]=GR(o,r.shape,r.dtype,i,u);return[n.makeTensorInfo(c,r.dtype,l),n.makeTensorInfo([h.length],a.dtype,new Int32Array(h))]}},iP={kernelName:Ar,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n              ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n              ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=jR(i,r.shape,r.dtype,o,u,!0);return n.makeTensorInfo(c,r.dtype,l)}},oP={kernelName:$r,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n}=e,{data:r,indices:s,segmentIds:a}=t;if(r.shape.length<1)throw new Error("Data should be at least 1 dimensional but received scalar");if(1!==s.shape.length)throw new Error(`Indices should be a vector but received shape\n             ${s.shape}`);if(1!==a.shape.length)throw new Error(`Segment ids should be a vector but received shape\n             ${a.shape}`);const i=n.readSync(r.dataId),o=n.readSync(s.dataId),u=n.readSync(a.dataId),[l,c]=jR(i,r.shape,r.dtype,o,u);return n.makeTensorInfo(c,r.dtype,l)}},uP={kernelName:Fr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{sparseIndices:s,sparseValues:a,defaultValue:i}=t,{outputShape:o}=r,{sliceRank:u,numUpdates:l,strides:c,outputSize:h}=oo(0,s,o),p=new UL(l,u,s.shape.length,a.shape.length,c,[h,1],!1),d=n.runWebGLProgram(p,[a,s,i],a.dtype),f=L_({inputs:{x:d},backend:n,attrs:{shape:o}});return n.disposeIntermediateTensorInfo(d),f}},lP={kernelName:Dr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{numOrSizeSplits:a,axis:i}=r,o=ye(i,s.shape)[0],u=mf(s,a,o),l=s.shape.length,c=new Array(l).fill(0),h=s.shape.slice();return u.map((e=>{const t=[...h];t[o]=e;const r=jM({inputs:{x:s},backend:n,attrs:{begin:c,size:t}});return c[o]+=e,r}))}},cP="return sqrt(x);",hP=$_({opSnippet:cP,packedOpSnippet:cP,cpuKernelImpl:HR}),pP={kernelName:Nr,backendName:"webgl",kernelFunc:hP},dP=$_({opSnippet:"return x * x;"}),fP={kernelName:_r,backendName:"webgl",kernelFunc:dP},mP="return (a - b) * (a - b);",gP=F_({opSnippet:mP,packedOpSnippet:mP}),yP={kernelName:Rr,backendName:"webgl",kernelFunc:gP},bP={kernelName:Yr,backendName:"webgl",kernelFunc:function({inputs:e,attrs:t,backend:n}){const{x:r}=e,s=`if (isnan(x)) return x;\n    return x > 0.0 ? 1.0 : float(${t.alpha});\n  `,a=new c_(r.shape,s);return n.runWebGLProgram(a,[r],r.dtype)}};class xP{constructor(e,t,n){this.variableNames=["x"],this.outputShape=n;const r=n.length,s=XF(n.length),a=XF(n.length);let i="";if(1===r)i="coords * strides + begin";else{let e=0;i=n.map(((t,r)=>(e++,1===n.length?`coords * strides[${r}] + begin[${r}]`:`coords[${e-1}] * strides[${r}] + begin[${r}]`))).join(",")}this.userCode=`\n      ${s} begin = ${s}(${e});\n      ${s} strides = ${s}(${t});\n\n      void main() {\n        ${a} coords = getOutputCoords();\n        setOutput(getX(${i}));\n      }\n    `}}const wP={kernelName:Mr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{begin:a,end:i,strides:o,beginMask:u,endMask:l,ellipsisMask:c,newAxisMask:h,shrinkAxisMask:p}=r,{finalShapeSparse:d,finalShape:f,isIdentity:m,sliceDim0:g,isSimpleSlice:y,begin:b,end:x,strides:w}=Io(s.shape,a,i,o,u,l,c,h,p);let v;if(m)v=L_({inputs:{x:s},backend:n,attrs:{shape:f}});else if(g||y){re(s.shape.length>=1,(()=>`Input must have rank at least 1, got: ${s.shape.length}`));const e=co(b,x,w),t=jM({inputs:{x:s},backend:n,attrs:{begin:b,size:e}});v=L_({inputs:{x:t},backend:n,attrs:{shape:f}}),n.disposeIntermediateTensorInfo(t)}else if(n.shouldExecuteOnCPU([s])){const e=n.readSync(s.dataId),t=Ii(s.shape,s.dtype,e),r=qR(d,t,w,b);v=n.makeTensorInfo(f,s.dtype,r.values)}else{const e=new xP(b,w,d);v=n.runWebGLProgram(e,[s],s.dtype)}const k=L_({inputs:{x:v},backend:n,attrs:{shape:f}});return n.disposeIntermediateTensorInfo(v),k}},vP={kernelName:Or,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{separator:s,nGramWidths:a,leftPad:i,rightPad:o,padWidth:u,preserveShortSequences:l}=r,{data:c,dataSplits:h}=t,p=n.readSync(c.dataId),d=n.readSync(h.dataId),[f,m]=KR(p,d,s,a,i,o,u,l);return[n.makeTensorInfo([f.length],"string",f),n.makeTensorInfo(h.shape,"int32",m)]}},kP={kernelName:Br,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{skipEmpty:s}=r,{input:a,delimiter:i}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(1!==a.shape.length)throw new Error(`Input must be a vector, got shape: ${a.shape}`);if(0!==i.shape.length)throw new Error(`Delimiter must be a scalar, got shape: ${i.shape}`);const o=n.readSync(a.dataId),u=n.readSync(i.dataId)[0],[l,c,h]=XR(o,u,s),p=c.length;return[n.makeTensorInfo([p,2],"int32",l),n.makeTensorInfo([p],"string",c),n.makeTensorInfo([2],"int32",new Int32Array(h))]}},NP={kernelName:zr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{numBuckets:s}=r,{input:a}=t;if("string"!==a.dtype)throw new Error("Input must be of datatype string");if(s<=0)throw new Error("Number of buckets must be at least 1");const i=n.readSync(a.dataId),o=YR(i,s);return n.makeTensorInfo(a.shape,"int32",o)}},IP=$_({opSnippet:"return tan(x);"}),CP={kernelName:Pr,backendName:"webgl",kernelFunc:IP},DP=$_({opSnippet:"\n  float e2x = exp(-2.0 * abs(x));\n  return sign(x) * (1.0 - e2x) / (1.0 + e2x);\n"}),EP={kernelName:Ur,backendName:"webgl",kernelFunc:DP};class SP{constructor(e,t){this.variableNames=["A"];const n=new Array(e.length);for(let r=0;r<n.length;r++)n[r]=e[r]*t[r];this.outputShape=n,this.rank=n.length;const r=XF(this.rank),s=function(e){const t=e.length;if(t>5)throw Error(`Tile for rank ${t} is not yet supported`);if(1===t)return`imod(resRC, ${e[0]})`;const n=["resRC.x","resRC.y","resRC.z","resRC.w","resRC.u"],r=[];for(let t=0;t<e.length;t++)r.push(`imod(${n[t]}, ${e[t]})`);return r.join()}(e);this.userCode=`\n      void main() {\n        ${r} resRC = getOutputCoords();\n        setOutput(getA(${s}));\n      }\n    `}}function TP(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{reps:a}=r;if("string"===s.dtype||s.shape.length>5){const e=n.readSync(s.dataId),t="string"===s.dtype?e.map((e=>_s(e))):e,r=Ii(s.shape,s.dtype,t),i=JR(r,a);return n.makeTensorInfo(i.shape,i.dtype,i.values)}const i=new SP(s.shape,a);return n.runWebGLProgram(i,[s],s.dtype)}const AP={kernelName:Wr,backendName:"webgl",kernelFunc:TP};class $P{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"negativeInf",type:"float"},{name:"dir",type:"int"},{name:"inc",type:"int"}],this.outputShape=e,this.userCode="\n       void main() {\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // We compare elements pair-wise within a group of size 2 * inc.\n         // The comparing rule for each group alternates between ascending\n         // and descending. Within each group, we compare each pair at\n         // positions i and i+inc. To decide whether an element at position i\n         // is x0 or x1, we mod it by 2 * inc, if the result is smaller than\n         // inc, it is in the first half of the group, we denote it as x0,\n         // otherwise we denote it as x1.\n         // For example, as shown in the Bitonic top K paper referenced above,\n         // Figure5(a) shows that element[1] is in the\n         // second half of the group when group size is 2, but it is in the\n         // first half of the group when group size is 4.\n\n         bool isFirstInPair = imod(elemIdx, 2 * inc) < inc;\n         int i = isFirstInPair ? elemIdx : elemIdx - inc;\n\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + inc : int(getIndices(batch, i + inc));\n         float x0 = i0 < n ? getX(batch, i0) : negativeInf;\n         float x1 = i1 < n ? getX(batch, i1) : negativeInf;\n\n         // Denotes which direction indices are in (ascending or descending).\n         bool reverse = imod(elemIdx, 2 * dir) >= dir;\n         bool isGreater = x0 > x1 || (x0 == x1 && i1 > i0);\n         if (reverse == isGreater) { // Elements in opposite order of direction\n           int iTemp = i0;\n           i0 = i1;\n           i1 = iTemp;\n         }\n         if (isFirstInPair) {\n            setOutput(float(i0));\n         } else {\n            setOutput(float(i1));\n         }\n       }\n     "}}class FP{constructor(e){this.variableNames=["x","indices"],this.customUniforms=[{name:"n",type:"int"},{name:"firstPass",type:"int"},{name:"k",type:"int"}],this.outputShape=e,this.userCode="\n    void main() {\n         // Takes max of indices (0, k), (1, k + 1), (2, k + 2) ...\n         ivec2 coords = getOutputCoords();\n         int batch = coords[0];\n         int elemIdx = coords[1];\n\n         // The output size is half of the previous size.\n         // If the previous sequence is | | | | _ _ _ _  | | | |  _ _ _ _ (k=4),\n         // we only need to output the indices at positions |, the indices at\n         // positions _ can be thrown away, see Figure5(b) After Phase 2\n         // (Merge phase) in the Bitonic Top K paper referenced above.\n         // For example, the paper shows we only need to output the orange bars.\n         // The output sequence should look like this | | | | | | | |.\n         // Because the sequence is halved, to map the output index back\n         // to the previous sequence to find the corresponding value,\n         // we need to double the index. When we double the index,\n         // we basically interpolate a position, so 2i looks like\n         // | _ | _ | _ | _ | _ | _ | _. We move the | to the first k position\n         // of each 2k positions by - elemIdx % k. E.g. for output at\n         // index 4,5,6,7, we want to get the corresponding element at\n         // original index 8,9,10,11, for output at index 8,9,10,11,\n         // we want to get the corresponding element at original index\n         // 16,17,18,19, so on and so forth.\n\n         int i = elemIdx < k ? elemIdx : (elemIdx * 2 - imod(elemIdx, k));\n         int i0 = firstPass == 1 ? i : int(getIndices(batch, i));\n         int i1 = firstPass == 1 ? i + k : int(getIndices(batch, i + k));\n\n         float x0 = getX(batch, i0);\n         float x1 = i1 < n ? getX(batch, i1) : x0;\n\n         setOutput(x0 >= x1 ? float(i0) : float(i1));\n       }\n     "}}function RP(e,t){null!==t&&e.disposeIntermediateTensorInfo(t)}function _P(e){let t=1;for(;t<e;)t*=2;return t}const MP={kernelName:Vr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s}=t,{k:a,sorted:i}=r,o=je().getNumber("TOPK_LAST_DIM_CPU_HANDOFF_SIZE_THRESHOLD"),u=je().getNumber("TOPK_K_CPU_HANDOFF_THRESHOLD"),l=s.shape,c=l[l.length-1];if(n.shouldExecuteOnCPU([s])||c<o||a>u){const e=n.readSync(s.dataId),[t,r]=QR(e,l,s.dtype,a,i);return[n.makeTensorInfo(t.shape,t.dtype,t.values),n.makeTensorInfo(r.shape,r.dtype,r.values)]}if(0===a)return l[l.length-1]=0,[n.makeTensorInfo(l,s.dtype,[]),n.makeTensorInfo(l,"int32",[])];if(1===c)return[s,kB({attrs:{shape:l,dtype:"int32",value:0},backend:n})];const h=n.texData.get(s.dataId),p=null!==h&&h.isPacked,d=p?n.unpackTensor(s):s,f=oe(l)/c,m=L_({inputs:{x:d},attrs:{shape:[f,c]},backend:n});p&&RP(n,d);const g=_P(a),y=_P(c);let b=null;const x=()=>null===b?[m,m]:[m,b],w=(e,t,r)=>{const s=x(),a=new $P(r),i=[[c],[null===b?1:0],[Number.NEGATIVE_INFINITY],[e],[t]],o=b;b=n.runWebGLProgram(a,s,"int32",i),RP(n,o)};for(let e=1;e<g;e*=2){const t=2*e;for(let n=e;n>=1;n/=2)w(t,n,[f,y])}for(let e=y;e>g;e/=2){const t=x(),r=new FP([f,e/2]),s=[[c],[null===b?1:0],[g]],a=b;b=n.runWebGLProgram(r,t,"int32",s),RP(n,a);const i=g/2,o=2*i;for(let e=i;e>=1;e/=2)w(o,e,b.shape)}let v=b;b=jM({inputs:{x:b},backend:n,attrs:{begin:0,size:[f,a]}}),RP(n,v);let k=PB({inputs:{x:m,indices:b},backend:n,attrs:{axis:1,batchDims:1}});RP(n,m);const N=l.slice(0,-1);N.push(a),v=b,b=L_({inputs:{x:b},attrs:{shape:N},backend:n}),RP(n,v);const I=k;return k=L_({inputs:{x:k},attrs:{shape:N},backend:n}),RP(n,I),[k,b]}};class OP{constructor(e,t,n,r,s,a){this.variableNames=["Image","Transforms"],this.outputShape=a;const i="nearest"===n?1:2;let o;switch(r){case"constant":default:o=1;break;case"reflect":o=2;break;case"wrap":o=3;break;case"nearest":o=4}this.userCode=`\n            float mapCoord(float outCoord, float len) {\n              float inCoord = outCoord;\n              if(${o} == 2) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    if (inCoord < sz2) {\n                      inCoord = sz2 * float(int(float(-inCoord / sz2))) +\n                      inCoord;\n                    }\n                    inCoord = inCoord < -len ? inCoord + sz2 : -inCoord - 1.0;\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz2 = 2.0 * len;\n                    inCoord -= sz2 * float(int(float(inCoord / sz2)));\n                    if (inCoord >= len) {\n                      inCoord = sz2 - inCoord - 1.0;\n                    }\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 3) {\n                if (inCoord < 0.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord += len * (float(int(float(-inCoord / sz))) + 1.0);\n                  }\n                } else if (inCoord > len - 1.0) {\n                  if (len <= 1.0) {\n                    inCoord = 0.0;\n                  } else {\n                    float sz = len - 1.0;\n                    inCoord -= len * float(int(float(inCoord / sz)));\n                  }\n                }\n                return clamp(inCoord, 0.0, len - 1.0);\n              } else if (${o} == 4) {\n                return clamp(outCoord, 0.0, len - 1.0);\n              } else {\n                return outCoord;\n              }\n            }\n\n            float readWithFillValue(int batch, int coordY, int coordX,\n              int channel) {\n              float outputValue;\n              if (0 <= coordY && coordY < ${e} && 0 <= coordX && coordX < ${t}) {\n                  outputValue = getImage(batch, coordY, coordX, channel);\n              } else {\n                outputValue = float(${s});\n              }\n              return outputValue;\n            }\n\n            void main() {\n              ivec4 coords = getOutputCoords();\n              float outputValue;\n              int batch = coords[0];\n              int x = coords[2];\n              int y = coords[1];\n              int channel = coords[3];\n              float xf = float(x);\n              float yf = float(y);\n              float a1 = getTransforms(batch, 0);\n              float a2 = getTransforms(batch, 1);\n              float a3 = getTransforms(batch, 2);\n              float b1 = getTransforms(batch, 3);\n              float b2 = getTransforms(batch, 4);\n              float b3 = getTransforms(batch, 5);\n              float c1 = getTransforms(batch, 6);\n              float c2 = getTransforms(batch, 7);\n              float projection = c1 * xf + c2 * yf + 1.0;\n              if (projection == 0.0) {\n                outputValue = float(${s});\n              } else {\n                float inX = (a1 * xf + a2 * yf + a3) / projection;\n                float inY = (b1 * xf + b2 * yf + b3) / projection;\n                float mapX = mapCoord(inX, float(${t}));\n                float mapY = mapCoord(inY, float(${e}));\n\n                if (${i} == 1) {\n                  int coordY = int(round(mapY));\n                  int coordX = int(round(mapX));\n                  outputValue = readWithFillValue(batch, coordY, coordX,\n                    channel);\n                } else {\n                  float yFloor = floor(mapY);\n                  float xFloor = floor(mapX);\n                  float yCeil = yFloor + 1.0;\n                  float xCeil = xFloor + 1.0;\n                  float valueYFloor = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yFloor), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yFloor), int(xCeil), channel);\n                  float valueYCeil = (xCeil - mapX) *\n                  readWithFillValue(batch, int(yCeil), int(xFloor), channel) +\n                  (mapX - xFloor) *\n                  readWithFillValue(batch, int(yCeil), int(xCeil), channel);\n                  outputValue = (yCeil - mapY) * valueYFloor +\n                  (mapY - yFloor) * valueYCeil;\n                }\n              }\n              setOutput(outputValue);\n            }\n        `}}const BP={kernelName:Gr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{image:s,transforms:a}=t,{interpolation:i,fillMode:o,fillValue:u,outputShape:l}=r,[c,h,p,d]=s.shape,[f,m]=null!=l?l:[h,p],g=new OP(h,p,i,o,u,[c,f,m,d]);return n.runWebGLProgram(g,[s,a],"float32")}},zP={kernelName:Hr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,attrs:n,backend:r}=e,{axis:s}=n,{x:a}=t;FF(a,"unique"),console.warn("WARNING: ","UI might be locked temporarily as data is being downloaded");const i=r.readSync(a.dataId),{outputValues:o,outputShape:u,indices:l}=t_(i,s,a.shape,a.dtype);return[r.makeTensorInfo(u,a.dtype,o),r.makeTensorInfo([l.length],"int32",l)]}},LP={kernelName:qr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{value:s}=t;let{axis:a}=r;a<0&&(a+=s.shape.length);const i=s,o=i.shape.length,u=s.shape[a],l=new Array(o-1);let c=0;for(let e=0;e<o;e++)e!==a&&(l[c++]=i.shape[e]);const h=[],p=new Array(o).fill(0),d=i.shape.slice();d[a]=1;const f=new Array(u);for(let e=0;e<f.length;e++){p[a]=e;const t=jM({inputs:{x:i},backend:n,attrs:{begin:p,size:d}}),r=L_({inputs:{x:t},backend:n,attrs:{shape:l}});f[e]=r,h.push(t)}return h.forEach((e=>n.disposeIntermediateTensorInfo(e))),f}};class PP{constructor(e,t){this.variableNames=["x","segmentIds"];const n=e.windowSize,r=e.batchSize,s=e.inSize,a=e.numSegments,i=a*Math.ceil(s/n);this.outputShape=[r,i];const o=4*Math.floor(n/4),u=n%4,l="\n        sumValue += dot(values, segFilter);\n    ";let c="";s%n>0&&(c=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return initializationValue;\n        }\n      `);let h="";s%n>0&&(h=`\n        if (inIdx < 0 || inIdx >= ${s}) {\n          return -1.0;\n        }\n      `),this.userCode=`\n      const float initializationValue = 0.0;\n\n      float getValue(int batch, int inIdx) {\n        ${c}\n        return getX(batch, inIdx);\n      }\n\n      float getSegmentIdAtIndex(int inIdx) {\n        ${h}\n        return getSegmentIds(inIdx);\n      }\n\n      void main() {\n        ivec2 coords = getOutputCoords();\n        int batch = coords[0];\n        int outIdx = coords[1];\n        int inOffset = int(floor(float(outIdx) / float(\n          ${a})) * float(${n}));\n        int currentSeg = int(mod(float(outIdx), float(${a})));\n\n        float sumValue = 0.0;\n\n        for (int i = 0; i < ${o}; i += 4) {\n          int inIdx = inOffset + i;\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            getValue(batch, inIdx + 3)\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 3)) == currentSeg ? 1 : 0\n          );\n\n          ${l}\n        }\n\n        int inIdx = inOffset + ${o};\n        if (${1===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            initializationValue,\n            initializationValue,\n            initializationValue\n          );\n\n          int inIdxSeg = int(getSegmentIdAtIndex(inIdx));\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            0,\n            0,\n            0\n          );\n\n          ${l}\n        } else if (${2===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            initializationValue,\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n              0,\n              0\n          );\n\n          ${l}\n        } else if (${3===u}) {\n          vec4 values = vec4(\n            getValue(batch, inIdx),\n            getValue(batch, inIdx + 1),\n            getValue(batch, inIdx + 2),\n            initializationValue\n          );\n\n          vec4 segFilter = vec4(\n            int(getSegmentIdAtIndex(inIdx)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 1)) == currentSeg ? 1 : 0,\n            int(getSegmentIdAtIndex(inIdx + 2)) == currentSeg ? 1 : 0,\n            0\n          );\n\n          ${l}\n        }\n        setOutput(sumValue);\n      }\n    `}}const UP=[J_,eM,nM,sM,oM,cM,hM,pM,bM,xM,vM,NM,CM,EM,TM,FM,RM,OM,BM,zM,UM,qM,KM,XM,eO,rO,iO,I_,lO,yO,NO,SO,TO,AO,$O,FO,_O,OO,zO,WO,VO,jO,KO,ZO,JO,eB,nB,rB,aB,iB,uB,cB,pB,fB,yB,wB,NB,CB,SB,AB,RB,MB,OB,zB,UB,VB,jB,k_,HB,fO,KB,YB,JB,E_,ez,nz,rz,az,oz,lz,hz,dz,gz,bz,wz,kz,Nz,Iz,Ez,Sz,Tz,Az,$z,Rz,Oz,zz,qz,z_,Kz,Yz,Jz,eL,ZM,nL,aL,iL,cL,pL,A_,dL,mL,QM,Uz,yL,xL,vL,P_,IL,DL,TL,$L,_L,OL,zL,PL,WL,GL,HL,KL,YL,JL,eP,HM,Hz,nP,rP,sP,aP,iP,oP,uP,lP,pP,fP,yP,bP,wP,vP,kP,NP,Gz,K_,CP,EP,AP,MP,BP,Y_,zP,LP,{kernelName:Kr,backendName:"webgl",kernelFunc:function(e){const{inputs:t,backend:n,attrs:r}=e,{x:s,segmentIds:a}=t,{numSegments:i}=r,o=s.shape.length,u=[];let l=0;const c=Ac([l],o);let h=s;null!=c&&(h=X_({inputs:{x:s},backend:n,attrs:{perm:c}}),u.push(h),l=Fc(1,o)[0]);const p=Tf(h.shape,l,i),d=oe([h.shape[l]]),f=L_({inputs:{x:h},backend:n,attrs:{shape:[-1,d]}});u.push(f);const m=ra(s.dtype),g=(e,t,r,s,a)=>{const i=e.shape[0],o=e.shape[1],l=Sf(o,a),c=new PP({windowSize:l,inSize:o,batchSize:i,numSegments:a},t),h=n.compileAndRun(c,[e,r],s);if(u.push(h),h.shape[1]===a)return h;const p=fL({backend:n,attrs:{start:0,stop:a,step:1,dtype:"float32"}}),d=TP({inputs:{x:p},backend:n,attrs:{reps:[o/l]}});return u.push(p),u.push(d),g(h,t,d,s,a)},y=L_({inputs:{x:g(f,"unsortedSegmentSum",a,m,i)},backend:n,attrs:{shape:p}});let b=y;if(null!=c){u.push(y);const e=$c(c);b=X_({inputs:{x:b},backend:n,attrs:{perm:e}})}return u.forEach((e=>n.disposeIntermediateTensorInfo(e))),b}},sL];for(const e of UP)ls(e);const WP={"tfjs-core":Po,"tfjs-backend-cpu":"3.13.0","tfjs-backend-webgl":"3.13.0","tfjs-data":ZC,"tfjs-layers":ix,"tfjs-converter":GI,tfjs:"3.13.0"},VP=new j.Vector3,GP=new j.Quaternion,jP=new j.Vector3;class HP extends j.Object3D{constructor(e=document.createElement("div")){super(),this.element=e,this.element.style.position="absolute",this.element.style.pointerEvents="auto",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.addEventListener("removed",(function(){this.traverse((function(e){e.element instanceof Element&&null!==e.element.parentNode&&e.element.parentNode.removeChild(e.element)}))}))}copy(e,t){return super.copy(e,t),this.element=e.element.cloneNode(!0),this}}HP.prototype.isCSS3DObject=!0,class extends HP{constructor(e){super(e),this.rotation2D=0}copy(e,t){return super.copy(e,t),this.rotation2D=e.rotation2D,this}}.prototype.isCSS3DSprite=!0;const qP=new j.Matrix4,KP=new j.Matrix4;class XP{constructor(e={}){const t=this;let n,r,s,a;const i={camera:{fov:0,style:""},objects:new WeakMap},o=void 0!==e.element?e.element:document.createElement("div");o.style.overflow="hidden",this.domElement=o;const u=document.createElement("div");function l(e){return Math.abs(e)<1e-10?0:e}function c(e){const t=e.elements;return"matrix3d("+l(t[0])+","+l(-t[1])+","+l(t[2])+","+l(t[3])+","+l(t[4])+","+l(-t[5])+","+l(t[6])+","+l(t[7])+","+l(t[8])+","+l(-t[9])+","+l(t[10])+","+l(t[11])+","+l(t[12])+","+l(-t[13])+","+l(t[14])+","+l(t[15])+")"}function h(e){const t=e.elements;return"translate(-50%,-50%)matrix3d("+l(t[0])+","+l(t[1])+","+l(t[2])+","+l(t[3])+","+l(-t[4])+","+l(-t[5])+","+l(-t[6])+","+l(-t[7])+","+l(t[8])+","+l(t[9])+","+l(t[10])+","+l(t[11])+","+l(t[12])+","+l(t[13])+","+l(t[14])+","+l(t[15])+")"}function p(e,n,r,s){if(e.isCSS3DObject){let s;e.onBeforeRender(t,n,r),e.isCSS3DSprite?(qP.copy(r.matrixWorldInverse),qP.transpose(),0!==e.rotation2D&&qP.multiply(KP.makeRotationZ(e.rotation2D)),e.matrixWorld.decompose(VP,GP,jP),qP.setPosition(VP),qP.scale(jP),qP.elements[3]=0,qP.elements[7]=0,qP.elements[11]=0,qP.elements[15]=1,s=h(qP)):s=h(e.matrixWorld);const a=e.element,o=i.objects.get(e);if(void 0===o||o.style!==s){a.style.transform=s;const t={style:s};i.objects.set(e,t)}a.style.display=e.visible?"":"none",a.parentNode!==u&&u.appendChild(a),e.onAfterRender(t,n,r)}for(let t=0,a=e.children.length;t<a;t++)p(e.children[t],n,r,s)}u.style.transformStyle="preserve-3d",u.style.pointerEvents="none",o.appendChild(u),this.getSize=function(){return{width:n,height:r}},this.render=function(e,t){const n=t.projectionMatrix.elements[5]*a;let r,h;i.camera.fov!==n&&(o.style.perspective=t.isPerspectiveCamera?n+"px":"",i.camera.fov=n),!0===e.autoUpdate&&e.updateMatrixWorld(),null===t.parent&&t.updateMatrixWorld(),t.isOrthographicCamera&&(r=-(t.right+t.left)/2,h=(t.top+t.bottom)/2);const d=t.isOrthographicCamera?"scale("+n+")translate("+l(r)+"px,"+l(h)+"px)"+c(t.matrixWorldInverse):"translateZ("+n+"px)"+c(t.matrixWorldInverse),f=d+"translate("+s+"px,"+a+"px)";i.camera.style!==f&&(u.style.transform=f,i.camera.style=f),p(e,e,t,d)},this.setSize=function(e,t){n=e,r=t,s=n/2,a=r/2,o.style.width=e+"px",o.style.height=t+"px",u.style.width=e+"px",u.style.height=t+"px"}}}const YP=(e,t,n,r)=>{const{x:s,y:a,z:i}=((e,t,n,r)=>({x:e[0][0]*t+e[0][1]*n+e[0][3],y:e[1][0]*t+e[1][1]*n+e[1][3],z:e[2][0]*t+e[2][1]*n+e[2][3]}))(e,t,n);return{x:s/i,y:a/i}};class ZP{constructor(e,t,n,r,s,a=!1){this.markerDimensions=e,this.trackingDataList=t,this.projectionTransform=n,this.debugMode=a,this.trackingKeyframeList=[];for(let e=0;e<t.length;e++)this.trackingKeyframeList.push(t[e][1]);let i=0;for(let e=0;e<this.trackingKeyframeList.length;e++)i=Math.max(i,this.trackingKeyframeList[e].points.length);this.featurePointsListT=[],this.imagePixelsListT=[],this.imagePropertiesListT=[];for(let e=0;e<this.trackingKeyframeList.length;e++){const{featurePoints:t,imagePixels:n,imageProperties:r}=this._prebuild(this.trackingKeyframeList[e],i);this.featurePointsListT[e]=t,this.imagePixelsListT[e]=n,this.imagePropertiesListT[e]=r}this.kernelCaches={}}dummyRun(e){let t=[[1,1,1,1],[1,1,1,1],[1,1,1,1]];for(let n=0;n<this.featurePointsListT.length;n++)this.track(e,t,n)}track(e,t,n){let r={};const s=(i=t,[[(a=this.projectionTransform)[0][0]*i[0][0]+a[0][2]*i[2][0],a[0][0]*i[0][1]+a[0][2]*i[2][1],a[0][0]*i[0][2]+a[0][2]*i[2][2],a[0][0]*i[0][3]+a[0][2]*i[2][3]],[a[1][1]*i[1][0]+a[1][2]*i[2][0],a[1][1]*i[1][1]+a[1][2]*i[2][1],a[1][1]*i[1][2]+a[1][2]*i[2][2],a[1][1]*i[1][3]+a[1][2]*i[2][3]],[i[2][0],i[2][1],i[2][2],i[2][3]]]);var a,i;const o=this._buildAdjustedModelViewTransform(s),u=(this.markerDimensions[n][0],this.markerDimensions[n][1],this.trackingKeyframeList[n].width,this.trackingKeyframeList[n].height,this.featurePointsListT[n]),l=this.imagePixelsListT[n],c=this.imagePropertiesListT[n],h=this._computeProjection(o,e,n),{matchingPointsT:p,simT:d}=this._computeMatching(u,l,c,h),f=p.arraySync(),m=d.arraySync(),g=this.trackingKeyframeList[n],y=[],b=[],x=[];for(let e=0;e<f.length;e++)if(m[e]>.8&&e<g.points.length){x.push(e);const t=YP(s,f[e][0],f[e][1]);b.push(t),y.push({x:g.points[e].x/g.scale,y:g.points[e].y/g.scale,z:0})}return this.debugMode&&(r={projectedImage:h.arraySync(),matchingPoints:p.arraySync(),goodTrack:x,trackedPoints:b}),o.dispose(),h.dispose(),p.dispose(),d.dispose(),{worldCoords:y,screenCoords:b,debugExtra:r}}_computeMatching(e,t,n,r){const s=r.shape[0],a=r.shape[1],i=e.shape[0];if(!this.kernelCaches.computeMatching){const e={variableNames:["features","markerPixels","markerProperties","targetPixels"],outputShape:[i,441],userCode:`\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    int featureIndex = coords[0];\n\t    int searchOffsetIndex = coords[1];\n\n\t    int markerWidth = int(getMarkerProperties(0));\n\t    int markerHeight = int(getMarkerProperties(1));\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t    int searchOffsetY = searchOffsetIndex / 21 * 1;\n\n\t    int sCenterX = int(getFeatures(featureIndex, 0) * markerScale);\n\t    int sCenterY = int(getFeatures(featureIndex, 1) * markerScale);\n\n\t    int sx = sCenterX + searchOffsetX - 10;\n\t    int sy = sCenterY + searchOffsetY - 10;\n\n\t    if (sx < 6 || sx >= (${a} - 6) || sy < 6 || sy >= (${s} - 6)) {\n\t      setOutput(-2.);\n\t    } \n\t    else {\n\t      float sumPoint = 0.;\n\t      float sumPointSquare = 0.;\n\t      float sumTemplate = 0.;\n\t      float sumTemplateSquare = 0.;\n\t      float sumPointTemplate = 0.;\n\n\t      for (int templateOffsetY = 0; templateOffsetY < 13; templateOffsetY++) {\n\t\tfor (int templateOffsetX = 0; templateOffsetX < 13; templateOffsetX++) {\n\t\t  int fx2 = sCenterX + templateOffsetX - 6;\n\t\t  int fy2 = sCenterY + templateOffsetY - 6;\n\n\t\t  int sx2 = sx + templateOffsetX - 6;\n\t\t  int sy2 = sy + templateOffsetY - 6;\n\n\t\t  int markerPixelIndex = fy2 * markerWidth + fx2;\n\t\t  float markerPixel = getMarkerPixels(markerPixelIndex);\n\t\t  float targetPixel = getTargetPixels(sy2, sx2);\n\n\t\t  sumTemplate += markerPixel;\n\t\t  sumTemplateSquare += markerPixel * markerPixel;\n\t\t  sumPoint += targetPixel;\n\t\t  sumPointSquare += targetPixel * targetPixel;\n\t\t  sumPointTemplate += targetPixel * markerPixel;\n\t\t}\n\t      }\n\n\t      // Normalized cross-correlation\n\t      // !important divide first avoid overflow (e.g. sumPoint / count * sumPoint)\n\t      float count = float(13 * 13);\n\t      float pointVariance = sqrt(sumPointSquare - sumPoint / count * sumPoint);\n\t      float templateVariance = sqrt(sumTemplateSquare - sumTemplate / count * sumTemplate);\n\n\t      if (pointVariance < 0.0000001) {\n\t\tsetOutput(-3.);\n\t      } else if (templateVariance < 0.0000001) {\n\t\t//setOutput(sumTemplate);\n\t\tsetOutput(-4.);\n\t      } else {\n\t\tsumPointTemplate -= sumPoint / count * sumTemplate;\n\t\tfloat sim = sumPointTemplate / pointVariance / templateVariance;  \n\t\tsetOutput(sim);\n\t      }\n\t    }\n\t  }\n\t`},t={variableNames:["featurePoints","markerProperties","maxIndex"],outputShape:[i,2],userCode:"\n\t  void main() {\n\t    ivec2 coords = getOutputCoords();\n\n\t    float markerScale = getMarkerProperties(2);\n\n\t    int featureIndex = coords[0];\n\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    int searchLocationIndex = maxIndex / 441;\n\t    int searchOffsetIndex = imod(maxIndex, 441);\n\n\t    if (coords[1] == 0) {\n\t      int searchOffsetX = imod(searchOffsetIndex, 21) * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 0) + float(searchOffsetX - 10) / markerScale);\n\t    }\n\t    else if (coords[1] == 1) {\n\t      int searchOffsetY = searchOffsetIndex / 21 * 1;\n\t      setOutput(getFeaturePoints(featureIndex, 1) + float(searchOffsetY - 10) / markerScale);\n\t    }\n\t  }\n\t"},n={variableNames:["sims","maxIndex"],outputShape:[i],userCode:"\n\t  void main() {\n\t    int featureIndex = getOutputCoords();\n\t    int maxIndex = int(getMaxIndex(featureIndex));\n\t    setOutput(getSims(featureIndex, maxIndex));\n\t  }\n\t"};this.kernelCaches.computeMatching=[e,t,n]}return Xo((()=>{const s=this.kernelCaches.computeMatching,a=this._compileAndRun(s[0],[e,t,n,r]),i=a.argMax(1);return{matchingPointsT:this._compileAndRun(s[1],[e,n,i]),simT:this._compileAndRun(s[2],[a,i])}}))}_computeProjection(e,t,n){const r=this.trackingKeyframeList[n].width,s=this.trackingKeyframeList[n].height,a=this.trackingKeyframeList[n].scale,i=r+"-"+s+"-"+a;if(this.kernelCaches.computeProjection||(this.kernelCaches.computeProjection={}),!this.kernelCaches.computeProjection[i]){const e={variableNames:["M","pixel"],outputShape:[s,r],userCode:`\n\t  void main() {\n\t      ivec2 coords = getOutputCoords();\n\n\t      float m00 = getM(0, 0) * 1000.;\n\t      float m01 = getM(0, 1) * 1000.;\n\t      float m03 = getM(0, 3) * 1000.;\n\t      float m10 = getM(1, 0) * 1000.;\n\t      float m11 = getM(1, 1) * 1000.;\n\t      float m13 = getM(1, 3) * 1000.;\n\t      float m20 = getM(2, 0) * 1000.;\n\t      float m21 = getM(2, 1) * 1000.;\n\t      float m23 = getM(2, 3) * 1000.;\n\n\t      float y = float(coords[0]) / float(${a});\n\t      float x = float(coords[1]) / float(${a});\n\t      float uz = (x * m20) + (y * m21) + m23;\n\t      float oneOverUz = 1. / uz;\n\n\t      float ux = (x * m00) + (y * m01) + m03;\n\t      float uy = (x * m10) + (y * m11) + m13;\n\n\t      ux = floor(ux * oneOverUz + 0.5);\n\t      uy = floor(uy * oneOverUz + 0.5);\n\t      setOutput(getPixel(int(uy), int(ux)));\n\t    }\n\t`};this.kernelCaches.computeProjection[i]=e}return Xo((()=>{const n=this.kernelCaches.computeProjection[i];return this._compileAndRun(n,[e,t])}))}_buildAdjustedModelViewTransform(e){return Xo((()=>{let t=[];for(let n=0;n<e.length;n++){t.push([]);for(let r=0;r<e[n].length;r++)t[n].push(e[n][r]/1e3)}return Ta(t,[3,4])}))}_prebuild(e,t){return Xo((()=>{const n=e.scale,r=[];for(let s=0;s<t;s++)s<e.points.length?r.push([e.points[s].x/n,e.points[s].y/n]):r.push([-1,-1]);const s=Ta(e.data,[e.width*e.height]),a=Ta([e.width,e.height,e.scale],[3]);return{featurePoints:Ta(r,[r.length,2],"float32"),imagePixels:s,imageProperties:a}}))}_compileAndRun(e,t){const n=iu().compileAndRun(e,t);return Ho().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}}const JP=[{sigma:.55,points:[[-1,0],[-.5,-.866025],[.5,-.866025],[1,-0],[.5,.866025],[-.5,.866025]]},{sigma:.475,points:[[0,.930969],[-.806243,.465485],[-.806243,-.465485],[-0,-.930969],[.806243,-.465485],[.806243,.465485]]},{sigma:.4,points:[[.847306,-0],[.423653,.733789],[-.423653,.733789],[-.847306,0],[-.423653,-.733789],[.423653,-.733789]]},{sigma:.325,points:[[-0,-.741094],[.641806,-.370547],[.641806,.370547],[0,.741094],[-.641806,.370547],[-.641806,-.370547]]},{sigma:.25,points:[[-.595502,0],[-.297751,-.51572],[.297751,-.51572],[.595502,-0],[.297751,.51572],[-.297751,.51572]]},{sigma:.175,points:[[0,.362783],[-.314179,.181391],[-.314179,-.181391],[-0,-.362783],[.314179,-.181391],[.314179,.181391]]},{sigma:.1,points:[[0,0]]}],QP=[];for(let e=0;e<JP.length;e++){const t=JP[e].sigma;for(let n=0;n<JP[e].points.length;n++){const r=JP[e].points[n];QP.push([t,r[0],r[1]])}}const eU={},tU={kernelName:"BinomialFilter",backendName:"webgl",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,[r,s]=function(e){const t=e.shape[1],n="w"+t;if(!eU.hasOwnProperty(n)){const r=e.shape[0],s={variableNames:["p"],outputShape:[r,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0], coords[1]-2);\n          sum += getP(coords[0], coords[1]-1) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0], coords[1]+1) * 4.;\n          sum += getP(coords[0], coords[1]+2);\n          setOutput(sum);\n        }\n      "},a={variableNames:["p"],outputShape:[r,t],userCode:"\n        void main() {\n          ivec2 coords = getOutputCoords();\n\n          float sum = getP(coords[0]-2, coords[1]);\n          sum += getP(coords[0]-1, coords[1]) * 4.;\n          sum += getP(coords[0], coords[1]) * 6.;\n          sum += getP(coords[0]+1, coords[1]) * 4.;\n          sum += getP(coords[0]+2, coords[1]);\n          sum /= 256.;\n          setOutput(sum);\n        }\n      "};eU[n]=[s,a]}return eU[n]}(t),a=n.runWebGLProgram(r,[t],t.dtype);return n.runWebGLProgram(s,[a],t.dtype)}},nU={},rU={kernelName:"BuildExtremas",backendName:"webgl",kernelFunc:e=>{let{image0:t,image1:n,image2:r}=e.inputs;const s=e.backend,a=function(e){const t=e.shape[1],n="w"+t;if(!nU.hasOwnProperty(n)){const r=e.shape[0],s={variableNames:["image0","image1","image2"],outputShape:[r,t],userCode:`\n        void main() {\n          ivec2 coords = getOutputCoords();\n    \n          int y = coords[0];\n          int x = coords[1];\n    \n          float value = getImage1(y, x);\n    \n          // Step 1: find local maxima/minima\n          if (value * value < 9.) {\n            setOutput(0.);\n            return;\n          }\n          if (y < 7 || y > ${r-1-7}) {\n            setOutput(0.);\n            return;\n          }\n          if (x < 7 || x > ${t-1-7}) {\n            setOutput(0.);\n            return;\n          }\n    \n          bool isMax = true;\n          bool isMin = true;\n          for (int dy = -1; dy <= 1; dy++) {\n            for (int dx = -1; dx <= 1; dx++) {\n              float value0 = getImage0(y+dy, x+dx);\n              float value1 = getImage1(y+dy, x+dx);\n              float value2 = getImage2(y+dy, x+dx);\n    \n        if (value < value0 || value < value1 || value < value2) {\n          isMax = false;\n        }\n        if (value > value0 || value > value1 || value > value2) {\n          isMin = false;\n        }\n            }\n          }\n    \n          if (!isMax && !isMin) {\n            setOutput(0.);\n            return;\n          }\n    \n          // compute edge score and reject based on threshold\n          float dxx = getImage1(y, x+1) + getImage1(y, x-1) - 2. * getImage1(y, x);\n          float dyy = getImage1(y+1, x) + getImage1(y-1, x) - 2. * getImage1(y, x);\n          float dxy = 0.25 * (getImage1(y-1,x-1) + getImage1(y+1,x+1) - getImage1(y-1,x+1) - getImage1(y+1,x-1));\n    \n          float det = (dxx * dyy) - (dxy * dxy);\n    \n          if (abs(det) < 0.0001) { // determinant undefined. no solution\n            setOutput(0.);\n            return;\n          }\n    \n          float edgeScore = (dxx + dyy) * (dxx + dyy) / det;\n    \n          if (abs(edgeScore) >= 6.25 ) {\n            setOutput(0.);\n            return;\n          }\n          setOutput(getImage1(y,x));\n        }\n      `};nU[n]=s}return nU[n]}(n);return t=Ho().runKernel("DownsampleBilinear",{image:t}),r=Ho().runKernel("UpsampleBilinear",{image:r,targetImage:n}),s.runWebGLProgram(a,[t,n,r],n.dtype)}},sU={},aU={kernelName:"ComputeExtremaAngles",backendName:"webgl",kernelFunc:e=>{const{histograms:t}=e.inputs,n=e.backend,r=function(e){const t=e.shape[0];if(!sU.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0]],userCode:`\n            void main() {\n                int featureIndex = getOutputCoords();\n\n                int maxIndex = 0;\n                for (int i = 1; i < 36; i++) {\n                    if (getHistogram(featureIndex, i) > getHistogram(featureIndex, maxIndex)) {\n                        maxIndex = i;\n                    }\n                }\n\n                int prev = imod(maxIndex - 1 + 36, 36);\n                int next = imod(maxIndex + 1, 36);\n\n                /**\n                 * Fit a quatratic to 3 points. The system of equations is:\n                 *\n                 * y0 = A*x0^2 + B*x0 + C\n                 * y1 = A*x1^2 + B*x1 + C\n                 * y2 = A*x2^2 + B*x2 + C\n                 *\n                 * This system of equations is solved for A,B,C.\n                 */\n                float p10 = float(maxIndex - 1);\n                float p11 = getHistogram(featureIndex, prev); \n                float p20 = float(maxIndex);\n                float p21 = getHistogram(featureIndex, maxIndex); \n                float p30 = float(maxIndex + 1);\n                float p31 = getHistogram(featureIndex, next); \n\n                float d1 = (p30-p20)*(p30-p10);\n                float d2 = (p10-p20)*(p30-p10);\n                float d3 = p10-p20;\n\n                // If any of the denominators are zero then, just use maxIndex.\n                    float fbin = float(maxIndex);\n                if ( abs(d1) > 0.00001 && abs(d2) > 0.00001 && abs(d3) > 0.00001) {\n                float a = p10*p10;\n                float b = p20*p20;\n\n                // Solve for the coefficients A,B,C\n                float A = ((p31-p21)/d1)-((p11-p21)/d2);\n                float B = ((p11-p21)+(A*(b-a)))/d3;\n                float C = p11-(A*a)-(B*p10);\n                fbin = -B / (2. * A);\n                }\n\n                float an = 2.0 *${Math.PI} * (fbin + 0.5) / 36. - ${Math.PI};\n                setOutput(an);\n            }\n            `};sU[t]=n}return sU[t]}(t);return n.runWebGLProgram(r,[t],t.dtype)}},iU={},oU={kernelName:"ComputeExtremaFreak",backendName:"webgl",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremas:n,prunedExtremasAngles:r,freakPointsT:s,pyramidImagesLength:a}=e.inputs,i=e.backend,o=function(e,t){const n=`${e}|${t.shape[0]}`;if(!iU.hasOwnProperty(n)){const r=[];for(let t=1;t<e;t++)r.push("image"+t);let s="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)s+=`\n  if (octave == ${t}) {\n\treturn getImage${t}(y, x);\n  }\n`;s+="}";const a={variableNames:[...r,"extrema","angles","freakPoints"],outputShape:[t.shape[0],QP.length],userCode:`\n  ${s}\n  void main() {\n\tivec2 coords = getOutputCoords();\n\tint featureIndex = coords[0];\n\tint freakIndex = coords[1];\n\n\tfloat freakSigma = getFreakPoints(freakIndex, 0);\n\tfloat freakX = getFreakPoints(freakIndex, 1);\n\tfloat freakY = getFreakPoints(freakIndex, 2);\n\n\tint octave = int(getExtrema(featureIndex, 1));\n\tfloat inputY = getExtrema(featureIndex, 2);\n\tfloat inputX = getExtrema(featureIndex, 3);\n\tfloat inputAngle = getAngles(featureIndex);\n\tfloat cos = 7. * cos(inputAngle);\n\tfloat sin = 7. * sin(inputAngle);\n\n\tfloat yp = inputY + freakX * sin + freakY * cos;\n\tfloat xp = inputX + freakX * cos + freakY * -sin;\n\n\tint x0 = int(floor(xp));\n\tint x1 = x0 + 1;\n\tint y0 = int(floor(yp));\n\tint y1 = y0 + 1;\n\n\tfloat f1 = getPixel(octave, y0, x0);\n\tfloat f2 = getPixel(octave, y0, x1);\n\tfloat f3 = getPixel(octave, y1, x0);\n\tfloat f4 = getPixel(octave, y1, x1);\n\n\tfloat x1f = float(x1);\n\tfloat y1f = float(y1);\n\tfloat x0f = float(x0);\n\tfloat y0f = float(y0);\n\n\t// ratio for interpolation between four neighbouring points\n\tfloat value = (x1f - xp) * (y1f - yp) * f1\n\t\t+ (xp - x0f) * (y1f - yp) * f2\n\t\t+ (x1f - xp) * (yp - y0f) * f3\n\t\t+ (xp - x0f) * (yp - y0f) * f4;\n\n\tsetOutput(value);\n  }\n`};iU[n]=a}return iU[n]}(a,n);return i.runWebGLProgram(o,[...t,n,r,s],"float32")}},uU=(QP.length-1)*QP.length/2,lU=Math.ceil(uU/8),cU={},hU={kernelName:"ComputeFreakDescriptors",backendName:"webgl",kernelFunc:e=>{const{extremaFreaks:t,positionT:n}=e.inputs,{backend:r}=e,s=function(e){const t=`${e.shape[0]}`;if(!cU.hasOwnProperty(t)){const n={variableNames:["freak","p"],outputShape:[e.shape[0],lU],userCode:`\n  void main() {\n    ivec2 coords = getOutputCoords();\n    int featureIndex = coords[0];\n    int descIndex = coords[1] * 8;\n\n    int sum = 0;\n    for (int i = 0; i < 8; i++) {\n      if (descIndex + i >= ${uU}) {\n        continue;\n      }\n\n      int p1 = int(getP(descIndex + i, 0));\n      int p2 = int(getP(descIndex + i, 1));\n\n      float v1 = getFreak(featureIndex, p1);\n      float v2 = getFreak(featureIndex, p2);\n\n      if (v1 < v2 + 0.01) {\n        sum += int(pow(2.0, float(7 - i)));\n      }\n    }\n    setOutput(float(sum));\n  }\n`};cU[t]=n}return cU[t]}(t);return r.runWebGLProgram(s,[t,n],"int32")}},pU={},dU={kernelName:"ComputeLocalization",backendName:"webgl",kernelFunc:e=>{const{prunedExtremasList:t,dogPyramidImagesT:n}=e.inputs,r=e.backend,s=function(e,t){const n=`${e}|${t}`;if(!pU.hasOwnProperty(n)){const r=[];let s="float getPixel(int octave, int y, int x) {";for(let t=1;t<e;t++)r.push("image"+t),s+=`\n\t\t\t\tif (octave == ${t}) {\n\t\t\t\t\treturn getImage${t}(y, x);\n\t\t\t\t}\n\t\t\t`;s+="}",pU[n]={variableNames:[...r,"extrema"],outputShape:[t,3,3],userCode:`\n\t\t\t${s}\n\t\t\n\t\t\tvoid main() {\n\t\t\t\tivec3 coords = getOutputCoords();\n\t\t\t\tint featureIndex = coords[0];\n\t\t\t\tfloat score = getExtrema(featureIndex, 0);\n\t\t\t\tif (score == 0.0) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\n\t\t\t\tint dy = coords[1]-1;\n\t\t\t\tint dx = coords[2]-1;\n\t\t\t\tint octave = int(getExtrema(featureIndex, 1));\n\t\t\t\tint y = int(getExtrema(featureIndex, 2));\n\t\t\t\tint x = int(getExtrema(featureIndex, 3));\n\t\t\t\tsetOutput(getPixel(octave, y+dy, x+dx));\n\t\t\t}\n\t\t\t`}}return pU[n]}(n.length,t.length),a=tf.tensor(t,[t.length,t[0].length],"int32");return r.runWebGLProgram(s,[...n.slice(1),a],n[0].dtype)}},fU={},mU={kernelName:"ComputeOrientationHistograms",backendName:"webgl",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremasT:n,radialPropertiesT:r,pyramidImagesLength:s}=e.inputs,a=e.backend,[i,o]=function(e,t,n){const r=`${n}|${e.shape[0]}|${t.shape[0]}`;if(!fU.hasOwnProperty(r)){const s=[];for(let e=1;e<n;e++)s.push("image"+e);let a="float getPixel(int octave, int y, int x) {";for(let e=1;e<n;e++)a+=`\n            if (octave == ${e}) {\n                return getImage${e}(y, x);\n            }\n            `;a+="}";const i={variableNames:[...s,"extrema","radial"],outputShape:[e.shape[0],t.shape[0],2],userCode:`\n                ${a}\n\n                void main() {\n                    ivec3 coords = getOutputCoords();\n                    int featureIndex = coords[0];\n                    int radialIndex = coords[1];\n                    int propertyIndex = coords[2];\n\n                    int radialY = int(getRadial(radialIndex, 0));\n                    int radialX = int(getRadial(radialIndex, 1));\n                    float radialW = getRadial(radialIndex, 2);\n\n                    int octave = int(getExtrema(featureIndex, 1));\n                    int y = int(getExtrema(featureIndex, 2));\n                    int x = int(getExtrema(featureIndex, 3));\n\n                    int xp = x + radialX;\n                    int yp = y + radialY;\n\n                    float dy = getPixel(octave, yp+1, xp) - getPixel(octave, yp-1, xp);\n                    float dx = getPixel(octave, yp, xp+1) - getPixel(octave, yp, xp-1);\n\n                    if (propertyIndex == 0) {\n                    // be careful that atan(0, 0) gives 1.57 instead of 0 (different from js), but doesn't matter here, coz magnitude is 0\n                    \n                    float angle = atan(dy, dx) + ${Math.PI};\n                    float fbin = angle * 36. * 0.159154943091895;\n                    setOutput(fbin);\n                    return;\n                    }\n\n                    if (propertyIndex == 1) {\n                        float mag = sqrt(dx * dx + dy * dy);\n                        float magnitude = radialW * mag;\n                        setOutput(magnitude);\n                        return;\n                    }\n                }\n\n                `},o={variableNames:["fbinMag"],outputShape:[e.shape[0],36],userCode:`\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                float sum = 0.;\n                for (int i = 0; i < ${t.shape[0]}; i++) {\n                    float fbin = getFbinMag(featureIndex, i, 0);\n                    int bin = int(floor(fbin - 0.5));\n                    int b1 = imod(bin + 36, 36);\n                    int b2 = imod(bin + 1 + 36, 36);\n\n                    if (b1 == binIndex || b2 == binIndex) {\n                        float magnitude = getFbinMag(featureIndex, i, 1);\n                        float w2 = fbin - float(bin) - 0.5;\n                        float w1 = w2 * -1. + 1.;\n\n                        if (b1 == binIndex) {\n                            sum += w1 * magnitude;\n                        }\n                        if (b2 == binIndex) {\n                            sum += w2 * magnitude;\n                        }\n                    }\n                }\n                setOutput(sum);\n            }\n            `};fU[r]=[i,o]}return fU[r]}(n,r,s),u=a.runWebGLProgram(i,[...t,n,r],r.dtype);return a.runWebGLProgram(o,[u],r.dtype)}},gU={},yU={kernelName:"DownsampleBilinear",backendName:"webgl",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,r=function(e){const t=e.shape[0],n=e.shape[1],r="w"+n;if(!gU.hasOwnProperty(r)){const e={variableNames:["p"],outputShape:[Math.floor(t/2),Math.floor(n/2)],userCode:"\n            void main() {\n                ivec2 coords = getOutputCoords();\n                int y = coords[0] * 2;\n                int x = coords[1] * 2;\n        \n                float sum = getP(y, x) * 0.25;\n                sum += getP(y+1,x) * 0.25; \n                sum += getP(y, x+1) * 0.25; \n                sum += getP(y+1,x+1) * 0.25;\n                setOutput(sum);\n            }\n            "};gU[r]=e}return gU[r]}(t);return n.runWebGLProgram(r,[t],t.dtype)}},bU={kernelName:"ExtremaReduction",backendName:"webgl",kernelFunc:e=>{const{extremasResultT:t}=e.inputs,n=e.backend,r=t.shape[0],s=t.shape[1],a={variableNames:["extrema"],outputShape:[Math.floor(r/2),Math.floor(s/2)],userCode:"\n\t\t  void main() {\n\t\t\tivec2 coords = getOutputCoords();\n\t\t\tint y = coords[0] * 2;\n\t\t\tint x = coords[1] * 2;\n  \n\t\t\tfloat location = 0.0;\n\t\t\tfloat values = getExtrema(y, x);\n  \n\t\t\tif (getExtrema(y+1, x) != 0.0) {\n\t\t\t  location = 1.0;\n\t\t  values = getExtrema(y+1, x);\n\t\t\t}\n\t\t\telse if (getExtrema(y, x+1) != 0.0) {\n\t\t\t  location = 2.0;\n\t\t  values = getExtrema(y, x+1);\n\t\t\t}\n\t\t\telse if (getExtrema(y+1, x+1) != 0.0) {\n\t\t\t  location = 3.0;\n\t\t  values = getExtrema(y+1, x+1);\n\t\t\t}\n  \n\t\t\tif (values < 0.0) {\n\t\t\t  setOutput(location * -1000.0 + values);\n\t\t\t} else {\n\t\t\t  setOutput(location * 1000.0 + values);\n\t\t\t}\n\t\t  }\n\t\t"};return n.runWebGLProgram(a,[t],t.dtype)}},xU={},wU={kernelName:"SmoothHistograms",backendName:"webgl",kernelFunc:e=>{let{histograms:t}=e.inputs;const n=e.backend,r=function(e){const t=`h${e.shape[0]}`;if(!xU.hasOwnProperty(t)){const n={variableNames:["histogram"],outputShape:[e.shape[0],36],userCode:"\n            void main() {\n                ivec2 coords = getOutputCoords();\n\n                int featureIndex = coords[0];\n                int binIndex = coords[1];\n\n                int prevBin = imod(binIndex - 1 + 36, 36);\n                int nextBin = imod(binIndex + 1, 36);\n                float result = 0.274068619061197 * getHistogram(featureIndex, prevBin) + 0.451862761877606 * getHistogram(featureIndex, binIndex) + 0.274068619061197 * getHistogram(featureIndex, nextBin);\n\n                setOutput(result);\n            }\n            "};xU[t]=n}return xU[t]}(t);for(let e=0;e<5;e++)t=n.runWebGLProgram(r,[t],t.dtype);return t}},vU={},kU={kernelName:"UpsampleBilinear",backendName:"webgl",kernelFunc:e=>{const{image:t,targetImage:n}=e.inputs,r=e.backend,s=function(e,t){const n="w"+e.shape[1];if(!vU.hasOwnProperty(n)){const e={variableNames:["p"],outputShape:[t.shape[0],t.shape[1]],userCode:"\n              void main() {\n                ivec2 coords = getOutputCoords();\n                int j = coords[0];\n                int i = coords[1];\n        \n                float sj = 0.5 * float(j) - 0.25; \n                float si = 0.5 * float(i) - 0.25;\n        \n                float sj0 = floor(sj);\n                float sj1 = ceil(sj);\n                float si0 = floor(si);\n                float si1 = ceil(si);\n        \n                int sj0I = int(sj0);\n                int sj1I = int(sj1);\n                int si0I = int(si0);\n                int si1I = int(si1);\n        \n                float sum = 0.0;\n                sum += getP(sj0I, si0I) * (si1 - si) * (sj1 - sj);\n                sum += getP(sj1I, si0I) * (si1 - si) * (sj - sj0);\n                sum += getP(sj0I, si1I) * (si - si0) * (sj1 - sj);\n                sum += getP(sj1I, si1I) * (si - si0) * (sj - sj0);\n                setOutput(sum);\n              }\n            "};vU[n]=e}return vU[n]}(t,n);return r.runWebGLProgram(s,[t],t.dtype)}};function NU(){return NU=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},NU.apply(this,arguments)}var IU={epsilon:1e-12,matrix:"Matrix",number:"number",precision:64,predictable:!1,randomSeed:null},CU=function(e){if(e)throw new Error("The global config is readonly. \nPlease create a mathjs instance if you want to change the default configuration. \nExample:\n\n  import { create, all } from 'mathjs';\n  const mathjs = create(all);\n  mathjs.config({ number: 'BigNumber' });\n");return Object.freeze(IU)};NU(CU,IU,{MATRIX_OPTIONS:["Matrix","Array"],NUMBER_OPTIONS:["number","BigNumber","Fraction"]});var DU,EU,SU=9e15,TU=1e9,AU="0123456789abcdef",$U="2.3025850929940456840179914546843642076011014886287729760333279009675726096773524802359972050895982983419677840422862486334095254650828067566662873690987816894829072083255546808437998948262331985283935053089653777326288461633662222876982198867465436674744042432743651550489343149393914796194044002221051017141748003688084012647080685567743216228355220114804663715659121373450747856947683463616792101806445070648000277502684916746550586856935673420670581136429224554405758925724208241314695689016758940256776311356919292033376587141660230105703089634572075440370847469940168269282808481184289314848524948644871927809676271275775397027668605952496716674183485704422507197965004714951050492214776567636938662976979522110718264549734772662425709429322582798502585509785265383207606726317164309505995087807523710333101197857547331541421808427543863591778117054309827482385045648019095610299291824318237525357709750539565187697510374970888692180205189339507238539205144634197265287286965110862571492198849978748873771345686209167058",FU="3.1415926535897932384626433832795028841971693993751058209749445923078164062862089986280348253421170679821480865132823066470938446095505822317253594081284811174502841027019385211055596446229489549303819644288109756659334461284756482337867831652712019091456485669234603486104543266482133936072602491412737245870066063155881748815209209628292540917153643678925903600113305305488204665213841469519415116094330572703657595919530921861173819326117931051185480744623799627495673518857527248912279381830119491298336733624406566430860213949463952247371907021798609437027705392171762931767523846748184676694051320005681271452635608277857713427577896091736371787214684409012249534301465495853710507922796892589235420199561121290219608640344181598136297747713099605187072113499999983729780499510597317328160963185950244594553469083026425223082533446850352619311881710100031378387528865875332083814206171776691473035982534904287554687311595628638823537875937519577818577805321712268066130019278766111959092164201989380952572010654858632789",RU={precision:20,rounding:4,modulo:1,toExpNeg:-7,toExpPos:21,minE:-SU,maxE:SU,crypto:!1},_U=!0,MU="[DecimalError] ",OU=MU+"Invalid argument: ",BU=MU+"Precision limit exceeded",zU=MU+"crypto unavailable",LU="[object Decimal]",PU=Math.floor,UU=Math.pow,WU=/^0b([01]+(\.[01]*)?|\.[01]+)(p[+-]?\d+)?$/i,VU=/^0x([0-9a-f]+(\.[0-9a-f]*)?|\.[0-9a-f]+)(p[+-]?\d+)?$/i,GU=/^0o([0-7]+(\.[0-7]*)?|\.[0-7]+)(p[+-]?\d+)?$/i,jU=/^(\d+(\.\d*)?|\.\d+)(e[+-]?\d+)?$/i,HU=1e7,qU=$U.length-1,KU=FU.length-1,XU={toStringTag:LU};function YU(e){var t,n,r,s=e.length-1,a="",i=e[0];if(s>0){for(a+=i,t=1;t<s;t++)(n=7-(r=e[t]+"").length)&&(a+=oW(n)),a+=r;(n=7-(r=(i=e[t])+"").length)&&(a+=oW(n))}else if(0===i)return"0";for(;i%10==0;)i/=10;return a+i}function ZU(e,t,n){if(e!==~~e||e<t||e>n)throw Error(OU+e)}function JU(e,t,n,r){var s,a,i,o;for(a=e[0];a>=10;a/=10)--t;return--t<0?(t+=7,s=0):(s=Math.ceil((t+1)/7),t%=7),a=UU(10,7-t),o=e[s]%a|0,null==r?t<3?(0==t?o=o/100|0:1==t&&(o=o/10|0),i=n<4&&99999==o||n>3&&49999==o||5e4==o||0==o):i=(n<4&&o+1==a||n>3&&o+1==a/2)&&(e[s+1]/a/100|0)==UU(10,t-2)-1||(o==a/2||0==o)&&0==(e[s+1]/a/100|0):t<4?(0==t?o=o/1e3|0:1==t?o=o/100|0:2==t&&(o=o/10|0),i=(r||n<4)&&9999==o||!r&&n>3&&4999==o):i=((r||n<4)&&o+1==a||!r&&n>3&&o+1==a/2)&&(e[s+1]/a/1e3|0)==UU(10,t-3)-1,i}function QU(e,t,n){for(var r,s,a=[0],i=0,o=e.length;i<o;){for(s=a.length;s--;)a[s]*=t;for(a[0]+=AU.indexOf(e.charAt(i++)),r=0;r<a.length;r++)a[r]>n-1&&(void 0===a[r+1]&&(a[r+1]=0),a[r+1]+=a[r]/n|0,a[r]%=n)}return a.reverse()}XU.absoluteValue=XU.abs=function(){var e=new this.constructor(this);return e.s<0&&(e.s=1),tW(e)},XU.ceil=function(){return tW(new this.constructor(this),this.e+1,2)},XU.clampedTo=XU.clamp=function(e,t){var n=this,r=n.constructor;if(e=new r(e),t=new r(t),!e.s||!t.s)return new r(NaN);if(e.gt(t))throw Error(OU+t);return n.cmp(e)<0?e:n.cmp(t)>0?t:new r(n)},XU.comparedTo=XU.cmp=function(e){var t,n,r,s,a=this,i=a.d,o=(e=new a.constructor(e)).d,u=a.s,l=e.s;if(!i||!o)return u&&l?u!==l?u:i===o?0:!i^u<0?1:-1:NaN;if(!i[0]||!o[0])return i[0]?u:o[0]?-l:0;if(u!==l)return u;if(a.e!==e.e)return a.e>e.e^u<0?1:-1;for(t=0,n=(r=i.length)<(s=o.length)?r:s;t<n;++t)if(i[t]!==o[t])return i[t]>o[t]^u<0?1:-1;return r===s?0:r>s^u<0?1:-1},XU.cosine=XU.cos=function(){var e,t,n=this,r=n.constructor;return n.d?n.d[0]?(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r,s;if(t.isZero())return t;(r=t.d.length)<32?s=(1/yW(4,n=Math.ceil(r/3))).toString():(n=16,s="2.3283064365386962890625e-10"),e.precision+=n,t=gW(e,1,t.times(s),new e(1));for(var a=n;a--;){var i=t.times(t);t=i.times(i).minus(i).times(8).plus(1)}return e.precision-=n,t}(r,bW(r,n)),r.precision=e,r.rounding=t,tW(2==EU||3==EU?n.neg():n,e,t,!0)):new r(1):new r(NaN)},XU.cubeRoot=XU.cbrt=function(){var e,t,n,r,s,a,i,o,u,l,c=this,h=c.constructor;if(!c.isFinite()||c.isZero())return new h(c);for(_U=!1,(a=c.s*UU(c.s*c,1/3))&&Math.abs(a)!=1/0?r=new h(a.toString()):(n=YU(c.d),(a=((e=c.e)-n.length+1)%3)&&(n+=1==a||-2==a?"0":"00"),a=UU(n,1/3),e=PU((e+1)/3)-(e%3==(e<0?-1:2)),(r=new h(n=a==1/0?"5e"+e:(n=a.toExponential()).slice(0,n.indexOf("e")+1)+e)).s=c.s),i=(e=h.precision)+3;;)if(l=(u=(o=r).times(o).times(o)).plus(c),r=eW(l.plus(c).times(o),l.plus(u),i+2,1),YU(o.d).slice(0,i)===(n=YU(r.d)).slice(0,i)){if("9999"!=(n=n.slice(i-3,i+1))&&(s||"4999"!=n)){+n&&(+n.slice(1)||"5"!=n.charAt(0))||(tW(r,e+1,1),t=!r.times(r).times(r).eq(c));break}if(!s&&(tW(o,e+1,0),o.times(o).times(o).eq(c))){r=o;break}i+=4,s=1}return _U=!0,tW(r,e,h.rounding,t)},XU.decimalPlaces=XU.dp=function(){var e,t=this.d,n=NaN;if(t){if(n=7*((e=t.length-1)-PU(this.e/7)),e=t[e])for(;e%10==0;e/=10)n--;n<0&&(n=0)}return n},XU.dividedBy=XU.div=function(e){return eW(this,new this.constructor(e))},XU.dividedToIntegerBy=XU.divToInt=function(e){var t=this.constructor;return tW(eW(this,new t(e),0,1,1),t.precision,t.rounding)},XU.equals=XU.eq=function(e){return 0===this.cmp(e)},XU.floor=function(){return tW(new this.constructor(this),this.e+1,3)},XU.greaterThan=XU.gt=function(e){return this.cmp(e)>0},XU.greaterThanOrEqualTo=XU.gte=function(e){var t=this.cmp(e);return 1==t||0===t},XU.hyperbolicCosine=XU.cosh=function(){var e,t,n,r,s,a=this,i=a.constructor,o=new i(1);if(!a.isFinite())return new i(a.s?1/0:NaN);if(a.isZero())return o;n=i.precision,r=i.rounding,i.precision=n+Math.max(a.e,a.sd())+4,i.rounding=1,(s=a.d.length)<32?t=(1/yW(4,e=Math.ceil(s/3))).toString():(e=16,t="2.3283064365386962890625e-10"),a=gW(i,1,a.times(t),new i(1),!0);for(var u,l=e,c=new i(8);l--;)u=a.times(a),a=o.minus(u.times(c.minus(u.times(c))));return tW(a,i.precision=n,i.rounding=r,!0)},XU.hyperbolicSine=XU.sinh=function(){var e,t,n,r,s=this,a=s.constructor;if(!s.isFinite()||s.isZero())return new a(s);if(t=a.precision,n=a.rounding,a.precision=t+Math.max(s.e,s.sd())+4,a.rounding=1,(r=s.d.length)<3)s=gW(a,2,s,s,!0);else{e=(e=1.4*Math.sqrt(r))>16?16:0|e,s=gW(a,2,s=s.times(1/yW(5,e)),s,!0);for(var i,o=new a(5),u=new a(16),l=new a(20);e--;)i=s.times(s),s=s.times(o.plus(i.times(u.times(i).plus(l))))}return a.precision=t,a.rounding=n,tW(s,t,n,!0)},XU.hyperbolicTangent=XU.tanh=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+7,r.rounding=1,eW(n.sinh(),n.cosh(),r.precision=e,r.rounding=t)):new r(n.s)},XU.inverseCosine=XU.acos=function(){var e,t=this,n=t.constructor,r=t.abs().cmp(1),s=n.precision,a=n.rounding;return-1!==r?0===r?t.isNeg()?aW(n,s,a):new n(0):new n(NaN):t.isZero()?aW(n,s+4,a).times(.5):(n.precision=s+6,n.rounding=1,t=t.asin(),e=aW(n,s+4,a).times(.5),n.precision=s,n.rounding=a,e.minus(t))},XU.inverseHyperbolicCosine=XU.acosh=function(){var e,t,n=this,r=n.constructor;return n.lte(1)?new r(n.eq(1)?0:NaN):n.isFinite()?(e=r.precision,t=r.rounding,r.precision=e+Math.max(Math.abs(n.e),n.sd())+4,r.rounding=1,_U=!1,n=n.times(n).minus(1).sqrt().plus(n),_U=!0,r.precision=e,r.rounding=t,n.ln()):new r(n)},XU.inverseHyperbolicSine=XU.asinh=function(){var e,t,n=this,r=n.constructor;return!n.isFinite()||n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+2*Math.max(Math.abs(n.e),n.sd())+6,r.rounding=1,_U=!1,n=n.times(n).plus(1).sqrt().plus(n),_U=!0,r.precision=e,r.rounding=t,n.ln())},XU.inverseHyperbolicTangent=XU.atanh=function(){var e,t,n,r,s=this,a=s.constructor;return s.isFinite()?s.e>=0?new a(s.abs().eq(1)?s.s/0:s.isZero()?s:NaN):(e=a.precision,t=a.rounding,r=s.sd(),Math.max(r,e)<2*-s.e-1?tW(new a(s),e,t,!0):(a.precision=n=r-s.e,s=eW(s.plus(1),new a(1).minus(s),n+e,1),a.precision=e+4,a.rounding=1,s=s.ln(),a.precision=e,a.rounding=t,s.times(.5))):new a(NaN)},XU.inverseSine=XU.asin=function(){var e,t,n,r,s=this,a=s.constructor;return s.isZero()?new a(s):(t=s.abs().cmp(1),n=a.precision,r=a.rounding,-1!==t?0===t?((e=aW(a,n+4,r).times(.5)).s=s.s,e):new a(NaN):(a.precision=n+6,a.rounding=1,s=s.div(new a(1).minus(s.times(s)).sqrt().plus(1)).atan(),a.precision=n,a.rounding=r,s.times(2)))},XU.inverseTangent=XU.atan=function(){var e,t,n,r,s,a,i,o,u,l=this,c=l.constructor,h=c.precision,p=c.rounding;if(l.isFinite()){if(l.isZero())return new c(l);if(l.abs().eq(1)&&h+4<=KU)return(i=aW(c,h+4,p).times(.25)).s=l.s,i}else{if(!l.s)return new c(NaN);if(h+4<=KU)return(i=aW(c,h+4,p).times(.5)).s=l.s,i}for(c.precision=o=h+10,c.rounding=1,e=n=Math.min(28,o/7+2|0);e;--e)l=l.div(l.times(l).plus(1).sqrt().plus(1));for(_U=!1,t=Math.ceil(o/7),r=1,u=l.times(l),i=new c(l),s=l;-1!==e;)if(s=s.times(u),a=i.minus(s.div(r+=2)),s=s.times(u),void 0!==(i=a.plus(s.div(r+=2))).d[t])for(e=t;i.d[e]===a.d[e]&&e--;);return n&&(i=i.times(2<<n-1)),_U=!0,tW(i,c.precision=h,c.rounding=p,!0)},XU.isFinite=function(){return!!this.d},XU.isInteger=XU.isInt=function(){return!!this.d&&PU(this.e/7)>this.d.length-2},XU.isNaN=function(){return!this.s},XU.isNegative=XU.isNeg=function(){return this.s<0},XU.isPositive=XU.isPos=function(){return this.s>0},XU.isZero=function(){return!!this.d&&0===this.d[0]},XU.lessThan=XU.lt=function(e){return this.cmp(e)<0},XU.lessThanOrEqualTo=XU.lte=function(e){return this.cmp(e)<1},XU.logarithm=XU.log=function(e){var t,n,r,s,a,i,o,u,l=this,c=l.constructor,h=c.precision,p=c.rounding;if(null==e)e=new c(10),t=!0;else{if(n=(e=new c(e)).d,e.s<0||!n||!n[0]||e.eq(1))return new c(NaN);t=e.eq(10)}if(n=l.d,l.s<0||!n||!n[0]||l.eq(1))return new c(n&&!n[0]?-1/0:1!=l.s?NaN:n?0:1/0);if(t)if(n.length>1)a=!0;else{for(s=n[0];s%10==0;)s/=10;a=1!==s}if(_U=!1,i=pW(l,o=h+5),r=t?sW(c,o+10):pW(e,o),JU((u=eW(i,r,o,1)).d,s=h,p))do{if(i=pW(l,o+=10),r=t?sW(c,o+10):pW(e,o),u=eW(i,r,o,1),!a){+YU(u.d).slice(s+1,s+15)+1==1e14&&(u=tW(u,h+1,0));break}}while(JU(u.d,s+=10,p));return _U=!0,tW(u,h,p)},XU.minus=XU.sub=function(e){var t,n,r,s,a,i,o,u,l,c,h,p,d=this,f=d.constructor;if(e=new f(e),!d.d||!e.d)return d.s&&e.s?d.d?e.s=-e.s:e=new f(e.d||d.s!==e.s?d:NaN):e=new f(NaN),e;if(d.s!=e.s)return e.s=-e.s,d.plus(e);if(l=d.d,p=e.d,o=f.precision,u=f.rounding,!l[0]||!p[0]){if(p[0])e.s=-e.s;else{if(!l[0])return new f(3===u?-0:0);e=new f(d)}return _U?tW(e,o,u):e}if(n=PU(e.e/7),c=PU(d.e/7),l=l.slice(),a=c-n){for((h=a<0)?(t=l,a=-a,i=p.length):(t=p,n=c,i=l.length),a>(r=Math.max(Math.ceil(o/7),i)+2)&&(a=r,t.length=1),t.reverse(),r=a;r--;)t.push(0);t.reverse()}else{for((h=(r=l.length)<(i=p.length))&&(i=r),r=0;r<i;r++)if(l[r]!=p[r]){h=l[r]<p[r];break}a=0}for(h&&(t=l,l=p,p=t,e.s=-e.s),i=l.length,r=p.length-i;r>0;--r)l[i++]=0;for(r=p.length;r>a;){if(l[--r]<p[r]){for(s=r;s&&0===l[--s];)l[s]=HU-1;--l[s],l[r]+=HU}l[r]-=p[r]}for(;0===l[--i];)l.pop();for(;0===l[0];l.shift())--n;return l[0]?(e.d=l,e.e=rW(l,n),_U?tW(e,o,u):e):new f(3===u?-0:0)},XU.modulo=XU.mod=function(e){var t,n=this,r=n.constructor;return e=new r(e),!n.d||!e.s||e.d&&!e.d[0]?new r(NaN):!e.d||n.d&&!n.d[0]?tW(new r(n),r.precision,r.rounding):(_U=!1,9==r.modulo?(t=eW(n,e.abs(),0,3,1)).s*=e.s:t=eW(n,e,0,r.modulo,1),t=t.times(e),_U=!0,n.minus(t))},XU.naturalExponential=XU.exp=function(){return hW(this)},XU.naturalLogarithm=XU.ln=function(){return pW(this)},XU.negated=XU.neg=function(){var e=new this.constructor(this);return e.s=-e.s,tW(e)},XU.plus=XU.add=function(e){var t,n,r,s,a,i,o,u,l,c,h=this,p=h.constructor;if(e=new p(e),!h.d||!e.d)return h.s&&e.s?h.d||(e=new p(e.d||h.s===e.s?h:NaN)):e=new p(NaN),e;if(h.s!=e.s)return e.s=-e.s,h.minus(e);if(l=h.d,c=e.d,o=p.precision,u=p.rounding,!l[0]||!c[0])return c[0]||(e=new p(h)),_U?tW(e,o,u):e;if(a=PU(h.e/7),r=PU(e.e/7),l=l.slice(),s=a-r){for(s<0?(n=l,s=-s,i=c.length):(n=c,r=a,i=l.length),s>(i=(a=Math.ceil(o/7))>i?a+1:i+1)&&(s=i,n.length=1),n.reverse();s--;)n.push(0);n.reverse()}for((i=l.length)-(s=c.length)<0&&(s=i,n=c,c=l,l=n),t=0;s;)t=(l[--s]=l[s]+c[s]+t)/HU|0,l[s]%=HU;for(t&&(l.unshift(t),++r),i=l.length;0==l[--i];)l.pop();return e.d=l,e.e=rW(l,r),_U?tW(e,o,u):e},XU.precision=XU.sd=function(e){var t,n=this;if(void 0!==e&&e!==!!e&&1!==e&&0!==e)throw Error(OU+e);return n.d?(t=iW(n.d),e&&n.e+1>t&&(t=n.e+1)):t=NaN,t},XU.round=function(){var e=this,t=e.constructor;return tW(new t(e),e.e+1,t.rounding)},XU.sine=XU.sin=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+Math.max(n.e,n.sd())+7,r.rounding=1,n=function(e,t){var n,r=t.d.length;if(r<3)return t.isZero()?t:gW(e,2,t,t);n=(n=1.4*Math.sqrt(r))>16?16:0|n,t=gW(e,2,t=t.times(1/yW(5,n)),t);for(var s,a=new e(5),i=new e(16),o=new e(20);n--;)s=t.times(t),t=t.times(a.plus(s.times(i.times(s).minus(o))));return t}(r,bW(r,n)),r.precision=e,r.rounding=t,tW(EU>2?n.neg():n,e,t,!0)):new r(NaN)},XU.squareRoot=XU.sqrt=function(){var e,t,n,r,s,a,i=this,o=i.d,u=i.e,l=i.s,c=i.constructor;if(1!==l||!o||!o[0])return new c(!l||l<0&&(!o||o[0])?NaN:o?i:1/0);for(_U=!1,0==(l=Math.sqrt(+i))||l==1/0?(((t=YU(o)).length+u)%2==0&&(t+="0"),l=Math.sqrt(t),u=PU((u+1)/2)-(u<0||u%2),r=new c(t=l==1/0?"5e"+u:(t=l.toExponential()).slice(0,t.indexOf("e")+1)+u)):r=new c(l.toString()),n=(u=c.precision)+3;;)if(r=(a=r).plus(eW(i,a,n+2,1)).times(.5),YU(a.d).slice(0,n)===(t=YU(r.d)).slice(0,n)){if("9999"!=(t=t.slice(n-3,n+1))&&(s||"4999"!=t)){+t&&(+t.slice(1)||"5"!=t.charAt(0))||(tW(r,u+1,1),e=!r.times(r).eq(i));break}if(!s&&(tW(a,u+1,0),a.times(a).eq(i))){r=a;break}n+=4,s=1}return _U=!0,tW(r,u,c.rounding,e)},XU.tangent=XU.tan=function(){var e,t,n=this,r=n.constructor;return n.isFinite()?n.isZero()?new r(n):(e=r.precision,t=r.rounding,r.precision=e+10,r.rounding=1,(n=n.sin()).s=1,n=eW(n,new r(1).minus(n.times(n)).sqrt(),e+10,0),r.precision=e,r.rounding=t,tW(2==EU||4==EU?n.neg():n,e,t,!0)):new r(NaN)},XU.times=XU.mul=function(e){var t,n,r,s,a,i,o,u,l,c=this,h=c.constructor,p=c.d,d=(e=new h(e)).d;if(e.s*=c.s,!(p&&p[0]&&d&&d[0]))return new h(!e.s||p&&!p[0]&&!d||d&&!d[0]&&!p?NaN:p&&d?0*e.s:e.s/0);for(n=PU(c.e/7)+PU(e.e/7),(u=p.length)<(l=d.length)&&(a=p,p=d,d=a,i=u,u=l,l=i),a=[],r=i=u+l;r--;)a.push(0);for(r=l;--r>=0;){for(t=0,s=u+r;s>r;)o=a[s]+d[r]*p[s-r-1]+t,a[s--]=o%HU|0,t=o/HU|0;a[s]=(a[s]+t)%HU|0}for(;!a[--i];)a.pop();return t?++n:a.shift(),e.d=a,e.e=rW(a,n),_U?tW(e,h.precision,h.rounding):e},XU.toBinary=function(e,t){return xW(this,2,e,t)},XU.toDecimalPlaces=XU.toDP=function(e,t){var n=this,r=n.constructor;return n=new r(n),void 0===e?n:(ZU(e,0,TU),void 0===t?t=r.rounding:ZU(t,0,8),tW(n,e+n.e+1,t))},XU.toExponential=function(e,t){var n,r=this,s=r.constructor;return void 0===e?n=nW(r,!0):(ZU(e,0,TU),void 0===t?t=s.rounding:ZU(t,0,8),n=nW(r=tW(new s(r),e+1,t),!0,e+1)),r.isNeg()&&!r.isZero()?"-"+n:n},XU.toFixed=function(e,t){var n,r,s=this,a=s.constructor;return void 0===e?n=nW(s):(ZU(e,0,TU),void 0===t?t=a.rounding:ZU(t,0,8),n=nW(r=tW(new a(s),e+s.e+1,t),!1,e+r.e+1)),s.isNeg()&&!s.isZero()?"-"+n:n},XU.toFraction=function(e){var t,n,r,s,a,i,o,u,l,c,h,p,d=this,f=d.d,m=d.constructor;if(!f)return new m(d);if(l=n=new m(1),r=u=new m(0),i=(a=(t=new m(r)).e=iW(f)-d.e-1)%7,t.d[0]=UU(10,i<0?7+i:i),null==e)e=a>0?t:l;else{if(!(o=new m(e)).isInt()||o.lt(l))throw Error(OU+o);e=o.gt(t)?a>0?t:l:o}for(_U=!1,o=new m(YU(f)),c=m.precision,m.precision=a=7*f.length*2;h=eW(o,t,0,1,1),1!=(s=n.plus(h.times(r))).cmp(e);)n=r,r=s,s=l,l=u.plus(h.times(s)),u=s,s=t,t=o.minus(h.times(s)),o=s;return s=eW(e.minus(n),r,0,1,1),u=u.plus(s.times(l)),n=n.plus(s.times(r)),u.s=l.s=d.s,p=eW(l,r,a,1).minus(d).abs().cmp(eW(u,n,a,1).minus(d).abs())<1?[l,r]:[u,n],m.precision=c,_U=!0,p},XU.toHexadecimal=XU.toHex=function(e,t){return xW(this,16,e,t)},XU.toNearest=function(e,t){var n=this,r=n.constructor;if(n=new r(n),null==e){if(!n.d)return n;e=new r(1),t=r.rounding}else{if(e=new r(e),void 0===t?t=r.rounding:ZU(t,0,8),!n.d)return e.s?n:e;if(!e.d)return e.s&&(e.s=n.s),e}return e.d[0]?(_U=!1,n=eW(n,e,0,t,1).times(e),_U=!0,tW(n)):(e.s=n.s,n=e),n},XU.toNumber=function(){return+this},XU.toOctal=function(e,t){return xW(this,8,e,t)},XU.toPower=XU.pow=function(e){var t,n,r,s,a,i,o=this,u=o.constructor,l=+(e=new u(e));if(!(o.d&&e.d&&o.d[0]&&e.d[0]))return new u(UU(+o,l));if((o=new u(o)).eq(1))return o;if(r=u.precision,a=u.rounding,e.eq(1))return tW(o,r,a);if((t=PU(e.e/7))>=e.d.length-1&&(n=l<0?-l:l)<=9007199254740991)return s=uW(u,o,n,r),e.s<0?new u(1).div(s):tW(s,r,a);if((i=o.s)<0){if(t<e.d.length-1)return new u(NaN);if(0==(1&e.d[t])&&(i=1),0==o.e&&1==o.d[0]&&1==o.d.length)return o.s=i,o}return(t=0!=(n=UU(+o,l))&&isFinite(n)?new u(n+"").e:PU(l*(Math.log("0."+YU(o.d))/Math.LN10+o.e+1)))>u.maxE+1||t<u.minE-1?new u(t>0?i/0:0):(_U=!1,u.rounding=o.s=1,n=Math.min(12,(t+"").length),(s=hW(e.times(pW(o,r+n)),r)).d&&JU((s=tW(s,r+5,1)).d,r,a)&&(t=r+10,+YU((s=tW(hW(e.times(pW(o,t+n)),t),t+5,1)).d).slice(r+1,r+15)+1==1e14&&(s=tW(s,r+1,0))),s.s=i,_U=!0,u.rounding=a,tW(s,r,a))},XU.toPrecision=function(e,t){var n,r=this,s=r.constructor;return void 0===e?n=nW(r,r.e<=s.toExpNeg||r.e>=s.toExpPos):(ZU(e,1,TU),void 0===t?t=s.rounding:ZU(t,0,8),n=nW(r=tW(new s(r),e,t),e<=r.e||r.e<=s.toExpNeg,e)),r.isNeg()&&!r.isZero()?"-"+n:n},XU.toSignificantDigits=XU.toSD=function(e,t){var n=this.constructor;return void 0===e?(e=n.precision,t=n.rounding):(ZU(e,1,TU),void 0===t?t=n.rounding:ZU(t,0,8)),tW(new n(this),e,t)},XU.toString=function(){var e=this,t=e.constructor,n=nW(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()&&!e.isZero()?"-"+n:n},XU.truncated=XU.trunc=function(){return tW(new this.constructor(this),this.e+1,1)},XU.valueOf=XU.toJSON=function(){var e=this,t=e.constructor,n=nW(e,e.e<=t.toExpNeg||e.e>=t.toExpPos);return e.isNeg()?"-"+n:n};var eW=function(){function e(e,t,n){var r,s=0,a=e.length;for(e=e.slice();a--;)r=e[a]*t+s,e[a]=r%n|0,s=r/n|0;return s&&e.unshift(s),e}function t(e,t,n,r){var s,a;if(n!=r)a=n>r?1:-1;else for(s=a=0;s<n;s++)if(e[s]!=t[s]){a=e[s]>t[s]?1:-1;break}return a}function n(e,t,n,r){for(var s=0;n--;)e[n]-=s,s=e[n]<t[n]?1:0,e[n]=s*r+e[n]-t[n];for(;!e[0]&&e.length>1;)e.shift()}return function(r,s,a,i,o,u){var l,c,h,p,d,f,m,g,y,b,x,w,v,k,N,I,C,D,E,S,T=r.constructor,A=r.s==s.s?1:-1,$=r.d,F=s.d;if(!($&&$[0]&&F&&F[0]))return new T(r.s&&s.s&&($?!F||$[0]!=F[0]:F)?$&&0==$[0]||!F?0*A:A/0:NaN);for(u?(d=1,c=r.e-s.e):(u=HU,d=7,c=PU(r.e/d)-PU(s.e/d)),E=F.length,C=$.length,b=(y=new T(A)).d=[],h=0;F[h]==($[h]||0);h++);if(F[h]>($[h]||0)&&c--,null==a?(k=a=T.precision,i=T.rounding):k=o?a+(r.e-s.e)+1:a,k<0)b.push(1),f=!0;else{if(k=k/d+2|0,h=0,1==E){for(p=0,F=F[0],k++;(h<C||p)&&k--;h++)N=p*u+($[h]||0),b[h]=N/F|0,p=N%F|0;f=p||h<C}else{for((p=u/(F[0]+1)|0)>1&&(F=e(F,p,u),$=e($,p,u),E=F.length,C=$.length),I=E,w=(x=$.slice(0,E)).length;w<E;)x[w++]=0;(S=F.slice()).unshift(0),D=F[0],F[1]>=u/2&&++D;do{p=0,(l=t(F,x,E,w))<0?(v=x[0],E!=w&&(v=v*u+(x[1]||0)),(p=v/D|0)>1?(p>=u&&(p=u-1),1==(l=t(m=e(F,p,u),x,g=m.length,w=x.length))&&(p--,n(m,E<g?S:F,g,u))):(0==p&&(l=p=1),m=F.slice()),(g=m.length)<w&&m.unshift(0),n(x,m,w,u),-1==l&&(l=t(F,x,E,w=x.length))<1&&(p++,n(x,E<w?S:F,w,u)),w=x.length):0===l&&(p++,x=[0]),b[h++]=p,l&&x[0]?x[w++]=$[I]||0:(x=[$[I]],w=1)}while((I++<C||void 0!==x[0])&&k--);f=void 0!==x[0]}b[0]||b.shift()}if(1==d)y.e=c,DU=f;else{for(h=1,p=b[0];p>=10;p/=10)h++;y.e=h+c*d-1,tW(y,o?a+y.e+1:a,i,f)}return y}}();function tW(e,t,n,r){var s,a,i,o,u,l,c,h,p,d=e.constructor;e:if(null!=t){if(!(h=e.d))return e;for(s=1,o=h[0];o>=10;o/=10)s++;if((a=t-s)<0)a+=7,i=t,u=(c=h[p=0])/UU(10,s-i-1)%10|0;else if((p=Math.ceil((a+1)/7))>=(o=h.length)){if(!r)break e;for(;o++<=p;)h.push(0);c=u=0,s=1,i=(a%=7)-7+1}else{for(c=o=h[p],s=1;o>=10;o/=10)s++;u=(i=(a%=7)-7+s)<0?0:c/UU(10,s-i-1)%10|0}if(r=r||t<0||void 0!==h[p+1]||(i<0?c:c%UU(10,s-i-1)),l=n<4?(u||r)&&(0==n||n==(e.s<0?3:2)):u>5||5==u&&(4==n||r||6==n&&(a>0?i>0?c/UU(10,s-i):0:h[p-1])%10&1||n==(e.s<0?8:7)),t<1||!h[0])return h.length=0,l?(t-=e.e+1,h[0]=UU(10,(7-t%7)%7),e.e=-t||0):h[0]=e.e=0,e;if(0==a?(h.length=p,o=1,p--):(h.length=p+1,o=UU(10,7-a),h[p]=i>0?(c/UU(10,s-i)%UU(10,i)|0)*o:0),l)for(;;){if(0==p){for(a=1,i=h[0];i>=10;i/=10)a++;for(i=h[0]+=o,o=1;i>=10;i/=10)o++;a!=o&&(e.e++,h[0]==HU&&(h[0]=1));break}if(h[p]+=o,h[p]!=HU)break;h[p--]=0,o=1}for(a=h.length;0===h[--a];)h.pop()}return _U&&(e.e>d.maxE?(e.d=null,e.e=NaN):e.e<d.minE&&(e.e=0,e.d=[0])),e}function nW(e,t,n){if(!e.isFinite())return dW(e);var r,s=e.e,a=YU(e.d),i=a.length;return t?(n&&(r=n-i)>0?a=a.charAt(0)+"."+a.slice(1)+oW(r):i>1&&(a=a.charAt(0)+"."+a.slice(1)),a=a+(e.e<0?"e":"e+")+e.e):s<0?(a="0."+oW(-s-1)+a,n&&(r=n-i)>0&&(a+=oW(r))):s>=i?(a+=oW(s+1-i),n&&(r=n-s-1)>0&&(a=a+"."+oW(r))):((r=s+1)<i&&(a=a.slice(0,r)+"."+a.slice(r)),n&&(r=n-i)>0&&(s+1===i&&(a+="."),a+=oW(r))),a}function rW(e,t){var n=e[0];for(t*=7;n>=10;n/=10)t++;return t}function sW(e,t,n){if(t>qU)throw _U=!0,n&&(e.precision=n),Error(BU);return tW(new e($U),t,1,!0)}function aW(e,t,n){if(t>KU)throw Error(BU);return tW(new e(FU),t,n,!0)}function iW(e){var t=e.length-1,n=7*t+1;if(t=e[t]){for(;t%10==0;t/=10)n--;for(t=e[0];t>=10;t/=10)n++}return n}function oW(e){for(var t="";e--;)t+="0";return t}function uW(e,t,n,r){var s,a=new e(1),i=Math.ceil(r/7+4);for(_U=!1;;){if(n%2&&wW((a=a.times(t)).d,i)&&(s=!0),0===(n=PU(n/2))){n=a.d.length-1,s&&0===a.d[n]&&++a.d[n];break}wW((t=t.times(t)).d,i)}return _U=!0,a}function lW(e){return 1&e.d[e.d.length-1]}function cW(e,t,n){for(var r,s=new e(t[0]),a=0;++a<t.length;){if(!(r=new e(t[a])).s){s=r;break}s[n](r)&&(s=r)}return s}function hW(e,t){var n,r,s,a,i,o,u,l=0,c=0,h=0,p=e.constructor,d=p.rounding,f=p.precision;if(!e.d||!e.d[0]||e.e>17)return new p(e.d?e.d[0]?e.s<0?0:1/0:1:e.s?e.s<0?0:e:NaN);for(null==t?(_U=!1,u=f):u=t,o=new p(.03125);e.e>-2;)e=e.times(o),h+=5;for(u+=r=Math.log(UU(2,h))/Math.LN10*2+5|0,n=a=i=new p(1),p.precision=u;;){if(a=tW(a.times(e),u,1),n=n.times(++c),YU((o=i.plus(eW(a,n,u,1))).d).slice(0,u)===YU(i.d).slice(0,u)){for(s=h;s--;)i=tW(i.times(i),u,1);if(null!=t)return p.precision=f,i;if(!(l<3&&JU(i.d,u-r,d,l)))return tW(i,p.precision=f,d,_U=!0);p.precision=u+=10,n=a=o=new p(1),c=0,l++}i=o}}function pW(e,t){var n,r,s,a,i,o,u,l,c,h,p,d=1,f=e,m=f.d,g=f.constructor,y=g.rounding,b=g.precision;if(f.s<0||!m||!m[0]||!f.e&&1==m[0]&&1==m.length)return new g(m&&!m[0]?-1/0:1!=f.s?NaN:m?0:f);if(null==t?(_U=!1,c=b):c=t,g.precision=c+=10,r=(n=YU(m)).charAt(0),!(Math.abs(a=f.e)<15e14))return l=sW(g,c+2,b).times(a+""),f=pW(new g(r+"."+n.slice(1)),c-10).plus(l),g.precision=b,null==t?tW(f,b,y,_U=!0):f;for(;r<7&&1!=r||1==r&&n.charAt(1)>3;)r=(n=YU((f=f.times(e)).d)).charAt(0),d++;for(a=f.e,r>1?(f=new g("0."+n),a++):f=new g(r+"."+n.slice(1)),h=f,u=i=f=eW(f.minus(1),f.plus(1),c,1),p=tW(f.times(f),c,1),s=3;;){if(i=tW(i.times(p),c,1),YU((l=u.plus(eW(i,new g(s),c,1))).d).slice(0,c)===YU(u.d).slice(0,c)){if(u=u.times(2),0!==a&&(u=u.plus(sW(g,c+2,b).times(a+""))),u=eW(u,new g(d),c,1),null!=t)return g.precision=b,u;if(!JU(u.d,c-10,y,o))return tW(u,g.precision=b,y,_U=!0);g.precision=c+=10,l=i=f=eW(h.minus(1),h.plus(1),c,1),p=tW(f.times(f),c,1),s=o=1}u=l,s+=2}}function dW(e){return String(e.s*e.s/0)}function fW(e,t){var n,r,s;for((n=t.indexOf("."))>-1&&(t=t.replace(".","")),(r=t.search(/e/i))>0?(n<0&&(n=r),n+=+t.slice(r+1),t=t.substring(0,r)):n<0&&(n=t.length),r=0;48===t.charCodeAt(r);r++);for(s=t.length;48===t.charCodeAt(s-1);--s);if(t=t.slice(r,s)){if(s-=r,e.e=n=n-r-1,e.d=[],r=(n+1)%7,n<0&&(r+=7),r<s){for(r&&e.d.push(+t.slice(0,r)),s-=7;r<s;)e.d.push(+t.slice(r,r+=7));r=7-(t=t.slice(r)).length}else r-=s;for(;r--;)t+="0";e.d.push(+t),_U&&(e.e>e.constructor.maxE?(e.d=null,e.e=NaN):e.e<e.constructor.minE&&(e.e=0,e.d=[0]))}else e.e=0,e.d=[0];return e}function mW(e,t){var n,r,s,a,i,o,u,l,c;if(t.indexOf("_")>-1){if(t=t.replace(/(\d)_(?=\d)/g,"$1"),jU.test(t))return fW(e,t)}else if("Infinity"===t||"NaN"===t)return+t||(e.s=NaN),e.e=NaN,e.d=null,e;if(VU.test(t))n=16,t=t.toLowerCase();else if(WU.test(t))n=2;else{if(!GU.test(t))throw Error(OU+t);n=8}for((a=t.search(/p/i))>0?(u=+t.slice(a+1),t=t.substring(2,a)):t=t.slice(2),i=(a=t.indexOf("."))>=0,r=e.constructor,i&&(a=(o=(t=t.replace(".","")).length)-a,s=uW(r,new r(n),a,2*a)),a=c=(l=QU(t,n,HU)).length-1;0===l[a];--a)l.pop();return a<0?new r(0*e.s):(e.e=rW(l,c),e.d=l,_U=!1,i&&(e=eW(e,s,4*o)),u&&(e=e.times(Math.abs(u)<54?UU(2,u):oV.pow(2,u))),_U=!0,e)}function gW(e,t,n,r,s){var a,i,o,u,l=e.precision,c=Math.ceil(l/7);for(_U=!1,u=n.times(n),o=new e(r);;){if(i=eW(o.times(u),new e(t++*t++),l,1),o=s?r.plus(i):r.minus(i),r=eW(i.times(u),new e(t++*t++),l,1),void 0!==(i=o.plus(r)).d[c]){for(a=c;i.d[a]===o.d[a]&&a--;);if(-1==a)break}a=o,o=r,r=i,i=a}return _U=!0,i.d.length=c+1,i}function yW(e,t){for(var n=e;--t;)n*=e;return n}function bW(e,t){var n,r=t.s<0,s=aW(e,e.precision,1),a=s.times(.5);if((t=t.abs()).lte(a))return EU=r?4:1,t;if((n=t.divToInt(s)).isZero())EU=r?3:2;else{if((t=t.minus(n.times(s))).lte(a))return EU=lW(n)?r?2:3:r?4:1,t;EU=lW(n)?r?1:4:r?3:2}return t.minus(s).abs()}function xW(e,t,n,r){var s,a,i,o,u,l,c,h,p,d=e.constructor,f=void 0!==n;if(f?(ZU(n,1,TU),void 0===r?r=d.rounding:ZU(r,0,8)):(n=d.precision,r=d.rounding),e.isFinite()){for(f?(s=2,16==t?n=4*n-3:8==t&&(n=3*n-2)):s=t,(i=(c=nW(e)).indexOf("."))>=0&&(c=c.replace(".",""),(p=new d(1)).e=c.length-i,p.d=QU(nW(p),10,s),p.e=p.d.length),a=u=(h=QU(c,10,s)).length;0==h[--u];)h.pop();if(h[0]){if(i<0?a--:((e=new d(e)).d=h,e.e=a,h=(e=eW(e,p,n,r,0,s)).d,a=e.e,l=DU),i=h[n],o=s/2,l=l||void 0!==h[n+1],l=r<4?(void 0!==i||l)&&(0===r||r===(e.s<0?3:2)):i>o||i===o&&(4===r||l||6===r&&1&h[n-1]||r===(e.s<0?8:7)),h.length=n,l)for(;++h[--n]>s-1;)h[n]=0,n||(++a,h.unshift(1));for(u=h.length;!h[u-1];--u);for(i=0,c="";i<u;i++)c+=AU.charAt(h[i]);if(f){if(u>1)if(16==t||8==t){for(i=16==t?4:3,--u;u%i;u++)c+="0";for(u=(h=QU(c,s,t)).length;!h[u-1];--u);for(i=1,c="1.";i<u;i++)c+=AU.charAt(h[i])}else c=c.charAt(0)+"."+c.slice(1);c=c+(a<0?"p":"p+")+a}else if(a<0){for(;++a;)c="0"+c;c="0."+c}else if(++a>u)for(a-=u;a--;)c+="0";else a<u&&(c=c.slice(0,a)+"."+c.slice(a))}else c=f?"0p+0":"0";c=(16==t?"0x":2==t?"0b":8==t?"0o":"")+c}else c=dW(e);return e.s<0?"-"+c:c}function wW(e,t){if(e.length>t)return e.length=t,!0}function vW(e){return new this(e).abs()}function kW(e){return new this(e).acos()}function NW(e){return new this(e).acosh()}function IW(e,t){return new this(e).plus(t)}function CW(e){return new this(e).asin()}function DW(e){return new this(e).asinh()}function EW(e){return new this(e).atan()}function SW(e){return new this(e).atanh()}function TW(e,t){e=new this(e),t=new this(t);var n,r=this.precision,s=this.rounding,a=r+4;return e.s&&t.s?e.d||t.d?!t.d||e.isZero()?(n=t.s<0?aW(this,r,s):new this(0)).s=e.s:!e.d||t.isZero()?(n=aW(this,a,1).times(.5)).s=e.s:t.s<0?(this.precision=a,this.rounding=1,n=this.atan(eW(e,t,a,1)),t=aW(this,a,1),this.precision=r,this.rounding=s,n=e.s<0?n.minus(t):n.plus(t)):n=this.atan(eW(e,t,a,1)):(n=aW(this,a,1).times(t.s>0?.25:.75)).s=e.s:n=new this(NaN),n}function AW(e){return new this(e).cbrt()}function $W(e){return tW(e=new this(e),e.e+1,2)}function FW(e,t,n){return new this(e).clamp(t,n)}function RW(e){if(!e||"object"!=typeof e)throw Error(MU+"Object expected");var t,n,r,s=!0===e.defaults,a=["precision",1,TU,"rounding",0,8,"toExpNeg",-SU,0,"toExpPos",0,SU,"maxE",0,SU,"minE",-SU,0,"modulo",0,9];for(t=0;t<a.length;t+=3)if(n=a[t],s&&(this[n]=RU[n]),void 0!==(r=e[n])){if(!(PU(r)===r&&r>=a[t+1]&&r<=a[t+2]))throw Error(OU+n+": "+r);this[n]=r}if(n="crypto",s&&(this[n]=RU[n]),void 0!==(r=e[n])){if(!0!==r&&!1!==r&&0!==r&&1!==r)throw Error(OU+n+": "+r);if(r){if("undefined"==typeof crypto||!crypto||!crypto.getRandomValues&&!crypto.randomBytes)throw Error(zU);this[n]=!0}else this[n]=!1}return this}function _W(e){return new this(e).cos()}function MW(e){return new this(e).cosh()}function OW(e,t){return new this(e).div(t)}function BW(e){return new this(e).exp()}function zW(e){return tW(e=new this(e),e.e+1,3)}function LW(){var e,t,n=new this(0);for(_U=!1,e=0;e<arguments.length;)if((t=new this(arguments[e++])).d)n.d&&(n=n.plus(t.times(t)));else{if(t.s)return _U=!0,new this(1/0);n=t}return _U=!0,n.sqrt()}function PW(e){return e instanceof oV||e&&e.toStringTag===LU||!1}function UW(e){return new this(e).ln()}function WW(e,t){return new this(e).log(t)}function VW(e){return new this(e).log(2)}function GW(e){return new this(e).log(10)}function jW(){return cW(this,arguments,"lt")}function HW(){return cW(this,arguments,"gt")}function qW(e,t){return new this(e).mod(t)}function KW(e,t){return new this(e).mul(t)}function XW(e,t){return new this(e).pow(t)}function YW(e){var t,n,r,s,a=0,i=new this(1),o=[];if(void 0===e?e=this.precision:ZU(e,1,TU),r=Math.ceil(e/7),this.crypto)if(crypto.getRandomValues)for(t=crypto.getRandomValues(new Uint32Array(r));a<r;)(s=t[a])>=429e7?t[a]=crypto.getRandomValues(new Uint32Array(1))[0]:o[a++]=s%1e7;else{if(!crypto.randomBytes)throw Error(zU);for(t=crypto.randomBytes(r*=4);a<r;)(s=t[a]+(t[a+1]<<8)+(t[a+2]<<16)+((127&t[a+3])<<24))>=214e7?crypto.randomBytes(4).copy(t,a):(o.push(s%1e7),a+=4);a=r/4}else for(;a<r;)o[a++]=1e7*Math.random()|0;for(e%=7,(r=o[--a])&&e&&(s=UU(10,7-e),o[a]=(r/s|0)*s);0===o[a];a--)o.pop();if(a<0)n=0,o=[0];else{for(n=-1;0===o[0];n-=7)o.shift();for(r=1,s=o[0];s>=10;s/=10)r++;r<7&&(n-=7-r)}return i.e=n,i.d=o,i}function ZW(e){return tW(e=new this(e),e.e+1,this.rounding)}function JW(e){return(e=new this(e)).d?e.d[0]?e.s:0*e.s:e.s||NaN}function QW(e){return new this(e).sin()}function eV(e){return new this(e).sinh()}function tV(e){return new this(e).sqrt()}function nV(e,t){return new this(e).sub(t)}function rV(){var e=0,t=arguments,n=new this(t[e]);for(_U=!1;n.s&&++e<t.length;)n=n.plus(t[e]);return _U=!0,tW(n,this.precision,this.rounding)}function sV(e){return new this(e).tan()}function aV(e){return new this(e).tanh()}function iV(e){return tW(e=new this(e),e.e+1,1)}XU[Symbol.for("nodejs.util.inspect.custom")]=XU.toString,XU[Symbol.toStringTag]="Decimal";var oV=XU.constructor=function e(t){var n,r,s;function a(e){var t,n,r,s=this;if(!(s instanceof a))return new a(e);if(s.constructor=a,PW(e))return s.s=e.s,void(_U?!e.d||e.e>a.maxE?(s.e=NaN,s.d=null):e.e<a.minE?(s.e=0,s.d=[0]):(s.e=e.e,s.d=e.d.slice()):(s.e=e.e,s.d=e.d?e.d.slice():e.d));if("number"==(r=typeof e)){if(0===e)return s.s=1/e<0?-1:1,s.e=0,void(s.d=[0]);if(e<0?(e=-e,s.s=-1):s.s=1,e===~~e&&e<1e7){for(t=0,n=e;n>=10;n/=10)t++;return void(_U?t>a.maxE?(s.e=NaN,s.d=null):t<a.minE?(s.e=0,s.d=[0]):(s.e=t,s.d=[e]):(s.e=t,s.d=[e]))}return 0*e!=0?(e||(s.s=NaN),s.e=NaN,void(s.d=null)):fW(s,e.toString())}if("string"!==r)throw Error(OU+e);return 45===(n=e.charCodeAt(0))?(e=e.slice(1),s.s=-1):(43===n&&(e=e.slice(1)),s.s=1),jU.test(e)?fW(s,e):mW(s,e)}if(a.prototype=XU,a.ROUND_UP=0,a.ROUND_DOWN=1,a.ROUND_CEIL=2,a.ROUND_FLOOR=3,a.ROUND_HALF_UP=4,a.ROUND_HALF_DOWN=5,a.ROUND_HALF_EVEN=6,a.ROUND_HALF_CEIL=7,a.ROUND_HALF_FLOOR=8,a.EUCLID=9,a.config=a.set=RW,a.clone=e,a.isDecimal=PW,a.abs=vW,a.acos=kW,a.acosh=NW,a.add=IW,a.asin=CW,a.asinh=DW,a.atan=EW,a.atanh=SW,a.atan2=TW,a.cbrt=AW,a.ceil=$W,a.clamp=FW,a.cos=_W,a.cosh=MW,a.div=OW,a.exp=BW,a.floor=zW,a.hypot=LW,a.ln=UW,a.log=WW,a.log10=GW,a.log2=VW,a.max=jW,a.min=HW,a.mod=qW,a.mul=KW,a.pow=XW,a.random=YW,a.round=ZW,a.sign=JW,a.sin=QW,a.sinh=eV,a.sqrt=tV,a.sub=nV,a.sum=rV,a.tan=sV,a.tanh=aV,a.trunc=iV,void 0===t&&(t={}),t&&!0!==t.defaults)for(s=["precision","rounding","toExpNeg","toExpPos","maxE","minE","modulo","crypto"],n=0;n<s.length;)t.hasOwnProperty(r=s[n++])||(t[r]=this[r]);return a.config(t),a}(RU);$U=new oV($U),FU=new oV(FU);const uV=oV;function lV(e){return"number"==typeof e}function cV(e){return!(!e||"object"!=typeof e||"function"!=typeof e.constructor)&&(!0===e.isBigNumber&&"object"==typeof e.constructor.prototype&&!0===e.constructor.prototype.isBigNumber||"function"==typeof e.constructor.isDecimal&&!0===e.constructor.isDecimal(e))}function hV(e){return e&&"object"==typeof e&&!0===Object.getPrototypeOf(e).isComplex||!1}function pV(e){return e&&"object"==typeof e&&!0===Object.getPrototypeOf(e).isFraction||!1}function dV(e){return e&&!0===e.constructor.prototype.isUnit||!1}function fV(e){return"string"==typeof e}var mV=Array.isArray;function gV(e){return e&&!0===e.constructor.prototype.isMatrix||!1}function yV(e){return Array.isArray(e)||gV(e)}function bV(e){return e&&e.isDenseMatrix&&!0===e.constructor.prototype.isMatrix||!1}function xV(e){return e&&e.isSparseMatrix&&!0===e.constructor.prototype.isMatrix||!1}function wV(e){return e&&!0===e.constructor.prototype.isRange||!1}function vV(e){return e&&!0===e.constructor.prototype.isIndex||!1}function kV(e){return"boolean"==typeof e}function NV(e){return e&&!0===e.constructor.prototype.isResultSet||!1}function IV(e){return e&&!0===e.constructor.prototype.isHelp||!1}function CV(e){return"function"==typeof e}function DV(e){return e instanceof Date}function EV(e){return e instanceof RegExp}function SV(e){return!(!e||"object"!=typeof e||e.constructor!==Object||hV(e)||pV(e))}function TV(e){return null===e}function AV(e){return void 0===e}function $V(e){return e&&!0===e.isAccessorNode&&!0===e.constructor.prototype.isNode||!1}function FV(e){return e&&!0===e.isArrayNode&&!0===e.constructor.prototype.isNode||!1}function RV(e){return e&&!0===e.isAssignmentNode&&!0===e.constructor.prototype.isNode||!1}function _V(e){return e&&!0===e.isBlockNode&&!0===e.constructor.prototype.isNode||!1}function MV(e){return e&&!0===e.isConditionalNode&&!0===e.constructor.prototype.isNode||!1}function OV(e){return e&&!0===e.isConstantNode&&!0===e.constructor.prototype.isNode||!1}function BV(e){return e&&!0===e.isFunctionAssignmentNode&&!0===e.constructor.prototype.isNode||!1}function zV(e){return e&&!0===e.isFunctionNode&&!0===e.constructor.prototype.isNode||!1}function LV(e){return e&&!0===e.isIndexNode&&!0===e.constructor.prototype.isNode||!1}function PV(e){return e&&!0===e.isNode&&!0===e.constructor.prototype.isNode||!1}function UV(e){return e&&!0===e.isObjectNode&&!0===e.constructor.prototype.isNode||!1}function WV(e){return e&&!0===e.isOperatorNode&&!0===e.constructor.prototype.isNode||!1}function VV(e){return e&&!0===e.isParenthesisNode&&!0===e.constructor.prototype.isNode||!1}function GV(e){return e&&!0===e.isRangeNode&&!0===e.constructor.prototype.isNode||!1}function jV(e){return e&&!0===e.isRelationalNode&&!0===e.constructor.prototype.isNode||!1}function HV(e){return e&&!0===e.isSymbolNode&&!0===e.constructor.prototype.isNode||!1}function qV(e){return e&&!0===e.constructor.prototype.isChain||!1}function KV(e){var t=typeof e;return"object"===t?null===e?"null":cV(e)?"BigNumber":e.constructor&&e.constructor.name?e.constructor.name:"Object":t}function XV(e){var t=typeof e;if("number"===t||"string"===t||"boolean"===t||null==e)return e;if("function"==typeof e.clone)return e.clone();if(Array.isArray(e))return e.map((function(e){return XV(e)}));if(e instanceof Date)return new Date(e.valueOf());if(cV(e))return e;if(e instanceof RegExp)throw new TypeError("Cannot clone "+e);return function(e,t){var n={};for(var r in e)ZV(e,r)&&(n[r]=t(e[r]));return n}(e,XV)}function YV(e,t){var n,r,s;if(Array.isArray(e)){if(!Array.isArray(t))return!1;if(e.length!==t.length)return!1;for(r=0,s=e.length;r<s;r++)if(!YV(e[r],t[r]))return!1;return!0}if("function"==typeof e)return e===t;if(e instanceof Object){if(Array.isArray(t)||!(t instanceof Object))return!1;for(n in e)if(!(n in t)||!YV(e[n],t[n]))return!1;for(n in t)if(!(n in e))return!1;return!0}return e===t}function ZV(e,t){return e&&Object.hasOwnProperty.call(e,t)}function JV(e,t,n,r){function s(r){var s=function(e,t){for(var n={},r=0;r<t.length;r++){var s=t[r],a=e[s];void 0!==a&&(n[s]=a)}return n}(r,t.map(QV));return function(e,t,n){if(!t.filter((e=>!function(e){return e&&"?"===e[0]}(e))).every((e=>void 0!==n[e]))){var r=t.filter((e=>void 0===n[e]));throw new Error('Cannot create function "'.concat(e,'", ')+"some dependencies are missing: ".concat(r.map((e=>'"'.concat(e,'"'))).join(", "),"."))}}(e,t,r),n(s)}return s.isFactory=!0,s.fn=e,s.dependencies=t.slice().sort(),r&&(s.meta=r),s}function QV(e){return e&&"?"===e[0]?e.slice(1):e}var eG=JV("BigNumber",["?on","config"],(e=>{var{on:t,config:n}=e,r=uV.clone({precision:n.precision,modulo:uV.EUCLID});return r.prototype=Object.create(r.prototype),r.prototype.type="BigNumber",r.prototype.isBigNumber=!0,r.prototype.toJSON=function(){return{mathjs:"BigNumber",value:this.toString()}},r.fromJSON=function(e){return new r(e.value)},t&&t("config",(function(e,t){e.precision!==t.precision&&r.config({precision:e.precision})})),r}),{isClass:!0}),tG=n(977);function nG(e){return"boolean"==typeof e||!!isFinite(e)&&e===Math.round(e)}Math.sign,Math.log2,Math.log10,Math.log1p,Math.cbrt,Math.expm1;function rG(e,t,n){var r={2:"0b",8:"0o",16:"0x"}[t],s="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!nG(n))throw new Error("size must be an integer");if(e>2**(n-1)-1||e<-(2**(n-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!nG(e))throw new Error("Value must be an integer");e<0&&(e+=2**n),s="i".concat(n)}var a="";return e<0&&(e=-e,a="-"),"".concat(a).concat(r).concat(e.toString(t)).concat(s)}function sG(e,t){if("function"==typeof t)return t(e);if(e===1/0)return"Infinity";if(e===-1/0)return"-Infinity";if(isNaN(e))return"NaN";var n,r,s="auto";if(t&&(t.notation&&(s=t.notation),lV(t)?n=t:lV(t.precision)&&(n=t.precision),t.wordSize&&"number"!=typeof(r=t.wordSize)))throw new Error('Option "wordSize" must be a number');switch(s){case"fixed":return function(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=aG(e),r="number"==typeof t?oG(n,n.exponent+1+t):n,s=r.coefficients,a=r.exponent+1,i=a+(t||0);return s.length<i&&(s=s.concat(uG(i-s.length))),a<0&&(s=uG(1-a).concat(s),a=1),a<s.length&&s.splice(a,0,0===a?"0.":"."),r.sign+s.join("")}(e,n);case"exponential":return iG(e,n);case"engineering":return function(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=oG(aG(e),t),r=n.exponent,s=n.coefficients,a=r%3==0?r:r<0?r-3-r%3:r-r%3;if(lV(t))for(;t>s.length||r-a+1>s.length;)s.push(0);else for(var i=Math.abs(r-a)-(s.length-1),o=0;o<i;o++)s.push(0);for(var u=Math.abs(r-a),l=1;u>0;)l++,u--;var c=s.slice(l).join(""),h=lV(t)&&c.length||c.match(/[1-9]/)?"."+c:"",p=s.slice(0,l).join("")+h+"e"+(r>=0?"+":"")+a.toString();return n.sign+p}(e,n);case"bin":return rG(e,2,r);case"oct":return rG(e,8,r);case"hex":return rG(e,16,r);case"auto":return function(e,t,n){if(isNaN(e)||!isFinite(e))return String(e);var r=n&&void 0!==n.lowerExp?n.lowerExp:-3,s=n&&void 0!==n.upperExp?n.upperExp:5,a=aG(e),i=t?oG(a,t):a;if(i.exponent<r||i.exponent>=s)return iG(e,t);var o=i.coefficients,u=i.exponent;o.length<t&&(o=o.concat(uG(t-o.length))),o=o.concat(uG(u-o.length+1+(o.length<t?t-o.length:0)));var l=u>0?u:0;return l<(o=uG(-u).concat(o)).length-1&&o.splice(l+1,0,"."),i.sign+o.join("")}(e,n,t&&t).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+s+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}function aG(e){var t=String(e).toLowerCase().match(/^(-?)(\d+\.?\d*)(e([+-]?\d+))?$/);if(!t)throw new SyntaxError("Invalid number "+e);var n=t[1],r=t[2],s=parseFloat(t[4]||"0"),a=r.indexOf(".");s+=-1!==a?a-1:r.length-1;var i=r.replace(".","").replace(/^0*/,(function(e){return s-=e.length,""})).replace(/0*$/,"").split("").map((function(e){return parseInt(e)}));return 0===i.length&&(i.push(0),s++),{sign:n,coefficients:i,exponent:s}}function iG(e,t){if(isNaN(e)||!isFinite(e))return String(e);var n=aG(e),r=t?oG(n,t):n,s=r.coefficients,a=r.exponent;s.length<t&&(s=s.concat(uG(t-s.length)));var i=s.shift();return r.sign+i+(s.length>0?"."+s.join(""):"")+"e"+(a>=0?"+":"")+a}function oG(e,t){for(var n={sign:e.sign,coefficients:e.coefficients,exponent:e.exponent},r=n.coefficients;t<=0;)r.unshift(0),n.exponent++,t++;if(r.length>t&&r.splice(t,r.length-t)[0]>=5){var s=t-1;for(r[s]++;10===r[s];)r.pop(),0===s&&(r.unshift(0),n.exponent++,s++),r[--s]++}return n}function uG(e){for(var t=[],n=0;n<e;n++)t.push(0);return t}var lG=Number.EPSILON||2220446049250313e-31;function cG(e,t,n){if(null==n)return e===t;if(e===t)return!0;if(isNaN(e)||isNaN(t))return!1;if(isFinite(e)&&isFinite(t)){var r=Math.abs(e-t);return r<lG||r<=Math.max(Math.abs(e),Math.abs(t))*n}return!1}Math.acosh,Math.asinh,Math.atanh,Math.cosh,Math.sinh;Math.tanh;var hG=JV("Complex",[],(()=>(Object.defineProperty(tG,"name",{value:"Complex"}),tG.prototype.constructor=tG,tG.prototype.type="Complex",tG.prototype.isComplex=!0,tG.prototype.toJSON=function(){return{mathjs:"Complex",re:this.re,im:this.im}},tG.prototype.toPolar=function(){return{r:this.abs(),phi:this.arg()}},tG.prototype.format=function(e){var t=this.im,n=this.re,r=sG(this.re,e),s=sG(this.im,e),a=lV(e)?e:e?e.precision:null;if(null!==a){var i=Math.pow(10,-a);Math.abs(n/t)<i&&(n=0),Math.abs(t/n)<i&&(t=0)}return 0===t?r:0===n?1===t?"i":-1===t?"-i":s+"i":t<0?-1===t?r+" - i":r+" - "+s.substring(1)+"i":1===t?r+" + i":r+" + "+s+"i"},tG.fromPolar=function(e){switch(arguments.length){case 1:var t=arguments[0];if("object"==typeof t)return tG(t);throw new TypeError("Input has to be an object with r and phi keys.");case 2:var n=arguments[0],r=arguments[1];if(lV(n)){if(dV(r)&&r.hasBase("ANGLE")&&(r=r.toNumber("rad")),lV(r))return new tG({r:n,phi:r});throw new TypeError("Phi is not a number nor an angle unit.")}throw new TypeError("Radius r is not a number.");default:throw new SyntaxError("Wrong number of arguments in function fromPolar")}},tG.prototype.valueOf=tG.prototype.toString,tG.fromJSON=function(e){return new tG(e)},tG.compare=function(e,t){return e.re>t.re?1:e.re<t.re?-1:e.im>t.im?1:e.im<t.im?-1:0},tG)),{isClass:!0});function pG(e){var t=0,n=1,r=Object.create(null),s=Object.create(null),a=0,i=function(e){var i=s[e];if(i&&(delete r[i],delete s[e],--t,n===i)){if(!t)return a=0,void(n=1);for(;!hasOwnProperty.call(r,++n););}};return e=Math.abs(e),{hit:function(o){var u=s[o],l=++a;if(r[l]=o,s[o]=l,!u){if(++t<=e)return;return o=r[n],i(o),o}if(delete r[u],n===u)for(;!hasOwnProperty.call(r,++n););},delete:i,clear:function(){t=a=0,n=1,r=Object.create(null),s=Object.create(null)}}}function dG(e){var{hasher:t,limit:n}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return n=null==n?Number.POSITIVE_INFINITY:n,t=null==t?JSON.stringify:t,function r(){"object"!=typeof r.cache&&(r.cache={values:new Map,lru:pG(n||Number.POSITIVE_INFINITY)});for(var s=[],a=0;a<arguments.length;a++)s[a]=arguments[a];var i=t(s);if(r.cache.values.has(i))return r.cache.lru.hit(i),r.cache.values.get(i);var o=e.apply(e,s);return r.cache.values.set(i,o),r.cache.values.delete(r.cache.lru.hit(i)),o}}function fG(e){return Object.keys(e.signatures||{}).reduce((function(e,t){var n=(t.match(/,/g)||[]).length+1;return Math.max(e,n)}),-1)}dG((function(e){return new e(1).exp()}),{hasher:gG}),dG((function(e){return new e(1).plus(new e(5).sqrt()).div(2)}),{hasher:gG});var mG=dG((function(e){return e.acos(-1)}),{hasher:gG});function gG(e){return e[0].precision}function yG(e,t){return JV(e,["config","BigNumber"],(e=>{var{config:n,BigNumber:r}=e;return"BigNumber"===n.number?new r(t):t}))}dG((function(e){return mG(e).times(2)}),{hasher:gG}),Math.PI,Math.PI,Math.E,yG("fineStructure",.0072973525693),yG("weakMixingAngle",.2229),yG("efimovFactor",22.7),yG("sackurTetrode",-1.16487052358);var bG=n(628),xG=JV("Fraction",[],(()=>(Object.defineProperty(bG,"name",{value:"Fraction"}),bG.prototype.constructor=bG,bG.prototype.type="Fraction",bG.prototype.isFraction=!0,bG.prototype.toJSON=function(){return{mathjs:"Fraction",n:this.s*this.n,d:this.d}},bG.fromJSON=function(e){return new bG(e)},bG)),{isClass:!0}),wG=JV("Matrix",[],(()=>{function e(){if(!(this instanceof e))throw new SyntaxError("Constructor must be called with the new operator")}return e.prototype.type="Matrix",e.prototype.isMatrix=!0,e.prototype.storage=function(){throw new Error("Cannot invoke storage on a Matrix interface")},e.prototype.datatype=function(){throw new Error("Cannot invoke datatype on a Matrix interface")},e.prototype.create=function(e,t){throw new Error("Cannot invoke create on a Matrix interface")},e.prototype.subset=function(e,t,n){throw new Error("Cannot invoke subset on a Matrix interface")},e.prototype.get=function(e){throw new Error("Cannot invoke get on a Matrix interface")},e.prototype.set=function(e,t,n){throw new Error("Cannot invoke set on a Matrix interface")},e.prototype.resize=function(e,t){throw new Error("Cannot invoke resize on a Matrix interface")},e.prototype.reshape=function(e,t){throw new Error("Cannot invoke reshape on a Matrix interface")},e.prototype.clone=function(){throw new Error("Cannot invoke clone on a Matrix interface")},e.prototype.size=function(){throw new Error("Cannot invoke size on a Matrix interface")},e.prototype.map=function(e,t){throw new Error("Cannot invoke map on a Matrix interface")},e.prototype.forEach=function(e){throw new Error("Cannot invoke forEach on a Matrix interface")},e.prototype[Symbol.iterator]=function(){throw new Error("Cannot iterate a Matrix interface")},e.prototype.toArray=function(){throw new Error("Cannot invoke toArray on a Matrix interface")},e.prototype.valueOf=function(){throw new Error("Cannot invoke valueOf on a Matrix interface")},e.prototype.format=function(e){throw new Error("Cannot invoke format on a Matrix interface")},e.prototype.toString=function(){throw new Error("Cannot invoke toString on a Matrix interface")},e}),{isClass:!0});function vG(e,t,n){var r=new(0,e.constructor)(2),s="";if(n){if(n<1)throw new Error("size must be in greater than 0");if(!nG(n))throw new Error("size must be an integer");if(e.greaterThan(r.pow(n-1).sub(1))||e.lessThan(r.pow(n-1).mul(-1)))throw new Error("Value must be in range [-2^".concat(n-1,", 2^").concat(n-1,"-1]"));if(!e.isInteger())throw new Error("Value must be an integer");e.lessThan(0)&&(e=e.add(r.pow(n))),s="i".concat(n)}switch(t){case 2:return"".concat(e.toBinary()).concat(s);case 8:return"".concat(e.toOctal()).concat(s);case 16:return"".concat(e.toHexadecimal()).concat(s);default:throw new Error("Base ".concat(t," not supported "))}}function kG(e,t){return void 0!==t?e.toExponential(t-1):e.toExponential()}function NG(e,t){var n=function(e,t){return"number"==typeof e?sG(e,t):cV(e)?function(e,t){if("function"==typeof t)return t(e);if(!e.isFinite())return e.isNaN()?"NaN":e.gt(0)?"Infinity":"-Infinity";var n,r,s="auto";if(void 0!==t&&(t.notation&&(s=t.notation),"number"==typeof t?n=t:t.precision&&(n=t.precision),t.wordSize&&"number"!=typeof(r=t.wordSize)))throw new Error('Option "wordSize" must be a number');switch(s){case"fixed":return function(e,t){return e.toFixed(t)}(e,n);case"exponential":return kG(e,n);case"engineering":return function(e,t){var n=e.e,r=n%3==0?n:n<0?n-3-n%3:n-n%3,s=e.mul(Math.pow(10,-r)),a=s.toPrecision(t);return-1!==a.indexOf("e")&&(a=s.toString()),a+"e"+(n>=0?"+":"")+r.toString()}(e,n);case"bin":return vG(e,2,r);case"oct":return vG(e,8,r);case"hex":return vG(e,16,r);case"auto":var a=t&&void 0!==t.lowerExp?t.lowerExp:-3,i=t&&void 0!==t.upperExp?t.upperExp:5;if(e.isZero())return"0";var o=e.toSignificantDigits(n),u=o.e;return(u>=a&&u<i?o.toFixed():kG(e,n)).replace(/((\.\d*?)(0+))($|e)/,(function(){var e=arguments[2],t=arguments[4];return"."!==e?e+t:t}));default:throw new Error('Unknown notation "'+s+'". Choose "auto", "exponential", "fixed", "bin", "oct", or "hex.')}}(e,t):function(e){return e&&"object"==typeof e&&"number"==typeof e.s&&"number"==typeof e.n&&"number"==typeof e.d||!1}(e)?t&&"decimal"===t.fraction?e.toString():e.s*e.n+"/"+e.d:Array.isArray(e)?IG(e,t):fV(e)?'"'+e+'"':"function"==typeof e?e.syntax?String(e.syntax):"function":e&&"object"==typeof e?"function"==typeof e.format?e.format(t):e&&e.toString(t)!=={}.toString()?e.toString(t):"{"+Object.keys(e).map((n=>'"'+n+'": '+NG(e[n],t))).join(", ")+"}":String(e)}(e,t);return t&&"object"==typeof t&&"truncate"in t&&n.length>t.truncate?n.substring(0,t.truncate-3)+"...":n}function IG(e,t){if(Array.isArray(e)){for(var n="[",r=e.length,s=0;s<r;s++)0!==s&&(n+=", "),n+=IG(e[s],t);return n+"]"}return NG(e,t)}function CG(e,t,n){if(!(this instanceof CG))throw new SyntaxError("Constructor must be called with the new operator");this.actual=e,this.expected=t,this.relation=n,this.message="Dimension mismatch ("+(Array.isArray(e)?"["+e.join(", ")+"]":e)+" "+(this.relation||"!=")+" "+(Array.isArray(t)?"["+t.join(", ")+"]":t)+")",this.stack=(new Error).stack}function DG(e,t,n){if(!(this instanceof DG))throw new SyntaxError("Constructor must be called with the new operator");this.index=e,arguments.length<3?(this.min=0,this.max=t):(this.min=t,this.max=n),void 0!==this.min&&this.index<this.min?this.message="Index out of range ("+this.index+" < "+this.min+")":void 0!==this.max&&this.index>=this.max?this.message="Index out of range ("+this.index+" > "+(this.max-1)+")":this.message="Index out of range ("+this.index+")",this.stack=(new Error).stack}function EG(e){for(var t=[];Array.isArray(e);)t.push(e.length),e=e[0];return t}function SG(e,t,n){var r,s=e.length;if(s!==t[n])throw new CG(s,t[n]);if(n<t.length-1){var a=n+1;for(r=0;r<s;r++){var i=e[r];if(!Array.isArray(i))throw new CG(t.length-1,t.length,"<");SG(e[r],t,a)}}else for(r=0;r<s;r++)if(Array.isArray(e[r]))throw new CG(t.length+1,t.length,">")}function TG(e,t){if(0===t.length){if(Array.isArray(e))throw new CG(e.length,0)}else SG(e,t,0)}function AG(e,t){if(!lV(e)||!nG(e))throw new TypeError("Index must be an integer (value: "+e+")");if(e<0||"number"==typeof t&&e>=t)throw new DG(e,t)}function $G(e,t,n){if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new Error("Resizing to scalar is not supported");return t.forEach((function(e){if(!lV(e)||!nG(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+NG(t)+")")})),FG(e,t,0,void 0!==n?n:0),e}function FG(e,t,n,r){var s,a,i=e.length,o=t[n],u=Math.min(i,o);if(e.length=o,n<t.length-1){var l=n+1;for(s=0;s<u;s++)a=e[s],Array.isArray(a)||(a=[a],e[s]=a),FG(a,t,l,r);for(s=u;s<o;s++)a=[],e[s]=a,FG(a,t,l,r)}else{for(s=0;s<u;s++)for(;Array.isArray(e[s]);)e[s]=e[s][0];for(s=u;s<o;s++)e[s]=r}}function RG(e,t){var n=_G(e),r=e.slice(),s=e.indexOf(-1);if(e.indexOf(-1,s+1)>=0)throw new Error("More than one wildcard in sizes");if(s>=0){if(t%n!=0)throw new Error("Could not replace wildcard, since "+t+" is no multiple of "+-n);r[s]=-t/n}return r}function _G(e){return e.reduce(((e,t)=>e*t),1)}function MG(e,t,n,r){var s=r||EG(e);if(n)for(var a=0;a<n;a++)e=[e],s.unshift(1);for(e=OG(e,t,0);s.length<t;)s.push(1);return e}function OG(e,t,n){var r,s;if(Array.isArray(e)){var a=n+1;for(r=0,s=e.length;r<s;r++)e[r]=OG(e[r],t,a)}else for(var i=n;i<t;i++)e=[e];return e}function BG(e){if(!Array.isArray(e))return e;var t=[];return e.forEach((function e(n){Array.isArray(n)?n.forEach(e):t.push(n)})),t}function zG(e,t){for(var n,r=0,s=0;s<e.length;s++){var a=e[s],i=Array.isArray(a);if(0===s&&i&&(r=a.length),i&&a.length!==r)return;var o=i?zG(a,t):t(a);if(void 0===n)n=o;else if(n!==o)return"mixed"}return n}CG.prototype=new RangeError,CG.prototype.constructor=RangeError,CG.prototype.name="DimensionError",CG.prototype.isDimensionError=!0,DG.prototype=new RangeError,DG.prototype.constructor=RangeError,DG.prototype.name="IndexError",DG.prototype.isIndexError=!0;var LG=JV("DenseMatrix",["Matrix"],(e=>{var{Matrix:t}=e;function n(e,t){if(!(this instanceof n))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!fV(t))throw new Error("Invalid datatype: "+t);if(gV(e))"DenseMatrix"===e.type?(this._data=XV(e._data),this._size=XV(e._size),this._datatype=t||e._datatype):(this._data=e.toArray(),this._size=e.size(),this._datatype=t||e._datatype);else if(e&&mV(e.data)&&mV(e.size))this._data=e.data,this._size=e.size,TG(this._data,this._size),this._datatype=t||e.datatype;else if(mV(e))this._data=l(e),this._size=EG(this._data),TG(this._data,this._size),this._datatype=t;else{if(e)throw new TypeError("Unsupported type of data ("+KV(e)+")");this._data=[],this._size=[0],this._datatype=t}}function r(e,t){if(!vV(t))throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var r=t.size();if(r.length!==e._size.length)throw new CG(r.length,e._size.length);for(var a=t.min(),i=t.max(),o=0,u=e._size.length;o<u;o++)AG(a[o],e._size[o]),AG(i[o],e._size[o]);return new n(s(e._data,t,r.length,0),e._datatype)}function s(e,t,n,r){var a=r===n-1,i=t.dimension(r);return a?i.map((function(t){return AG(t,e.length),e[t]})).valueOf():i.map((function(a){return AG(a,e.length),s(e[a],t,n,r+1)})).valueOf()}function a(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var s,a=t.size(),o=t.isScalar();if(gV(n)?(s=n.size(),n=n.valueOf()):s=EG(n),o){if(0!==s.length)throw new TypeError("Scalar expected");e.set(t.min(),n,r)}else{if(a.length<e._size.length)throw new CG(a.length,e._size.length,"<");if(s.length<a.length){for(var l=0,c=0;1===a[l]&&1===s[l];)l++;for(;1===a[l];)c++,l++;n=MG(n,a.length,c,s)}if(!YV(a,s))throw new CG(a,s,">");var h=t.max().map((function(e){return e+1}));u(e,h,r);var p=a.length;i(e._data,t,n,p,0)}return e}function i(e,t,n,r,s){var a=s===r-1,o=t.dimension(s);a?o.forEach((function(t,r){AG(t),e[t]=n[r[0]]})):o.forEach((function(a,o){AG(a),i(e[a],t,n[o[0]],r,s+1)}))}function o(e,t,n){if(0===t.length){for(var r=e._data;mV(r);)r=r[0];return r}return e._size=t.slice(0),e._data=$G(e._data,e._size,n),e}function u(e,t,n){for(var r=e._size.slice(0),s=!1;r.length<t.length;)r.push(0),s=!0;for(var a=0,i=t.length;a<i;a++)t[a]>r[a]&&(r[a]=t[a],s=!0);s&&o(e,r,n)}function l(e){for(var t=0,n=e.length;t<n;t++){var r=e[t];mV(r)?e[t]=l(r):r&&!0===r.isMatrix&&(e[t]=l(r.valueOf()))}return e}return n.prototype=new t,n.prototype.createDenseMatrix=function(e,t){return new n(e,t)},Object.defineProperty(n,"name",{value:"DenseMatrix"}),n.prototype.constructor=n,n.prototype.type="DenseMatrix",n.prototype.isDenseMatrix=!0,n.prototype.getDataType=function(){return zG(this._data,KV)},n.prototype.storage=function(){return"dense"},n.prototype.datatype=function(){return this._datatype},n.prototype.create=function(e,t){return new n(e,t)},n.prototype.subset=function(e,t,n){switch(arguments.length){case 1:return r(this,e);case 2:case 3:return a(this,e,t,n);default:throw new SyntaxError("Wrong number of arguments")}},n.prototype.get=function(e){if(!mV(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new CG(e.length,this._size.length);for(var t=0;t<e.length;t++)AG(e[t],this._size[t]);for(var n=this._data,r=0,s=e.length;r<s;r++){var a=e[r];AG(a,n.length),n=n[a]}return n},n.prototype.set=function(e,t,n){if(!mV(e))throw new TypeError("Array expected");if(e.length<this._size.length)throw new CG(e.length,this._size.length,"<");var r,s,a,i=e.map((function(e){return e+1}));u(this,i,n);var o=this._data;for(r=0,s=e.length-1;r<s;r++)AG(a=e[r],o.length),o=o[a];return AG(a=e[e.length-1],o.length),o[a]=t,this},n.prototype.resize=function(e,t,n){if(!yV(e))throw new TypeError("Array or Matrix expected");var r=e.valueOf().map((e=>Array.isArray(e)&&1===e.length?e[0]:e));return o(n?this.clone():this,r,t)},n.prototype.reshape=function(e,t){var n=t?this.clone():this;n._data=function(e,t){var n=BG(e),r=n.length;if(!Array.isArray(e)||!Array.isArray(t))throw new TypeError("Array expected");if(0===t.length)throw new CG(0,r,"!=");var s=_G(t=RG(t,r));if(r!==s)throw new CG(s,r,"!=");try{return function(e,t){for(var n,r=e,s=t.length-1;s>0;s--){var a=t[s];n=[];for(var i=r.length/a,o=0;o<i;o++)n.push(r.slice(o*a,(o+1)*a));r=n}return r}(n,t)}catch(e){if(e instanceof CG)throw new CG(s,r,"!=");throw e}}(n._data,e);var r=n._size.reduce(((e,t)=>e*t));return n._size=RG(e,r),n},n.prototype.clone=function(){return new n({data:XV(this._data),size:XV(this._size),datatype:this._datatype})},n.prototype.size=function(){return this._size.slice(0)},n.prototype.map=function(e){var t=this,r=fG(e),s=function n(s,a){return mV(s)?s.map((function(e,t){return n(e,a.concat(t))})):1===r?e(s):2===r?e(s,a):e(s,a,t)}(this._data,[]);return new n(s,void 0!==this._datatype?zG(s,KV):void 0)},n.prototype.forEach=function(e){var t=this;!function n(r,s){mV(r)?r.forEach((function(e,t){n(e,s.concat(t))})):e(r,s,t)}(this._data,[])},n.prototype[Symbol.iterator]=function*(){yield*function*e(t,n){if(mV(t))for(var r=0;r<t.length;r++)yield*e(t[r],n.concat(r));else yield{value:t,index:n}}(this._data,[])},n.prototype.rows=function(){var e=[];if(2!==this.size().length)throw new TypeError("Rows can only be returned for a 2D matrix.");var t=this._data;for(var r of t)e.push(new n([r],this._datatype));return e},n.prototype.columns=function(){var e=this,t=[],r=this.size();if(2!==r.length)throw new TypeError("Rows can only be returned for a 2D matrix.");for(var s=this._data,a=function(r){var a=s.map((e=>[e[r]]));t.push(new n(a,e._datatype))},i=0;i<r[1];i++)a(i);return t},n.prototype.toArray=function(){return XV(this._data)},n.prototype.valueOf=function(){return this._data},n.prototype.format=function(e){return NG(this._data,e)},n.prototype.toString=function(){return NG(this._data)},n.prototype.toJSON=function(){return{mathjs:"DenseMatrix",data:this._data,size:this._size,datatype:this._datatype}},n.prototype.diagonal=function(e){if(e){if(cV(e)&&(e=e.toNumber()),!lV(e)||!nG(e))throw new TypeError("The parameter k must be an integer number")}else e=0;for(var t=e>0?e:0,r=e<0?-e:0,s=this._size[0],a=this._size[1],i=Math.min(s-r,a-t),o=[],u=0;u<i;u++)o[u]=this._data[u+r][u+t];return new n({data:o,size:[i],datatype:this._datatype})},n.diagonal=function(e,t,r,s){if(!mV(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map((function(e){if(cV(e)&&(e=e.toNumber()),!lV(e)||!nG(e)||e<1)throw new Error("Size values must be positive integers");return e})),r){if(cV(r)&&(r=r.toNumber()),!lV(r)||!nG(r))throw new TypeError("The parameter k must be an integer number")}else r=0;var a,i=r>0?r:0,o=r<0?-r:0,u=e[0],l=e[1],c=Math.min(u-o,l-i);if(mV(t)){if(t.length!==c)throw new Error("Invalid value array length");a=function(e){return t[e]}}else if(gV(t)){var h=t.size();if(1!==h.length||h[0]!==c)throw new Error("Invalid matrix length");a=function(e){return t.get([e])}}else a=function(){return t};s||(s=cV(a(0))?a(0).mul(0):0);var p=[];if(e.length>0){p=$G(p,e,s);for(var d=0;d<c;d++)p[d+o][d+i]=a(d)}return new n({data:p,size:[u,l]})},n.fromJSON=function(e){return new n(e)},n.prototype.swapRows=function(e,t){if(!(lV(e)&&nG(e)&&lV(t)&&nG(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return AG(e,this._size[0]),AG(t,this._size[0]),n._swapRows(e,t,this._data),this},n._swapRows=function(e,t,n){var r=n[e];n[e]=n[t],n[t]=r},n}),{isClass:!0}),PG=n(616);function UG(e,t){if(VG(e)&&WG(e,t))return e[t];if("function"==typeof e[t]&&function(e,t){return!(null==e||"function"!=typeof e[t]||ZV(e,t)&&Object.getPrototypeOf&&t in Object.getPrototypeOf(e)||!ZV(jG,t)&&(t in Object.prototype||t in Function.prototype))}(e,t))throw new Error('Cannot access method "'+t+'" as a property');throw new Error('No access to property "'+t+'"')}function WG(e,t){return!(!e||"object"!=typeof e||!ZV(GG,t)&&(t in Object.prototype||t in Function.prototype))}function VG(e){return"object"==typeof e&&e&&e.constructor===Object}var GG={length:!0,name:!0},jG={toString:!0,valueOf:!0,toLocaleString:!0};function HG(e){return!!e&&(e instanceof Map||e instanceof class{constructor(e){this.wrappedObject=e}keys(){return Object.keys(this.wrappedObject)}get(e){return UG(this.wrappedObject,e)}set(e,t){return function(e,t,n){if(VG(e)&&WG(e,t))return e[t]=n,n;throw new Error('No access to property "'+t+'"')}(this.wrappedObject,e,t),this}has(e){return e in this.wrappedObject}}||"function"==typeof e.set&&"function"==typeof e.get&&"function"==typeof e.keys&&"function"==typeof e.has)}var qG=function(){return qG=PG.create,PG},KG=JV("typed",["?BigNumber","?Complex","?DenseMatrix","?Fraction"],(function(e){var{BigNumber:t,Complex:n,DenseMatrix:r,Fraction:s}=e,a=qG();return a.clear(),a.addTypes([{name:"number",test:lV},{name:"Complex",test:hV},{name:"BigNumber",test:cV},{name:"Fraction",test:pV},{name:"Unit",test:dV},{name:"identifier",test:e=>fV&&/^(?:[A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])(?:[0-9A-Za-z\xAA\xB5\xBA\xC0-\xD6\xD8-\xF6\xF8-\u02C1\u02C6-\u02D1\u02E0-\u02E4\u02EC\u02EE\u0370-\u0374\u0376\u0377\u037A-\u037D\u037F\u0386\u0388-\u038A\u038C\u038E-\u03A1\u03A3-\u03F5\u03F7-\u0481\u048A-\u052F\u0531-\u0556\u0559\u0560-\u0588\u05D0-\u05EA\u05EF-\u05F2\u0620-\u064A\u066E\u066F\u0671-\u06D3\u06D5\u06E5\u06E6\u06EE\u06EF\u06FA-\u06FC\u06FF\u0710\u0712-\u072F\u074D-\u07A5\u07B1\u07CA-\u07EA\u07F4\u07F5\u07FA\u0800-\u0815\u081A\u0824\u0828\u0840-\u0858\u0860-\u086A\u0870-\u0887\u0889-\u088E\u08A0-\u08C9\u0904-\u0939\u093D\u0950\u0958-\u0961\u0971-\u0980\u0985-\u098C\u098F\u0990\u0993-\u09A8\u09AA-\u09B0\u09B2\u09B6-\u09B9\u09BD\u09CE\u09DC\u09DD\u09DF-\u09E1\u09F0\u09F1\u09FC\u0A05-\u0A0A\u0A0F\u0A10\u0A13-\u0A28\u0A2A-\u0A30\u0A32\u0A33\u0A35\u0A36\u0A38\u0A39\u0A59-\u0A5C\u0A5E\u0A72-\u0A74\u0A85-\u0A8D\u0A8F-\u0A91\u0A93-\u0AA8\u0AAA-\u0AB0\u0AB2\u0AB3\u0AB5-\u0AB9\u0ABD\u0AD0\u0AE0\u0AE1\u0AF9\u0B05-\u0B0C\u0B0F\u0B10\u0B13-\u0B28\u0B2A-\u0B30\u0B32\u0B33\u0B35-\u0B39\u0B3D\u0B5C\u0B5D\u0B5F-\u0B61\u0B71\u0B83\u0B85-\u0B8A\u0B8E-\u0B90\u0B92-\u0B95\u0B99\u0B9A\u0B9C\u0B9E\u0B9F\u0BA3\u0BA4\u0BA8-\u0BAA\u0BAE-\u0BB9\u0BD0\u0C05-\u0C0C\u0C0E-\u0C10\u0C12-\u0C28\u0C2A-\u0C39\u0C3D\u0C58-\u0C5A\u0C5D\u0C60\u0C61\u0C80\u0C85-\u0C8C\u0C8E-\u0C90\u0C92-\u0CA8\u0CAA-\u0CB3\u0CB5-\u0CB9\u0CBD\u0CDD\u0CDE\u0CE0\u0CE1\u0CF1\u0CF2\u0D04-\u0D0C\u0D0E-\u0D10\u0D12-\u0D3A\u0D3D\u0D4E\u0D54-\u0D56\u0D5F-\u0D61\u0D7A-\u0D7F\u0D85-\u0D96\u0D9A-\u0DB1\u0DB3-\u0DBB\u0DBD\u0DC0-\u0DC6\u0E01-\u0E30\u0E32\u0E33\u0E40-\u0E46\u0E81\u0E82\u0E84\u0E86-\u0E8A\u0E8C-\u0EA3\u0EA5\u0EA7-\u0EB0\u0EB2\u0EB3\u0EBD\u0EC0-\u0EC4\u0EC6\u0EDC-\u0EDF\u0F00\u0F40-\u0F47\u0F49-\u0F6C\u0F88-\u0F8C\u1000-\u102A\u103F\u1050-\u1055\u105A-\u105D\u1061\u1065\u1066\u106E-\u1070\u1075-\u1081\u108E\u10A0-\u10C5\u10C7\u10CD\u10D0-\u10FA\u10FC-\u1248\u124A-\u124D\u1250-\u1256\u1258\u125A-\u125D\u1260-\u1288\u128A-\u128D\u1290-\u12B0\u12B2-\u12B5\u12B8-\u12BE\u12C0\u12C2-\u12C5\u12C8-\u12D6\u12D8-\u1310\u1312-\u1315\u1318-\u135A\u1380-\u138F\u13A0-\u13F5\u13F8-\u13FD\u1401-\u166C\u166F-\u167F\u1681-\u169A\u16A0-\u16EA\u16F1-\u16F8\u1700-\u1711\u171F-\u1731\u1740-\u1751\u1760-\u176C\u176E-\u1770\u1780-\u17B3\u17D7\u17DC\u1820-\u1878\u1880-\u1884\u1887-\u18A8\u18AA\u18B0-\u18F5\u1900-\u191E\u1950-\u196D\u1970-\u1974\u1980-\u19AB\u19B0-\u19C9\u1A00-\u1A16\u1A20-\u1A54\u1AA7\u1B05-\u1B33\u1B45-\u1B4C\u1B83-\u1BA0\u1BAE\u1BAF\u1BBA-\u1BE5\u1C00-\u1C23\u1C4D-\u1C4F\u1C5A-\u1C7D\u1C80-\u1C88\u1C90-\u1CBA\u1CBD-\u1CBF\u1CE9-\u1CEC\u1CEE-\u1CF3\u1CF5\u1CF6\u1CFA\u1D00-\u1DBF\u1E00-\u1F15\u1F18-\u1F1D\u1F20-\u1F45\u1F48-\u1F4D\u1F50-\u1F57\u1F59\u1F5B\u1F5D\u1F5F-\u1F7D\u1F80-\u1FB4\u1FB6-\u1FBC\u1FBE\u1FC2-\u1FC4\u1FC6-\u1FCC\u1FD0-\u1FD3\u1FD6-\u1FDB\u1FE0-\u1FEC\u1FF2-\u1FF4\u1FF6-\u1FFC\u2071\u207F\u2090-\u209C\u2102\u2107\u210A-\u2113\u2115\u2119-\u211D\u2124\u2126\u2128\u212A-\u212D\u212F-\u2139\u213C-\u213F\u2145-\u2149\u214E\u2183\u2184\u2C00-\u2CE4\u2CEB-\u2CEE\u2CF2\u2CF3\u2D00-\u2D25\u2D27\u2D2D\u2D30-\u2D67\u2D6F\u2D80-\u2D96\u2DA0-\u2DA6\u2DA8-\u2DAE\u2DB0-\u2DB6\u2DB8-\u2DBE\u2DC0-\u2DC6\u2DC8-\u2DCE\u2DD0-\u2DD6\u2DD8-\u2DDE\u2E2F\u3005\u3006\u3031-\u3035\u303B\u303C\u3041-\u3096\u309D-\u309F\u30A1-\u30FA\u30FC-\u30FF\u3105-\u312F\u3131-\u318E\u31A0-\u31BF\u31F0-\u31FF\u3400-\u4DBF\u4E00-\uA48C\uA4D0-\uA4FD\uA500-\uA60C\uA610-\uA61F\uA62A\uA62B\uA640-\uA66E\uA67F-\uA69D\uA6A0-\uA6E5\uA717-\uA71F\uA722-\uA788\uA78B-\uA7CA\uA7D0\uA7D1\uA7D3\uA7D5-\uA7D9\uA7F2-\uA801\uA803-\uA805\uA807-\uA80A\uA80C-\uA822\uA840-\uA873\uA882-\uA8B3\uA8F2-\uA8F7\uA8FB\uA8FD\uA8FE\uA90A-\uA925\uA930-\uA946\uA960-\uA97C\uA984-\uA9B2\uA9CF\uA9E0-\uA9E4\uA9E6-\uA9EF\uA9FA-\uA9FE\uAA00-\uAA28\uAA40-\uAA42\uAA44-\uAA4B\uAA60-\uAA76\uAA7A\uAA7E-\uAAAF\uAAB1\uAAB5\uAAB6\uAAB9-\uAABD\uAAC0\uAAC2\uAADB-\uAADD\uAAE0-\uAAEA\uAAF2-\uAAF4\uAB01-\uAB06\uAB09-\uAB0E\uAB11-\uAB16\uAB20-\uAB26\uAB28-\uAB2E\uAB30-\uAB5A\uAB5C-\uAB69\uAB70-\uABE2\uAC00-\uD7A3\uD7B0-\uD7C6\uD7CB-\uD7FB\uF900-\uFA6D\uFA70-\uFAD9\uFB00-\uFB06\uFB13-\uFB17\uFB1D\uFB1F-\uFB28\uFB2A-\uFB36\uFB38-\uFB3C\uFB3E\uFB40\uFB41\uFB43\uFB44\uFB46-\uFBB1\uFBD3-\uFD3D\uFD50-\uFD8F\uFD92-\uFDC7\uFDF0-\uFDFB\uFE70-\uFE74\uFE76-\uFEFC\uFF21-\uFF3A\uFF41-\uFF5A\uFF66-\uFFBE\uFFC2-\uFFC7\uFFCA-\uFFCF\uFFD2-\uFFD7\uFFDA-\uFFDC]|\uD800[\uDC00-\uDC0B\uDC0D-\uDC26\uDC28-\uDC3A\uDC3C\uDC3D\uDC3F-\uDC4D\uDC50-\uDC5D\uDC80-\uDCFA\uDE80-\uDE9C\uDEA0-\uDED0\uDF00-\uDF1F\uDF2D-\uDF40\uDF42-\uDF49\uDF50-\uDF75\uDF80-\uDF9D\uDFA0-\uDFC3\uDFC8-\uDFCF]|\uD801[\uDC00-\uDC9D\uDCB0-\uDCD3\uDCD8-\uDCFB\uDD00-\uDD27\uDD30-\uDD63\uDD70-\uDD7A\uDD7C-\uDD8A\uDD8C-\uDD92\uDD94\uDD95\uDD97-\uDDA1\uDDA3-\uDDB1\uDDB3-\uDDB9\uDDBB\uDDBC\uDE00-\uDF36\uDF40-\uDF55\uDF60-\uDF67\uDF80-\uDF85\uDF87-\uDFB0\uDFB2-\uDFBA]|\uD802[\uDC00-\uDC05\uDC08\uDC0A-\uDC35\uDC37\uDC38\uDC3C\uDC3F-\uDC55\uDC60-\uDC76\uDC80-\uDC9E\uDCE0-\uDCF2\uDCF4\uDCF5\uDD00-\uDD15\uDD20-\uDD39\uDD80-\uDDB7\uDDBE\uDDBF\uDE00\uDE10-\uDE13\uDE15-\uDE17\uDE19-\uDE35\uDE60-\uDE7C\uDE80-\uDE9C\uDEC0-\uDEC7\uDEC9-\uDEE4\uDF00-\uDF35\uDF40-\uDF55\uDF60-\uDF72\uDF80-\uDF91]|\uD803[\uDC00-\uDC48\uDC80-\uDCB2\uDCC0-\uDCF2\uDD00-\uDD23\uDE80-\uDEA9\uDEB0\uDEB1\uDF00-\uDF1C\uDF27\uDF30-\uDF45\uDF70-\uDF81\uDFB0-\uDFC4\uDFE0-\uDFF6]|\uD804[\uDC03-\uDC37\uDC71\uDC72\uDC75\uDC83-\uDCAF\uDCD0-\uDCE8\uDD03-\uDD26\uDD44\uDD47\uDD50-\uDD72\uDD76\uDD83-\uDDB2\uDDC1-\uDDC4\uDDDA\uDDDC\uDE00-\uDE11\uDE13-\uDE2B\uDE80-\uDE86\uDE88\uDE8A-\uDE8D\uDE8F-\uDE9D\uDE9F-\uDEA8\uDEB0-\uDEDE\uDF05-\uDF0C\uDF0F\uDF10\uDF13-\uDF28\uDF2A-\uDF30\uDF32\uDF33\uDF35-\uDF39\uDF3D\uDF50\uDF5D-\uDF61]|\uD805[\uDC00-\uDC34\uDC47-\uDC4A\uDC5F-\uDC61\uDC80-\uDCAF\uDCC4\uDCC5\uDCC7\uDD80-\uDDAE\uDDD8-\uDDDB\uDE00-\uDE2F\uDE44\uDE80-\uDEAA\uDEB8\uDF00-\uDF1A\uDF40-\uDF46]|\uD806[\uDC00-\uDC2B\uDCA0-\uDCDF\uDCFF-\uDD06\uDD09\uDD0C-\uDD13\uDD15\uDD16\uDD18-\uDD2F\uDD3F\uDD41\uDDA0-\uDDA7\uDDAA-\uDDD0\uDDE1\uDDE3\uDE00\uDE0B-\uDE32\uDE3A\uDE50\uDE5C-\uDE89\uDE9D\uDEB0-\uDEF8]|\uD807[\uDC00-\uDC08\uDC0A-\uDC2E\uDC40\uDC72-\uDC8F\uDD00-\uDD06\uDD08\uDD09\uDD0B-\uDD30\uDD46\uDD60-\uDD65\uDD67\uDD68\uDD6A-\uDD89\uDD98\uDEE0-\uDEF2\uDFB0]|\uD808[\uDC00-\uDF99]|\uD809[\uDC80-\uDD43]|\uD80B[\uDF90-\uDFF0]|[\uD80C\uD81C-\uD820\uD822\uD840-\uD868\uD86A-\uD86C\uD86F-\uD872\uD874-\uD879\uD880-\uD883][\uDC00-\uDFFF]|\uD80D[\uDC00-\uDC2E]|\uD811[\uDC00-\uDE46]|\uD81A[\uDC00-\uDE38\uDE40-\uDE5E\uDE70-\uDEBE\uDED0-\uDEED\uDF00-\uDF2F\uDF40-\uDF43\uDF63-\uDF77\uDF7D-\uDF8F]|\uD81B[\uDE40-\uDE7F\uDF00-\uDF4A\uDF50\uDF93-\uDF9F\uDFE0\uDFE1\uDFE3]|\uD821[\uDC00-\uDFF7]|\uD823[\uDC00-\uDCD5\uDD00-\uDD08]|\uD82B[\uDFF0-\uDFF3\uDFF5-\uDFFB\uDFFD\uDFFE]|\uD82C[\uDC00-\uDD22\uDD50-\uDD52\uDD64-\uDD67\uDD70-\uDEFB]|\uD82F[\uDC00-\uDC6A\uDC70-\uDC7C\uDC80-\uDC88\uDC90-\uDC99]|\uD835[\uDC00-\uDC54\uDC56-\uDC9C\uDC9E\uDC9F\uDCA2\uDCA5\uDCA6\uDCA9-\uDCAC\uDCAE-\uDCB9\uDCBB\uDCBD-\uDCC3\uDCC5-\uDD05\uDD07-\uDD0A\uDD0D-\uDD14\uDD16-\uDD1C\uDD1E-\uDD39\uDD3B-\uDD3E\uDD40-\uDD44\uDD46\uDD4A-\uDD50\uDD52-\uDEA5\uDEA8-\uDEC0\uDEC2-\uDEDA\uDEDC-\uDEFA\uDEFC-\uDF14\uDF16-\uDF34\uDF36-\uDF4E\uDF50-\uDF6E\uDF70-\uDF88\uDF8A-\uDFA8\uDFAA-\uDFC2\uDFC4-\uDFCB]|\uD837[\uDF00-\uDF1E]|\uD838[\uDD00-\uDD2C\uDD37-\uDD3D\uDD4E\uDE90-\uDEAD\uDEC0-\uDEEB]|\uD839[\uDFE0-\uDFE6\uDFE8-\uDFEB\uDFED\uDFEE\uDFF0-\uDFFE]|\uD83A[\uDC00-\uDCC4\uDD00-\uDD43\uDD4B]|\uD83B[\uDE00-\uDE03\uDE05-\uDE1F\uDE21\uDE22\uDE24\uDE27\uDE29-\uDE32\uDE34-\uDE37\uDE39\uDE3B\uDE42\uDE47\uDE49\uDE4B\uDE4D-\uDE4F\uDE51\uDE52\uDE54\uDE57\uDE59\uDE5B\uDE5D\uDE5F\uDE61\uDE62\uDE64\uDE67-\uDE6A\uDE6C-\uDE72\uDE74-\uDE77\uDE79-\uDE7C\uDE7E\uDE80-\uDE89\uDE8B-\uDE9B\uDEA1-\uDEA3\uDEA5-\uDEA9\uDEAB-\uDEBB]|\uD869[\uDC00-\uDEDF\uDF00-\uDFFF]|\uD86D[\uDC00-\uDF38\uDF40-\uDFFF]|\uD86E[\uDC00-\uDC1D\uDC20-\uDFFF]|\uD873[\uDC00-\uDEA1\uDEB0-\uDFFF]|\uD87A[\uDC00-\uDFE0]|\uD87E[\uDC00-\uDE1D]|\uD884[\uDC00-\uDF4A])*$/.test(e)},{name:"string",test:fV},{name:"Chain",test:qV},{name:"Array",test:mV},{name:"Matrix",test:gV},{name:"DenseMatrix",test:bV},{name:"SparseMatrix",test:xV},{name:"Range",test:wV},{name:"Index",test:vV},{name:"boolean",test:kV},{name:"ResultSet",test:NV},{name:"Help",test:IV},{name:"function",test:CV},{name:"Date",test:DV},{name:"RegExp",test:EV},{name:"null",test:TV},{name:"undefined",test:AV},{name:"AccessorNode",test:$V},{name:"ArrayNode",test:FV},{name:"AssignmentNode",test:RV},{name:"BlockNode",test:_V},{name:"ConditionalNode",test:MV},{name:"ConstantNode",test:OV},{name:"FunctionNode",test:zV},{name:"FunctionAssignmentNode",test:BV},{name:"IndexNode",test:LV},{name:"Node",test:PV},{name:"ObjectNode",test:UV},{name:"OperatorNode",test:WV},{name:"ParenthesisNode",test:VV},{name:"RangeNode",test:GV},{name:"RelationalNode",test:jV},{name:"SymbolNode",test:HV},{name:"Map",test:HG},{name:"Object",test:SV}]),a.addConversions([{from:"number",to:"BigNumber",convert:function(e){if(t||XG(e),e.toExponential().replace(/e.*$/,"").replace(/^0\.?0*|\./,"").length>15)throw new TypeError("Cannot implicitly convert a number with >15 significant digits to BigNumber (value: "+e+"). Use function bignumber(x) to convert to BigNumber.");return new t(e)}},{from:"number",to:"Complex",convert:function(e){return n||YG(e),new n(e,0)}},{from:"BigNumber",to:"Complex",convert:function(e){return n||YG(e),new n(e.toNumber(),0)}},{from:"Fraction",to:"BigNumber",convert:function(e){throw new TypeError("Cannot implicitly convert a Fraction to BigNumber or vice versa. Use function bignumber(x) to convert to BigNumber or fraction(x) to convert to Fraction.")}},{from:"Fraction",to:"Complex",convert:function(e){return n||YG(e),new n(e.valueOf(),0)}},{from:"number",to:"Fraction",convert:function(e){s||ZG(e);var t=new s(e);if(t.valueOf()!==e)throw new TypeError("Cannot implicitly convert a number to a Fraction when there will be a loss of precision (value: "+e+"). Use function fraction(x) to convert to Fraction.");return t}},{from:"string",to:"number",convert:function(e){var t=Number(e);if(isNaN(t))throw new Error('Cannot convert "'+e+'" to a number');return t}},{from:"string",to:"BigNumber",convert:function(e){t||XG(e);try{return new t(e)}catch(t){throw new Error('Cannot convert "'+e+'" to BigNumber')}}},{from:"string",to:"Fraction",convert:function(e){s||ZG(e);try{return new s(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Fraction')}}},{from:"string",to:"Complex",convert:function(e){n||YG(e);try{return new n(e)}catch(t){throw new Error('Cannot convert "'+e+'" to Complex')}}},{from:"boolean",to:"number",convert:function(e){return+e}},{from:"boolean",to:"BigNumber",convert:function(e){return t||XG(e),new t(+e)}},{from:"boolean",to:"Fraction",convert:function(e){return s||ZG(e),new s(+e)}},{from:"boolean",to:"string",convert:function(e){return String(e)}},{from:"Array",to:"Matrix",convert:function(e){return r||function(){throw new Error("Cannot convert array into a Matrix: no class 'DenseMatrix' provided")}(),new r(e)}},{from:"Matrix",to:"Array",convert:function(e){return e.valueOf()}}]),a.onMismatch=(e,t,n)=>{var r=a.createError(e,t,n);if(["wrongType","mismatch"].includes(r.data.category)&&1===t.length&&yV(t[0])&&n.some((e=>!e.params.includes(",")))){var s=new TypeError("Function '".concat(e,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(e,")'."));throw s.data=r.data,s}throw r},a.onMismatch=(e,t,n)=>{var r=a.createError(e,t,n);if(["wrongType","mismatch"].includes(r.data.category)&&1===t.length&&yV(t[0])&&n.some((e=>!e.params.includes(",")))){var s=new TypeError("Function '".concat(e,"' doesn't apply to matrices. To call it ")+"elementwise on a matrix 'M', try 'map(M, ".concat(e,")'."));throw s.data=r.data,s}throw r},a}));function XG(e){throw new Error("Cannot convert value ".concat(e," into a BigNumber: no class 'BigNumber' provided"))}function YG(e){throw new Error("Cannot convert value ".concat(e," into a Complex number: no class 'Complex' provided"))}function ZG(e){throw new Error("Cannot convert value ".concat(e," into a Fraction, no class 'Fraction' provided."))}var JG=JV("compareUnits",["typed"],(e=>{var{typed:t}=e;return{"Unit, Unit":t.referToSelf((e=>(n,r)=>{if(!n.equalBase(r))throw new Error("Cannot compare units with different base");return t.find(e,[n.valueType(),r.valueType()])(n.value,r.value)}))}})),QG="equalScalar",ej=JV(QG,["typed","config"],(e=>{var{typed:t,config:n}=e,r=JG({typed:t});return t(QG,{"boolean, boolean":function(e,t){return e===t},"number, number":function(e,t){return cG(e,t,n.epsilon)},"BigNumber, BigNumber":function(e,t){return e.eq(t)||function(e,t,n){if(null==n)return e.eq(t);if(e.eq(t))return!0;if(e.isNaN()||t.isNaN())return!1;if(e.isFinite()&&t.isFinite()){var r=e.minus(t).abs();if(r.isZero())return!0;var s=e.constructor.max(e.abs(),t.abs());return r.lte(s.times(n))}return!1}(e,t,n.epsilon)},"Fraction, Fraction":function(e,t){return e.equals(t)},"Complex, Complex":function(e,t){return function(e,t,n){return cG(e.re,t.re,n)&&cG(e.im,t.im,n)}(e,t,n.epsilon)}},r)}));JV(QG,["typed","config"],(e=>{var{typed:t,config:n}=e;return t(QG,{"number, number":function(e,t){return cG(e,t,n.epsilon)}})})),Math.pow(2,53),JV("hex",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("hex",{"number | BigNumber":function(e){return n(e,{notation:"hex"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"hex",wordSize:t})}})}));var tj=JV("map",["typed"],(e=>{var{typed:t}=e;return t("map",{"Array, function":nj,"Matrix, function":function(e,t){return e.map(t)}})}));function nj(e,t){var n=fG(t);return function r(s,a){if(Array.isArray(s))return s.map((function(e,t){return r(e,a.concat(t))}));try{return 1===n?t(s):2===n?t(s,a):t(s,a,e)}catch(t){if(t instanceof TypeError&&"data"in t&&"wrongType"===t.data.category){var i="map attempted to call '".concat(t.data.fn,"(").concat(s),o=JSON.stringify(a);throw 2===n?i+=","+o:1!==n&&(i+=",".concat(o,",").concat(e)),i+=")' but argument ".concat(t.data.index+1," of type "),i+="".concat(t.data.actual," does not match expected type "),i+=t.data.expected.join(" or "),new TypeError(i)}throw t}}(e,[])}JV("oct",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("oct",{"number | BigNumber":function(e){return n(e,{notation:"oct"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"oct",wordSize:t})}})}));n(676);Date.now();var rj=JV("SparseMatrix",["typed","equalScalar","Matrix"],(e=>{var{typed:t,equalScalar:n,Matrix:r}=e;function s(e,t){if(!(this instanceof s))throw new SyntaxError("Constructor must be called with the new operator");if(t&&!fV(t))throw new Error("Invalid datatype: "+t);if(gV(e))!function(e,t,n){"SparseMatrix"===t.type?(e._values=t._values?XV(t._values):void 0,e._index=XV(t._index),e._ptr=XV(t._ptr),e._size=XV(t._size),e._datatype=n||t._datatype):a(e,t.valueOf(),n||t._datatype)}(this,e,t);else if(e&&mV(e.index)&&mV(e.ptr)&&mV(e.size))this._values=e.values,this._index=e.index,this._ptr=e.ptr,this._size=e.size,this._datatype=t||e.datatype;else if(mV(e))a(this,e,t);else{if(e)throw new TypeError("Unsupported type of data ("+KV(e)+")");this._values=[],this._index=[],this._ptr=[0],this._size=[0,0],this._datatype=t}}function a(e,r,s){e._values=[],e._index=[],e._ptr=[],e._datatype=s;var a=r.length,i=0,o=n,u=0;if(fV(s)&&(o=t.find(n,[s,s])||n,u=t.convert(0,s)),a>0){var l=0;do{e._ptr.push(e._index.length);for(var c=0;c<a;c++){var h=r[c];if(mV(h)){if(0===l&&i<h.length&&(i=h.length),l<h.length){var p=h[l];o(p,u)||(e._values.push(p),e._index.push(c))}}else 0===l&&i<1&&(i=1),o(h,u)||(e._values.push(h),e._index.push(c))}l++}while(l<i)}e._ptr.push(e._index.length),e._size=[a,i]}function i(e,t){if(!vV(t))throw new TypeError("Invalid index");if(t.isScalar())return e.get(t.min());var n,r,a,i,o=t.size();if(o.length!==e._size.length)throw new CG(o.length,e._size.length);var u=t.min(),l=t.max();for(n=0,r=e._size.length;n<r;n++)AG(u[n],e._size[n]),AG(l[n],e._size[n]);var c=e._values,h=e._index,p=e._ptr,d=t.dimension(0),f=t.dimension(1),m=[],g=[];d.forEach((function(e,t){g[e]=t[0],m[e]=!0}));var y=c?[]:void 0,b=[],x=[];return f.forEach((function(e){for(x.push(b.length),a=p[e],i=p[e+1];a<i;a++)n=h[a],!0===m[n]&&(b.push(g[n]),y&&y.push(c[a]))})),x.push(b.length),new s({values:y,index:b,ptr:x,size:o,datatype:e._datatype})}function o(e,t,n,r){if(!t||!0!==t.isIndex)throw new TypeError("Invalid index");var s,a=t.size(),i=t.isScalar();if(gV(n)?(s=n.size(),n=n.toArray()):s=EG(n),i){if(0!==s.length)throw new TypeError("Scalar expected");e.set(t.min(),n,r)}else{if(1!==a.length&&2!==a.length)throw new CG(a.length,e._size.length,"<");if(s.length<a.length){for(var o=0,u=0;1===a[o]&&1===s[o];)o++;for(;1===a[o];)u++,o++;n=MG(n,a.length,u,s)}if(!YV(a,s))throw new CG(a,s,">");if(1===a.length)t.dimension(0).forEach((function(t,s){AG(t),e.set([t,0],n[s[0]],r)}));else{var l=t.dimension(0),c=t.dimension(1);l.forEach((function(t,s){AG(t),c.forEach((function(a,i){AG(a),e.set([t,a],n[s[0]][i[0]],r)}))}))}}return e}function u(e,t,n,r){if(n-t==0)return n;for(var s=t;s<n;s++)if(r[s]===e)return s;return t}function l(e,t,n,r,s,a,i){s.splice(e,0,r),a.splice(e,0,t);for(var o=n+1;o<i.length;o++)i[o]++}function c(e,r,s,a){var i=a||0,o=n,u=0;fV(e._datatype)&&(o=t.find(n,[e._datatype,e._datatype])||n,u=t.convert(0,e._datatype),i=t.convert(i,e._datatype));var l,c,h,p=!o(i,u),d=e._size[0],f=e._size[1];if(s>f){for(c=f;c<s;c++)if(e._ptr[c]=e._values.length,p)for(l=0;l<d;l++)e._values.push(i),e._index.push(l);e._ptr[s]=e._values.length}else s<f&&(e._ptr.splice(s+1,f-s),e._values.splice(e._ptr[s],e._values.length),e._index.splice(e._ptr[s],e._index.length));if(f=s,r>d){if(p){var m=0;for(c=0;c<f;c++){e._ptr[c]=e._ptr[c]+m,h=e._ptr[c+1]+m;var g=0;for(l=d;l<r;l++,g++)e._values.splice(h+g,0,i),e._index.splice(h+g,0,l),m++}e._ptr[f]=e._values.length}}else if(r<d){var y=0;for(c=0;c<f;c++){e._ptr[c]=e._ptr[c]-y;var b=e._ptr[c],x=e._ptr[c+1]-y;for(h=b;h<x;h++)(l=e._index[h])>r-1&&(e._values.splice(h,1),e._index.splice(h,1),y++)}e._ptr[c]=e._values.length}return e._size[0]=r,e._size[1]=s,e}function h(e,t,n,r,s){var a,i,o=r[0],u=r[1],l=[];for(a=0;a<o;a++)for(l[a]=[],i=0;i<u;i++)l[a][i]=0;for(i=0;i<u;i++)for(var c=n[i],h=n[i+1],p=c;p<h;p++)l[a=t[p]][i]=e?s?XV(e[p]):e[p]:1;return l}return s.prototype=new r,s.prototype.createSparseMatrix=function(e,t){return new s(e,t)},Object.defineProperty(s,"name",{value:"SparseMatrix"}),s.prototype.constructor=s,s.prototype.type="SparseMatrix",s.prototype.isSparseMatrix=!0,s.prototype.getDataType=function(){return zG(this._values,KV)},s.prototype.storage=function(){return"sparse"},s.prototype.datatype=function(){return this._datatype},s.prototype.create=function(e,t){return new s(e,t)},s.prototype.density=function(){var e=this._size[0],t=this._size[1];return 0!==e&&0!==t?this._index.length/(e*t):0},s.prototype.subset=function(e,t,n){if(!this._values)throw new Error("Cannot invoke subset on a Pattern only matrix");switch(arguments.length){case 1:return i(this,e);case 2:case 3:return o(this,e,t,n);default:throw new SyntaxError("Wrong number of arguments")}},s.prototype.get=function(e){if(!mV(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new CG(e.length,this._size.length);if(!this._values)throw new Error("Cannot invoke get on a Pattern only matrix");var t=e[0],n=e[1];AG(t,this._size[0]),AG(n,this._size[1]);var r=u(t,this._ptr[n],this._ptr[n+1],this._index);return r<this._ptr[n+1]&&this._index[r]===t?this._values[r]:0},s.prototype.set=function(e,r,s){if(!mV(e))throw new TypeError("Array expected");if(e.length!==this._size.length)throw new CG(e.length,this._size.length);if(!this._values)throw new Error("Cannot invoke set on a Pattern only matrix");var a=e[0],i=e[1],o=this._size[0],h=this._size[1],p=n,d=0;fV(this._datatype)&&(p=t.find(n,[this._datatype,this._datatype])||n,d=t.convert(0,this._datatype)),(a>o-1||i>h-1)&&(c(this,Math.max(a+1,o),Math.max(i+1,h),s),o=this._size[0],h=this._size[1]),AG(a,o),AG(i,h);var f=u(a,this._ptr[i],this._ptr[i+1],this._index);return f<this._ptr[i+1]&&this._index[f]===a?p(r,d)?function(e,t,n,r,s){n.splice(e,1),r.splice(e,1);for(var a=t+1;a<s.length;a++)s[a]--}(f,i,this._values,this._index,this._ptr):this._values[f]=r:p(r,d)||l(f,a,i,r,this._values,this._index,this._ptr),this},s.prototype.resize=function(e,t,n){if(!yV(e))throw new TypeError("Array or Matrix expected");var r=e.valueOf().map((e=>Array.isArray(e)&&1===e.length?e[0]:e));if(2!==r.length)throw new Error("Only two dimensions matrix are supported");return r.forEach((function(e){if(!lV(e)||!nG(e)||e<0)throw new TypeError("Invalid size, must contain positive integers (size: "+NG(r)+")")})),c(n?this.clone():this,r[0],r[1],t)},s.prototype.reshape=function(e,t){if(!mV(e))throw new TypeError("Array expected");if(2!==e.length)throw new Error("Sparse matrices can only be reshaped in two dimensions");e.forEach((function(t){if(!lV(t)||!nG(t)||t<=-2||0===t)throw new TypeError("Invalid size, must contain positive integers or -1 (size: "+NG(e)+")")}));var n=this._size[0]*this._size[1];if(n!==(e=RG(e,n))[0]*e[1])throw new Error("Reshaping sparse matrix will result in the wrong number of elements");var r=t?this.clone():this;if(this._size[0]===e[0]&&this._size[1]===e[1])return r;for(var s=[],a=0;a<r._ptr.length;a++)for(var i=0;i<r._ptr[a+1]-r._ptr[a];i++)s.push(a);for(var o=r._values.slice(),c=r._index.slice(),h=0;h<r._index.length;h++){var p=c[h],d=s[h],f=p*r._size[1]+d;s[h]=f%e[1],c[h]=Math.floor(f/e[1])}r._values.length=0,r._index.length=0,r._ptr.length=e[1]+1,r._size=e.slice();for(var m=0;m<r._ptr.length;m++)r._ptr[m]=0;for(var g=0;g<o.length;g++){var y=c[g],b=s[g],x=o[g];l(u(y,r._ptr[b],r._ptr[b+1],r._index),y,b,x,r._values,r._index,r._ptr)}return r},s.prototype.clone=function(){return new s({values:this._values?XV(this._values):void 0,index:XV(this._index),ptr:XV(this._ptr),size:XV(this._size),datatype:this._datatype})},s.prototype.size=function(){return this._size.slice(0)},s.prototype.map=function(e,r){if(!this._values)throw new Error("Cannot invoke map on a Pattern only matrix");var a=this,i=this._size[0],o=this._size[1],u=fG(e);return function(e,r,a,i,o,u,l){var c=[],h=[],p=[],d=n,f=0;fV(e._datatype)&&(d=t.find(n,[e._datatype,e._datatype])||n,f=t.convert(0,e._datatype));for(var m=function(e,t,n){e=u(e,t,n),d(e,f)||(c.push(e),h.push(t))},g=0;g<=o;g++){p.push(c.length);var y=e._ptr[g],b=e._ptr[g+1];if(l)for(var x=y;x<b;x++){var w=e._index[x];w>=0&&w<=a&&m(e._values[x],w-0,g-0)}else{for(var v={},k=y;k<b;k++)v[e._index[k]]=e._values[k];for(var N=0;N<=a;N++)m(N in v?v[N]:0,N-0,g-0)}}return p.push(c.length),new s({values:c,index:h,ptr:p,size:[a-0+1,o-0+1]})}(this,0,i-1,0,o-1,(function(t,n,r){return 1===u?e(t):2===u?e(t,[n,r]):e(t,[n,r],a)}),r)},s.prototype.forEach=function(e,t){if(!this._values)throw new Error("Cannot invoke forEach on a Pattern only matrix");for(var n=this._size[0],r=this._size[1],s=0;s<r;s++){var a=this._ptr[s],i=this._ptr[s+1];if(t)for(var o=a;o<i;o++){var u=this._index[o];e(this._values[o],[u,s],this)}else{for(var l={},c=a;c<i;c++)l[this._index[c]]=this._values[c];for(var h=0;h<n;h++)e(h in l?l[h]:0,[h,s],this)}}},s.prototype[Symbol.iterator]=function*(){if(!this._values)throw new Error("Cannot iterate a Pattern only matrix");for(var e=this._size[1],t=0;t<e;t++)for(var n=this._ptr[t],r=this._ptr[t+1],s=n;s<r;s++){var a=this._index[s];yield{value:this._values[s],index:[a,t]}}},s.prototype.toArray=function(){return h(this._values,this._index,this._ptr,this._size,!0)},s.prototype.valueOf=function(){return h(this._values,this._index,this._ptr,this._size,!1)},s.prototype.format=function(e){for(var t=this._size[0],n=this._size[1],r=this.density(),s="Sparse Matrix ["+NG(t,e)+" x "+NG(n,e)+"] density: "+NG(r,e)+"\n",a=0;a<n;a++)for(var i=this._ptr[a],o=this._ptr[a+1],u=i;u<o;u++)s+="\n    ("+NG(this._index[u],e)+", "+NG(a,e)+") ==> "+(this._values?NG(this._values[u],e):"X");return s},s.prototype.toString=function(){return NG(this.toArray())},s.prototype.toJSON=function(){return{mathjs:"SparseMatrix",values:this._values,index:this._index,ptr:this._ptr,size:this._size,datatype:this._datatype}},s.prototype.diagonal=function(e){if(e){if(cV(e)&&(e=e.toNumber()),!lV(e)||!nG(e))throw new TypeError("The parameter k must be an integer number")}else e=0;var t=e>0?e:0,n=e<0?-e:0,r=this._size[0],a=this._size[1],i=Math.min(r-n,a-t),o=[],u=[],l=[];l[0]=0;for(var c=t;c<a&&o.length<i;c++)for(var h=this._ptr[c],p=this._ptr[c+1],d=h;d<p;d++){var f=this._index[d];if(f===c-t+n){o.push(this._values[d]),u[o.length-1]=f-n;break}}return l.push(o.length),new s({values:o,index:u,ptr:l,size:[i,1]})},s.fromJSON=function(e){return new s(e)},s.diagonal=function(e,r,a,i,o){if(!mV(e))throw new TypeError("Array expected, size parameter");if(2!==e.length)throw new Error("Only two dimensions matrix are supported");if(e=e.map((function(e){if(cV(e)&&(e=e.toNumber()),!lV(e)||!nG(e)||e<1)throw new Error("Size values must be positive integers");return e})),a){if(cV(a)&&(a=a.toNumber()),!lV(a)||!nG(a))throw new TypeError("The parameter k must be an integer number")}else a=0;var u=n,l=0;fV(o)&&(u=t.find(n,[o,o])||n,l=t.convert(0,o));var c,h=a>0?a:0,p=a<0?-a:0,d=e[0],f=e[1],m=Math.min(d-p,f-h);if(mV(r)){if(r.length!==m)throw new Error("Invalid value array length");c=function(e){return r[e]}}else if(gV(r)){var g=r.size();if(1!==g.length||g[0]!==m)throw new Error("Invalid matrix length");c=function(e){return r.get([e])}}else c=function(){return r};for(var y=[],b=[],x=[],w=0;w<f;w++){x.push(y.length);var v=w-h;if(v>=0&&v<m){var k=c(v);u(k,l)||(b.push(v+p),y.push(k))}}return x.push(y.length),new s({values:y,index:b,ptr:x,size:[d,f]})},s.prototype.swapRows=function(e,t){if(!(lV(e)&&nG(e)&&lV(t)&&nG(t)))throw new Error("Row index must be positive integers");if(2!==this._size.length)throw new Error("Only two dimensional matrix is supported");return AG(e,this._size[0]),AG(t,this._size[0]),s._swapRows(e,t,this._size[1],this._values,this._index,this._ptr),this},s._forEachRow=function(e,t,n,r,s){for(var a=r[e],i=r[e+1],o=a;o<i;o++)s(n[o],t[o])},s._swapRows=function(e,t,n,r,s,a){for(var i=0;i<n;i++){var o=a[i],l=a[i+1],c=u(e,o,l,s),h=u(t,o,l,s);if(c<l&&h<l&&s[c]===e&&s[h]===t){if(r){var p=r[c];r[c]=r[h],r[h]=p}}else if(c<l&&s[c]===e&&(h>=l||s[h]!==t)){var d=r?r[c]:void 0;s.splice(h,0,t),r&&r.splice(h,0,d),s.splice(h<=c?c+1:c,1),r&&r.splice(h<=c?c+1:c,1)}else if(h<l&&s[h]===t&&(c>=l||s[c]!==e)){var f=r?r[h]:void 0;s.splice(c,0,e),r&&r.splice(c,0,f),s.splice(c<=h?h+1:h,1),r&&r.splice(c<=h?h+1:h,1)}}},s}),{isClass:!0});JV("bin",["typed","format"],(e=>{var{typed:t,format:n}=e;return t("bin",{"number | BigNumber":function(e){return n(e,{notation:"bin"})},"number | BigNumber, number":function(e,t){return n(e,{notation:"bin",wordSize:t})}})}));var sj="matrix",aj=JV(sj,["typed","Matrix","DenseMatrix","SparseMatrix"],(e=>{var{typed:t,Matrix:n,DenseMatrix:r,SparseMatrix:s}=e;return t(sj,{"":function(){return a([])},string:function(e){return a([],e)},"string, string":function(e,t){return a([],e,t)},Array:function(e){return a(e)},Matrix:function(e){return a(e,e.storage())},"Array | Matrix, string":a,"Array | Matrix, string, string":a});function a(e,t,n){if("dense"===t||"default"===t||void 0===t)return new r(e,n);if("sparse"===t)return new s(e,n);throw new TypeError("Unknown matrix type "+JSON.stringify(t)+".")}})),ij="zeros",oj=JV(ij,["typed","config","matrix","BigNumber"],(e=>{var{typed:t,config:n,matrix:r,BigNumber:s}=e;return t(ij,{"":function(){return"Array"===n.matrix?a([]):a([],"default")},"...number | BigNumber | string":function(e){if("string"==typeof e[e.length-1]){var t=e.pop();return a(e,t)}return"Array"===n.matrix?a(e):a(e,"default")},Array:a,Matrix:function(e){var t=e.storage();return a(e.valueOf(),t)},"Array | Matrix, string":function(e,t){return a(e.valueOf(),t)}});function a(e,t){var n=function(e){var t=!1;return e.forEach((function(e,n,r){cV(e)&&(t=!0,r[n]=e.toNumber())})),t}(e),a=n?new s(0):0;if(function(e){e.forEach((function(e){if("number"!=typeof e||!nG(e)||e<0)throw new Error("Parameters in function zeros must be positive integers")}))}(e),t){var i=r(t);return e.length>0?i.resize(e,a):i}var o=[];return e.length>0?$G(o,e,a):o}})),uj="equal",lj=(JV(uj,["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return t(uj,{"any, any":function(e,t){return null===e?null===t:null===t?null===e:void 0===e?void 0===t:void 0===t?void 0===e:n(e,t)}})})),"flatten"),cj=JV(lj,["typed","matrix"],(e=>{var{typed:t,matrix:n}=e;return t(lj,{Array:function(e){return BG(e)},Matrix:function(e){var t=BG(e.toArray());return n(t)}})}));function hj(e,t,n,r){if(!(this instanceof hj))throw new SyntaxError("Constructor must be called with the new operator");this.fn=e,this.count=t,this.min=n,this.max=r,this.message="Wrong number of arguments in function "+e+" ("+t+" provided, "+n+(null!=r?"-"+r:"")+" expected)",this.stack=(new Error).stack}hj.prototype=new Error,hj.prototype.constructor=Error,hj.prototype.name="ArgumentsError",hj.prototype.isArgumentsError=!0;var pj="unequal";JV(pj,["typed","equalScalar"],(e=>{var{typed:t,equalScalar:n}=e;return t(pj,{"any, any":function(e,t){return null===e?null!==t:null===t?null!==e:void 0===e?void 0!==t:void 0===t?void 0!==e:!n(e,t)}})})),n(228);var dj=eG({config:CU}),fj=hG({}),mj=xG({}),gj=wG({}),yj=LG({Matrix:gj}),bj=KG({BigNumber:dj,Complex:fj,DenseMatrix:yj,Fraction:mj}),xj=ej({config:CU,typed:bj}),wj=tj({typed:bj}),vj=aj({DenseMatrix:yj,Matrix:gj,SparseMatrix:rj({Matrix:gj,equalScalar:xj,typed:bj}),typed:bj}),kj=oj({BigNumber:dj,config:CU,matrix:vj,typed:bj}),Nj=cj({matrix:vj,typed:bj});function Ij(e,t,n,r){const s=n.map((t=>e.data.get(t.dataId).values)),a={};t.variableNames.forEach(((e,t)=>{const r=`get${i=e,i[0].toUpperCase()+i.substring(1)}`;var i;a[r]=function(...e){const r=t;for(let t=0;t<e.length;t++)e[t]=Cj(e[t],0,n[r].shape[t]);return s[t][function(e,t){return e.reduce(((e,n,r)=>{for(let e=r+1;e<t.length;e++)n*=t[e];return e+n}),0)}(e,n[r].shape)]}})),a.int=Math.trunc,a.atan=Math.atan2;const i=kj(t.outputShape),o=wj(i,((e,n,r)=>{let s;return a.getOutputCoords=()=>n,a.setOutput=e=>{s=Number.isNaN(e)?0:Math.fround(e)},t.userCode.bind(a)(),s}));return e.makeOutput(Nj(o),t.outputShape,r)}function Cj(e,t,n){return Math.min(Math.max(e,t),n-1)}const Dj={kernelName:"BinomialFilter",backendName:"cpu",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,[r,s]=function(e){const t=e.shape[1],n=e.shape[0],r={variableNames:["p"],outputShape:[n,t],userCode:function(){const e=this.getOutputCoords();let t=this.getP(e[0],e[1]-2);t+=4*this.getP(e[0],e[1]-1),t+=6*this.getP(e[0],e[1]),t+=4*this.getP(e[0],e[1]+1),t+=this.getP(e[0],e[1]+2),this.setOutput(t)}},s={variableNames:["p"],outputShape:[n,t],userCode:function(){const e=this.getOutputCoords();let t=this.getP(e[0]-2,e[1]);t+=4*this.getP(e[0]-1,e[1]),t+=6*this.getP(e[0],e[1]),t+=4*this.getP(e[0]+1,e[1]),t+=this.getP(e[0]+2,e[1]),t/=256,this.setOutput(t)}};return[r,s]}(t),a=Ij(n,r,[t],t.dtype);return Ij(n,s,[a],t.dtype)}},Ej={kernelName:"BuildExtremas",backendName:"cpu",kernelFunc:e=>{let{image0:t,image1:n,image2:r}=e.inputs;const s=e.backend;t=Ho().runKernel("DownsampleBilinear",{image:t}),r=Ho().runKernel("UpsampleBilinear",{image:r,targetImage:n});const a=function(e){const t=e.shape[1],n=e.shape[0],r={variableNames:["image0","image1","image2"],outputShape:[n,t],userCode:function(){const e=this.getOutputCoords(),r=e[0],s=e[1],a=this.getImage1(r,s);if(a*a<9)return void this.setOutput(0);if(r<7||r>n-1-7)return void this.setOutput(0);if(s<7||s>t-1-7)return void this.setOutput(0);let i=!0,o=!0;for(let e=-1;e<=1;e++)for(let t=-1;t<=1;t++){const n=this.getImage0(r+e,s+t),u=this.getImage1(r+e,s+t),l=this.getImage2(r+e,s+t);(a<n||a<u||a<l)&&(i=!1),(a>n||a>u||a>l)&&(o=!1)}if(!i&&!o)return void this.setOutput(0);const u=this.getImage1(r,s+1)+this.getImage1(r,s-1)-2*this.getImage1(r,s),l=this.getImage1(r+1,s)+this.getImage1(r-1,s)-2*this.getImage1(r,s),c=.25*(this.getImage1(r-1,s-1)+this.getImage1(r+1,s+1)-this.getImage1(r-1,s+1)-this.getImage1(r+1,s-1)),h=u*l-c*c;if(Math.abs(h)<1e-4)return void this.setOutput(0);const p=(u+l)*(u+l)/h;Math.abs(p)>=6.25?this.setOutput(0):this.setOutput(this.getImage1(r,s))}};return r}(n);return Ij(s,a,[t,n,r],n.dtype)}},Sj={kernelName:"ComputeExtremaAngles",backendName:"cpu",kernelFunc:e=>{const{histograms:t}=e.inputs,n=e.backend,r=function(e){const t=new Float32Array(e.height);function n(t,n){return e.values[t*e.width+n]}function r(e,n){t[e]=n}function s(e,t){return Math.trunc(e-t*Math.floor(e/t))}for(let t=0;t<e.height;t++){let e=0;for(let r=1;r<36;r++)n(t,r)>n(t,e)&&(e=r);let a=s(e-1+36,36),i=s(e+1,36);const o=e-1,u=n(t,a),l=e,c=n(t,e),h=e+1,p=n(t,i),d=(h-l)*(h-o),f=(o-l)*(h-o),m=o-l;let g=e;if(Math.abs(d)>1e-5&&Math.abs(f)>1e-5&&Math.abs(m)>1e-5){const e=o*o,t=l*l;let n=(p-c)/d-(u-c)/f;Number.isNaN(n)&&(n=0),g=-(u-c+n*(t-e))/m/(2*n),Number.isNaN(g)&&(g=0)}r(t,2*Math.PI*(g+.5)/36-Math.PI)}return t}({values:n.data.get(t.dataId).values,width:t.shape[1],height:t.shape[0]});return n.makeOutput(r,[t.shape[0]],t.dtype)}},Tj={kernelName:"ComputeExtremaFreak",backendName:"cpu",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremas:n,prunedExtremasAngles:r,freakPointsT:s,pyramidImagesLength:a}=e.inputs,i=e.backend,o=function(e,t){const n=[];for(let e=1;e<t;e++)n.push("image"+e);const r={variableNames:[...n,"extrema","angles","freakPoints"],outputShape:[e,QP.length],userCode:function(){const e=(e,n,r)=>e<1||e>=t?0:this["getImage"+e](n,r),n=this.getOutputCoords(),r=n[0],s=n[1],a=this.getFreakPoints(s,1),i=this.getFreakPoints(s,2),o=this.int(this.getExtrema(r,1)),u=this.getExtrema(r,2),l=this.getExtrema(r,3),c=this.getAngles(r),h=7*Math.cos(c),p=7*Math.sin(c),d=u+a*p+i*h,f=l+a*h+i*-p,m=this.int(Math.floor(f)),g=m+1,y=this.int(Math.floor(d)),b=y+1,x=(g-f)*(b-d)*e(o,y,m)+(f-m)*(b-d)*e(o,y,g)+(g-f)*(d-y)*e(o,b,m)+(f-m)*(d-y)*e(o,b,g);this.setOutput(x)}};return r}(n.shape[0],a);return Ij(i,o,[...t,n,r,s],"float32")}},Aj=(QP.length-1)*QP.length/2,$j=Math.ceil(Aj/8),Fj={kernelName:"ComputeFreakDescriptors",backendName:"cpu",kernelFunc:e=>{const{extremaFreaks:t,positionT:n}=e.inputs,{backend:r}=e,s=function(e,t){const n=new Float32Array(e.height*$j);function r(e,n){return t.values[e*t.width+n]}function s(t,n){return e.values[t*e.width+n]}for(let t=0;t<e.height;t++)for(let e=0;e<$j;e++){const i=8*e;let o=0;for(let e=0;e<8;e++){if(i+e>=Aj)continue;const n=Math.trunc(r(i+e,0)),a=Math.trunc(r(i+e,1));s(t,n)<s(t,a)+.01&&(o+=Math.trunc(Math.pow(2,7-e)))}a=o,n[t*$j+e]=a}var a;return n}({values:r.data.get(t.dataId).values,height:t.shape[0],width:t.shape[1]},{values:r.data.get(n.dataId).values,width:n.shape[1]});return r.makeOutput(s,[t.shape[0],$j],"int32")}};Math.trunc;const Rj={kernelName:"ComputeLocalization",backendName:"cpu",kernelFunc:e=>{const{prunedExtremasList:t,dogPyramidImagesT:n}=e.inputs,r=e.backend,s=function(e,t){const n=[];for(let t=1;t<e;t++)n.push("image"+t);const r={variableNames:[...n,"extrema"],outputShape:[t,3,3],userCode:function(){const e=this.getOutputCoords(),t=e[0];if(0==this.getExtrema(t,0))return;const n=e[1]-1,r=e[2]-1,s=this.int(this.getExtrema(t,1)),a=this.int(this.getExtrema(t,2)),i=this.int(this.getExtrema(t,3));this.setOutput(((e,t,n)=>{const r="getImage"+e;if(!this.hasOwnProperty(r))throw new Error(`ComputeLocalization:: ${r} does not exist`);return this[r](t,n)})(s,a+n,i+r))}};return r}(n.length,t.length),a=Ta(t,[t.length,t[0].length],"int32");return Ij(r,s,[...n.slice(1),a],n[0].dtype)}},_j=36,Mj={kernelName:"ComputeOrientationHistograms",backendName:"cpu",kernelFunc:e=>{const{gaussianImagesT:t,prunedExtremasT:n,radialPropertiesT:r,pyramidImagesLength:s}=e.inputs,a=e.backend,[i,o]=function(e,t,n){e.shape[0],t.shape[0];const r=[];for(let e=1;e<n;e++)r.push("image"+e);const s={variableNames:[...r,"extrema","radial"],outputShape:[e.shape[0],t.shape[0],2],userCode:function(){const e=(e,t,n)=>{const r="getImage"+e;return this.hasOwnProperty(r)?this[r](t,n):0},t=this.getOutputCoords(),n=t[0],r=t[1],s=t[2],a=this.int(this.getRadial(r,0)),i=this.int(this.getRadial(r,1)),o=this.getRadial(r,2),u=this.int(this.getExtrema(n,1)),l=this.int(this.getExtrema(n,2)),c=this.int(this.getExtrema(n,3))+i,h=l+a,p=e(u,h+1,c)-e(u,h-1,c),d=e(u,h,c+1)-e(u,h,c-1);if(0!=s)if(1!=s);else{const e=o*Math.sqrt(d*d+p*p);this.setOutput(e)}else{const e=(this.atan(p,d)+Math.PI)*_j*.159154943091895;this.setOutput(e)}}},a={variableNames:["fbinMag"],outputShape:[e.shape[0],_j],userCode:function(){function e(e,t){return Math.trunc(e-t*Math.floor(e/t))}const n=this.getOutputCoords(),r=n[0],s=n[1];let a=0;for(let n=0;n<t.shape[0];n++){const t=this.getFbinMag(r,n,0),i=Math.trunc(Math.floor(t-.5)),o=e(i+_j,_j),u=e(i+1+_j,_j);if(o==s||u==s){const e=this.getFbinMag(r,n,1),l=t-i-.5,c=-1*l+1;o==s&&(a+=c*e),u==s&&(a+=l*e)}}this.setOutput(a)}};return[s,a]}(n,r,s),u=Ij(a,i,[...t,n,r],r.dtype);return Ij(a,o,[u],r.dtype)}},Oj={kernelName:"DownsampleBilinear",backendName:"cpu",kernelFunc:e=>{const t=e.inputs.image,n=e.backend,r={variableNames:["p"],outputShape:[Math.floor(t.shape[0]/2),Math.floor(t.shape[1]/2)],userCode:function(){const e=this.getOutputCoords(),t=2*e[0],n=2*e[1];let r=new Float32Array(1);r[0]=Math.fround(.25*this.getP(t,n)),r[0]+=Math.fround(.25*this.getP(t+1,n)),r[0]+=Math.fround(.25*this.getP(t,n+1)),r[0]+=Math.fround(.25*this.getP(t+1,n+1)),this.setOutput(r[0])}};return Ij(n,r,[t],t.dtype)}},Bj={kernelName:"ExtremaReduction",backendName:"cpu",kernelFunc:e=>{const{extremasResultT:t}=e.inputs,n=e.backend,r=t.shape[0],s=t.shape[1],a=function(e,t){const n={variableNames:["extrema"],outputShape:[e,t],userCode:function(){const e=this.getOutputCoords(),t=2*e[0],n=2*e[1];let r=0,s=this.getExtrema(t,n);0!=this.getExtrema(t+1,n)?(r=1,s=this.getExtrema(t+1,n)):0!=this.getExtrema(t,n+1)?(r=2,s=this.getExtrema(t,n+1)):0!=this.getExtrema(t+1,n+1)&&(r=3,s=this.getExtrema(t+1,n+1)),s<0?this.setOutput(-1e3*r+s):this.setOutput(1e3*r+s)}};return n}(Math.floor(r/2),Math.floor(s/2));return Ij(n,a,[t],t.dtype)}},zj=36;function Lj(e){const t=new Float32Array(e.height*zj);function n(t,n){return e.values[t*e.width+n]}function r(e,t){return Math.trunc(e-t*Math.floor(e/t))}for(let a=0;a<e.height;a++)for(let e=0;e<zj;e++){const i=r(e-1+zj,zj),o=r(e+1,zj);s=.274068619061197*n(a,i)+.451862761877606*n(a,e)+.274068619061197*n(a,o),t[a*zj+e]=s}var s;return t}const Pj={kernelName:"SmoothHistograms",backendName:"cpu",kernelFunc:e=>{const{histograms:t}=e.inputs,n=e.backend,r={values:n.data.get(t.dataId).values,height:t.shape[0],width:t.shape[1]};for(let e=0;e<5;e++)r.values=Lj(r);return n.makeOutput(r.values,[t.shape[0],zj],t.dtype)}},Uj={kernelName:"UpsampleBilinear",backendName:"cpu",kernelFunc:e=>{const{image:t,targetImage:n}=e.inputs,r=e.backend,s=function(e){const t={variableNames:["p"],outputShape:[e.shape[0],e.shape[1]],userCode:function(){const e=this.getOutputCoords(),t=e[0],n=e[1],r=Math.fround(.5*t)-.25,s=Math.fround(.5*n)-.25,a=Math.floor(r),i=Math.ceil(r),o=Math.floor(s),u=Math.ceil(s),l=this.int(a),c=this.int(i),h=this.int(o),p=this.int(u);let d=0;d+=this.getP(l,h)*Math.fround((u-s)*(i-r)),d+=this.getP(c,h)*Math.fround((u-s)*(r-a)),d+=this.getP(l,p)*Math.fround((s-o)*(i-r)),d+=this.getP(c,p)*Math.fround((s-o)*(r-a)),this.setOutput(d)}};return t}(n);return Ij(r,s,[t],t.dtype)}};ls(Dj),ls(Ej),ls(Sj),ls(Tj),ls(Fj),ls(Rj),ls(Mj),ls(Oj),ls(Bj),ls(Pj),ls(Uj),ls(tU),ls(rU),ls(aU),ls(oU),ls(hU),ls(dU),ls(mU),ls(yU),ls(bU),ls(wU),ls(kU);const Wj=(QP.length-1)*QP.length/2;class Vj{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let r=0;for(;e>=8&&t>=8&&(e/=2,t/=2,r++,5!==r););this.numOctaves=r,this.tensorCaches={},this.kernelCaches={}}detectImageData(e){const t=new Uint8ClampedArray(4*e.length);for(let n=0;n<e.length;n++)t[4*n]=e[n],t[4*n+1]=e[n],t[4*n+2]=e[n],t[4*n+3]=255;const n=new ImageData(t,this.width,this.height);return this.detect(n)}detect(e){let t=null;const n=[];for(let t=0;t<this.numOctaves;t++){let r,s;r=Xo(0===t?()=>Ho().runKernel("BinomialFilter",{image:e}):()=>Ho().runKernel("DownsampleBilinear",{image:n[t-1][n[t-1].length-1]})),s=Xo((()=>Ho().runKernel("BinomialFilter",{image:r}))),n.push([r,s])}const r=[];for(let e=0;e<this.numOctaves;e++){let t=this._differenceImageBinomial(n[e][0],n[e][1]);r.push(t)}const s=[];for(let e=1;e<this.numOctaves-1;e++){const t=Xo((()=>Ho().runKernel("BuildExtremas",{image0:r[e-1],image1:r[e],image2:r[e+1]})));s.push(t)}const a=this._applyPrune(s),i=this._computeLocalization(a,r),o=this._computeOrientationHistograms(i,n),u=Xo((()=>{const e=Ho().runKernel("SmoothHistograms",{histograms:o});return Ho().runKernel("ComputeExtremaAngles",{histograms:e})})),l=this._computeExtremaFreak(n,i,u),c=this._computeFreakDescriptors(l),h=i.arraySync(),p=u.arraySync(),d=c.arraySync();this.debugMode&&(t={pyramidImages:n.map((e=>e.map((e=>e.arraySync())))),dogPyramidImages:r.map((e=>e?e.arraySync():null)),extremasResults:s.map((e=>e.arraySync())),extremaAngles:u.arraySync(),prunedExtremas:a,localizedExtremas:i.arraySync()}),n.forEach((e=>e.forEach((e=>e.dispose())))),r.forEach((e=>e&&e.dispose())),s.forEach((e=>e.dispose())),i.dispose(),o.dispose(),u.dispose(),l.dispose(),c.dispose();const f=[];for(let e=0;e<h.length;e++){if(0==h[e][0])continue;const t=[];for(let n=0;n<d[e].length;n+=4){let r=16777216*d[e][n]+65536*d[e][n+1]+256*d[e][n+2]+d[e][n+3];t.push(r)}const n=h[e][1],r=h[e][2],s=h[e][3]*Math.pow(2,n)+Math.pow(2,n-1)-.5,a=r*Math.pow(2,n)+Math.pow(2,n-1)-.5,i=Math.pow(2,n);f.push({maxima:h[e][0]>0,x:s,y:a,scale:i,angle:p[e],descriptors:t})}return{featurePoints:f,debugExtra:t}}_computeFreakDescriptors(e){if(!this.tensorCaches.computeFreakDescriptors){const t=[],n=[];for(let r=0;r<e.shape[1];r++)for(let s=r+1;s<e.shape[1];s++)t.push(r),n.push(s);const r=Ta(t,[t.length]).cast("int32"),s=Ta(n,[n.length]).cast("int32");this.tensorCaches.computeFreakDescriptors={positionT:Zo(Kh([r,s],1))}}const{positionT:t}=this.tensorCaches.computeFreakDescriptors;return Math.ceil(Wj/8),Xo((()=>Ho().runKernel("ComputeFreakDescriptors",{extremaFreaks:e,positionT:t})))}_computeExtremaFreak(e,t,n){this.tensorCaches._computeExtremaFreak||Xo((()=>{const e=Ta(QP);this.tensorCaches._computeExtremaFreak={freakPointsT:Zo(e)}}));const{freakPointsT:r}=this.tensorCaches._computeExtremaFreak,s=[];for(let t=1;t<e.length;t++)s.push(e[t][1]);return Xo((()=>Ho().runKernel("ComputeExtremaFreak",{gaussianImagesT:s,prunedExtremas:t,prunedExtremasAngles:n,freakPointsT:r,pyramidImagesLength:e.length})))}_computeOrientationHistograms(e,t){const n=[];for(let e=1;e<t.length;e++)n.push(t[e][1]);this.tensorCaches.orientationHistograms||Xo((()=>{const e=Math.ceil(4.5),t=[];for(let n=-e;n<=e;n++)for(let r=-e;r<=e;r++){const e=r*r+n*n;if(e<=20.25){const s=-.05555555555555555*e;let a=.0013888888*(720+s*(720+s*(360+s*(120+s*(30+s*(6+s))))));t.push([n,r,a])}}this.tensorCaches.orientationHistograms={radialPropertiesT:Zo(Ta(t,[t.length,3]))}}));const{radialPropertiesT:r}=this.tensorCaches.orientationHistograms;return Xo((()=>Ho().runKernel("ComputeOrientationHistograms",{gaussianImagesT:n,prunedExtremasT:e,radialPropertiesT:r,pyramidImagesLength:t.length})))}_computeLocalization(e,t){return Xo((()=>{const n=Ho().runKernel("ComputeLocalization",{prunedExtremasList:e,dogPyramidImagesT:t}).arraySync(),r=[];for(let e=0;e<n.length;e++){r.push([]);for(let t=0;t<n[e].length;t++)r[e].push([])}const s=[];for(let t=0;t<e.length;t++)s[t]=[e[t][0],e[t][1],e[t][2],e[t][3]];for(let e=0;e<s.length;e++){if(0===s[e][0])continue;const t=n[e],r=.5*(t[1][2]-t[1][0]),a=.5*(t[2][1]-t[0][1]),i=t[1][2]+t[1][0]-2*t[1][1],o=t[2][1]+t[0][1]-2*t[1][1],u=.25*(t[0][0]+t[2][2]-t[0][2]-t[2][0]),l=i*o-u*u,c=(o*-r+-u*-a)/l,h=(-u*-r+i*-a)/l,p=s[e][2]+h,d=s[e][3]+c;Math.abs(l)<1e-4||(s[e][2]=p,s[e][3]=d)}return Ta(s,[s.length,s[0].length],"float32")}))}_applyPrune(e){const t=[],n=[];for(let e=0;e<100;e++){n.push([]),t.push([]);for(let r=0;r<5;r++)n[e].push([0,0,0,0]),t[e].push(0)}Xo((()=>{for(let r=0;r<e.length;r++){const s=Ho().runKernel("ExtremaReduction",{extremasResultT:e[r]}),a=r+1,i=s.arraySync(),o=s.shape[0],u=s.shape[1],l=2*u/10,c=2*o/10;for(let e=0;e<o;e++)for(let r=0;r<u;r++){const s=i[e][r];if(0==s)continue;const o=s%1e3,u=Math.floor(Math.abs(s)/1e3),h=2*r+(2===u||3===u?1:0),p=2*e+(1===u||3===u?1:0),d=Math.floor(h/l),f=10*Math.floor(p/c)+d,m=Math.abs(o);let g=5;for(;g>=1&&m>t[f][g-1];)g-=1;if(g<5){for(let e=4;e>=g+1;e--)t[f][e]=t[f][e-1],n[f][e][0]=n[f][e-1][0],n[f][e][1]=n[f][e-1][1],n[f][e][2]=n[f][e-1][2],n[f][e][3]=n[f][e-1][3];t[f][g]=m,n[f][g][0]=o,n[f][g][1]=a,n[f][g][2]=p,n[f][g][3]=h}}}}));const r=[];for(let e=0;e<100;e++)for(let t=0;t<5;t++)r.push(n[e][t]);return r}_differenceImageBinomial(e,t){return Xo((()=>e.sub(t)))}_compileAndRun(e,t){const n=iu().compileAndRun(e,t);return Ho().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const r=iu().runWebGLProgram(e,t,n);return Ho().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}class Gj{constructor(e,t,n=!1){this.debugMode=n,this.width=e,this.height=t;let r=Math.min(e,t)/2,s=Math.pow(2,Math.round(Math.log(r)/Math.log(2)));this.cropSize=s,this.detector=new Vj(s,s,n),this.kernelCaches={},this.lastRandomIndex=4}detect(e){const t=Math.floor(this.height/2-this.cropSize/2),n=Math.floor(this.width/2-this.cropSize/2),r=this._detect(e,n,t);return this.debugMode&&(r.debugExtra.crop={startX:n,startY:t,cropSize:this.cropSize}),r}detectMoving(e){const t=this.lastRandomIndex%3,n=Math.floor(this.lastRandomIndex/3);let r=Math.floor(this.height/2-this.cropSize+n*this.cropSize/2),s=Math.floor(this.width/2-this.cropSize+t*this.cropSize/2);return s<0&&(s=0),r<0&&(r=0),s>=this.width-this.cropSize&&(s=this.width-this.cropSize-1),r>=this.height-this.cropSize&&(r=this.height-this.cropSize-1),this.lastRandomIndex=(this.lastRandomIndex+1)%9,this._detect(e,s,r)}_detect(e,t,n){const r=e.slice([n,t],[this.cropSize,this.cropSize]),{featurePoints:s,debugExtra:a}=this.detector.detect(r);return s.forEach((e=>{e.x+=t,e.y+=n})),this.debugMode&&(a.projectedImage=r.arraySync()),r.dispose(),{featurePoints:s,debugExtra:a}}}const jj=({image:e,ratio:t})=>{const n=Math.round(e.width*t),r=Math.round(e.height*t),s=new Uint8Array(n*r);for(let a=0;a<n;a++){let i=Math.round(1*a/t),o=Math.round(1*(a+1)/t)-1;o>=e.width&&(o=e.width-1);for(let u=0;u<r;u++){let r=Math.round(1*u/t),l=Math.round(1*(u+1)/t)-1;l>=e.height&&(l=e.height-1);let c=0,h=0;for(let t=i;t<=o;t++)for(let n=r;n<=l;n++)c+=1*e.data[n*e.width+t],h+=1;s[u*n+a]=Math.floor(c/h)}}return{data:s,width:n,height:r}},Hj=e=>{const t=[];let n=100/Math.min(e.width,e.height);for(;;)if(t.push(n),n*=Math.pow(2,1/3),n>=.95){n=1;break}t.push(n),t.reverse();const r=[];for(let n=0;n<t.length;n++)e.width,t[n],e.height,t[n],r.push(Object.assign(jj({image:e,ratio:t[n]}),{scale:t[n]}));return r},qj=e=>{const t=Math.min(e.width,e.height),n=[],r=[];n.push(256/t),n.push(128/t);for(let t=0;t<n.length;t++)r.push(Object.assign(jj({image:e,ratio:n[t]}),{scale:n[t]}));return r},Kj=e=>{const{v1:t,v2:n}=e;let r=0;for(let e=0;e<t.length;e++){let s=(t[e]^n[e])>>>0;r+=Xj(s)}return r},Xj=e=>{var t=e-(e>>1&1431655765);return((t=((t=((t=(t>>2&858993459)+(858993459&t))>>4)+t&252645135)>>8)+t&16711935)>>16)+t&65535},Yj=()=>({seed:1234,arrayShuffle(e){const{arr:t,sampleSize:n}=e;for(let e=0;e<n;e++){this.seed=(214013*this.seed+2531011)%(1<<31);let n=this.seed>>16&32767;n%=t.length;let r=t[e];t[e]=t[n],t[n]=r}},nextInt(e){this.seed=(214013*this.seed+2531011)%(1<<31);let t=this.seed>>16&32767;return t%=e,t}}),Zj=({points:e})=>{const t=[];for(let n=0;n<e.length;n++)t.push(n);const n=Yj();return{rootNode:Jj({points:e,pointIndexes:t,centerPointIndex:null,randomizer:n})}},Jj=e=>{const{points:t,pointIndexes:n,centerPointIndex:r,randomizer:s}=e;let a=!1;(n.length<=8||n.length<=16)&&(a=!0);const i={};if(!a){const e=(e=>{const{points:t,pointIndexes:n,randomizer:r}=e,s=[];for(let e=0;e<n.length;e++)s.push(e);let a=Number.MAX_SAFE_INTEGER,i=-1;const o=[];for(let e=0;e<128;e++){r.arrayShuffle({arr:s,sampleSize:8});let u=0;const l=[];for(let e=0;e<n.length;e++){let r=Number.MAX_SAFE_INTEGER;for(let a=0;a<8;a++){const i=n[s[a]],o=Kj({v1:t[n[e]].descriptors,v2:t[i].descriptors});o<r&&(l[e]=s[a],r=o)}u+=r}o.push(l),u<a&&(a=u,i=e)}return o[i]})({points:t,pointIndexes:n,randomizer:s});for(let t=0;t<e.length;t++)void 0===i[n[e[t]]]&&(i[n[e[t]]]=[]),i[n[e[t]]].push(n[t])}1===Object.keys(i).length&&(a=!0);const o={centerPointIndex:r};if(a){o.leaf=!0,o.pointIndexes=[];for(let e=0;e<n.length;e++)o.pointIndexes.push(n[e]);return o}return o.leaf=!1,o.children=[],Object.keys(i).forEach((e=>{o.children.push(Jj({points:t,pointIndexes:i[e],centerPointIndex:e,randomizer:s}))})),o};var Qj=n(113),eH=n(292);class tH{constructor(e,t,n){this.cumsum=[];for(let e=0;e<n;e++){this.cumsum.push([]);for(let n=0;n<t;n++)this.cumsum[e].push(0)}this.cumsum[0][0]=e[0];for(let n=1;n<t;n++)this.cumsum[0][n]=this.cumsum[0][n-1]+e[n];for(let r=1;r<n;r++)this.cumsum[r][0]=this.cumsum[r-1][0]+e[r*t];for(let r=1;r<n;r++)for(let n=1;n<t;n++)this.cumsum[r][n]=e[r*t+n]+this.cumsum[r-1][n]+this.cumsum[r][n-1]-this.cumsum[r-1][n-1]}query(e,t,n,r){let s=this.cumsum[r][n];return t>0&&(s-=this.cumsum[t-1][n]),e>0&&(s-=this.cumsum[r][e-1]),e>0&&t>0&&(s+=this.cumsum[t-1][e-1]),s}}const nH=e=>{const{data:t,width:n,height:r,scale:s}=e,a=[n*r];for(let e=0;e<a.length;e++)a[e]=!1;const i=new Float32Array(t.length);for(let e=0;e<n;e++)i[e]=-1,i[n*(r-1)+e]=-1;for(let e=0;e<r;e++)i[e*n]=-1,i[e*n+n-1]=-1;for(let e=1;e<n-1;e++)for(let s=1;s<r-1;s++){let r=e+n*s,a=0,o=0;for(let e=-1;e<=1;e++)a+=t[r+n*e+1]-t[r+n*e-1],o+=t[r+n+e]-t[r-n+e];a/=768,o/=768,i[r]=Math.sqrt((a*a+o*o)/2)}const o=new Uint32Array(1e3);for(let e=0;e<1e3;e++)o[e]=0;const u=[-1,1,-n,n];let l=0;for(let e=1;e<n-1;e++)for(let t=1;t<r-1;t++){let r=e+n*t,s=!0;for(let e=0;e<u.length;e++)if(i[r]<=i[r+u[e]]){s=!1;break}if(s){let e=Math.floor(1e3*i[r]);e>999&&(e=999),e<0&&(e=0),o[e]+=1,l+=1,a[r]=!0}}const c=.02*n*r;let h=999,p=0;for(;h>=0&&(p+=o[h],!(p>c));)h--;for(let e=0;e<a.length;e++)a[e]&&1e3*i[e]<h&&(a[e]=!1);const d=[];for(let e=0;e<t.length;e++)d[e]=t[e]*t[e];const f=new tH(t,n,r),m=new tH(d,n,r),g=new Float32Array(t.length);for(let t=0;t<n;t++)for(let s=0;s<r;s++){const r=s*n+t;if(!a[r]){g[r]=1;continue}const i=sH({image:e,cx:t,cy:s,sdThresh:5,imageDataCumsum:f,imageDataSqrCumsum:m});if(null===i){g[r]=1;continue}let o=-1;for(let n=-10;n<=10;n++){for(let r=-10;r<=10;r++){if(r*r+n*n<=4)continue;const a=aH({image:e,cx:t+r,cy:s+n,vlen:i,tx:t,ty:s,imageDataCumsum:f,imageDataSqrCumsum:m});if(null!==a&&a>o&&(o=a,o>.95))break}if(o>.95)break}g[r]=o}return rH({image:e,featureMap:g,templateSize:6,searchSize:2,occSize:16,maxSimThresh:.9,minSimThresh:.2,sdThresh:8,imageDataCumsum:f,imageDataSqrCumsum:m})},rH=e=>{let{image:t,featureMap:n,templateSize:r,searchSize:s,occSize:a,maxSimThresh:i,minSimThresh:o,sdThresh:u,imageDataCumsum:l,imageDataSqrCumsum:c}=e;const{data:h,width:p,height:d,scale:f}=t;a=Math.floor(Math.min(t.width,t.height)/10);const m=3*(2*r+1),g=Math.floor(p/m),y=Math.floor(d/m);let b=Math.floor(p/a)*Math.floor(d/a)+g*y;const x=[],w=new Float32Array(h.length);for(let e=0;e<w.length;e++)w[e]=n[e];let v=0;for(;v<b;){let e=i,n=-1,h=-1;for(let t=0;t<d;t++)for(let r=0;r<p;r++)w[t*p+r]<e&&(e=w[t*p+r],n=r,h=t);if(-1===n)break;const f=sH({image:t,cx:n,cy:h,sdThresh:0,imageDataCumsum:l,imageDataSqrCumsum:c});if(null===f){w[h*p+n]=1;continue}if(f/(2*r+1)<u){w[h*p+n]=1;continue}let m=1,g=-1;for(let r=-s;r<=s;r++){for(let a=-s;a<=s;a++){if(a*a+r*r>s*s)continue;if(0===a&&0===r)continue;const i=aH({image:t,vlen:f,cx:n+a,cy:h+r,tx:n,ty:h,imageDataCumsum:l,imageDataSqrCumsum:c});if(null!==i){if(i<m&&(m=i,m<o&&m<e))break;if(i>g&&(g=i,g>.99))break}}if(m<o&&m<e||g>.99)break}if(m<o&&m<e||g>.99)w[h*p+n]=1;else{x.push({x:n,y:h}),v+=1;for(let e=-a;e<=a;e++)for(let t=-a;t<=a;t++)h+e<0||h+e>=d||n+t<0||n+t>=p||(w[(h+e)*p+(n+t)]=1)}}return x},sH=({image:e,cx:t,cy:n,sdThresh:r,imageDataCumsum:s,imageDataSqrCumsum:a})=>{if(t-6<0||t+6>=e.width)return null;if(n-6<0||n+6>=e.height)return null;let i=s.query(t-6,n-6,t+6,n+6);i/=169;let o=a.query(t-6,n-6,t+6,n+6);return o-=2*i*s.query(t-6,n-6,t+6,n+6),o+=169*i*i,o/169<r*r?null:(o=Math.sqrt(o),o)},aH=e=>{const{image:t,cx:n,cy:r,vlen:s,tx:a,ty:i,imageDataCumsum:o,imageDataSqrCumsum:u}=e,{data:l,width:c,height:h}=t;if(n-6<0||n+6>=c)return null;if(r-6<0||r+6>=h)return null;let p=o.query(n-6,r-6,n+6,r+6),d=u.query(n-6,r-6,n+6,r+6),f=0,m=(r-6)*c+(n-6),g=(i-6)*c+(a-6),y=c-13;for(let e=0;e<13;e++){for(let e=0;e<13;e++)f+=l[m]*l[g],m+=1,g+=1;m+=y,g+=y}let b=o.query(a-6,i-6,a+6,i+6);b/=169,f-=b*p;let x=d-p*p/169;return 0==x?null:(x=Math.sqrt(x),1*f/(s*x))};class iH{constructor(e=!1){this.data=null,this.isOffline=e}compileImageTargets(e,t){return new Promise((async(r,s)=>{const a=[];for(let t=0;t<e.length;t++){const n=e[t],r=(0,eH.vL)(n.width,n.height).getContext("2d");r.drawImage(n,0,0,n.width,n.height);const s=r.getImageData(0,0,n.width,n.height),i=new Uint8Array(n.width*n.height);for(let e=0;e<i.length;e++){const t=4*e;i[e]=Math.floor((s.data[t]+s.data[t+1]+s.data[t+2])/3)}const o={data:i,height:n.height,width:n.width};a.push(o)}const i=50/a.length;let o=0;this.data=[];for(let e=0;e<a.length;e++){const n=a[e],r=Hj(n),s=i/r.length,u=await oH(r,(()=>{o+=s,t(o)}));this.data.push({targetImage:n,imageList:r,matchingData:u})}for(let e=0;e<a.length;e++){const t=qj(a[e]);this.data[e].trackingImageList=t}const u=await(()=>new Promise(((e,r)=>{if(this.isOffline){const n=50/a.length;let r=0;const s=[];for(let e=0;e<a.length;e++){const i=a[e],o=qj(i),u=n/o.length,l=uH(o,(e=>{r+=u,t(50+r)}));s.push(l)}e(s)}else{const r=new Worker(new URL(n.p+n.u(137),n.b));r.onmessage=n=>{"progress"===n.data.type?t(50+n.data.percent):"compileDone"===n.data.type&&e(n.data.list)},r.postMessage({type:"compile",targetImages:a})}})))();for(let e=0;e<a.length;e++)this.data[e].trackingData=u[e];r(this.data)}))}exportData(){const e=[];for(let t=0;t<this.data.length;t++)e.push({targetImage:{width:this.data[t].targetImage.width,height:this.data[t].targetImage.height},trackingData:this.data[t].trackingData,matchingData:this.data[t].matchingData});return Qj.encode({v:2,dataList:e})}importData(e){const t=Qj.decode(new Uint8Array(e));if(!t.v||2!==t.v)return console.error("Your compiled .mind might be outdated. Please recompile"),[];const{dataList:n}=t;this.data=[];for(let e=0;e<n.length;e++)this.data.push({targetImage:n[e].targetImage,trackingData:n[e].trackingData,matchingData:n[e].matchingData});return this.data}}const oH=async(e,t)=>{const n=[];for(let r=0;r<e.length;r++){const s=e[r],a=new Vj(s.width,s.height);await Rd(),Xo((()=>{const e=Ta(s.data,[s.data.length],"float32").reshape([s.height,s.width]),{featurePoints:i}=a.detect(e),o=i.filter((e=>e.maxima)),u=i.filter((e=>!e.maxima)),l=Zj({points:o}),c=Zj({points:u});n.push({maximaPoints:o,minimaPoints:u,maximaPointsCluster:l,minimaPointsCluster:c,width:s.width,height:s.height,scale:s.scale}),t(r)}))}return n},uH=(e,t)=>{const n=[];for(let r=0;r<e.length;r++){const s=e[r],a=nH(s),i={data:s.data,scale:s.scale,width:s.width,height:s.height,points:a};n.push(i),t(r)}return n};class lH{constructor(e,t){this.width=e,this.height=t,this.texShape=[t,e];const n=document.createElement("canvas").getContext("2d");n.canvas.width=e,n.canvas.height=t,this.context=n,this.program=this.buildProgram(e,t);const r=iu();this.tempPixelHandle=r.makeTensorInfo(this.texShape,"float32"),r.texData.get(this.tempPixelHandle.dataId).usage=2}_loadInput(e){return Xo((()=>{let t=ro(e);return t=t.mean(2),t}))}loadInput(e){this.context.drawImage(e,0,0,this.width,this.height);const t=iu();return t.gpgpu.uploadPixelDataToTexture(t.getTexture(this.tempPixelHandle.dataId),this.context.canvas),this._compileAndRun(this.program,[this.tempPixelHandle])}buildProgram(e,t){const n=2===je().getNumber("WEBGL_VERSION")?"texture":"texture2D";return{variableNames:["A"],outputShape:this.texShape,userCode:`\n\tvoid main() {\n\t  ivec2 coords = getOutputCoords();\n\t  int texR = coords[0];\n\t  int texC = coords[1];\n\t  vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${e}.0, ${t}.0);\n\n\t  vec4 values = ${n}(A, uv);\n\t  setOutput((0.299 * values.r + 0.587 * values.g + 0.114 * values.b) * 255.0);\n\t}\n      `}}_compileAndRun(e,t){const n=iu().compileAndRun(e,t);return Ho().makeTensorFromDataId(n.dataId,n.shape,n.dtype)}_runWebGLProgram(e,t,n){const r=iu().runWebGLProgram(e,t,n);return Ho().makeTensorFromDataId(r.dataId,r.shape,r.dtype)}}const cH=(e,t)=>{const n=2*Math.PI*t*e;return n/(n+1)},hH=(e,t,n)=>e*t+(1-e)*n;class pH{constructor({minCutOff:e,beta:t}){this.minCutOff=e,this.beta=t,this.dCutOff=.001,this.xPrev=null,this.dxPrev=null,this.tPrev=null,this.initialized=!1}reset(){this.initialized=!1}filter(e,t){if(!this.initialized)return this.initialized=!0,this.xPrev=t,this.dxPrev=t.map((()=>0)),this.tPrev=e,t;const{xPrev:n,tPrev:r,dxPrev:s}=this,a=e-r,i=cH(a,this.dCutOff),o=[],u=[],l=[];for(let e=0;e<t.length;e++){o[e]=(t[e]-n[e])/a,u[e]=hH(i,o[e],s[e]);const r=this.minCutOff+this.beta*Math.abs(u[e]),c=cH(a,r);l[e]=hH(c,t[e],n[e])}return this.xPrev=l,this.dxPrev=u,this.tPrev=e,l}}class dH{constructor({inputWidth:e,inputHeight:t,onUpdate:r=null,debugMode:s=!1,maxTrack:a=1,warmupTolerance:i=null,missTolerance:o=null,filterMinCF:u=null,filterBeta:l=null}){this.inputWidth=e,this.inputHeight=t,this.maxTrack=a,this.filterMinCF=null===u?.001:u,this.filterBeta=null===l?1e3:l,this.warmupTolerance=null===i?5:i,this.missTolerance=null===o?5:o,this.cropDetector=new Gj(this.inputWidth,this.inputHeight,s),this.inputLoader=new lH(this.inputWidth,this.inputHeight),this.markerDimensions=null,this.onUpdate=r,this.debugMode=s,this.processingVideo=!1,this.interestedTargetIndex=-1,this.trackingStates=[];const c=45*Math.PI/180,h=this.inputHeight/2/Math.tan(c/2);this.projectionTransform=[[h,0,this.inputWidth/2],[0,h,this.inputHeight/2],[0,0,1]],this.projectionMatrix=this._glProjectionMatrix({projectionTransform:this.projectionTransform,width:this.inputWidth,height:this.inputHeight,near:10,far:1e5}),this.worker=new Worker(new URL(n.p+n.u(928),n.b)),this.workerMatchDone=null,this.workerTrackDone=null,this.worker.onmessage=e=>{"matchDone"===e.data.type&&null!==this.workerMatchDone&&this.workerMatchDone(e.data),"trackUpdateDone"===e.data.type&&null!==this.workerTrackDone&&this.workerTrackDone(e.data)}}showTFStats(){console.log(qo().numTensors),console.table(qo())}addImageTargets(e){return new Promise((async(t,n)=>{const r=await fetch(e),s=await r.arrayBuffer();t(this.addImageTargetsFromBuffer(s))}))}addImageTargetsFromBuffer(e){const t=(new iH).importData(e),n=[],r=[],s=[];for(let e=0;e<t.length;e++)r.push(t[e].matchingData),n.push(t[e].trackingData),s.push([t[e].targetImage.width,t[e].targetImage.height]);return this.tracker=new ZP(s,n,this.projectionTransform,this.inputWidth,this.inputHeight,this.debugMode),this.worker.postMessage({type:"setup",inputWidth:this.inputWidth,inputHeight:this.inputHeight,projectionTransform:this.projectionTransform,debugMode:this.debugMode,matchingDataList:r}),this.markerDimensions=s,{dimensions:s,matchingDataList:r,trackingDataList:n}}dummyRun(e){const t=this.inputLoader.loadInput(e);this.cropDetector.detect(t),this.tracker.dummyRun(t),t.dispose()}getProjectionMatrix(){return this.projectionMatrix}getWorldMatrix(e,t){return this._glModelViewMatrix(e,t)}async _detectAndMatch(e,t){const{featurePoints:n}=this.cropDetector.detectMoving(e),{targetIndex:r,modelViewTransform:s}=await this._workerMatch(n,t);return{targetIndex:r,modelViewTransform:s}}async _trackAndUpdate(e,t,n){const{worldCoords:r,screenCoords:s}=this.tracker.track(e,t,n);return r.length<4?null:await this._workerTrackUpdate(t,{worldCoords:r,screenCoords:s})}processVideo(e){if(!this.processingVideo){this.processingVideo=!0,this.trackingStates=[];for(let e=0;e<this.markerDimensions.length;e++)this.trackingStates.push({showing:!1,isTracking:!1,currentModelViewTransform:null,trackCount:0,trackMiss:0,filter:new pH({minCutOff:this.filterMinCF,beta:this.filterBeta})});(async()=>{for(;this.processingVideo;){const t=this.inputLoader.loadInput(e);if(this.trackingStates.reduce(((e,t)=>e+(t.isTracking?1:0)),0)<this.maxTrack){const e=[];for(let t=0;t<this.trackingStates.length;t++)!0!==this.trackingStates[t].isTracking&&(-1!==this.interestedTargetIndex&&this.interestedTargetIndex!==t||e.push(t));const{targetIndex:n,modelViewTransform:r}=await this._detectAndMatch(t,e);-1!==n&&(this.trackingStates[n].isTracking=!0,this.trackingStates[n].currentModelViewTransform=r)}for(let e=0;e<this.trackingStates.length;e++){const n=this.trackingStates[e];if(n.isTracking){let r=await this._trackAndUpdate(t,n.currentModelViewTransform,e);null===r?n.isTracking=!1:n.currentModelViewTransform=r}if(n.showing||n.isTracking&&(n.trackMiss=0,n.trackCount+=1,n.trackCount>this.warmupTolerance&&(n.showing=!0,n.trackingMatrix=null,n.filter.reset())),n.showing&&(n.isTracking?n.trackMiss=0:(n.trackCount=0,n.trackMiss+=1,n.trackMiss>this.missTolerance&&(n.showing=!1,n.trackingMatrix=null,this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:null})))),n.showing){const t=this._glModelViewMatrix(n.currentModelViewTransform,e);n.trackingMatrix=n.filter.filter(Date.now(),t);const r=[];for(let e=0;e<n.trackingMatrix.length;e++)r[e]=n.trackingMatrix[e];this.onUpdate&&this.onUpdate({type:"updateMatrix",targetIndex:e,worldMatrix:r})}}t.dispose(),this.onUpdate&&this.onUpdate({type:"processDone"}),await Rd()}})()}}stopProcessVideo(){this.processingVideo=!1}async detect(e){const t=this.inputLoader.loadInput(e),{featurePoints:n,debugExtra:r}=await this.cropDetector.detect(t);return t.dispose(),{featurePoints:n,debugExtra:r}}async match(e,t){const{modelViewTransform:n,debugExtra:r}=await this._workerMatch(e,[t]);return{modelViewTransform:n,debugExtra:r}}async track(e,t,n){const r=this.inputLoader.loadInput(e),s=this.tracker.track(r,t,n);return r.dispose(),s}async trackUpdate(e,t){return t.worldCoords.length<4?null:await this._workerTrackUpdate(e,t)}_workerMatch(e,t){return new Promise((async(n,r)=>{this.workerMatchDone=e=>{n({targetIndex:e.targetIndex,modelViewTransform:e.modelViewTransform,debugExtra:e.debugExtra})},this.worker.postMessage({type:"match",featurePoints:e,targetIndexes:t})}))}_workerTrackUpdate(e,t){return new Promise((async(n,r)=>{this.workerTrackDone=e=>{n(e.modelViewTransform)};const{worldCoords:s,screenCoords:a}=t;this.worker.postMessage({type:"trackUpdate",modelViewTransform:e,worldCoords:s,screenCoords:a})}))}_glModelViewMatrix(e,t){const n=this.markerDimensions[t][1];return[e[0][0],-e[1][0],-e[2][0],0,-e[0][1],e[1][1],e[2][1],0,-e[0][2],e[1][2],e[2][2],0,e[0][1]*n+e[0][3],-(e[1][1]*n+e[1][3]),-(e[2][1]*n+e[2][3]),1]}_glProjectionMatrix({projectionTransform:e,width:t,height:n,near:r,far:s}){const a=[[2*e[0][0]/t,0,-(2*e[0][2]/t-1),0],[0,2*e[1][1]/n,-(2*e[1][2]/n-1),0],[0,0,-(s+r)/(s-r),-2*s*r/(s-r)],[0,0,-1,0]],i=[];for(let e=0;e<4;e++)for(let t=0;t<4;t++)i.push(a[t][e]);return i}}var fH=n(439);const mH=new j.Matrix4;mH.compose(new j.Vector3,new j.Quaternion,new j.Vector3(.001,.001,.001)),window.MINDAR||(window.MINDAR={}),window.MINDAR.IMAGE||(window.MINDAR.IMAGE={}),window.MINDAR.IMAGE.MindARThree=class{constructor({container:e,imageTargetSrc:t,maxTrack:n,uiLoading:r="yes",uiScanning:s="yes",uiError:a="yes",filterMinCF:i=null,filterBeta:o=null,warmupTolerance:u=null,missTolerance:l=null}){this.container=e,this.imageTargetSrc=t,this.maxTrack=n,this.filterMinCF=i,this.filterBeta=o,this.warmupTolerance=u,this.missTolerance=l,this.ui=new fH.UI({uiLoading:r,uiScanning:s,uiError:a}),this.scene=new j.Scene,this.cssScene=new j.Scene,this.renderer=new j.WebGLRenderer({antialias:!0,alpha:!0}),this.cssRenderer=new XP({antialias:!0}),this.renderer.outputEncoding=j.sRGBEncoding,this.renderer.setPixelRatio(window.devicePixelRatio),this.camera=new j.PerspectiveCamera,this.anchors=[],this.renderer.domElement.style.position="absolute",this.cssRenderer.domElement.style.position="absolute",this.container.appendChild(this.renderer.domElement),this.container.appendChild(this.cssRenderer.domElement),window.addEventListener("resize",this.resize.bind(this))}async start(){this.ui.showLoading(),await this._startVideo(),await this._startAR()}stop(){this.controller.stopProcessVideo(),this.video.srcObject.getTracks().forEach((function(e){e.stop()})),this.video.remove()}addAnchor(e){const t=new j.Group;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,css:!1,visible:!1};return this.anchors.push(n),this.scene.add(t),n}addCSSAnchor(e){const t=new j.Group;t.visible=!1,t.matrixAutoUpdate=!1;const n={group:t,targetIndex:e,onTargetFound:null,onTargetLost:null,css:!0,visible:!1};return this.anchors.push(n),this.cssScene.add(t),n}_startVideo(){return new Promise(((e,t)=>{if(this.video=document.createElement("video"),this.video.setAttribute("autoplay",""),this.video.setAttribute("muted",""),this.video.setAttribute("playsinline",""),this.video.style.position="absolute",this.video.style.top="0px",this.video.style.left="0px",this.video.style.zIndex="-2",this.container.appendChild(this.video),!navigator.mediaDevices||!navigator.mediaDevices.getUserMedia)return this.ui.showCompatibility(),void t();navigator.mediaDevices.getUserMedia({audio:!1,video:{facingMode:"environment"}}).then((t=>{this.video.addEventListener("loadedmetadata",(()=>{this.video.setAttribute("width",this.video.videoWidth),this.video.setAttribute("height",this.video.videoHeight),e()})),this.video.srcObject=t})).catch((e=>{console.log("getUserMedia error",e),t()}))}))}_startAR(){return new Promise((async(e,t)=>{const n=this.video;this.container,this.controller=new dH({inputWidth:n.videoWidth,inputHeight:n.videoHeight,filterMinCF:this.filterMinCF,filterBeta:this.filterBeta,warmupTolerance:this.warmupTolerance,missTolerance:this.missTolerance,maxTrack:this.maxTrack,onUpdate:e=>{if("updateMatrix"===e.type){const{targetIndex:t,worldMatrix:n}=e;for(let e=0;e<this.anchors.length;e++)if(this.anchors[e].targetIndex===t){if(this.anchors[e].css?this.anchors[e].group.children.forEach((e=>{e.element.style.visibility=null===n?"hidden":"visible"})):this.anchors[e].group.visible=null!==n,null!==n){let r=new j.Matrix4;r.elements=[...n],r.multiply(this.postMatrixs[t]),this.anchors[e].css&&r.multiply(mH),this.anchors[e].group.matrix=r}this.anchors[e].visible&&null===n&&(this.anchors[e].visible=!1,this.anchors[e].onTargetLost&&this.anchors[e].onTargetLost()),this.anchors[e].visible||null===n||(this.anchors[e].visible=!0,this.anchors[e].onTargetFound&&this.anchors[e].onTargetFound()),null!==n&&this.ui.hideScanning()}}}}),this.resize();const{dimensions:r}=await this.controller.addImageTargets(this.imageTargetSrc);this.postMatrixs=[];for(let e=0;e<r.length;e++){const t=new j.Vector3,n=new j.Quaternion,s=new j.Vector3,[a,i]=r[e];t.x=a/2,t.y=a/2+(i-a)/2,s.x=a,s.y=a,s.z=a;const o=new j.Matrix4;o.compose(t,n,s),this.postMatrixs.push(o)}await this.controller.dummyRun(this.video),this.ui.hideLoading(),this.ui.showScanning(),this.controller.processVideo(this.video),e()}))}resize(){const{renderer:e,cssRenderer:t,camera:n,container:r,video:s}=this;if(!s)return;let a,i;const o=s.videoWidth/s.videoHeight;o>r.clientWidth/r.clientHeight?(i=r.clientHeight,a=i*o):(a=r.clientWidth,i=a/o);const u=this.controller.getProjectionMatrix(),l=2*Math.atan(1/u[5]/i*r.clientHeight)*180/Math.PI,c=u[14]/(u[10]-1),h=u[14]/(u[10]+1);u[5],u[0],n.fov=l,n.near=c,n.far=h,n.aspect=r.clientWidth/r.clientHeight,n.updateProjectionMatrix(),s.style.top=-(i-r.clientHeight)/2+"px",s.style.left=-(a-r.clientWidth)/2+"px",s.style.width=a+"px",s.style.height=i+"px";const p=e.domElement,d=t.domElement;p.style.position="absolute",p.style.left=0,p.style.top=0,p.style.width=r.clientWidth+"px",p.style.height=r.clientHeight+"px",d.style.position="absolute",d.style.left=0,d.style.top=0,d.style.width=r.clientWidth+"px",d.style.height=r.clientHeight+"px",e.setSize(r.clientWidth,r.clientHeight),t.setSize(r.clientWidth,r.clientHeight)}},window.MINDAR.IMAGE.tf=G})()})();